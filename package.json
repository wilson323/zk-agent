{
  "name": "zk-agent",
  "version": "1.0.0",
  "private": true,
  "description": "AI多智能体宇宙平台 - 集成对话智能体、CAD分析专家、AI海报设计师",
  "author": "ZK-Agent Team",
  "license": "MIT",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit --project tsconfig.dev.json",
    "test": "jest --config jest.config.js",
    "test:fixed": "jest --config jest.config.fixed.js",
    "test:simple": "jest --config config/jest.simple.config.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --config jest.config.enhanced.js --coverage",
    "test:e2e": "playwright test",
    "test:comprehensive": "tsx scripts/run-comprehensive-tests.ts",
    "test:enhanced": "jest --config jest.config.enhanced.js",
    "test:unit": "jest --config jest.config.production.js --testPathPattern=__tests__/unit",
    "test:integration": "jest --config jest.config.production.js --testPathPattern=__tests__/integration",
    "test:integration:api": "jest --config jest.config.production.js --testPathPattern=__tests__/api",
    "test:integration:database": "jest --config jest.config.production.js --testPathPattern=__tests__/database",
    "test:security": "jest --config jest.config.production.js --testPathPattern=__tests__/security",
    "test:performance": "jest --config jest.config.js --testPathPattern=__tests__/performance",
    "test:smoke": "jest --config jest.config.production.js --testPathPattern=__tests__/smoke",
    "test:regression": "jest --config jest.config.production.js --testPathPattern=__tests__/regression",
    "test:load": "k6 run tests/performance/load-test.js",
    "test:stress": "k6 run tests/performance/stress-test.js",
    "test:memory": "node tests/performance/memory-test.js",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:integration:api && npm run test:e2e",
    "test:ci": "npm run test:all && npm run test:security && npm run test:performance",
    "test:coverage:report": "jest --config jest.config.production.js --coverage --coverageReporters=html",
    "test:coverage:summary": "jest --config jest.config.production.js --coverage --coverageReporters=text-summary",
    "coverage:merge": "nyc merge coverage/production coverage/merged.json",
    "coverage:html": "nyc report --reporter=html --temp-dir=coverage/production",
    "coverage:json": "nyc report --reporter=json --temp-dir=coverage/production",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:migrate:dry-run": "prisma migrate diff --from-schema-datamodel prisma/schema.prisma --to-schema-datasource prisma/schema.prisma",
    "db:migrate:test": "DATABASE_URL=$DATABASE_URL_TEST prisma migrate deploy",
    "db:studio": "prisma studio",
    "db:seed": "tsx prisma/seeds/index.ts",
    "db:seed:test": "DATABASE_URL=$DATABASE_URL_TEST tsx prisma/seeds/test.ts",
    "db:reset": "prisma migrate reset --force",
    "db:reset:test": "DATABASE_URL=$DATABASE_URL_TEST prisma migrate reset --force",
    "db:init": "node scripts/database-init.js",
    "db:test-connection": "node scripts/test-database-connection.js",
    "db:health-check": "node -e \"require('./lib/database/connection-health').testConnection().then(() => console.log('✅ 数据库连接正常')).catch(e => { console.error('❌ 数据库连接失败:', e.message); process.exit(1); })\"",
    "db:performance-report": "node -e \"const monitor = require('./lib/database/performance-monitor'); monitor.generateReport().then(r => console.log(JSON.stringify(r, null, 2)));\"",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "security:audit": "npm audit --audit-level high",
    "security:scan": "node scripts/security-scan.js",
    "security:zap": "docker run --rm -v $(pwd)/test-reports:/zap/wrk owasp/zap2docker-stable zap-baseline.py -t http://localhost:3000 -J zap-report.json",
    "performance:test": "node scripts/performance-test.js",
    "start:test": "NODE_ENV=test npm start",
    "start:production": "NODE_ENV=production npm start",
    "build:production": "NODE_ENV=production npm run build",
    "build:wasm": "node scripts/build-wasm.js",
    "validate:project": "node scripts/validate-project.js",
    "prepare": "husky install",
    "precommit": "lint-staged",
    "postinstall": "husky install",
    "lint:staged": "lint-staged",
    "hooks:install": "husky install && husky add .husky/pre-commit \"npx lint-staged\"",
    "ci:check": "npm run type-check && npm run lint && npm run test && npm run security:audit",
    "analyze": "ANALYZE=true next build",
    "analyze:bundle": "npx @next/bundle-analyzer",
    "test:full": "npm run test:all -- --maxWorkers=50% --runInBand --logHeapUsage --detectOpenHandles --forceExit",
    "test:perf": "node tests/performance/runner.js --env=production",
    "test:report": "npm run test:all -- --coverage --coverageReporters=html --testResultsProcessor=jest-html-reporter",
    "test:automated": "node scripts/automated-test-runner.js",
    "test:fix-deps": "node scripts/automated-test-runner.js --fix-only",
    "test:simple:watch": "jest --config config/jest.simple.config.js --watch",
    "test:simple:coverage": "jest --config config/jest.simple.config.js --coverage",
    "test:chat": "jest --config config/jest.chat.config.js --verbose",
    "test:chat:watch": "jest --config config/jest.chat.config.js --watch",
    "test:chat:coverage": "jest --config config/jest.chat.config.js --coverage",
    "test:chat:100": "jest --config config/jest.chat.config.js --coverage --bail",
    "test:chat:simple": "jest --config config/jest.chat.simple.config.js --verbose",
    "test:chat:simple:coverage": "jest --config config/jest.chat.simple.config.js --coverage",
    "test:chat:js": "jest --config config/jest.chat.js.config.js --verbose",
    "test:chat:js:coverage": "jest --config config/jest.chat.js.config.js --coverage",
    "validate:production": "node scripts/production-delivery-validator.js",
    "validate:phase1": "node scripts/production-delivery-validator.js phase1",
    "validate:phase2": "node scripts/production-delivery-validator.js phase2",
    "validate:phase3": "node scripts/production-delivery-validator.js phase3",
    "validate:phase4": "node scripts/production-delivery-validator.js phase4",
    "validate:phase5": "node scripts/production-delivery-validator.js phase5",
    "validate:phase6": "node scripts/production-delivery-validator.js phase6",
    "validate:all": "node scripts/production-delivery-validator.js all",
    "type-check:prod": "tsc --noEmit --project tsconfig.prod.json",
    "type-check:strict": "tsc --noEmit --project tsconfig.json",
    "fix-types": "node scripts/fix-typescript-issues.js"
  },
  "optionalDependencies": {
    "bufferutil": "4.0.9",
    "canvas": "^2.11.2",
    "pg-native": "^3.5.0",
    "utf-8-validate": "6.0.5"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.3.2",
    "@prisma/client": "5.22.0",
    "@radix-ui/react-accordion": "^1.1.2",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-aspect-ratio": "^1.0.3",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-collapsible": "^1.0.3",
    "@radix-ui/react-context-menu": "^2.1.5",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-hover-card": "^1.0.7",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-menubar": "^1.0.4",
    "@radix-ui/react-navigation-menu": "^1.1.4",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-toggle": "^1.0.3",
    "@radix-ui/react-toggle-group": "^1.0.4",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@tanstack/react-query": "^5.8.4",
    "@tanstack/react-table": "^8.10.7",
    "axios": "^1.6.2",
    "bcryptjs": "^2.4.3",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cmdk": "^0.2.0",
    "date-fns": "^2.30.0",
    "embla-carousel-react": "^8.0.0-rc19",
    "framer-motion": "^10.16.5",
    "helmet": "^7.1.0",
    "input-otp": "^1.2.4",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.294.0",
    "multer": "^1.4.5-lts.1",
    "next": "15.2.4",
    "next-themes": "^0.2.1",
    "node-cron": "^3.0.3",
    "pg": "^8.12.2",
    "prom-client": "^15.1.0",
    "rate-limiter-flexible": "^4.0.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.48.2",
    "react-resizable-panels": "^0.0.55",
    "recharts": "^2.8.0",
    "rxjs": "^7.8.1",
    "sharp": "^0.32.6",
    "sonner": "^1.2.4",
    "tailwind-merge": "^2.0.0",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.7.9",
    "winston": "^3.11.0",
    "ws": "^8.18.2",
    "y-websocket": "^1.5.0",
    "yjs": "^13.6.8",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.1",
    "@testing-library/jest-dom": "6.6.3",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/multer": "^1.4.11",
    "@types/node": "^22.9.0",
    "@types/pg": "^8.10.9",
    "@types/react": "^18.2.45",
    "@types/react-dom": "^18.2.17",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "6.21.0",
    "@typescript-eslint/parser": "6.21.0",
    "autoprefixer": "^10.4.16",
    "cross-env": "^7.0.3",
    "dotenv": "16.5.0",
    "eslint": "^8.56.0",
    "eslint-config-next": "^14.0.3",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-import": "2.32.0",
    "eslint-plugin-react": "7.37.5",
    "eslint-plugin-react-hooks": "4.6.2",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "jest-html-reporters": "^3.1.5",
    "jest-junit": "^16.0.0",
    "jest-sonar": "^0.2.16",
    "lint-staged": "^15.1.0",
    "msw": "^2.0.8",
    "nodemon": "^3.0.1",
    "postcss": "^8.4.32",
    "prettier": "^3.1.0",
    "prisma": "5.22.0",
    "tailwindcss": "^3.3.6",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.4.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "overrides": {
    "ws": "^8.18.2"
  }
}
