{
  "$schema": "./component-standards-config.schema.json",
  "rules": {
    "component-naming": {
      "enabled": true,
      "severity": "error",
      "options": {
        "convention": "PascalCase",
        "allowedPrefixes": ["use", "with", "create"],
        "allowedSuffixes": ["Component", "Provider", "Context", "Hook"]
      }
    },
    "props-interface": {
      "enabled": true,
      "severity": "error",
      "options": {
        "requirePropsInterface": true,
        "propsNamingPattern": "{ComponentName}Props",
        "requireExport": true,
        "allowInlineTypes": false
      }
    },
    "accessibility-props": {
      "enabled": true,
      "severity": "warning",
      "options": {
        "requireAriaLabels": true,
        "requireAltText": true,
        "checkColorContrast": true,
        "requireKeyboardNavigation": true,
        "wcagLevel": "AA"
      }
    },
    "performance-optimization": {
      "enabled": true,
      "severity": "info",
      "options": {
        "complexityThreshold": 10,
        "requireMemo": true,
        "requireCallback": true,
        "checkLazyLoading": true,
        "checkVirtualization": true
      }
    },
    "design-tokens-usage": {
      "enabled": true,
      "severity": "warning",
      "options": {
        "allowHardcodedColors": false,
        "allowHardcodedSpacing": false,
        "allowHardcodedFonts": false,
        "designTokensPath": "@/lib/component-standards/design-tokens",
        "maxHardcodedValues": 2
      }
    },
    "component-factory-usage": {
      "enabled": true,
      "severity": "info",
      "options": {
        "preferComponentFactory": true,
        "requireVariants": true,
        "componentFactoryPath": "@/lib/component-standards/component-factory",
        "allowDirectCva": false
      }
    },
    "typescript-strict": {
      "enabled": true,
      "severity": "error",
      "options": {
        "noAny": true,
        "requireReturnTypes": true,
        "requireParameterTypes": true,
        "noImplicitReturns": true,
        "strictNullChecks": true
      }
    },
    "testing-coverage": {
      "enabled": true,
      "severity": "warning",
      "options": {
        "requireTestFiles": true,
        "testFilePatterns": [
          "**/*.test.tsx",
          "**/*.test.ts",
          "**/*.spec.tsx",
          "**/*.spec.ts"
        ],
        "requireStorybook": true,
        "storybookPatterns": [
          "**/*.stories.tsx",
          "**/*.stories.ts"
        ]
      }
    },
    "import-organization": {
      "enabled": true,
      "severity": "warning",
      "options": {
        "groupImports": true,
        "sortImports": true,
        "separateGroups": true,
        "importOrder": [
          "react",
          "next",
          "@/lib",
          "@/components",
          "@/hooks",
          "@/utils",
          "./",
          "../"
        ]
      }
    },
    "component-structure": {
      "enabled": true,
      "severity": "info",
      "options": {
        "maxComponentLength": 200,
        "maxPropsCount": 10,
        "requireDocumentation": true,
        "requireExamples": false,
        "allowNestedComponents": true,
        "maxNestingLevel": 3
      }
    },
    "state-management": {
      "enabled": true,
      "severity": "info",
      "options": {
        "preferUseReducer": false,
        "maxUseStateCount": 5,
        "requireStateValidation": true,
        "allowGlobalState": true,
        "stateManagementLibraries": ["zustand", "redux", "jotai"]
      }
    },
    "error-handling": {
      "enabled": true,
      "severity": "warning",
      "options": {
        "requireErrorBoundary": true,
        "requireTryCatch": true,
        "requireErrorStates": true,
        "errorBoundaryPattern": "*ErrorBoundary"
      }
    }
  },
  "exclude": [
    "node_modules/**",
    "dist/**",
    "build/**",
    ".next/**",
    "coverage/**",
    "**/*.test.tsx",
    "**/*.test.ts",
    "**/*.spec.tsx",
    "**/*.spec.ts",
    "**/*.stories.tsx",
    "**/*.stories.ts",
    "**/*.d.ts"
  ],
  "include": [
    "components/**/*.tsx",
    "components/**/*.ts",
    "src/components/**/*.tsx",
    "src/components/**/*.ts",
    "app/components/**/*.tsx",
    "app/components/**/*.ts",
    "lib/components/**/*.tsx",
    "lib/components/**/*.ts"
  ],
  "extends": [
    "@component-standards/recommended",
    "@component-standards/accessibility",
    "@component-standards/performance"
  ],
  "plugins": [
    "@component-standards/react",
    "@component-standards/nextjs",
    "@component-standards/tailwind"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "typescript": {
      "project": "./tsconfig.json"
    },
    "tailwind": {
      "config": "./tailwind.config.ts"
    },
    "designSystem": {
      "tokensPath": "@/lib/component-standards/design-tokens",
      "componentsPath": "@/components",
      "utilsPath": "@/lib/utils"
    }
  },
  "reporting": {
    "format": ["console", "json", "html"],
    "outputDir": "./reports",
    "includeMetrics": true,
    "includeSuggestions": true,
    "includeExamples": true
  },
  "autofix": {
    "enabled": false,
    "rules": [
      "import-organization",
      "component-naming",
      "typescript-strict"
    ],
    "backup": true,
    "confirmBeforeFix": true
  },
  "integration": {
    "git": {
      "preCommitHook": true,
      "prePushHook": false
    },
    "ci": {
      "failOnError": true,
      "failOnWarning": false,
      "generateReport": true
    },
    "editor": {
      "vscode": {
        "enableExtension": true,
        "showInlineErrors": true,
        "showInlineSuggestions": true
      }
    }
  },
  "cache": {
    "enabled": true,
    "cacheDir": "./.component-standards-cache",
    "ttl": 3600
  }
}