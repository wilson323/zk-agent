{"version":3,"sources":["E:\\zk-agent\\__tests__\\performance\\performance-report.test.js"],"sourcesContent":["/**\n * @file Performance Report Generator\n * @description ÊÄßËÉΩÊµãËØïÊä•ÂëäÁîüÊàêÂô®\n */\n\nconst { performance } = require('perf_hooks');\nconst fs = require('fs');\nconst path = require('path');\n\ndescribe('Performance Report', () => {\n  let performanceData = {\n    timestamp: new Date().toISOString(),\n    testResults: [],\n    systemInfo: {\n      nodeVersion: process.version,\n      platform: process.platform,\n      arch: process.arch,\n      memory: process.memoryUsage()\n    }\n  };\n  \n  /**\n   * Êî∂ÈõÜAPIÂìçÂ∫îÊó∂Èó¥Êï∞ÊçÆ\n   */\n  test('Êî∂ÈõÜAPIÂìçÂ∫îÊó∂Èó¥Êï∞ÊçÆ', async () => {\n    const iterations = 5;\n    const times = [];\n    \n    for (let i = 0; i < iterations; i++) {\n      const start = performance.now();\n      await new Promise(resolve => setTimeout(resolve, 30 + Math.random() * 20));\n      const end = performance.now();\n      times.push(end - start);\n    }\n    \n    const avgTime = times.reduce((a, b) => a + b, 0) / times.length;\n    const minTime = Math.min(...times);\n    const maxTime = Math.max(...times);\n    \n    performanceData.testResults.push({\n      testName: 'APIÂìçÂ∫îÊó∂Èó¥',\n      average: avgTime,\n      min: minTime,\n      max: maxTime,\n      iterations: iterations,\n      unit: 'ms'\n    });\n    \n    expect(avgTime).toBeLessThan(100);\n  });\n  \n  /**\n   * Êî∂ÈõÜÂÜÖÂ≠ò‰ΩøÁî®Êï∞ÊçÆ\n   */\n  test('Êî∂ÈõÜÂÜÖÂ≠ò‰ΩøÁî®Êï∞ÊçÆ', () => {\n    const memUsage = process.memoryUsage();\n    \n    performanceData.testResults.push({\n      testName: 'ÂÜÖÂ≠ò‰ΩøÁî®ÊÉÖÂÜµ',\n      heapUsed: Math.round(memUsage.heapUsed / 1024 / 1024 * 100) / 100,\n      heapTotal: Math.round(memUsage.heapTotal / 1024 / 1024 * 100) / 100,\n      external: Math.round(memUsage.external / 1024 / 1024 * 100) / 100,\n      rss: Math.round(memUsage.rss / 1024 / 1024 * 100) / 100,\n      unit: 'MB'\n    });\n    \n    expect(memUsage.heapUsed / 1024 / 1024).toBeLessThan(100);\n  });\n  \n  /**\n   * Êî∂ÈõÜCPUÊÄßËÉΩÊï∞ÊçÆ\n   */\n  test('Êî∂ÈõÜCPUÊÄßËÉΩÊï∞ÊçÆ', () => {\n    const iterations = 3;\n    const times = [];\n    \n    for (let i = 0; i < iterations; i++) {\n      const start = performance.now();\n      \n      // CPUÂØÜÈõÜÂûãËÆ°ÁÆó\n      let result = 0;\n      for (let j = 0; j < 50000; j++) {\n        result += Math.sqrt(j) * Math.sin(j);\n      }\n      \n      const end = performance.now();\n      times.push(end - start);\n    }\n    \n    const avgTime = times.reduce((a, b) => a + b, 0) / times.length;\n    \n    performanceData.testResults.push({\n      testName: 'CPUËÆ°ÁÆóÊÄßËÉΩ',\n      average: avgTime,\n      iterations: iterations,\n      unit: 'ms'\n    });\n    \n    expect(avgTime).toBeLessThan(200);\n  });\n  \n  /**\n   * ÁîüÊàêÊÄßËÉΩÊä•Âëä\n   */\n  test('ÁîüÊàêÊÄßËÉΩÊä•Âëä', () => {\n    const reportDir = path.join(__dirname, '../../reports');\n    const reportFile = path.join(reportDir, 'performance-report.json');\n    \n    // Á°Æ‰øùÊä•ÂëäÁõÆÂΩïÂ≠òÂú®\n    if (!fs.existsSync(reportDir)) {\n      fs.mkdirSync(reportDir, { recursive: true });\n    }\n    \n    // ÂÜôÂÖ•ÊÄßËÉΩÊä•Âëä\n    fs.writeFileSync(reportFile, JSON.stringify(performanceData, null, 2));\n    \n    // ÁîüÊàêÁÆÄÂåñÁöÑÊñáÊú¨Êä•Âëä\n    const textReport = generateTextReport(performanceData);\n    const textReportFile = path.join(reportDir, 'performance-summary.txt');\n    fs.writeFileSync(textReportFile, textReport);\n    \n    console.log('\\nüìä ÊÄßËÉΩÊµãËØïÊä•ÂëäÂ∑≤ÁîüÊàê:');\n    console.log(`   ËØ¶ÁªÜÊä•Âëä: ${reportFile}`);\n    console.log(`   ÊëòË¶ÅÊä•Âëä: ${textReportFile}`);\n    \n    expect(fs.existsSync(reportFile)).toBe(true);\n    expect(fs.existsSync(textReportFile)).toBe(true);\n  });\n});\n\n/**\n * ÁîüÊàêÊñáÊú¨Ê†ºÂºèÁöÑÊÄßËÉΩÊä•Âëä\n * @param {Object} data - ÊÄßËÉΩÊï∞ÊçÆ\n * @returns {string} ÊñáÊú¨Êä•Âëä\n */\nfunction generateTextReport(data) {\n  let report = `ZK-Agent ÊÄßËÉΩÊµãËØïÊä•Âëä\\n`;\n  report += `ÁîüÊàêÊó∂Èó¥: ${data.timestamp}\\n`;\n  report += `Node.jsÁâàÊú¨: ${data.systemInfo.nodeVersion}\\n`;\n  report += `Âπ≥Âè∞: ${data.systemInfo.platform} ${data.systemInfo.arch}\\n\\n`;\n  \n  report += `ÊµãËØïÁªìÊûú:\\n`;\n  report += `${'='.repeat(50)}\\n`;\n  \n  data.testResults.forEach(result => {\n    report += `\\n${result.testName}:\\n`;\n    \n    if (result.testName === 'ÂÜÖÂ≠ò‰ΩøÁî®ÊÉÖÂÜµ') {\n      report += `  Â†ÜÂÜÖÂ≠ò‰ΩøÁî®: ${result.heapUsed} ${result.unit}\\n`;\n      report += `  Â†ÜÂÜÖÂ≠òÊÄªËÆ°: ${result.heapTotal} ${result.unit}\\n`;\n      report += `  Â§ñÈÉ®ÂÜÖÂ≠ò: ${result.external} ${result.unit}\\n`;\n      report += `  RSSÂÜÖÂ≠ò: ${result.rss} ${result.unit}\\n`;\n    } else {\n      report += `  Âπ≥ÂùáÊó∂Èó¥: ${result.average?.toFixed(2)} ${result.unit}\\n`;\n      if (result.min !== undefined) {\n        report += `  ÊúÄÁü≠Êó∂Èó¥: ${result.min.toFixed(2)} ${result.unit}\\n`;\n        report += `  ÊúÄÈïøÊó∂Èó¥: ${result.max.toFixed(2)} ${result.unit}\\n`;\n      }\n      if (result.iterations) {\n        report += `  ÊµãËØïÊ¨°Êï∞: ${result.iterations}\\n`;\n      }\n    }\n  });\n  \n  report += `\\n${'='.repeat(50)}\\n`;\n  report += `ÊµãËØïÂÆåÊàêÊó∂Èó¥: ${new Date().toLocaleString()}\\n`;\n  \n  return report;\n}"],"names":["performance","require","fs","path","describe","performanceData","timestamp","Date","toISOString","testResults","systemInfo","nodeVersion","process","version","platform","arch","memory","memoryUsage","test","iterations","times","i","start","now","Promise","resolve","setTimeout","Math","random","end","push","avgTime","reduce","a","b","length","minTime","min","maxTime","max","testName","average","unit","expect","toBeLessThan","memUsage","heapUsed","round","heapTotal","external","rss","result","j","sqrt","sin","reportDir","join","__dirname","reportFile","existsSync","mkdirSync","recursive","writeFileSync","JSON","stringify","textReport","generateTextReport","textReportFile","console","log","toBe","data","report","repeat","forEach","toFixed","undefined","toLocaleString"],"mappings":"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"}