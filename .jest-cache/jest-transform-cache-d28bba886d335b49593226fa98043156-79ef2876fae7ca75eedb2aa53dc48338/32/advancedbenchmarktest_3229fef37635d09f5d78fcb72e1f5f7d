563af9578d7ec0b30068e4fed3994bd5
/**
 * @file Advanced Performance Benchmark Tests
 * @description 高级性能基准测试
 */ "use strict";
const { performance } = require('perf_hooks');
const fs = require('fs');
const path = require('path');
describe('Advanced Performance Benchmarks', ()=>{
    /**
   * 测试数据库连接性能
   */ test('数据库连接性能测试', async ()=>{
        const start = performance.now();
        // 模拟数据库连接
        await new Promise((resolve)=>setTimeout(resolve, 30));
        const end = performance.now();
        const duration = end - start;
        // 数据库连接应在50ms内完成
        expect(duration).toBeLessThan(50);
    });
    /**
   * 测试文件读取性能
   */ test('文件读取性能测试', async ()=>{
        const start = performance.now();
        // 模拟文件读取
        const testFile = path.join(__dirname, '../basic.test.js');
        if (fs.existsSync(testFile)) {
            await fs.promises.readFile(testFile, 'utf8');
        }
        const end = performance.now();
        const duration = end - start;
        // 文件读取应在20ms内完成
        expect(duration).toBeLessThan(20);
    });
    /**
   * 测试CPU密集型操作性能
   */ test('CPU密集型操作性能测试', ()=>{
        const start = performance.now();
        // 模拟CPU密集型计算
        let result = 0;
        for(let i = 0; i < 100000; i++){
            result += Math.sqrt(i);
        }
        const end = performance.now();
        const duration = end - start;
        // CPU计算应在100ms内完成
        expect(duration).toBeLessThan(100);
        expect(result).toBeGreaterThan(0);
    });
    /**
   * 测试内存泄漏检测
   */ test('内存泄漏检测', ()=>{
        const initialMemory = process.memoryUsage();
        // 创建大量对象
        const objects = [];
        for(let i = 0; i < 1000; i++){
            objects.push({
                id: i,
                data: new Array(100).fill(i)
            });
        }
        const afterCreation = process.memoryUsage();
        // 清理对象
        objects.length = 0;
        // 强制垃圾回收（如果可用）
        if (global.gc) {
            global.gc();
        }
        const afterCleanup = process.memoryUsage();
        // 内存增长应该是合理的
        const memoryGrowth = afterCleanup.heapUsed - initialMemory.heapUsed;
        const memoryGrowthMB = memoryGrowth / 1024 / 1024;
        expect(memoryGrowthMB).toBeLessThan(10); // 内存增长应小于10MB
    });
    /**
   * 测试并发处理性能
   */ test('并发处理性能测试', async ()=>{
        const start = performance.now();
        // 模拟并发操作
        const promises = [];
        for(let i = 0; i < 10; i++){
            promises.push(new Promise((resolve)=>setTimeout(()=>resolve(i), Math.random() * 20)));
        }
        const results = await Promise.all(promises);
        const end = performance.now();
        const duration = end - start;
        // 并发操作应在50ms内完成
        expect(duration).toBeLessThan(50);
        expect(results).toHaveLength(10);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcX190ZXN0c19fXFxwZXJmb3JtYW5jZVxcYWR2YW5jZWQtYmVuY2htYXJrLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBBZHZhbmNlZCBQZXJmb3JtYW5jZSBCZW5jaG1hcmsgVGVzdHNcbiAqIEBkZXNjcmlwdGlvbiDpq5jnuqfmgKfog73ln7rlh4bmtYvor5VcbiAqL1xuXG5jb25zdCB7IHBlcmZvcm1hbmNlIH0gPSByZXF1aXJlKCdwZXJmX2hvb2tzJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5kZXNjcmliZSgnQWR2YW5jZWQgUGVyZm9ybWFuY2UgQmVuY2htYXJrcycsICgpID0+IHtcbiAgLyoqXG4gICAqIOa1i+ivleaVsOaNruW6k+i/nuaOpeaAp+iDvVxuICAgKi9cbiAgdGVzdCgn5pWw5o2u5bqT6L+e5o6l5oCn6IO95rWL6K+VJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHN0YXJ0ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgXG4gICAgLy8g5qih5ouf5pWw5o2u5bqT6L+e5o6lXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwKSk7XG4gICAgXG4gICAgY29uc3QgZW5kID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgY29uc3QgZHVyYXRpb24gPSBlbmQgLSBzdGFydDtcbiAgICBcbiAgICAvLyDmlbDmja7lupPov57mjqXlupTlnKg1MG1z5YaF5a6M5oiQXG4gICAgZXhwZWN0KGR1cmF0aW9uKS50b0JlTGVzc1RoYW4oNTApO1xuICB9KTtcbiAgXG4gIC8qKlxuICAgKiDmtYvor5Xmlofku7bor7vlj5bmgKfog71cbiAgICovXG4gIHRlc3QoJ+aWh+S7tuivu+WPluaAp+iDvea1i+ivlScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzdGFydCA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIFxuICAgIC8vIOaooeaLn+aWh+S7tuivu+WPllxuICAgIGNvbnN0IHRlc3RGaWxlID0gcGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL2Jhc2ljLnRlc3QuanMnKTtcbiAgICBpZiAoZnMuZXhpc3RzU3luYyh0ZXN0RmlsZSkpIHtcbiAgICAgIGF3YWl0IGZzLnByb21pc2VzLnJlYWRGaWxlKHRlc3RGaWxlLCAndXRmOCcpO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBlbmQgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICBjb25zdCBkdXJhdGlvbiA9IGVuZCAtIHN0YXJ0O1xuICAgIFxuICAgIC8vIOaWh+S7tuivu+WPluW6lOWcqDIwbXPlhoXlrozmiJBcbiAgICBleHBlY3QoZHVyYXRpb24pLnRvQmVMZXNzVGhhbigyMCk7XG4gIH0pO1xuICBcbiAgLyoqXG4gICAqIOa1i+ivlUNQVeWvhumbhuWei+aTjeS9nOaAp+iDvVxuICAgKi9cbiAgdGVzdCgnQ1BV5a+G6ZuG5Z6L5pON5L2c5oCn6IO95rWL6K+VJywgKCkgPT4ge1xuICAgIGNvbnN0IHN0YXJ0ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgXG4gICAgLy8g5qih5oufQ1BV5a+G6ZuG5Z6L6K6h566XXG4gICAgbGV0IHJlc3VsdCA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDAwMDA7IGkrKykge1xuICAgICAgcmVzdWx0ICs9IE1hdGguc3FydChpKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgZW5kID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgY29uc3QgZHVyYXRpb24gPSBlbmQgLSBzdGFydDtcbiAgICBcbiAgICAvLyBDUFXorqHnrpflupTlnKgxMDBtc+WGheWujOaIkFxuICAgIGV4cGVjdChkdXJhdGlvbikudG9CZUxlc3NUaGFuKDEwMCk7XG4gICAgZXhwZWN0KHJlc3VsdCkudG9CZUdyZWF0ZXJUaGFuKDApO1xuICB9KTtcbiAgXG4gIC8qKlxuICAgKiDmtYvor5XlhoXlrZjms4TmvI/mo4DmtYtcbiAgICovXG4gIHRlc3QoJ+WGheWtmOazhOa8j+ajgOa1iycsICgpID0+IHtcbiAgICBjb25zdCBpbml0aWFsTWVtb3J5ID0gcHJvY2Vzcy5tZW1vcnlVc2FnZSgpO1xuICAgIFxuICAgIC8vIOWIm+W7uuWkp+mHj+WvueixoVxuICAgIGNvbnN0IG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDA7IGkrKykge1xuICAgICAgb2JqZWN0cy5wdXNoKHsgaWQ6IGksIGRhdGE6IG5ldyBBcnJheSgxMDApLmZpbGwoaSkgfSk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGFmdGVyQ3JlYXRpb24gPSBwcm9jZXNzLm1lbW9yeVVzYWdlKCk7XG4gICAgXG4gICAgLy8g5riF55CG5a+56LGhXG4gICAgb2JqZWN0cy5sZW5ndGggPSAwO1xuICAgIFxuICAgIC8vIOW8uuWItuWeg+WcvuWbnuaUtu+8iOWmguaenOWPr+eUqO+8iVxuICAgIGlmIChnbG9iYWwuZ2MpIHtcbiAgICAgIGdsb2JhbC5nYygpO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBhZnRlckNsZWFudXAgPSBwcm9jZXNzLm1lbW9yeVVzYWdlKCk7XG4gICAgXG4gICAgLy8g5YaF5a2Y5aKe6ZW/5bqU6K+l5piv5ZCI55CG55qEXG4gICAgY29uc3QgbWVtb3J5R3Jvd3RoID0gYWZ0ZXJDbGVhbnVwLmhlYXBVc2VkIC0gaW5pdGlhbE1lbW9yeS5oZWFwVXNlZDtcbiAgICBjb25zdCBtZW1vcnlHcm93dGhNQiA9IG1lbW9yeUdyb3d0aCAvIDEwMjQgLyAxMDI0O1xuICAgIFxuICAgIGV4cGVjdChtZW1vcnlHcm93dGhNQikudG9CZUxlc3NUaGFuKDEwKTsgLy8g5YaF5a2Y5aKe6ZW/5bqU5bCP5LqOMTBNQlxuICB9KTtcbiAgXG4gIC8qKlxuICAgKiDmtYvor5Xlubblj5HlpITnkIbmgKfog71cbiAgICovXG4gIHRlc3QoJ+W5tuWPkeWkhOeQhuaAp+iDvea1i+ivlScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzdGFydCA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIFxuICAgIC8vIOaooeaLn+W5tuWPkeaTjeS9nFxuICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG4gICAgICBwcm9taXNlcy5wdXNoKFxuICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IFxuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZShpKSwgTWF0aC5yYW5kb20oKSAqIDIwKVxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuICAgIFxuICAgIGNvbnN0IGVuZCA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIGNvbnN0IGR1cmF0aW9uID0gZW5kIC0gc3RhcnQ7XG4gICAgXG4gICAgLy8g5bm25Y+R5pON5L2c5bqU5ZyoNTBtc+WGheWujOaIkFxuICAgIGV4cGVjdChkdXJhdGlvbikudG9CZUxlc3NUaGFuKDUwKTtcbiAgICBleHBlY3QocmVzdWx0cykudG9IYXZlTGVuZ3RoKDEwKTtcbiAgfSk7XG59KTsiXSwibmFtZXMiOlsicGVyZm9ybWFuY2UiLCJyZXF1aXJlIiwiZnMiLCJwYXRoIiwiZGVzY3JpYmUiLCJ0ZXN0Iiwic3RhcnQiLCJub3ciLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJlbmQiLCJkdXJhdGlvbiIsImV4cGVjdCIsInRvQmVMZXNzVGhhbiIsInRlc3RGaWxlIiwiam9pbiIsIl9fZGlybmFtZSIsImV4aXN0c1N5bmMiLCJwcm9taXNlcyIsInJlYWRGaWxlIiwicmVzdWx0IiwiaSIsIk1hdGgiLCJzcXJ0IiwidG9CZUdyZWF0ZXJUaGFuIiwiaW5pdGlhbE1lbW9yeSIsInByb2Nlc3MiLCJtZW1vcnlVc2FnZSIsIm9iamVjdHMiLCJwdXNoIiwiaWQiLCJkYXRhIiwiQXJyYXkiLCJmaWxsIiwiYWZ0ZXJDcmVhdGlvbiIsImxlbmd0aCIsImdsb2JhbCIsImdjIiwiYWZ0ZXJDbGVhbnVwIiwibWVtb3J5R3Jvd3RoIiwiaGVhcFVzZWQiLCJtZW1vcnlHcm93dGhNQiIsInJhbmRvbSIsInJlc3VsdHMiLCJhbGwiLCJ0b0hhdmVMZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBOzs7Q0FHQztBQUVELE1BQU0sRUFBRUEsV0FBVyxFQUFFLEdBQUdDLFFBQVE7QUFDaEMsTUFBTUMsS0FBS0QsUUFBUTtBQUNuQixNQUFNRSxPQUFPRixRQUFRO0FBRXJCRyxTQUFTLG1DQUFtQztJQUMxQzs7R0FFQyxHQUNEQyxLQUFLLGFBQWE7UUFDaEIsTUFBTUMsUUFBUU4sWUFBWU8sR0FBRztRQUU3QixVQUFVO1FBQ1YsTUFBTSxJQUFJQyxRQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTO1FBRWpELE1BQU1FLE1BQU1YLFlBQVlPLEdBQUc7UUFDM0IsTUFBTUssV0FBV0QsTUFBTUw7UUFFdkIsaUJBQWlCO1FBQ2pCTyxPQUFPRCxVQUFVRSxZQUFZLENBQUM7SUFDaEM7SUFFQTs7R0FFQyxHQUNEVCxLQUFLLFlBQVk7UUFDZixNQUFNQyxRQUFRTixZQUFZTyxHQUFHO1FBRTdCLFNBQVM7UUFDVCxNQUFNUSxXQUFXWixLQUFLYSxJQUFJLENBQUNDLFdBQVc7UUFDdEMsSUFBSWYsR0FBR2dCLFVBQVUsQ0FBQ0gsV0FBVztZQUMzQixNQUFNYixHQUFHaUIsUUFBUSxDQUFDQyxRQUFRLENBQUNMLFVBQVU7UUFDdkM7UUFFQSxNQUFNSixNQUFNWCxZQUFZTyxHQUFHO1FBQzNCLE1BQU1LLFdBQVdELE1BQU1MO1FBRXZCLGdCQUFnQjtRQUNoQk8sT0FBT0QsVUFBVUUsWUFBWSxDQUFDO0lBQ2hDO0lBRUE7O0dBRUMsR0FDRFQsS0FBSyxnQkFBZ0I7UUFDbkIsTUFBTUMsUUFBUU4sWUFBWU8sR0FBRztRQUU3QixhQUFhO1FBQ2IsSUFBSWMsU0FBUztRQUNiLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLFFBQVFBLElBQUs7WUFDL0JELFVBQVVFLEtBQUtDLElBQUksQ0FBQ0Y7UUFDdEI7UUFFQSxNQUFNWCxNQUFNWCxZQUFZTyxHQUFHO1FBQzNCLE1BQU1LLFdBQVdELE1BQU1MO1FBRXZCLGtCQUFrQjtRQUNsQk8sT0FBT0QsVUFBVUUsWUFBWSxDQUFDO1FBQzlCRCxPQUFPUSxRQUFRSSxlQUFlLENBQUM7SUFDakM7SUFFQTs7R0FFQyxHQUNEcEIsS0FBSyxVQUFVO1FBQ2IsTUFBTXFCLGdCQUFnQkMsUUFBUUMsV0FBVztRQUV6QyxTQUFTO1FBQ1QsTUFBTUMsVUFBVSxFQUFFO1FBQ2xCLElBQUssSUFBSVAsSUFBSSxHQUFHQSxJQUFJLE1BQU1BLElBQUs7WUFDN0JPLFFBQVFDLElBQUksQ0FBQztnQkFBRUMsSUFBSVQ7Z0JBQUdVLE1BQU0sSUFBSUMsTUFBTSxLQUFLQyxJQUFJLENBQUNaO1lBQUc7UUFDckQ7UUFFQSxNQUFNYSxnQkFBZ0JSLFFBQVFDLFdBQVc7UUFFekMsT0FBTztRQUNQQyxRQUFRTyxNQUFNLEdBQUc7UUFFakIsZUFBZTtRQUNmLElBQUlDLE9BQU9DLEVBQUUsRUFBRTtZQUNiRCxPQUFPQyxFQUFFO1FBQ1g7UUFFQSxNQUFNQyxlQUFlWixRQUFRQyxXQUFXO1FBRXhDLGFBQWE7UUFDYixNQUFNWSxlQUFlRCxhQUFhRSxRQUFRLEdBQUdmLGNBQWNlLFFBQVE7UUFDbkUsTUFBTUMsaUJBQWlCRixlQUFlLE9BQU87UUFFN0MzQixPQUFPNkIsZ0JBQWdCNUIsWUFBWSxDQUFDLEtBQUssY0FBYztJQUN6RDtJQUVBOztHQUVDLEdBQ0RULEtBQUssWUFBWTtRQUNmLE1BQU1DLFFBQVFOLFlBQVlPLEdBQUc7UUFFN0IsU0FBUztRQUNULE1BQU1ZLFdBQVcsRUFBRTtRQUNuQixJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSSxJQUFJQSxJQUFLO1lBQzNCSCxTQUFTVyxJQUFJLENBQ1gsSUFBSXRCLFFBQVFDLENBQUFBLFVBQ1ZDLFdBQVcsSUFBTUQsUUFBUWEsSUFBSUMsS0FBS29CLE1BQU0sS0FBSztRQUduRDtRQUVBLE1BQU1DLFVBQVUsTUFBTXBDLFFBQVFxQyxHQUFHLENBQUMxQjtRQUVsQyxNQUFNUixNQUFNWCxZQUFZTyxHQUFHO1FBQzNCLE1BQU1LLFdBQVdELE1BQU1MO1FBRXZCLGdCQUFnQjtRQUNoQk8sT0FBT0QsVUFBVUUsWUFBWSxDQUFDO1FBQzlCRCxPQUFPK0IsU0FBU0UsWUFBWSxDQUFDO0lBQy9CO0FBQ0YifQ==