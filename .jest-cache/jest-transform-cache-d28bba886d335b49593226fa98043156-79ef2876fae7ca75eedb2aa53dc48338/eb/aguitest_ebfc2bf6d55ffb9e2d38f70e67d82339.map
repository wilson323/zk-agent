{"version":3,"sources":["E:\\zk-agent\\tests\\api\\routes\\ag-ui.test.ts"],"sourcesContent":["/**\n * AG-UI API路由错误处理测试\n * 测试AG-UI相关功能的各种错误场景\n */\n\nimport { NextRequest } from 'next/server';\nimport { GET, POST, PUT, DELETE } from '@/app/api/ag-ui/route';\nimport { GlobalErrorHandler } from '@/lib/middleware/global-error-handler';\nimport { AgentError, AgentErrorType, ErrorSeverity } from '@/lib/errors/agent-errors';\n\n// Mock dependencies\njest.mock('../../../lib/services/ag-ui-manager', () => ({\n  getAgentList: jest.fn(),\n  getAgentDetails: jest.fn(),\n  createAgent: jest.fn(),\n  updateAgent: jest.fn(),\n  deleteAgent: jest.fn(),\n  validateAgentConfig: jest.fn(),\n  checkAgentPermissions: jest.fn(),\n  getAgentMetrics: jest.fn(),\n  deployAgent: jest.fn(),\n  testAgentConnection: jest.fn()\n}));\n\njest.mock('../../../lib/services/cad-analysis-service', () => ({\n  analyzeCADFile: jest.fn(),\n  getAnalysisHistory: jest.fn(),\n  validateCADFormat: jest.fn(),\n  extractCADMetadata: jest.fn(),\n  generateAnalysisReport: jest.fn()\n}));\n\njest.mock('../../../lib/services/chat-service', () => ({\n  initializeChat: jest.fn(),\n  sendMessage: jest.fn(),\n  getChatHistory: jest.fn(),\n  validateChatSession: jest.fn(),\n  endChatSession: jest.fn(),\n  getChatMetrics: jest.fn()\n}));\n\njest.mock('../../../lib/services/compliance-service', () => ({\n  performComplianceAudit: jest.fn(),\n  getComplianceReport: jest.fn(),\n  validateComplianceRules: jest.fn(),\n  updateComplianceConfig: jest.fn(),\n  getComplianceHistory: jest.fn()\n}));\n\njest.mock('../../../lib/auth/session', () => ({\n  validateSession: jest.fn(),\n  getUserPermissions: jest.fn(),\n  checkAdminAccess: jest.fn()\n}));\n\njest.mock('../../../lib/storage/agent-store', () => ({\n  storeAgent: jest.fn(),\n  getAgent: jest.fn(),\n  updateAgent: jest.fn(),\n  deleteAgent: jest.fn(),\n  listAgents: jest.fn()\n}));\n\ndescribe('AG-UI API Error Handling', () => {\n  let errorHandler: GlobalErrorHandler;\n\n  beforeEach(() => {\n    errorHandler = GlobalErrorHandler.getInstance();\n    jest.clearAllMocks();\n  });\n\n  describe('GET /api/ag-ui - Get Agent List', () => {\n    it('should handle agent service unavailable', async () => {\n      const { getAgentList } = require('../../../lib/services/ag-ui-manager');\n      getAgentList.mockRejectedValue(new Error('Agent service temporarily unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Agent service temporarily unavailable');\n    });\n\n    it('should handle invalid pagination parameters', async () => {\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?page=-1&limit=0');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid pagination parameters');\n    });\n\n    it('should handle agent list retrieval timeout', async () => {\n      const { getAgentList } = require('../../../lib/services/ag-ui-manager');\n      getAgentList.mockRejectedValue(new Error('Agent list retrieval timeout'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?timeout=1000');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error.message).toContain('Agent list retrieval timeout');\n    });\n\n    it('should handle insufficient permissions for agent access', async () => {\n      const { checkAgentPermissions } = require('../../../lib/services/ag-ui-manager');\n      checkAgentPermissions.mockRejectedValue(new Error('Insufficient permissions to access agents'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        headers: { 'Authorization': 'Bearer limited-user-token' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Insufficient permissions');\n    });\n\n    it('should handle agent storage corruption', async () => {\n      const { listAgents } = require('../../../lib/storage/agent-store');\n      listAgents.mockRejectedValue(new Error('Agent storage corruption detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Agent storage corruption detected');\n    });\n\n    it('should handle invalid filter parameters', async () => {\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?status=invalid&type=unknown');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid filter parameters');\n    });\n\n    it('should handle agent metrics calculation failure', async () => {\n      const { getAgentMetrics } = require('../../../lib/services/ag-ui-manager');\n      getAgentMetrics.mockRejectedValue(new Error('Failed to calculate agent metrics'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?include_metrics=true');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to calculate agent metrics');\n    });\n  });\n\n  describe('POST /api/ag-ui - Create Agent', () => {\n    let validAgentData: any;\n\n    beforeEach(() => {\n      validAgentData = {\n        name: 'Test Agent',\n        type: 'chat',\n        config: {\n          model: 'gpt-3.5-turbo',\n          temperature: 0.7,\n          maxTokens: 1000\n        },\n        description: 'Test agent for validation'\n      };\n    });\n\n    it('should handle missing required agent fields', async () => {\n      const invalidData = { ...validAgentData };\n      delete invalidData.name;\n      delete invalidData.type;\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(invalidData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.details).toContain('name');\n      expect(data.error.details).toContain('type');\n    });\n\n    it('should handle invalid agent configuration', async () => {\n      const { validateAgentConfig } = require('../../../lib/services/ag-ui-manager');\n      validateAgentConfig.mockRejectedValue(new Error('Invalid agent configuration: temperature out of range'));\n\n      const invalidConfigData = {\n        ...validAgentData,\n        config: {\n          ...validAgentData.config,\n          temperature: 2.5 // Invalid temperature\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(invalidConfigData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Invalid agent configuration');\n    });\n\n    it('should handle unauthenticated agent creation', async () => {\n      const { validateSession } = require('../../../lib/auth/session');\n      validateSession.mockRejectedValue(new Error('Authentication required'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('Authentication required');\n    });\n\n    it('should handle agent creation permission denied', async () => {\n      const { checkAgentPermissions } = require('../../../lib/services/ag-ui-manager');\n      checkAgentPermissions.mockRejectedValue(new Error('Insufficient permissions to create agents'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer limited-user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Insufficient permissions');\n    });\n\n    it('should handle duplicate agent name', async () => {\n      const { createAgent } = require('../../../lib/services/ag-ui-manager');\n      createAgent.mockRejectedValue(new Error('Agent with this name already exists'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify({ ...validAgentData, name: 'Existing Agent' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('Agent with this name already exists');\n    });\n\n    it('should handle agent storage failure', async () => {\n      const { storeAgent } = require('../../../lib/storage/agent-store');\n      storeAgent.mockRejectedValue(new Error('Failed to store agent: database write error'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to store agent');\n    });\n\n    it('should handle agent deployment failure', async () => {\n      const { deployAgent } = require('../../../lib/services/ag-ui-manager');\n      deployAgent.mockRejectedValue(new Error('Failed to deploy agent: service unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify({ ...validAgentData, deploy: true }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to deploy agent');\n    });\n\n    it('should handle invalid agent type', async () => {\n      const invalidTypeData = {\n        ...validAgentData,\n        type: 'invalid-type'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(invalidTypeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid agent type');\n    });\n\n    it('should handle malformed JSON in request body', async () => {\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: '{invalid json}',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid JSON');\n    });\n\n    it('should handle agent configuration validation timeout', async () => {\n      const { validateAgentConfig } = require('../../../lib/services/ag-ui-manager');\n      validateAgentConfig.mockRejectedValue(new Error('Agent configuration validation timeout'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error.message).toContain('Agent configuration validation timeout');\n    });\n  });\n\n  describe('PUT /api/ag-ui - Update Agent', () => {\n    it('should handle agent not found for update', async () => {\n      const { getAgent } = require('../../../lib/storage/agent-store');\n      getAgent.mockRejectedValue(new Error('Agent not found'));\n\n      const updateData = {\n        id: 'nonexistent-agent',\n        name: 'Updated Agent'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Agent not found');\n    });\n\n    it('should handle concurrent agent update conflict', async () => {\n      const { updateAgent } = require('../../../lib/services/ag-ui-manager');\n      updateAgent.mockRejectedValue(new Error('Concurrent update detected: agent modified by another user'));\n\n      const updateData = {\n        id: 'agent-123',\n        name: 'Updated Agent',\n        version: 1\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('Concurrent update detected');\n    });\n\n    it('should handle agent update permission denied', async () => {\n      const { checkAgentPermissions } = require('../../../lib/services/ag-ui-manager');\n      checkAgentPermissions.mockRejectedValue(new Error('Insufficient permissions to update this agent'));\n\n      const updateData = {\n        id: 'agent-123',\n        name: 'Updated Agent'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer limited-user-token'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Insufficient permissions');\n    });\n\n    it('should handle agent in use during update', async () => {\n      const { updateAgent } = require('../../../lib/services/ag-ui-manager');\n      updateAgent.mockRejectedValue(new Error('Cannot update agent: currently in use by active sessions'));\n\n      const updateData = {\n        id: 'active-agent-123',\n        config: { temperature: 0.8 }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Cannot update agent: currently in use');\n    });\n  });\n\n  describe('DELETE /api/ag-ui - Delete Agent', () => {\n    it('should handle agent not found for deletion', async () => {\n      const { getAgent } = require('../../../lib/storage/agent-store');\n      getAgent.mockRejectedValue(new Error('Agent not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?id=nonexistent-agent', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer admin-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Agent not found');\n    });\n\n    it('should handle agent deletion permission denied', async () => {\n      const { checkAgentPermissions } = require('../../../lib/services/ag-ui-manager');\n      checkAgentPermissions.mockRejectedValue(new Error('Insufficient permissions to delete agents'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?id=agent-123', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer limited-user-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Insufficient permissions');\n    });\n\n    it('should handle agent with active dependencies', async () => {\n      const { deleteAgent } = require('../../../lib/services/ag-ui-manager');\n      deleteAgent.mockRejectedValue(new Error('Cannot delete agent: has active dependencies'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?id=agent-with-deps', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer admin-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Cannot delete agent: has active dependencies');\n    });\n\n    it('should handle agent deletion storage failure', async () => {\n      const { deleteAgent } = require('../../../lib/storage/agent-store');\n      deleteAgent.mockRejectedValue(new Error('Failed to delete agent: storage error'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui?id=agent-123', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer admin-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to delete agent');\n    });\n  });\n\n  describe('CAD Analysis API Error Handling', () => {\n    it('should handle CAD file upload failure', async () => {\n      const { analyzeCADFile } = require('../../../lib/services/cad-analysis-service');\n      analyzeCADFile.mockRejectedValue(new Error('CAD file upload failed: file too large'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/cad-analysis', {\n        method: 'POST',\n        body: JSON.stringify({ file: 'large-cad-file.dwg' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(413);\n      expect(data.error.message).toContain('CAD file upload failed: file too large');\n    });\n\n    it('should handle unsupported CAD format', async () => {\n      const { validateCADFormat } = require('../../../lib/services/cad-analysis-service');\n      validateCADFormat.mockRejectedValue(new Error('Unsupported CAD format: .xyz'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/cad-analysis', {\n        method: 'POST',\n        body: JSON.stringify({ file: 'unsupported.xyz' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(415);\n      expect(data.error.message).toContain('Unsupported CAD format');\n    });\n\n    it('should handle CAD analysis timeout', async () => {\n      const { analyzeCADFile } = require('../../../lib/services/cad-analysis-service');\n      analyzeCADFile.mockRejectedValue(new Error('CAD analysis timeout: file too complex'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/cad-analysis', {\n        method: 'POST',\n        body: JSON.stringify({ file: 'complex-model.dwg', timeout: 30000 }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error.message).toContain('CAD analysis timeout');\n    });\n\n    it('should handle corrupted CAD file', async () => {\n      const { extractCADMetadata } = require('../../../lib/services/cad-analysis-service');\n      extractCADMetadata.mockRejectedValue(new Error('CAD file corruption detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/cad-analysis', {\n        method: 'POST',\n        body: JSON.stringify({ file: 'corrupted.dwg' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('CAD file corruption detected');\n    });\n  });\n\n  describe('Chat API Error Handling', () => {\n    it('should handle chat session initialization failure', async () => {\n      const { initializeChat } = require('../../../lib/services/chat-service');\n      initializeChat.mockRejectedValue(new Error('Failed to initialize chat session'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/chat', {\n        method: 'POST',\n        body: JSON.stringify({ agentId: 'agent-123' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to initialize chat session');\n    });\n\n    it('should handle invalid chat session', async () => {\n      const { validateChatSession } = require('../../../lib/services/chat-service');\n      validateChatSession.mockRejectedValue(new Error('Invalid or expired chat session'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/chat', {\n        method: 'POST',\n        body: JSON.stringify({ sessionId: 'invalid-session', message: 'Hello' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.message).toContain('Invalid or expired chat session');\n    });\n\n    it('should handle chat message rate limit', async () => {\n      const { sendMessage } = require('../../../lib/services/chat-service');\n      sendMessage.mockRejectedValue(new Error('Chat rate limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/chat', {\n        method: 'POST',\n        body: JSON.stringify({ sessionId: 'session-123', message: 'Rapid message' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\n      expect(data.error.message).toContain('Chat rate limit exceeded');\n    });\n\n    it('should handle chat service unavailable', async () => {\n      const { sendMessage } = require('../../../lib/services/chat-service');\n      sendMessage.mockRejectedValue(new Error('Chat service temporarily unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/chat', {\n        method: 'POST',\n        body: JSON.stringify({ sessionId: 'session-123', message: 'Hello' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Chat service temporarily unavailable');\n    });\n  });\n\n  describe('Compliance API Error Handling', () => {\n    it('should handle compliance audit failure', async () => {\n      const { performComplianceAudit } = require('../../../lib/services/compliance-service');\n      performComplianceAudit.mockRejectedValue(new Error('Compliance audit failed: missing required data'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/compliance/audit', {\n        method: 'POST',\n        body: JSON.stringify({ auditType: 'security' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('Compliance audit failed');\n    });\n\n    it('should handle invalid compliance rules', async () => {\n      const { validateComplianceRules } = require('../../../lib/services/compliance-service');\n      validateComplianceRules.mockRejectedValue(new Error('Invalid compliance rules configuration'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/compliance/audit', {\n        method: 'POST',\n        body: JSON.stringify({ rules: 'invalid-rules' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Invalid compliance rules configuration');\n    });\n\n    it('should handle compliance report generation timeout', async () => {\n      const { getComplianceReport } = require('../../../lib/services/compliance-service');\n      getComplianceReport.mockRejectedValue(new Error('Compliance report generation timeout'));\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui/compliance/audit?reportId=report-123');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error.message).toContain('Compliance report generation timeout');\n    });\n  });\n\n  describe('Error Recovery and Monitoring', () => {\n    it('should provide AG-UI operation recovery suggestions', async () => {\n      const { createAgent } = require('../../../lib/services/ag-ui-manager');\n      createAgent.mockRejectedValue(new Error('Temporary AG-UI service outage'));\n\n      const validAgentData = {\n        name: 'Test Agent',\n        type: 'chat',\n        config: { model: 'gpt-3.5-turbo' }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(data.error.recovery).toBeDefined();\n      expect(data.error.recovery.suggestions).toContain('Retry agent creation');\n    });\n\n    it('should track AG-UI operation performance', async () => {\n      const { createAgent } = require('../../../lib/services/ag-ui-manager');\n      createAgent.mockRejectedValue(new Error('Test error'));\n\n      const validAgentData = {\n        name: 'Test Agent',\n        type: 'chat'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      await POST(request);\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.agUiErrorCount).toBeGreaterThan(0);\n    });\n\n    it('should include AG-UI context in error responses', async () => {\n      const { createAgent } = require('../../../lib/services/ag-ui-manager');\n      createAgent.mockRejectedValue(new Error('Test error'));\n\n      const validAgentData = {\n        name: 'Test Agent',\n        type: 'chat'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/ag-ui', {\n        method: 'POST',\n        body: JSON.stringify(validAgentData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer admin-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(data.error.context).toBeDefined();\n      expect(data.error.context.operation).toBe('createAgent');\n      expect(data.error.context.agentName).toBe('Test Agent');\n    });\n  });\n});"],"names":["jest","mock","getAgentList","fn","getAgentDetails","createAgent","updateAgent","deleteAgent","validateAgentConfig","checkAgentPermissions","getAgentMetrics","deployAgent","testAgentConnection","analyzeCADFile","getAnalysisHistory","validateCADFormat","extractCADMetadata","generateAnalysisReport","initializeChat","sendMessage","getChatHistory","validateChatSession","endChatSession","getChatMetrics","performComplianceAudit","getComplianceReport","validateComplianceRules","updateComplianceConfig","getComplianceHistory","validateSession","getUserPermissions","checkAdminAccess","storeAgent","getAgent","listAgents","describe","errorHandler","beforeEach","GlobalErrorHandler","getInstance","clearAllMocks","it","require","mockRejectedValue","Error","request","NextRequest","response","GET","data","json","expect","status","toBe","error","message","toContain","code","headers","validAgentData","name","type","config","model","temperature","maxTokens","description","invalidData","method","body","JSON","stringify","POST","details","invalidConfigData","deploy","invalidTypeData","updateData","id","PUT","version","DELETE","file","timeout","agentId","sessionId","auditType","rules","recovery","toBeDefined","suggestions","stats","getErrorStats","agUiErrorCount","toBeGreaterThan","context","operation","agentName"],"mappings":"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"}