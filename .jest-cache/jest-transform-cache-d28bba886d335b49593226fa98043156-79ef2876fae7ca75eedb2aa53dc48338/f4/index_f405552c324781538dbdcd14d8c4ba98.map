{"version":3,"sources":["E:\\zk-agent\\lib\\database\\index.ts"],"sourcesContent":["// @ts-nocheck\n/**\r\n * @file lib/database/index.ts\r\n * @description 数据库连接管理和Prisma客户端初始化\r\n * @author zk-agent开发团队\r\n * @lastUpdate 2024-12-19\r\n * @updateLog\r\n *   - 2024-12-19 初始创建数据库连接服务\r\n */\r\n\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\n// 全局Prisma客户端类型声明\r\ndeclare global {\r\n  var __prisma: PrismaClient | undefined;\r\n}\r\n\r\n// 创建Prisma客户端实例\r\nclass DatabaseService {\r\n  private static instance: PrismaClient;\r\n\r\n  static getInstance(): PrismaClient {\r\n    if (!DatabaseService.instance) {\r\n      DatabaseService.instance = globalThis.__prisma ?? new PrismaClient({\r\n        log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\r\n        errorFormat: 'pretty',\r\n      });\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        globalThis.__prisma = DatabaseService.instance;\r\n      }\r\n    }\r\n\r\n    return DatabaseService.instance;\r\n  }\r\n\r\n  static async connect(): Promise<void> {\r\n    try {\r\n      await DatabaseService.getInstance().$connect();\r\n      console.log('✅ Database connected successfully');\r\n    } catch (error) {\r\n      console.error('❌ Database connection failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async disconnect(): Promise<void> {\r\n    try {\r\n      await DatabaseService.getInstance().$disconnect();\r\n      console.log('✅ Database disconnected successfully');\r\n    } catch (error) {\r\n      console.error('❌ Database disconnection failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async healthCheck(): Promise<boolean> {\r\n    try {\r\n      await DatabaseService.getInstance().$queryRaw`SELECT 1`;\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Database health check failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static async runTransaction<T>(\r\n    callback: (prisma: PrismaClient) => Promise<T>\r\n  ): Promise<T> {\r\n    const prisma = DatabaseService.getInstance();\r\n    return await prisma.$transaction(callback);\r\n  }\r\n}\r\n\r\n// 导出Prisma客户端实例\r\nexport const prisma = DatabaseService.getInstance();\r\n\r\n// 导出数据库服务\r\nexport { DatabaseService };\r\n\r\n// 清理函数（在应用关闭时调用）\r\nexport const cleanup = async () => {\r\n  await DatabaseService.disconnect();\r\n};\r\n\r\n// 进程退出时自动清理\r\nif (typeof process !== 'undefined') {\r\n  process.on('beforeExit', cleanup);\r\n  process.on('SIGINT', cleanup);\r\n  process.on('SIGTERM', cleanup);\r\n} "],"names":["DatabaseService","cleanup","prisma","getInstance","instance","globalThis","__prisma","PrismaClient","log","process","env","NODE_ENV","errorFormat","connect","$connect","console","error","disconnect","$disconnect","healthCheck","$queryRaw","runTransaction","callback","$transaction","on"],"mappings":"AAAA,cAAc;AACd;;;;;;;CAOC;;;;;;;;;;;IAsEQA,eAAe;eAAfA;;IAGIC,OAAO;eAAPA;;IANAC,MAAM;eAANA;;;wBAjEgB;AAO7B,gBAAgB;AAChB,MAAMF;IAGJ,OAAOG,cAA4B;QACjC,IAAI,CAACH,gBAAgBI,QAAQ,EAAE;YAC7BJ,gBAAgBI,QAAQ,GAAGC,WAAWC,QAAQ,IAAI,IAAIC,oBAAY,CAAC;gBACjEC,KAAKC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB;oBAAC;oBAAS;oBAAS;iBAAO,GAAG;oBAAC;iBAAQ;gBACpFC,aAAa;YACf;YAEA,IAAIH,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;gBACzCN,WAAWC,QAAQ,GAAGN,gBAAgBI,QAAQ;YAChD;QACF;QAEA,OAAOJ,gBAAgBI,QAAQ;IACjC;IAEA,aAAaS,UAAyB;QACpC,IAAI;YACF,MAAMb,gBAAgBG,WAAW,GAAGW,QAAQ;YAC5CC,QAAQP,GAAG,CAAC;QACd,EAAE,OAAOQ,OAAO;YACdD,QAAQC,KAAK,CAAC,iCAAiCA;YAC/C,MAAMA;QACR;IACF;IAEA,aAAaC,aAA4B;QACvC,IAAI;YACF,MAAMjB,gBAAgBG,WAAW,GAAGe,WAAW;YAC/CH,QAAQP,GAAG,CAAC;QACd,EAAE,OAAOQ,OAAO;YACdD,QAAQC,KAAK,CAAC,oCAAoCA;YAClD,MAAMA;QACR;IACF;IAEA,aAAaG,cAAgC;QAC3C,IAAI;YACF,MAAMnB,gBAAgBG,WAAW,GAAGiB,SAAS,CAAC,QAAQ,CAAC;YACvD,OAAO;QACT,EAAE,OAAOJ,OAAO;YACdD,QAAQC,KAAK,CAAC,mCAAmCA;YACjD,OAAO;QACT;IACF;IAEA,aAAaK,eACXC,QAA8C,EAClC;QACZ,MAAMpB,SAASF,gBAAgBG,WAAW;QAC1C,OAAO,MAAMD,OAAOqB,YAAY,CAACD;IACnC;AACF;AAGO,MAAMpB,SAASF,gBAAgBG,WAAW;AAM1C,MAAMF,UAAU;IACrB,MAAMD,gBAAgBiB,UAAU;AAClC;AAEA,YAAY;AACZ,IAAI,OAAOR,YAAY,aAAa;IAClCA,QAAQe,EAAE,CAAC,cAAcvB;IACzBQ,QAAQe,EAAE,CAAC,UAAUvB;IACrBQ,QAAQe,EAAE,CAAC,WAAWvB;AACxB"}