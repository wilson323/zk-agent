{"version":3,"sources":["E:\\zk-agent\\tests\\api\\routes\\v1.test.ts"],"sourcesContent":["/**\n * V1 API路由错误处理测试\n * 测试V1版本API的各种错误场景\n */\n\nimport { NextRequest } from 'next/server';\nimport { GET, POST, PUT, DELETE } from '../../../app/api/v1/route';\n// import { GlobalErrorHandler } from '../../../lib/middleware/global-error-handler';\n// import { AgentError, AgentErrorType, ErrorSeverity } from '../../../lib/errors/agent-errors';\n\n// Mock dependencies\njest.mock('../../../lib/services/v1-api-service', () => ({\n  handleV1Request: jest.fn(),\n  validateV1ApiKey: jest.fn(),\n  processV1Data: jest.fn(),\n  transformV1Response: jest.fn(),\n  checkV1RateLimit: jest.fn(),\n  getV1ApiMetrics: jest.fn(),\n  validateV1Endpoint: jest.fn(),\n  migrateV1ToV2: jest.fn()\n}));\n\njest.mock('../../../lib/services/legacy-support', () => ({\n  handleLegacyRequest: jest.fn(),\n  convertLegacyFormat: jest.fn(),\n  validateLegacyData: jest.fn(),\n  mapLegacyEndpoints: jest.fn(),\n  getLegacyCompatibility: jest.fn()\n}));\n\njest.mock('../../../lib/services/version-manager', () => ({\n  getApiVersion: jest.fn(),\n  checkVersionCompatibility: jest.fn(),\n  getVersionMetadata: jest.fn(),\n  validateVersionAccess: jest.fn(),\n  getDeprecationInfo: jest.fn()\n}));\n\njest.mock('../../../lib/auth/api-key-validator', () => ({\n  validateApiKey: jest.fn(),\n  checkApiKeyPermissions: jest.fn(),\n  getApiKeyMetadata: jest.fn(),\n  trackApiKeyUsage: jest.fn()\n}));\n\njest.mock('../../../lib/middleware/rate-limiter', () => ({\n  checkRateLimit: jest.fn(),\n  updateRateLimit: jest.fn(),\n  getRateLimitInfo: jest.fn()\n}));\n\njest.mock('../../../lib/storage/v1-data-store', () => ({\n  storeV1Data: jest.fn(),\n  getV1Data: jest.fn(),\n  updateV1Data: jest.fn(),\n  deleteV1Data: jest.fn(),\n  queryV1Data: jest.fn()\n}));\n\ndescribe('V1 API Error Handling', () => {\n  let errorHandler: any;\n\n  beforeEach(() => {\n    // errorHandler = GlobalErrorHandler.getInstance();\n    errorHandler = { errorCount: 0, circuitBreakerOpen: false };\n    jest.clearAllMocks();\n  });\n\n  describe('GET /api/v1 - V1 API Requests', () => {\n    it('should handle invalid V1 API key', async () => {\n      const { validateV1ApiKey } = require('../../../lib/services/v1-api-service');\n      validateV1ApiKey.mockRejectedValue(new Error('Invalid or expired V1 API key'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'invalid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('Invalid or expired V1 API key');\n    });\n\n    it('should handle missing V1 API key', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/users');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('API key required for V1 endpoints');\n    });\n\n    it('should handle V1 endpoint not found', async () => {\n      const { validateV1Endpoint } = require('../../../lib/services/v1-api-service');\n      validateV1Endpoint.mockRejectedValue(new Error('V1 endpoint not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/nonexistent', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('V1 endpoint not found');\n    });\n\n    it('should handle V1 API deprecation warning', async () => {\n      const { getDeprecationInfo } = require('../../../lib/services/version-manager');\n      getDeprecationInfo.mockResolvedValue({\n        deprecated: true,\n        deprecationDate: '2024-12-31',\n        migrationGuide: 'https://docs.example.com/v2-migration'\n      });\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.headers.get('X-API-Deprecated')).toBe('true');\n      expect(response.headers.get('X-Deprecation-Date')).toBe('2024-12-31');\n      expect(data.deprecation).toBeDefined();\n    });\n\n    it('should handle V1 rate limit exceeded', async () => {\n      const { checkV1RateLimit } = require('../../../lib/services/v1-api-service');\n      checkV1RateLimit.mockRejectedValue(new Error('V1 API rate limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\n      expect(data.error.message).toContain('V1 API rate limit exceeded');\n    });\n\n    it('should handle V1 service unavailable', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('V1 API service temporarily unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('V1 API service temporarily unavailable');\n    });\n\n    it('should handle V1 data format incompatibility', async () => {\n      const { processV1Data } = require('../../../lib/services/v1-api-service');\n      processV1Data.mockRejectedValue(new Error('V1 data format no longer supported'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/data?format=legacy', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(415);\n      expect(data.error.message).toContain('V1 data format no longer supported');\n    });\n\n    it('should handle V1 query parameter validation errors', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/users?limit=-1&offset=invalid', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid query parameters');\n    });\n\n    it('should handle V1 response transformation failure', async () => {\n      const { transformV1Response } = require('../../../lib/services/v1-api-service');\n      transformV1Response.mockRejectedValue(new Error('Failed to transform V1 response format'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to transform V1 response format');\n    });\n\n    it('should handle V1 API version mismatch', async () => {\n      const { checkVersionCompatibility } = require('../../../lib/services/version-manager');\n      checkVersionCompatibility.mockRejectedValue(new Error('V1 API version mismatch'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { \n          'X-API-Key': 'valid-key',\n          'X-API-Version': '1.5' // Unsupported sub-version\n        }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('V1 API version mismatch');\n    });\n  });\n\n  describe('POST /api/v1 - V1 API Data Creation', () => {\n    let validV1Data: any;\n\n    beforeEach(() => {\n      validV1Data = {\n        name: 'Test Item',\n        type: 'document',\n        data: {\n          content: 'Test content',\n          metadata: {\n            version: '1.0',\n            format: 'text'\n          }\n        }\n      };\n    });\n\n    it('should handle V1 data validation errors', async () => {\n      const { processV1Data } = require('../../../lib/services/v1-api-service');\n      processV1Data.mockRejectedValue(new Error('V1 data validation failed: missing required fields'));\n\n      const invalidData = { ...validV1Data };\n      delete invalidData.name;\n      delete invalidData.type;\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(invalidData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('V1 data validation failed');\n    });\n\n    it('should handle V1 legacy format conversion errors', async () => {\n      const { convertLegacyFormat } = require('../../../lib/services/legacy-support');\n      convertLegacyFormat.mockRejectedValue(new Error('Failed to convert legacy V1 format'));\n\n      const legacyData = {\n        ...validV1Data,\n        format: 'legacy-v1',\n        encoding: 'deprecated'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(legacyData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('Failed to convert legacy V1 format');\n    });\n\n    it('should handle V1 data size limit exceeded', async () => {\n      const largeData = {\n        ...validV1Data,\n        data: {\n          content: 'x'.repeat(10 * 1024 * 1024) // 10MB content\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(largeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(413);\n      expect(data.error.code).toBe('PAYLOAD_TOO_LARGE');\n      expect(data.error.message).toContain('V1 data size limit exceeded');\n    });\n\n    it('should handle V1 storage quota exceeded', async () => {\n      const { storeV1Data } = require('../../../lib/storage/v1-data-store');\n      storeV1Data.mockRejectedValue(new Error('V1 storage quota exceeded for API key'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(validV1Data),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'quota-exceeded-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(507);\n      expect(data.error.message).toContain('V1 storage quota exceeded');\n    });\n\n    it('should handle V1 duplicate resource creation', async () => {\n      const { storeV1Data } = require('../../../lib/storage/v1-data-store');\n      storeV1Data.mockRejectedValue(new Error('V1 resource with this identifier already exists'));\n\n      const duplicateData = {\n        ...validV1Data,\n        id: 'existing-item-id'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(duplicateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('V1 resource with this identifier already exists');\n    });\n\n    it('should handle V1 API permission denied', async () => {\n      const { checkApiKeyPermissions } = require('../../../lib/auth/api-key-validator');\n      checkApiKeyPermissions.mockRejectedValue(new Error('API key does not have V1 write permissions'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(validV1Data),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'read-only-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('API key does not have V1 write permissions');\n    });\n\n    it('should handle V1 malformed JSON', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: '{invalid json}',\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid JSON in V1 request body');\n    });\n\n    it('should handle V1 unsupported content type', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: 'xml-data',\n        headers: { \n          'Content-Type': 'application/xml',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(415);\n      expect(data.error.message).toContain('Unsupported content type for V1 API');\n    });\n  });\n\n  describe('PUT /api/v1 - V1 API Data Updates', () => {\n    it('should handle V1 resource not found for update', async () => {\n      const { getV1Data } = require('../../../lib/storage/v1-data-store');\n      getV1Data.mockRejectedValue(new Error('V1 resource not found'));\n\n      const updateData = {\n        id: 'nonexistent-item',\n        name: 'Updated Item'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/nonexistent-item', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('V1 resource not found');\n    });\n\n    it('should handle V1 concurrent update conflict', async () => {\n      const { updateV1Data } = require('../../../lib/storage/v1-data-store');\n      updateV1Data.mockRejectedValue(new Error('V1 resource modified by another request'));\n\n      const updateData = {\n        id: 'item-123',\n        name: 'Updated Item',\n        version: 1\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('V1 resource modified by another request');\n    });\n\n    it('should handle V1 update validation errors', async () => {\n      const { processV1Data } = require('../../../lib/services/v1-api-service');\n      processV1Data.mockRejectedValue(new Error('V1 update validation failed: invalid field values'));\n\n      const invalidUpdateData = {\n        id: 'item-123',\n        name: '', // Empty name\n        type: 'invalid-type'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'PUT',\n        body: JSON.stringify(invalidUpdateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('V1 update validation failed');\n    });\n\n    it('should handle V1 partial update not supported', async () => {\n      const { updateV1Data } = require('../../../lib/storage/v1-data-store');\n      updateV1Data.mockRejectedValue(new Error('V1 API does not support partial updates'));\n\n      const partialUpdateData = {\n        name: 'Updated Name' // Missing other required fields\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'PUT',\n        body: JSON.stringify(partialUpdateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('V1 API does not support partial updates');\n    });\n  });\n\n  describe('DELETE /api/v1 - V1 API Data Deletion', () => {\n    it('should handle V1 resource not found for deletion', async () => {\n      const { getV1Data } = require('../../../lib/storage/v1-data-store');\n      getV1Data.mockRejectedValue(new Error('V1 resource not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/nonexistent-item', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('V1 resource not found');\n    });\n\n    it('should handle V1 resource with dependencies', async () => {\n      const { deleteV1Data } = require('../../../lib/storage/v1-data-store');\n      deleteV1Data.mockRejectedValue(new Error('Cannot delete V1 resource: has active dependencies'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-with-deps', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Cannot delete V1 resource: has active dependencies');\n    });\n\n    it('should handle V1 deletion permission denied', async () => {\n      const { checkApiKeyPermissions } = require('../../../lib/auth/api-key-validator');\n      checkApiKeyPermissions.mockRejectedValue(new Error('API key does not have V1 delete permissions'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'no-delete-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('API key does not have V1 delete permissions');\n    });\n\n    it('should handle V1 deletion storage failure', async () => {\n      const { deleteV1Data } = require('../../../lib/storage/v1-data-store');\n      deleteV1Data.mockRejectedValue(new Error('Failed to delete V1 resource: storage error'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to delete V1 resource');\n    });\n  });\n\n  describe('Legacy Support and Migration', () => {\n    it('should handle legacy endpoint mapping failure', async () => {\n      const { mapLegacyEndpoints } = require('../../../lib/services/legacy-support');\n      mapLegacyEndpoints.mockRejectedValue(new Error('Legacy endpoint mapping failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/legacy/old-endpoint', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.message).toContain('Legacy endpoint mapping failed');\n    });\n\n    it('should handle V1 to V2 migration errors', async () => {\n      const { migrateV1ToV2 } = require('../../../lib/services/v1-api-service');\n      migrateV1ToV2.mockRejectedValue(new Error('V1 to V2 migration failed: incompatible data format'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/migrate', {\n        method: 'POST',\n        body: JSON.stringify({ resourceId: 'item-123' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('V1 to V2 migration failed');\n    });\n\n    it('should handle legacy data validation errors', async () => {\n      const { validateLegacyData } = require('../../../lib/services/legacy-support');\n      validateLegacyData.mockRejectedValue(new Error('Legacy data format validation failed'));\n\n      const legacyRequest = {\n        format: 'legacy-xml',\n        data: '<invalid>xml</data>'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/legacy/import', {\n        method: 'POST',\n        body: JSON.stringify(legacyRequest),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Legacy data format validation failed');\n    });\n\n    it('should handle legacy compatibility check failure', async () => {\n      const { getLegacyCompatibility } = require('../../../lib/services/legacy-support');\n      getLegacyCompatibility.mockRejectedValue(new Error('Legacy compatibility check failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/compatibility', {\n        headers: { \n          'X-API-Key': 'valid-key',\n          'X-Legacy-Version': '0.9'\n        }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('Legacy compatibility check failed');\n    });\n  });\n\n  describe('V1 API Metrics and Monitoring', () => {\n    it('should handle V1 metrics collection failure', async () => {\n      const { getV1ApiMetrics } = require('../../../lib/services/v1-api-service');\n      getV1ApiMetrics.mockRejectedValue(new Error('Failed to collect V1 API metrics'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/metrics', {\n        headers: { 'X-API-Key': 'admin-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to collect V1 API metrics');\n    });\n\n    it('should handle V1 API usage tracking failure', async () => {\n      const { trackApiKeyUsage } = require('../../../lib/auth/api-key-validator');\n      trackApiKeyUsage.mockRejectedValue(new Error('Failed to track V1 API usage'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      // Should not fail the main request, but log the tracking error\n      expect(response.status).not.toBe(500);\n      expect(data).toBeDefined();\n    });\n\n    it('should handle V1 rate limit info retrieval failure', async () => {\n      const { getRateLimitInfo } = require('../../../lib/middleware/rate-limiter');\n      getRateLimitInfo.mockRejectedValue(new Error('Failed to get V1 rate limit info'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/rate-limit', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to get V1 rate limit info');\n    });\n  });\n\n  describe('Error Recovery and Monitoring', () => {\n    it('should provide V1 API operation recovery suggestions', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('Temporary V1 API service outage'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.recovery).toBeDefined();\n      expect(data.error.recovery.suggestions).toContain('Consider migrating to V2 API');\n      expect(data.error.recovery.suggestions).toContain('Retry V1 request');\n    });\n\n    it('should track V1 API operation performance', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('Test error'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      await GET(request);\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.errorCount).toBeGreaterThan(0);\n    });\n\n    it('should include V1 API context in error responses', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('Test error'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.context).toBeDefined();\n      expect(data.error.context.apiVersion).toBe('v1');\n      expect(data.error.context.endpoint).toBe('/api/v1/users');\n      expect(data.error.context.deprecationWarning).toBeDefined();\n    });\n\n    it('should provide migration guidance in error responses', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('V1 endpoint deprecated'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/deprecated-endpoint', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.migration).toBeDefined();\n      expect(data.error.migration.v2Endpoint).toBeDefined();\n      expect(data.error.migration.migrationGuide).toBeDefined();\n    });\n  });\n});"],"names":["jest","mock","handleV1Request","fn","validateV1ApiKey","processV1Data","transformV1Response","checkV1RateLimit","getV1ApiMetrics","validateV1Endpoint","migrateV1ToV2","handleLegacyRequest","convertLegacyFormat","validateLegacyData","mapLegacyEndpoints","getLegacyCompatibility","getApiVersion","checkVersionCompatibility","getVersionMetadata","validateVersionAccess","getDeprecationInfo","validateApiKey","checkApiKeyPermissions","getApiKeyMetadata","trackApiKeyUsage","checkRateLimit","updateRateLimit","getRateLimitInfo","storeV1Data","getV1Data","updateV1Data","deleteV1Data","queryV1Data","describe","errorHandler","beforeEach","errorCount","circuitBreakerOpen","clearAllMocks","it","require","mockRejectedValue","Error","request","NextRequest","headers","response","GET","data","json","expect","status","toBe","error","code","message","toContain","mockResolvedValue","deprecated","deprecationDate","migrationGuide","get","deprecation","toBeDefined","validV1Data","name","type","content","metadata","version","format","invalidData","method","body","JSON","stringify","POST","legacyData","encoding","largeData","repeat","duplicateData","id","updateData","PUT","invalidUpdateData","partialUpdateData","DELETE","resourceId","legacyRequest","not","recovery","suggestions","stats","getErrorStats","toBeGreaterThan","context","apiVersion","endpoint","deprecationWarning","migration","v2Endpoint"],"mappings":"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"}