{"version":3,"sources":["E:\\zk-agent\\__tests__\\performance\\advanced-benchmark.test.js"],"sourcesContent":["/**\n * @file Advanced Performance Benchmark Tests\n * @description 高级性能基准测试\n */\n\nconst { performance } = require('perf_hooks');\nconst fs = require('fs');\nconst path = require('path');\n\ndescribe('Advanced Performance Benchmarks', () => {\n  /**\n   * 测试数据库连接性能\n   */\n  test('数据库连接性能测试', async () => {\n    const start = performance.now();\n    \n    // 模拟数据库连接\n    await new Promise(resolve => setTimeout(resolve, 30));\n    \n    const end = performance.now();\n    const duration = end - start;\n    \n    // 数据库连接应在50ms内完成\n    expect(duration).toBeLessThan(50);\n  });\n  \n  /**\n   * 测试文件读取性能\n   */\n  test('文件读取性能测试', async () => {\n    const start = performance.now();\n    \n    // 模拟文件读取\n    const testFile = path.join(__dirname, '../basic.test.js');\n    if (fs.existsSync(testFile)) {\n      await fs.promises.readFile(testFile, 'utf8');\n    }\n    \n    const end = performance.now();\n    const duration = end - start;\n    \n    // 文件读取应在20ms内完成\n    expect(duration).toBeLessThan(20);\n  });\n  \n  /**\n   * 测试CPU密集型操作性能\n   */\n  test('CPU密集型操作性能测试', () => {\n    const start = performance.now();\n    \n    // 模拟CPU密集型计算\n    let result = 0;\n    for (let i = 0; i < 100000; i++) {\n      result += Math.sqrt(i);\n    }\n    \n    const end = performance.now();\n    const duration = end - start;\n    \n    // CPU计算应在100ms内完成\n    expect(duration).toBeLessThan(100);\n    expect(result).toBeGreaterThan(0);\n  });\n  \n  /**\n   * 测试内存泄漏检测\n   */\n  test('内存泄漏检测', () => {\n    const initialMemory = process.memoryUsage();\n    \n    // 创建大量对象\n    const objects = [];\n    for (let i = 0; i < 1000; i++) {\n      objects.push({ id: i, data: new Array(100).fill(i) });\n    }\n    \n    const afterCreation = process.memoryUsage();\n    \n    // 清理对象\n    objects.length = 0;\n    \n    // 强制垃圾回收（如果可用）\n    if (global.gc) {\n      global.gc();\n    }\n    \n    const afterCleanup = process.memoryUsage();\n    \n    // 内存增长应该是合理的\n    const memoryGrowth = afterCleanup.heapUsed - initialMemory.heapUsed;\n    const memoryGrowthMB = memoryGrowth / 1024 / 1024;\n    \n    expect(memoryGrowthMB).toBeLessThan(10); // 内存增长应小于10MB\n  });\n  \n  /**\n   * 测试并发处理性能\n   */\n  test('并发处理性能测试', async () => {\n    const start = performance.now();\n    \n    // 模拟并发操作\n    const promises = [];\n    for (let i = 0; i < 10; i++) {\n      promises.push(\n        new Promise(resolve => \n          setTimeout(() => resolve(i), Math.random() * 20)\n        )\n      );\n    }\n    \n    const results = await Promise.all(promises);\n    \n    const end = performance.now();\n    const duration = end - start;\n    \n    // 并发操作应在50ms内完成\n    expect(duration).toBeLessThan(50);\n    expect(results).toHaveLength(10);\n  });\n});"],"names":["performance","require","fs","path","describe","test","start","now","Promise","resolve","setTimeout","end","duration","expect","toBeLessThan","testFile","join","__dirname","existsSync","promises","readFile","result","i","Math","sqrt","toBeGreaterThan","initialMemory","process","memoryUsage","objects","push","id","data","Array","fill","afterCreation","length","global","gc","afterCleanup","memoryGrowth","heapUsed","memoryGrowthMB","random","results","all","toHaveLength"],"mappings":"AAAA;;;CAGC;AAED,MAAM,EAAEA,WAAW,EAAE,GAAGC,QAAQ;AAChC,MAAMC,KAAKD,QAAQ;AACnB,MAAME,OAAOF,QAAQ;AAErBG,SAAS,mCAAmC;IAC1C;;GAEC,GACDC,KAAK,aAAa;QAChB,MAAMC,QAAQN,YAAYO,GAAG;QAE7B,UAAU;QACV,MAAM,IAAIC,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;QAEjD,MAAME,MAAMX,YAAYO,GAAG;QAC3B,MAAMK,WAAWD,MAAML;QAEvB,iBAAiB;QACjBO,OAAOD,UAAUE,YAAY,CAAC;IAChC;IAEA;;GAEC,GACDT,KAAK,YAAY;QACf,MAAMC,QAAQN,YAAYO,GAAG;QAE7B,SAAS;QACT,MAAMQ,WAAWZ,KAAKa,IAAI,CAACC,WAAW;QACtC,IAAIf,GAAGgB,UAAU,CAACH,WAAW;YAC3B,MAAMb,GAAGiB,QAAQ,CAACC,QAAQ,CAACL,UAAU;QACvC;QAEA,MAAMJ,MAAMX,YAAYO,GAAG;QAC3B,MAAMK,WAAWD,MAAML;QAEvB,gBAAgB;QAChBO,OAAOD,UAAUE,YAAY,CAAC;IAChC;IAEA;;GAEC,GACDT,KAAK,gBAAgB;QACnB,MAAMC,QAAQN,YAAYO,GAAG;QAE7B,aAAa;QACb,IAAIc,SAAS;QACb,IAAK,IAAIC,IAAI,GAAGA,IAAI,QAAQA,IAAK;YAC/BD,UAAUE,KAAKC,IAAI,CAACF;QACtB;QAEA,MAAMX,MAAMX,YAAYO,GAAG;QAC3B,MAAMK,WAAWD,MAAML;QAEvB,kBAAkB;QAClBO,OAAOD,UAAUE,YAAY,CAAC;QAC9BD,OAAOQ,QAAQI,eAAe,CAAC;IACjC;IAEA;;GAEC,GACDpB,KAAK,UAAU;QACb,MAAMqB,gBAAgBC,QAAQC,WAAW;QAEzC,SAAS;QACT,MAAMC,UAAU,EAAE;QAClB,IAAK,IAAIP,IAAI,GAAGA,IAAI,MAAMA,IAAK;YAC7BO,QAAQC,IAAI,CAAC;gBAAEC,IAAIT;gBAAGU,MAAM,IAAIC,MAAM,KAAKC,IAAI,CAACZ;YAAG;QACrD;QAEA,MAAMa,gBAAgBR,QAAQC,WAAW;QAEzC,OAAO;QACPC,QAAQO,MAAM,GAAG;QAEjB,eAAe;QACf,IAAIC,OAAOC,EAAE,EAAE;YACbD,OAAOC,EAAE;QACX;QAEA,MAAMC,eAAeZ,QAAQC,WAAW;QAExC,aAAa;QACb,MAAMY,eAAeD,aAAaE,QAAQ,GAAGf,cAAce,QAAQ;QACnE,MAAMC,iBAAiBF,eAAe,OAAO;QAE7C3B,OAAO6B,gBAAgB5B,YAAY,CAAC,KAAK,cAAc;IACzD;IAEA;;GAEC,GACDT,KAAK,YAAY;QACf,MAAMC,QAAQN,YAAYO,GAAG;QAE7B,SAAS;QACT,MAAMY,WAAW,EAAE;QACnB,IAAK,IAAIG,IAAI,GAAGA,IAAI,IAAIA,IAAK;YAC3BH,SAASW,IAAI,CACX,IAAItB,QAAQC,CAAAA,UACVC,WAAW,IAAMD,QAAQa,IAAIC,KAAKoB,MAAM,KAAK;QAGnD;QAEA,MAAMC,UAAU,MAAMpC,QAAQqC,GAAG,CAAC1B;QAElC,MAAMR,MAAMX,YAAYO,GAAG;QAC3B,MAAMK,WAAWD,MAAML;QAEvB,gBAAgB;QAChBO,OAAOD,UAAUE,YAAY,CAAC;QAC9BD,OAAO+B,SAASE,YAAY,CAAC;IAC/B;AACF"}