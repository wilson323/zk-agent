{"version":3,"sources":["E:\\zk-agent\\__tests__\\config\\jest-config-validator.js"],"sourcesContent":["/**\n * @file jest-config-validator.js\n * @description Jest configuration validation and error handling utilities\n * @author Jest Fix Team\n */\n\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * Validate Jest configuration\n * @param {Object} config - Jest configuration object (optional)\n * @returns {Object} Validation result\n */\nfunction validateJestConfig(config = null) {\n  const errors = [];\n  const warnings = [];\n  \n  // Try to get Jest config if not provided\n  if (!config) {\n    try {\n      // Try to get config from jest global or require\n      if (typeof jest !== 'undefined' && jest.config) {\n        config = jest.config;\n      } else {\n        // Try to load config file\n        const fs = safeRequire('fs');\n        const path = safeRequire('path');\n        if (fs && path) {\n          const configPath = path.resolve(process.cwd(), 'jest.config.fixed.js');\n          if (fs.existsSync(configPath)) {\n            config = safeRequire(configPath);\n          }\n        }\n      }\n    } catch (error) {\n      warnings.push(`无法加载 Jest 配置: ${error.message}`);\n    }\n  }\n  \n  // If still no config, create a minimal validation\n  if (!config) {\n    console.log('✅ Jest 配置验证通过 (无法获取配置，跳过详细验证)');\n    return { valid: true, errors: [], warnings: ['无法获取 Jest 配置进行详细验证'] };\n  }\n  \n  // Check required fields\n  if (!config.testEnvironment) {\n    errors.push('testEnvironment is required');\n  }\n  \n  if (!config.setupFilesAfterEnv || config.setupFilesAfterEnv.length === 0) {\n    warnings.push('setupFilesAfterEnv is recommended for proper test setup');\n  }\n  \n  // Validate setup files exist\n  if (config.setupFilesAfterEnv) {\n    config.setupFilesAfterEnv.forEach(setupFile => {\n      const filePath = setupFile.replace('<rootDir>', process.cwd());\n      if (!fs.existsSync(filePath)) {\n        errors.push(`Setup file not found: ${setupFile}`);\n      }\n    });\n  }\n  \n  // Check for conflicting configurations\n  if (config.preset && config.transform) {\n    warnings.push('Both preset and transform are defined - this may cause conflicts');\n  }\n  \n  if (config.preset === 'ts-jest' && config.extensionsToTreatAsEsm) {\n    warnings.push('ts-jest preset with ESM extensions may cause issues');\n  }\n  \n  // Validate module name mappings\n  if (config.moduleNameMapper) {\n    Object.entries(config.moduleNameMapper).forEach(([pattern, replacement]) => {\n      try {\n        new RegExp(pattern);\n      } catch (error) {\n        errors.push(`Invalid regex pattern in moduleNameMapper: ${pattern}`);\n      }\n      \n      if (replacement.includes('<rootDir>')) {\n        const filePath = replacement.replace('<rootDir>', process.cwd());\n        if (!fs.existsSync(filePath) && !replacement.includes('identity-obj-proxy')) {\n          warnings.push(`Mapped file may not exist: ${replacement}`);\n        }\n      }\n    });\n  }\n  \n  // Check test timeout\n  if (config.testTimeout && config.testTimeout < 5000) {\n    warnings.push('testTimeout is very low - tests may fail due to timeout');\n  }\n  \n  if (config.testTimeout && config.testTimeout > 60000) {\n    warnings.push('testTimeout is very high - this may slow down test execution');\n  }\n  \n  // Validate coverage configuration\n  if (config.collectCoverage && !config.collectCoverageFrom) {\n    warnings.push('collectCoverage is enabled but collectCoverageFrom is not specified');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n  };\n}\n\n/**\n * Validate test environment setup\n * @returns {Object} Validation result\n */\nfunction validateTestEnvironment() {\n  const errors = [];\n  const warnings = [];\n  \n  // Check Node.js version\n  const nodeVersion = process.version;\n  const majorVersion = parseInt(nodeVersion.slice(1).split('.')[0]);\n  \n  if (majorVersion < 16) {\n    errors.push(`Node.js version ${nodeVersion} is not supported. Please use Node.js 16 or higher.`);\n  }\n  \n  // Check required globals\n  const requiredGlobals = ['TextEncoder', 'TextDecoder'];\n  requiredGlobals.forEach(globalName => {\n    if (typeof global[globalName] === 'undefined') {\n      warnings.push(`Global ${globalName} is not defined`);\n    }\n  });\n  \n  // Check Jest environment\n  if (process.env.NODE_ENV !== 'test') {\n    warnings.push('NODE_ENV is not set to \"test\"');\n  }\n  \n  // Check memory usage\n  const memoryUsage = process.memoryUsage();\n  const heapUsedMB = memoryUsage.heapUsed / 1024 / 1024;\n  \n  if (heapUsedMB > 500) {\n    warnings.push(`High memory usage detected: ${heapUsedMB.toFixed(2)}MB`);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    info: {\n      nodeVersion,\n      memoryUsage: `${heapUsedMB.toFixed(2)}MB`,\n      platform: process.platform,\n      arch: process.arch,\n    },\n  };\n}\n\n/**\n * Safe require with error handling\n * @param {string} modulePath - Module path to require\n * @param {*} fallback - Fallback value if require fails\n * @returns {*} Required module or fallback\n */\nfunction safeRequire(modulePath, fallback = null) {\n  try {\n    return require(modulePath);\n  } catch (error) {\n    console.warn(`Failed to require ${modulePath}:`, error.message);\n    return fallback;\n  }\n}\n\n/**\n * Create safe global polyfills\n */\nfunction createSafePolyfills() {\n  const polyfills = {};\n  \n  // TextEncoder/TextDecoder polyfills\n  try {\n    const { TextEncoder, TextDecoder } = require('util');\n    polyfills.TextEncoder = TextEncoder;\n    polyfills.TextDecoder = TextDecoder;\n  } catch (error) {\n    console.warn('Failed to load TextEncoder/TextDecoder from util:', error.message);\n    \n    // Fallback implementations\n    polyfills.TextEncoder = class TextEncoder {\n      encode(str) {\n        try {\n          const buffer = Buffer.from(str, 'utf8');\n          return new Uint8Array(buffer);\n        } catch (error) {\n          console.error('TextEncoder fallback failed:', error);\n          return new Uint8Array(0);\n        }\n      }\n    };\n    \n    polyfills.TextDecoder = class TextDecoder {\n      decode(buffer) {\n        try {\n          if (buffer instanceof Uint8Array) {\n            return Buffer.from(buffer).toString('utf8');\n          } else if (Buffer.isBuffer(buffer)) {\n            return buffer.toString('utf8');\n          } else {\n            return Buffer.from(buffer).toString('utf8');\n          }\n        } catch (error) {\n          console.error('TextDecoder fallback failed:', error);\n          return '';\n        }\n      }\n    };\n  }\n  \n  // Fetch polyfill\n  if (typeof global.fetch === 'undefined') {\n    polyfills.fetch = jest.fn(() => \n      Promise.resolve({\n        ok: true,\n        status: 200,\n        json: () => Promise.resolve({}),\n        text: () => Promise.resolve(''),\n      })\n    );\n  }\n  \n  return polyfills;\n}\n\n/**\n * Apply polyfills safely to global scope\n * @param {Object} polyfills - Polyfills to apply\n */\nfunction applySafePolyfills(polyfills) {\n  try {\n    Object.entries(polyfills).forEach(([name, implementation]) => {\n      try {\n        if (typeof global[name] === 'undefined') {\n          global[name] = implementation;\n          console.log(`✓ Applied polyfill for ${name}`);\n        } else {\n          console.log(`✓ ${name} already exists, skipping polyfill`);\n        }\n      } catch (error) {\n        console.error(`✗ Failed to apply polyfill for ${name}:`, error.message);\n      }\n    });\n  } catch (error) {\n    console.error('应用 polyfills 时发生错误:', error.message);\n  }\n}\n\nmodule.exports = {\n  validateJestConfig,\n  validateTestEnvironment,\n  safeRequire,\n  createSafePolyfills,\n  applySafePolyfills,\n};"],"names":["fs","require","path","validateJestConfig","config","errors","warnings","jest","safeRequire","configPath","resolve","process","cwd","existsSync","error","push","message","console","log","valid","testEnvironment","setupFilesAfterEnv","length","forEach","setupFile","filePath","replace","preset","transform","extensionsToTreatAsEsm","moduleNameMapper","Object","entries","pattern","replacement","RegExp","includes","testTimeout","collectCoverage","collectCoverageFrom","isValid","validateTestEnvironment","nodeVersion","version","majorVersion","parseInt","slice","split","requiredGlobals","globalName","global","env","NODE_ENV","memoryUsage","heapUsedMB","heapUsed","toFixed","info","platform","arch","modulePath","fallback","warn","createSafePolyfills","polyfills","TextEncoder","TextDecoder","encode","str","buffer","Buffer","from","Uint8Array","decode","toString","isBuffer","fetch","fn","Promise","ok","status","json","text","applySafePolyfills","name","implementation","module","exports"],"mappings":"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"}