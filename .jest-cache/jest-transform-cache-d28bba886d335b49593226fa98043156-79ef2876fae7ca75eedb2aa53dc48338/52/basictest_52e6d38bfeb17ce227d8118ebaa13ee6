d9ec1679b8b39afcec05a88dcbadc69c
/**
 * @file Basic Test
 * @description 基础测试文件，验证测试环境配置
 */ // 基础测试 - 验证测试环境
"use strict";
describe('Test Environment', ()=>{
    test('should be able to run tests', ()=>{
        expect(true).toBe(true);
    });
    test('should have access to basic JavaScript features', ()=>{
        expect(Array.isArray([
            1,
            2,
            3
        ])).toBe(true);
        expect(typeof 'hello').toBe('string');
        expect(Math.max(1, 2, 3)).toBe(3);
    });
    test('should have access to Node.js globals', ()=>{
        expect(process).toBeDefined();
        expect(process.env.NODE_ENV).toBe('test');
    });
});
// 基础功能测试
describe('Basic Functionality', ()=>{
    test('should handle arrays correctly', ()=>{
        const arr = [
            1,
            2,
            3
        ];
        expect(arr.length).toBe(3);
        expect(arr.includes(2)).toBe(true);
        expect(arr.map((x)=>x * 2)).toEqual([
            2,
            4,
            6
        ]);
    });
    test('should handle objects correctly', ()=>{
        const obj = {
            name: 'test',
            value: 42
        };
        expect(obj.name).toBe('test');
        expect(obj.value).toBe(42);
        expect(Object.keys(obj)).toEqual([
            'name',
            'value'
        ]);
    });
    test('should handle promises correctly', async ()=>{
        const promise = Promise.resolve('success');
        const result = await promise;
        expect(result).toBe('success');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcX190ZXN0c19fXFxiYXNpYy50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgQmFzaWMgVGVzdFxuICogQGRlc2NyaXB0aW9uIOWfuuehgOa1i+ivleaWh+S7tu+8jOmqjOivgea1i+ivleeOr+Wig+mFjee9rlxuICovXG5cbi8vIOWfuuehgOa1i+ivlSAtIOmqjOivgea1i+ivleeOr+Wig1xuZGVzY3JpYmUoJ1Rlc3QgRW52aXJvbm1lbnQnLCAoKSA9PiB7XG4gIHRlc3QoJ3Nob3VsZCBiZSBhYmxlIHRvIHJ1biB0ZXN0cycsICgpID0+IHtcbiAgICBleHBlY3QodHJ1ZSkudG9CZSh0cnVlKTtcbiAgfSk7XG4gIFxuICB0ZXN0KCdzaG91bGQgaGF2ZSBhY2Nlc3MgdG8gYmFzaWMgSmF2YVNjcmlwdCBmZWF0dXJlcycsICgpID0+IHtcbiAgICBleHBlY3QoQXJyYXkuaXNBcnJheShbMSwgMiwgM10pKS50b0JlKHRydWUpO1xuICAgIGV4cGVjdCh0eXBlb2YgJ2hlbGxvJykudG9CZSgnc3RyaW5nJyk7XG4gICAgZXhwZWN0KE1hdGgubWF4KDEsIDIsIDMpKS50b0JlKDMpO1xuICB9KTtcbiAgXG4gIHRlc3QoJ3Nob3VsZCBoYXZlIGFjY2VzcyB0byBOb2RlLmpzIGdsb2JhbHMnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHByb2Nlc3MpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHByb2Nlc3MuZW52Lk5PREVfRU5WKS50b0JlKCd0ZXN0Jyk7XG4gIH0pO1xufSk7XG5cbi8vIOWfuuehgOWKn+iDvea1i+ivlVxuZGVzY3JpYmUoJ0Jhc2ljIEZ1bmN0aW9uYWxpdHknLCAoKSA9PiB7XG4gIHRlc3QoJ3Nob3VsZCBoYW5kbGUgYXJyYXlzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCBhcnIgPSBbMSwgMiwgM107XG4gICAgZXhwZWN0KGFyci5sZW5ndGgpLnRvQmUoMyk7XG4gICAgZXhwZWN0KGFyci5pbmNsdWRlcygyKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3QoYXJyLm1hcCh4ID0+IHggKiAyKSkudG9FcXVhbChbMiwgNCwgNl0pO1xuICB9KTtcbiAgXG4gIHRlc3QoJ3Nob3VsZCBoYW5kbGUgb2JqZWN0cyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3Qgb2JqID0geyBuYW1lOiAndGVzdCcsIHZhbHVlOiA0MiB9O1xuICAgIGV4cGVjdChvYmoubmFtZSkudG9CZSgndGVzdCcpO1xuICAgIGV4cGVjdChvYmoudmFsdWUpLnRvQmUoNDIpO1xuICAgIGV4cGVjdChPYmplY3Qua2V5cyhvYmopKS50b0VxdWFsKFsnbmFtZScsICd2YWx1ZSddKTtcbiAgfSk7XG4gIFxuICB0ZXN0KCdzaG91bGQgaGFuZGxlIHByb21pc2VzIGNvcnJlY3RseScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCdzdWNjZXNzJyk7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcHJvbWlzZTtcbiAgICBleHBlY3QocmVzdWx0KS50b0JlKCdzdWNjZXNzJyk7XG4gIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJ0ZXN0IiwiZXhwZWN0IiwidG9CZSIsIkFycmF5IiwiaXNBcnJheSIsIk1hdGgiLCJtYXgiLCJwcm9jZXNzIiwidG9CZURlZmluZWQiLCJlbnYiLCJOT0RFX0VOViIsImFyciIsImxlbmd0aCIsImluY2x1ZGVzIiwibWFwIiwieCIsInRvRXF1YWwiLCJvYmoiLCJuYW1lIiwidmFsdWUiLCJPYmplY3QiLCJrZXlzIiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVzdWx0Il0sIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0MsR0FFRCxnQkFBZ0I7O0FBQ2hCQSxTQUFTLG9CQUFvQjtJQUMzQkMsS0FBSywrQkFBK0I7UUFDbENDLE9BQU8sTUFBTUMsSUFBSSxDQUFDO0lBQ3BCO0lBRUFGLEtBQUssbURBQW1EO1FBQ3REQyxPQUFPRSxNQUFNQyxPQUFPLENBQUM7WUFBQztZQUFHO1lBQUc7U0FBRSxHQUFHRixJQUFJLENBQUM7UUFDdENELE9BQU8sT0FBTyxTQUFTQyxJQUFJLENBQUM7UUFDNUJELE9BQU9JLEtBQUtDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSUosSUFBSSxDQUFDO0lBQ2pDO0lBRUFGLEtBQUsseUNBQXlDO1FBQzVDQyxPQUFPTSxTQUFTQyxXQUFXO1FBQzNCUCxPQUFPTSxRQUFRRSxHQUFHLENBQUNDLFFBQVEsRUFBRVIsSUFBSSxDQUFDO0lBQ3BDO0FBQ0Y7QUFFQSxTQUFTO0FBQ1RILFNBQVMsdUJBQXVCO0lBQzlCQyxLQUFLLGtDQUFrQztRQUNyQyxNQUFNVyxNQUFNO1lBQUM7WUFBRztZQUFHO1NBQUU7UUFDckJWLE9BQU9VLElBQUlDLE1BQU0sRUFBRVYsSUFBSSxDQUFDO1FBQ3hCRCxPQUFPVSxJQUFJRSxRQUFRLENBQUMsSUFBSVgsSUFBSSxDQUFDO1FBQzdCRCxPQUFPVSxJQUFJRyxHQUFHLENBQUNDLENBQUFBLElBQUtBLElBQUksSUFBSUMsT0FBTyxDQUFDO1lBQUM7WUFBRztZQUFHO1NBQUU7SUFDL0M7SUFFQWhCLEtBQUssbUNBQW1DO1FBQ3RDLE1BQU1pQixNQUFNO1lBQUVDLE1BQU07WUFBUUMsT0FBTztRQUFHO1FBQ3RDbEIsT0FBT2dCLElBQUlDLElBQUksRUFBRWhCLElBQUksQ0FBQztRQUN0QkQsT0FBT2dCLElBQUlFLEtBQUssRUFBRWpCLElBQUksQ0FBQztRQUN2QkQsT0FBT21CLE9BQU9DLElBQUksQ0FBQ0osTUFBTUQsT0FBTyxDQUFDO1lBQUM7WUFBUTtTQUFRO0lBQ3BEO0lBRUFoQixLQUFLLG9DQUFvQztRQUN2QyxNQUFNc0IsVUFBVUMsUUFBUUMsT0FBTyxDQUFDO1FBQ2hDLE1BQU1DLFNBQVMsTUFBTUg7UUFDckJyQixPQUFPd0IsUUFBUXZCLElBQUksQ0FBQztJQUN0QjtBQUNGIn0=