{"version":3,"names":["cov_2gbkynxlrm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","unified_error_codes_1","agent_compliance_audit_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","agentId","auditConfig","json","audit","AgentComplianceAudit","ApiResponseWrapper","error","UnifiedErrorCode","VALIDATION_ERROR","status","result","performAudit","checkSecurity","checkPerformance","checkCompliance","checkDataPrivacy","generateReport","console","log","score","overallScore","timestamp","Date","toISOString","success","INTERNAL_SERVER_ERROR","details","Error","message"],"sources":["E:\\zk-agent\\app\\api\\ag-ui\\compliance\\audit\\route.ts"],"sourcesContent":["/**\n * @file ag-ui\\compliance\\audit\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { UnifiedErrorCode } from '@/types/core/unified-error-codes';\nimport { AgentComplianceAudit } from '@/lib/ag-ui/compliance/agent-compliance-audit';\n\n/**\n * POST /api/ag-ui/compliance/audit\n * 执行代理合规审计\n */\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { agentId, auditConfig } = await req.json();\n      \n      // 实现合规审计逻辑\n      const audit = new AgentComplianceAudit();\n      \n      // 验证输入参数\n      if (!agentId) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', { status: 400 });\n      }\n      \n      // 执行合规审计\n      const result = await audit.performAudit(agentId, {\n        checkSecurity: auditConfig?.checkSecurity ?? true,\n        checkPerformance: auditConfig?.checkPerformance ?? true,\n        checkCompliance: auditConfig?.checkCompliance ?? true,\n        checkDataPrivacy: auditConfig?.checkDataPrivacy ?? true,\n        generateReport: auditConfig?.generateReport ?? true,\n        ...auditConfig\n      });\n      \n      // 记录审计日志\n      console.log(`Compliance audit completed for agent ${agentId}:`, {\n        score: result.overallScore,\n        // issues: result.issues?.length || 0,\n        timestamp: new Date().toISOString()\n      });\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Error performing compliance audit:', error);\n      return ApiResponseWrapper.error(\n        UnifiedErrorCode.INTERNAL_SERVER_ERROR,\n        'Failed to perform compliance audit',\n        { \n          status: 500,\n          details: error instanceof Error ? error.message : 'Unknown error'\n        }\n      );\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}