4d2ac539436fd0a340d98fe9607751ea
"use strict";

/**
 * @file health\local\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2ekdm6igac() {
  var path = "E:\\zk-agent\\app\\api\\health\\local\\route.ts";
  var hash = "8d15fec34497f78eed18a1ac495b028d028e545d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\health\\local\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "5": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 128,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "10": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "11": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 30,
          column: 14
        }
      },
      "13": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "15": {
        start: {
          line: 41,
          column: 31
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "16": {
        start: {
          line: 42,
          column: 35
        },
        end: {
          line: 42,
          column: 98
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 14
        }
      },
      "18": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 54,
          column: 14
        }
      },
      "19": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "20": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 36
        }
      },
      "21": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 40
        }
      },
      "22": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "23": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "24": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 61
        }
      },
      "25": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "26": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 55
        }
      },
      "27": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 36
        }
      },
      "28": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "29": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 77,
          column: 14
        }
      },
      "30": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "31": {
        start: {
          line: 81,
          column: 36
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "32": {
        start: {
          line: 88,
          column: 32
        },
        end: {
          line: 88,
          column: 90
        }
      },
      "33": {
        start: {
          line: 88,
          column: 68
        },
        end: {
          line: 88,
          column: 89
        }
      },
      "34": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "35": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 93,
          column: 18
        }
      },
      "36": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 99,
          column: 18
        }
      },
      "37": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 106,
          column: 14
        }
      },
      "38": {
        start: {
          line: 109,
          column: 27
        },
        end: {
          line: 109,
          column: 93
        }
      },
      "39": {
        start: {
          line: 109,
          column: 66
        },
        end: {
          line: 109,
          column: 92
        }
      },
      "40": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 93
        }
      },
      "41": {
        start: {
          line: 110,
          column: 66
        },
        end: {
          line: 110,
          column: 92
        }
      },
      "42": {
        start: {
          line: 111,
          column: 30
        },
        end: {
          line: 111,
          column: 92
        }
      },
      "43": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "44": {
        start: {
          line: 118,
          column: 65
        },
        end: {
          line: 118,
          column: 91
        }
      },
      "45": {
        start: {
          line: 119,
          column: 65
        },
        end: {
          line: 119,
          column: 91
        }
      },
      "46": {
        start: {
          line: 120,
          column: 67
        },
        end: {
          line: 120,
          column: 95
        }
      },
      "47": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 100
          },
          end: {
            line: 14,
            column: 101
          }
        },
        loc: {
          start: {
            line: 14,
            column: 175
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 56
          }
        },
        loc: {
          start: {
            line: 88,
            column: 68
          },
          end: {
            line: 88,
            column: 89
          }
        },
        line: 88
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 109,
            column: 55
          },
          end: {
            line: 109,
            column: 56
          }
        },
        loc: {
          start: {
            line: 109,
            column: 66
          },
          end: {
            line: 109,
            column: 92
          }
        },
        line: 109
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 110,
            column: 55
          },
          end: {
            line: 110,
            column: 56
          }
        },
        loc: {
          start: {
            line: 110,
            column: 66
          },
          end: {
            line: 110,
            column: 92
          }
        },
        line: 110
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 118,
            column: 54
          },
          end: {
            line: 118,
            column: 55
          }
        },
        loc: {
          start: {
            line: 118,
            column: 65
          },
          end: {
            line: 118,
            column: 91
          }
        },
        line: 118
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 119,
            column: 55
          }
        },
        loc: {
          start: {
            line: 119,
            column: 65
          },
          end: {
            line: 119,
            column: 91
          }
        },
        line: 119
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 56
          },
          end: {
            line: 120,
            column: 57
          }
        },
        loc: {
          start: {
            line: 120,
            column: 67
          },
          end: {
            line: 120,
            column: 95
          }
        },
        line: 120
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 52
          }
        }, {
          start: {
            line: 27,
            column: 55
          },
          end: {
            line: 27,
            column: 66
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 41
          },
          end: {
            line: 44,
            column: 50
          }
        }, {
          start: {
            line: 44,
            column: 53
          },
          end: {
            line: 44,
            column: 64
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 42
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 56
          },
          end: {
            line: 45,
            column: 67
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 100,
            column: 13
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 111,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 111,
            column: 52
          }
        }, {
          start: {
            line: 111,
            column: 55
          },
          end: {
            line: 111,
            column: 92
          }
        }],
        line: 111
      },
      "6": {
        loc: {
          start: {
            line: 111,
            column: 55
          },
          end: {
            line: 111,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 69
          },
          end: {
            line: 111,
            column: 78
          }
        }, {
          start: {
            line: 111,
            column: 81
          },
          end: {
            line: 111,
            column: 92
          }
        }],
        line: 111
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\health\\local\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\health\\local\\route.ts"],
      sourcesContent: ["/**\n * @file health\\local\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { checkDatabaseConnection } from \"@/lib/database/connection\"\nimport { redisCacheManager } from \"@/lib/cache/redis-cache-manager\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const checks = {\n        database: { status: \"unknown\", message: \"\", latency: 0 },\n        redis: { status: \"unknown\", message: \"\", latency: 0 },\n        filesystem: { status: \"unknown\", message: \"\" },\n        environment: { status: \"unknown\", message: \"\" },\n      }\n    \n      // \u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5\n      try {\n        const dbStart = Date.now()\n        const dbResult = await checkDatabaseConnection()\n        checks.database = {\n          status: dbResult.success ? \"healthy\" : \"unhealthy\",\n          message: dbResult.message,\n          latency: Date.now() - dbStart,\n        }\n      } catch (error) {\n        checks.database = {\n          status: \"unhealthy\",\n          message: \"\u6570\u636E\u5E93\u8FDE\u63A5\u68C0\u67E5\u5931\u8D25\",\n          latency: 0,\n        }\n      }\n    \n      // \u68C0\u67E5Redis\u8FDE\u63A5\n      try {\n        const redisStart = Date.now()\n        const redisConnected = await redisCacheManager.checkConnection()\n        checks.redis = {\n          status: redisConnected ? \"healthy\" : \"unhealthy\",\n          message: redisConnected ? \"Redis\u8FDE\u63A5\u6B63\u5E38\" : \"Redis\u8FDE\u63A5\u5931\u8D25\",\n          latency: Date.now() - redisStart,\n        }\n      } catch (error) {\n        checks.redis = {\n          status: \"unhealthy\",\n          message: \"Redis\u8FDE\u63A5\u68C0\u67E5\u5931\u8D25\",\n          latency: 0,\n        }\n      }\n    \n      // \u68C0\u67E5\u6587\u4EF6\u7CFB\u7EDF\n      try {\n        const fs = require(\"fs\")\n        const path = require(\"path\")\n    \n        const uploadDir = path.join(process.cwd(), \"uploads\")\n        if (!fs.existsSync(uploadDir)) {\n          fs.mkdirSync(uploadDir, { recursive: true })\n        }\n    \n        // \u6D4B\u8BD5\u5199\u5165\u6743\u9650\n        const testFile = path.join(uploadDir, \"health-check.txt\")\n        fs.writeFileSync(testFile, \"health check\")\n        fs.unlinkSync(testFile)\n    \n        checks.filesystem = {\n          status: \"healthy\",\n          message: \"\u6587\u4EF6\u7CFB\u7EDF\u8BBF\u95EE\u6B63\u5E38\",\n        }\n      } catch (error) {\n        checks.filesystem = {\n          status: \"unhealthy\",\n          message: \"\u6587\u4EF6\u7CFB\u7EDF\u8BBF\u95EE\u5931\u8D25\",\n        }\n      }\n    \n      // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n      try {\n        const requiredEnvVars = [\n          \"DATABASE_URL\",\n          \"JWT_ACCESS_SECRET\",\n          \"JWT_REFRESH_SECRET\",\n          \"FASTGPT_API_URL\",\n          \"FASTGPT_API_KEY\",\n        ]\n    \n        const missingVars = requiredEnvVars.filter((varName) => !process.env[varName])\n    \n        if (missingVars.length === 0) {\n          checks.environment = {\n            status: \"healthy\",\n            message: \"\u73AF\u5883\u53D8\u91CF\u914D\u7F6E\u5B8C\u6574\",\n          }\n        } else {\n          checks.environment = {\n            status: \"warning\",\n            message: `\u7F3A\u5C11\u73AF\u5883\u53D8\u91CF: ${missingVars.join(\", \")}`,\n          }\n        }\n      } catch (error) {\n        checks.environment = {\n          status: \"unhealthy\",\n          message: \"\u73AF\u5883\u53D8\u91CF\u68C0\u67E5\u5931\u8D25\",\n        }\n      }\n    \n      // \u8BA1\u7B97\u603B\u4F53\u5065\u5EB7\u72B6\u6001\n      const allHealthy = Object.values(checks).every((check) => check.status === \"healthy\")\n      const hasWarnings = Object.values(checks).some((check) => check.status === \"warning\")\n    \n      const overallStatus = allHealthy ? \"healthy\" : hasWarnings ? \"warning\" : \"unhealthy\"\n    \n      return ApiResponseWrapper.success({\n        status: overallStatus,\n        timestamp: new Date().toISOString(),\n        environment: \"local\",\n        checks,\n        summary: {\n          healthy: Object.values(checks).filter((check) => check.status === \"healthy\").length,\n          warning: Object.values(checks).filter((check) => check.status === \"warning\").length,\n          unhealthy: Object.values(checks).filter((check) => check.status === \"unhealthy\").length,\n          total: Object.keys(checks).length,\n        },\n      })\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500)\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8d15fec34497f78eed18a1ac495b028d028e545d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ekdm6igac = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ekdm6igac();
cov_2ekdm6igac().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ekdm6igac().s[1]++;
exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[3]++, require("@/lib/utils/api-helper"));
const connection_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[4]++, require("@/lib/database/connection"));
const redis_cache_manager_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[5]++, require("@/lib/cache/redis-cache-manager"));
/* istanbul ignore next */
cov_2ekdm6igac().s[6]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2ekdm6igac().f[0]++;
  cov_2ekdm6igac().s[7]++;
  try {
    const checks =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[8]++, {
      database: {
        status: "unknown",
        message: "",
        latency: 0
      },
      redis: {
        status: "unknown",
        message: "",
        latency: 0
      },
      filesystem: {
        status: "unknown",
        message: ""
      },
      environment: {
        status: "unknown",
        message: ""
      }
    });
    // 检查数据库连接
    /* istanbul ignore next */
    cov_2ekdm6igac().s[9]++;
    try {
      const dbStart =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[10]++, Date.now());
      const dbResult =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[11]++, await (0, connection_1.checkDatabaseConnection)());
      /* istanbul ignore next */
      cov_2ekdm6igac().s[12]++;
      checks.database = {
        status: dbResult.success ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[0][0]++, "healthy") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[0][1]++, "unhealthy"),
        message: dbResult.message,
        latency: Date.now() - dbStart
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[13]++;
      checks.database = {
        status: "unhealthy",
        message: "数据库连接检查失败",
        latency: 0
      };
    }
    // 检查Redis连接
    /* istanbul ignore next */
    cov_2ekdm6igac().s[14]++;
    try {
      const redisStart =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[15]++, Date.now());
      const redisConnected =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[16]++, await redis_cache_manager_1.redisCacheManager.checkConnection());
      /* istanbul ignore next */
      cov_2ekdm6igac().s[17]++;
      checks.redis = {
        status: redisConnected ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[1][0]++, "healthy") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[1][1]++, "unhealthy"),
        message: redisConnected ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[2][0]++, "Redis连接正常") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[2][1]++, "Redis连接失败"),
        latency: Date.now() - redisStart
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[18]++;
      checks.redis = {
        status: "unhealthy",
        message: "Redis连接检查失败",
        latency: 0
      };
    }
    // 检查文件系统
    /* istanbul ignore next */
    cov_2ekdm6igac().s[19]++;
    try {
      const fs =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[20]++, require("fs"));
      const path =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[21]++, require("path"));
      const uploadDir =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[22]++, path.join(process.cwd(), "uploads"));
      /* istanbul ignore next */
      cov_2ekdm6igac().s[23]++;
      if (!fs.existsSync(uploadDir)) {
        /* istanbul ignore next */
        cov_2ekdm6igac().b[3][0]++;
        cov_2ekdm6igac().s[24]++;
        fs.mkdirSync(uploadDir, {
          recursive: true
        });
      } else
      /* istanbul ignore next */
      {
        cov_2ekdm6igac().b[3][1]++;
      }
      // 测试写入权限
      const testFile =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[25]++, path.join(uploadDir, "health-check.txt"));
      /* istanbul ignore next */
      cov_2ekdm6igac().s[26]++;
      fs.writeFileSync(testFile, "health check");
      /* istanbul ignore next */
      cov_2ekdm6igac().s[27]++;
      fs.unlinkSync(testFile);
      /* istanbul ignore next */
      cov_2ekdm6igac().s[28]++;
      checks.filesystem = {
        status: "healthy",
        message: "文件系统访问正常"
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[29]++;
      checks.filesystem = {
        status: "unhealthy",
        message: "文件系统访问失败"
      };
    }
    // 检查环境变量
    /* istanbul ignore next */
    cov_2ekdm6igac().s[30]++;
    try {
      const requiredEnvVars =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[31]++, ["DATABASE_URL", "JWT_ACCESS_SECRET", "JWT_REFRESH_SECRET", "FASTGPT_API_URL", "FASTGPT_API_KEY"]);
      const missingVars =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[32]++, requiredEnvVars.filter(varName => {
        /* istanbul ignore next */
        cov_2ekdm6igac().f[1]++;
        cov_2ekdm6igac().s[33]++;
        return !process.env[varName];
      }));
      /* istanbul ignore next */
      cov_2ekdm6igac().s[34]++;
      if (missingVars.length === 0) {
        /* istanbul ignore next */
        cov_2ekdm6igac().b[4][0]++;
        cov_2ekdm6igac().s[35]++;
        checks.environment = {
          status: "healthy",
          message: "环境变量配置完整"
        };
      } else {
        /* istanbul ignore next */
        cov_2ekdm6igac().b[4][1]++;
        cov_2ekdm6igac().s[36]++;
        checks.environment = {
          status: "warning",
          message: `缺少环境变量: ${missingVars.join(", ")}`
        };
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[37]++;
      checks.environment = {
        status: "unhealthy",
        message: "环境变量检查失败"
      };
    }
    // 计算总体健康状态
    const allHealthy =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[38]++, Object.values(checks).every(check => {
      /* istanbul ignore next */
      cov_2ekdm6igac().f[2]++;
      cov_2ekdm6igac().s[39]++;
      return check.status === "healthy";
    }));
    const hasWarnings =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[40]++, Object.values(checks).some(check => {
      /* istanbul ignore next */
      cov_2ekdm6igac().f[3]++;
      cov_2ekdm6igac().s[41]++;
      return check.status === "warning";
    }));
    const overallStatus =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[42]++, allHealthy ?
    /* istanbul ignore next */
    (cov_2ekdm6igac().b[5][0]++, "healthy") :
    /* istanbul ignore next */
    (cov_2ekdm6igac().b[5][1]++, hasWarnings ?
    /* istanbul ignore next */
    (cov_2ekdm6igac().b[6][0]++, "warning") :
    /* istanbul ignore next */
    (cov_2ekdm6igac().b[6][1]++, "unhealthy")));
    /* istanbul ignore next */
    cov_2ekdm6igac().s[43]++;
    return api_helper_1.ApiResponseWrapper.success({
      status: overallStatus,
      timestamp: new Date().toISOString(),
      environment: "local",
      checks,
      summary: {
        healthy: Object.values(checks).filter(check => {
          /* istanbul ignore next */
          cov_2ekdm6igac().f[4]++;
          cov_2ekdm6igac().s[44]++;
          return check.status === "healthy";
        }).length,
        warning: Object.values(checks).filter(check => {
          /* istanbul ignore next */
          cov_2ekdm6igac().f[5]++;
          cov_2ekdm6igac().s[45]++;
          return check.status === "warning";
        }).length,
        unhealthy: Object.values(checks).filter(check => {
          /* istanbul ignore next */
          cov_2ekdm6igac().f[6]++;
          cov_2ekdm6igac().s[46]++;
          return check.status === "unhealthy";
        }).length,
        total: Object.keys(checks).length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ekdm6igac().s[47]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,