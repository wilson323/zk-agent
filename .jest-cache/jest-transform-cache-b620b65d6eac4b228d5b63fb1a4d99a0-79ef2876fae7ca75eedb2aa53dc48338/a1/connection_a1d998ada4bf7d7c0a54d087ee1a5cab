117f36c5488b0655d79151c8e255f4c1
"use strict";

// @ts-nocheck
/**
 * @file Database Connection
 * @description 数据库连接管理和健康检查
 * @author ZK-Agent Team A
 * @date 2024-12-19
 */
/* istanbul ignore next */
function cov_18prcktstb() {
  var path = "E:\\zk-agent\\lib\\database\\connection.ts";
  var hash = "f131aeacf0ff291582721241b203d6114a710de9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\connection.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 108
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "4": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "5": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "7": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "8": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 72
        }
      },
      "9": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "11": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "12": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "13": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "14": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 23,
          column: 74
        }
      },
      "15": {
        start: {
          line: 25,
          column: 13
        },
        end: {
          line: 25,
          column: 17
        }
      },
      "16": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 71
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "21": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 18
        }
      },
      "22": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "25": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 55,
          column: 69
        }
      },
      "26": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 60,
          column: 14
        }
      },
      "27": {
        start: {
          line: 58,
          column: 38
        },
        end: {
          line: 58,
          column: 79
        }
      },
      "28": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "29": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 72,
          column: 14
        }
      },
      "30": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 40
        }
      },
      "31": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 32
        }
      },
      "32": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "33": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "34": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 55
        }
      },
      "35": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "37": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "38": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "39": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 65
        }
      },
      "40": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "41": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 75
        }
      },
      "42": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "43": {
        start: {
          line: 117,
          column: 22
        },
        end: {
          line: 117,
          column: 32
        }
      },
      "44": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "45": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "46": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "47": {
        start: {
          line: 124,
          column: 32
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "48": {
        start: {
          line: 126,
          column: 35
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "49": {
        start: {
          line: 128,
          column: 21
        },
        end: {
          line: 128,
          column: 30
        }
      },
      "50": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "51": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 33
        }
      },
      "52": {
        start: {
          line: 132,
          column: 13
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "53": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 32
        }
      },
      "54": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "55": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 62
        }
      },
      "56": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "57": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "58": {
        start: {
          line: 186,
          column: 33
        },
        end: {
          line: 186,
          column: 108
        }
      },
      "59": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "60": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 193,
          column: 14
        }
      },
      "61": {
        start: {
          line: 196,
          column: 35
        },
        end: {
          line: 196,
          column: 87
        }
      },
      "62": {
        start: {
          line: 197,
          column: 32
        },
        end: {
          line: 197,
          column: 93
        }
      },
      "63": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "64": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 69
        }
      },
      "65": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 212,
          column: 10
        }
      },
      "66": {
        start: {
          line: 216,
          column: 22
        },
        end: {
          line: 216,
          column: 32
        }
      },
      "67": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "68": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 31
        }
      },
      "69": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "70": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 54
        }
      },
      "71": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 31
        }
      },
      "72": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 63
        }
      },
      "73": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 32
        }
      },
      "74": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "75": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 32
        }
      },
      "76": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 64
        }
      },
      "77": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 238,
          column: 46
        }
      },
      "78": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 243,
          column: 10
        }
      },
      "79": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "80": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "81": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "82": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 63
        }
      },
      "83": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 271,
          column: 10
        }
      },
      "84": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "85": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "86": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 64
        }
      },
      "87": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 76
        }
      },
      "88": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 19
        }
      },
      "89": {
        start: {
          line: 287,
          column: 23
        },
        end: {
          line: 287,
          column: 40
        }
      },
      "90": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 35
        }
      },
      "91": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 63
        }
      },
      "92": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 67
        }
      },
      "93": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 20
        }
      },
      "94": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 317,
          column: 5
        }
      },
      "95": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "96": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 63
        }
      },
      "97": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 51
        }
      },
      "98": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 40
        }
      },
      "99": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 64
        }
      },
      "100": {
        start: {
          line: 310,
          column: 37
        },
        end: {
          line: 310,
          column: 62
        }
      },
      "101": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 47
        }
      },
      "102": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 62
        }
      },
      "103": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 20
        }
      },
      "104": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 374,
          column: 5
        }
      },
      "105": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "106": {
        start: {
          line: 327,
          column: 26
        },
        end: {
          line: 327,
          column: 69
        }
      },
      "107": {
        start: {
          line: 328,
          column: 27
        },
        end: {
          line: 328,
          column: 58
        }
      },
      "108": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 352,
          column: 14
        }
      },
      "109": {
        start: {
          line: 355,
          column: 23
        },
        end: {
          line: 355,
          column: 54
        }
      },
      "110": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 369,
          column: 10
        }
      },
      "111": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 68
        }
      },
      "112": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 20
        }
      },
      "113": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 381,
          column: 32
        }
      },
      "114": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 468,
          column: 5
        }
      },
      "115": {
        start: {
          line: 384,
          column: 33
        },
        end: {
          line: 384,
          column: 108
        }
      },
      "116": {
        start: {
          line: 385,
          column: 29
        },
        end: {
          line: 389,
          column: 9
        }
      },
      "117": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "118": {
        start: {
          line: 391,
          column: 28
        },
        end: {
          line: 391,
          column: 69
        }
      },
      "119": {
        start: {
          line: 392,
          column: 27
        },
        end: {
          line: 392,
          column: 67
        }
      },
      "120": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 397,
          column: 14
        }
      },
      "121": {
        start: {
          line: 396,
          column: 52
        },
        end: {
          line: 396,
          column: 107
        }
      },
      "122": {
        start: {
          line: 400,
          column: 35
        },
        end: {
          line: 400,
          column: 66
        }
      },
      "123": {
        start: {
          line: 401,
          column: 33
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "124": {
        start: {
          line: 407,
          column: 28
        },
        end: {
          line: 407,
          column: 62
        }
      },
      "125": {
        start: {
          line: 408,
          column: 26
        },
        end: {
          line: 408,
          column: 29
        }
      },
      "126": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "127": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 29
        }
      },
      "128": {
        start: {
          line: 412,
          column: 13
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "129": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 29
        }
      },
      "130": {
        start: {
          line: 415,
          column: 13
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "131": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 80
        }
      },
      "132": {
        start: {
          line: 418,
          column: 29
        },
        end: {
          line: 420,
          column: 51
        }
      },
      "133": {
        start: {
          line: 421,
          column: 29
        },
        end: {
          line: 421,
          column: 31
        }
      },
      "134": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "135": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 41
        }
      },
      "136": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "137": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 43
        }
      },
      "138": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "139": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 43
        }
      },
      "140": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 433,
          column: 9
        }
      },
      "141": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 432,
          column: 72
        }
      },
      "142": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "143": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 43
        }
      },
      "144": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 446,
          column: 10
        }
      },
      "145": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 77
        }
      },
      "146": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 467,
          column: 10
        }
      },
      "147": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 488,
          column: 5
        }
      },
      "148": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "149": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 91
        }
      },
      "150": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 25
        }
      },
      "151": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 65
        }
      },
      "152": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 68
        }
      },
      "153": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 20
        }
      },
      "154": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 486,
          column: 73
        }
      },
      "155": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 21
        }
      },
      "156": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 504,
          column: 5
        }
      },
      "157": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "158": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 70
        }
      },
      "159": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 97
        }
      },
      "160": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 75
        }
      },
      "161": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 20
        }
      },
      "162": {
        start: {
          line: 507,
          column: 0
        },
        end: {
          line: 520,
          column: 3
        }
      },
      "163": {
        start: {
          line: 508,
          column: 4
        },
        end: {
          line: 519,
          column: 5
        }
      },
      "164": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "165": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 511,
          column: 70
        }
      },
      "166": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 44
        }
      },
      "167": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 63
        }
      },
      "168": {
        start: {
          line: 521,
          column: 0
        },
        end: {
          line: 537,
          column: 3
        }
      },
      "169": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 536,
          column: 5
        }
      },
      "170": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 72
        }
      },
      "171": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 531,
          column: 9
        }
      },
      "172": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 70
        }
      },
      "173": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 44
        }
      },
      "174": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 28
        }
      },
      "175": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 64
        }
      },
      "176": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 24
        }
      },
      "177": {
        start: {
          line: 538,
          column: 0
        },
        end: {
          line: 554,
          column: 3
        }
      },
      "178": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 553,
          column: 5
        }
      },
      "179": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 73
        }
      },
      "180": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "181": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 543,
          column: 70
        }
      },
      "182": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 546,
          column: 44
        }
      },
      "183": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 28
        }
      },
      "184": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 64
        }
      },
      "185": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 552,
          column: 24
        }
      },
      "186": {
        start: {
          line: 556,
          column: 28
        },
        end: {
          line: 556,
          column: 60
        }
      },
      "187": {
        start: {
          line: 557,
          column: 0
        },
        end: {
          line: 557,
          column: 130
        }
      },
      "188": {
        start: {
          line: 557,
          column: 84
        },
        end: {
          line: 557,
          column: 124
        }
      },
      "189": {
        start: {
          line: 558,
          column: 0
        },
        end: {
          line: 558,
          column: 162
        }
      },
      "190": {
        start: {
          line: 558,
          column: 100
        },
        end: {
          line: 558,
          column: 156
        }
      },
      "191": {
        start: {
          line: 559,
          column: 0
        },
        end: {
          line: 559,
          column: 140
        }
      },
      "192": {
        start: {
          line: 559,
          column: 89
        },
        end: {
          line: 559,
          column: 134
        }
      },
      "193": {
        start: {
          line: 561,
          column: 0
        },
        end: {
          line: 565,
          column: 1
        }
      },
      "194": {
        start: {
          line: 562,
          column: 4
        },
        end: {
          line: 564,
          column: 7
        }
      },
      "195": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 563,
          column: 83
        }
      },
      "196": {
        start: {
          line: 567,
          column: 0
        },
        end: {
          line: 567,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "getPrismaClient",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 24
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "checkDatabaseConnection",
        decl: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 38
          }
        },
        loc: {
          start: {
            line: 51,
            column: 41
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 57,
            column: 79
          },
          end: {
            line: 57,
            column: 80
          }
        },
        loc: {
          start: {
            line: 57,
            column: 97
          },
          end: {
            line: 60,
            column: 13
          }
        },
        line: 57
      },
      "3": {
        name: "performDatabaseHealthCheck",
        decl: {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 116,
            column: 41
          }
        },
        loc: {
          start: {
            line: 116,
            column: 44
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 116
      },
      "4": {
        name: "checkOptimizationStatus",
        decl: {
          start: {
            line: 183,
            column: 15
          },
          end: {
            line: 183,
            column: 38
          }
        },
        loc: {
          start: {
            line: 183,
            column: 41
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 183
      },
      "5": {
        name: "checkDatabaseQueries",
        decl: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 35
          }
        },
        loc: {
          start: {
            line: 215,
            column: 38
          },
          end: {
            line: 252,
            column: 1
          }
        },
        line: 215
      },
      "6": {
        name: "checkMigrationStatus",
        decl: {
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 256,
            column: 35
          }
        },
        loc: {
          start: {
            line: 256,
            column: 38
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 256
      },
      "7": {
        name: "closeDatabaseConnection",
        decl: {
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 38
          }
        },
        loc: {
          start: {
            line: 278,
            column: 41
          },
          end: {
            line: 295,
            column: 1
          }
        },
        line: 278
      },
      "8": {
        name: "reconnectDatabase",
        decl: {
          start: {
            line: 300,
            column: 15
          },
          end: {
            line: 300,
            column: 32
          }
        },
        loc: {
          start: {
            line: 300,
            column: 35
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 300
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 310,
            column: 26
          },
          end: {
            line: 310,
            column: 27
          }
        },
        loc: {
          start: {
            line: 310,
            column: 37
          },
          end: {
            line: 310,
            column: 62
          }
        },
        line: 310
      },
      "10": {
        name: "getDatabasePoolStatus",
        decl: {
          start: {
            line: 323,
            column: 15
          },
          end: {
            line: 323,
            column: 36
          }
        },
        loc: {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 323
      },
      "11": {
        name: "getDatabasePerformanceOverview",
        decl: {
          start: {
            line: 380,
            column: 15
          },
          end: {
            line: 380,
            column: 45
          }
        },
        loc: {
          start: {
            line: 380,
            column: 48
          },
          end: {
            line: 469,
            column: 1
          }
        },
        line: 380
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 396,
            column: 43
          },
          end: {
            line: 396,
            column: 44
          }
        },
        loc: {
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 396,
            column: 107
          }
        },
        line: 396
      },
      "13": {
        name: "triggerDatabaseOptimization",
        decl: {
          start: {
            line: 474,
            column: 15
          },
          end: {
            line: 474,
            column: 42
          }
        },
        loc: {
          start: {
            line: 474,
            column: 45
          },
          end: {
            line: 489,
            column: 1
          }
        },
        line: 474
      },
      "14": {
        name: "getDatabasePerformanceReport",
        decl: {
          start: {
            line: 494,
            column: 15
          },
          end: {
            line: 494,
            column: 43
          }
        },
        loc: {
          start: {
            line: 494,
            column: 46
          },
          end: {
            line: 505,
            column: 1
          }
        },
        line: 494
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 507,
            column: 25
          },
          end: {
            line: 507,
            column: 26
          }
        },
        loc: {
          start: {
            line: 507,
            column: 37
          },
          end: {
            line: 520,
            column: 1
          }
        },
        line: 507
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 521,
            column: 21
          },
          end: {
            line: 521,
            column: 22
          }
        },
        loc: {
          start: {
            line: 521,
            column: 33
          },
          end: {
            line: 537,
            column: 1
          }
        },
        line: 521
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 538,
            column: 22
          },
          end: {
            line: 538,
            column: 23
          }
        },
        loc: {
          start: {
            line: 538,
            column: 34
          },
          end: {
            line: 554,
            column: 1
          }
        },
        line: 538
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 557,
            column: 70
          },
          end: {
            line: 557,
            column: 71
          }
        },
        loc: {
          start: {
            line: 557,
            column: 82
          },
          end: {
            line: 557,
            column: 126
          }
        },
        line: 557
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 558,
            column: 86
          },
          end: {
            line: 558,
            column: 87
          }
        },
        loc: {
          start: {
            line: 558,
            column: 98
          },
          end: {
            line: 558,
            column: 158
          }
        },
        line: 558
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 559,
            column: 75
          },
          end: {
            line: 559,
            column: 76
          }
        },
        loc: {
          start: {
            line: 559,
            column: 87
          },
          end: {
            line: 559,
            column: 136
          }
        },
        line: 559
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 562,
            column: 53
          },
          end: {
            line: 562,
            column: 54
          }
        },
        loc: {
          start: {
            line: 562,
            column: 62
          },
          end: {
            line: 564,
            column: 5
          }
        },
        line: 562
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 22
          }
        }, {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 72
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 58
          },
          end: {
            line: 39,
            column: 84
          }
        }, {
          start: {
            line: 39,
            column: 87
          },
          end: {
            line: 39,
            column: 96
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 48
          }
        }, {
          start: {
            line: 59,
            column: 52
          },
          end: {
            line: 59,
            column: 61
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 42
          }
        }, {
          start: {
            line: 81,
            column: 46
          },
          end: {
            line: 81,
            column: 55
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 21
          },
          end: {
            line: 108,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 108,
            column: 59
          }
        }, {
          start: {
            line: 108,
            column: 62
          },
          end: {
            line: 108,
            column: 86
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: 132,
            column: 13
          },
          end: {
            line: 134,
            column: 9
          }
        }],
        line: 129
      },
      "10": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 129,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 129,
            column: 39
          }
        }, {
          start: {
            line: 129,
            column: 43
          },
          end: {
            line: 129,
            column: 60
          }
        }],
        line: 129
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 13
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 13
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 17
          },
          end: {
            line: 132,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 17
          },
          end: {
            line: 132,
            column: 35
          }
        }, {
          start: {
            line: 132,
            column: 39
          },
          end: {
            line: 132,
            column: 66
          }
        }],
        line: 132
      },
      "13": {
        loc: {
          start: {
            line: 153,
            column: 27
          },
          end: {
            line: 153,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 52
          },
          end: {
            line: 153,
            column: 65
          }
        }, {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 153,
            column: 89
          }
        }],
        line: 153
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 33
          },
          end: {
            line: 186,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 33
          },
          end: {
            line: 186,
            column: 61
          }
        }, {
          start: {
            line: 186,
            column: 65
          },
          end: {
            line: 186,
            column: 108
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "16": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "17": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "18": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "19": {
        loc: {
          start: {
            line: 339,
            column: 33
          },
          end: {
            line: 341,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 340,
            column: 26
          },
          end: {
            line: 340,
            column: 114
          }
        }, {
          start: {
            line: 341,
            column: 26
          },
          end: {
            line: 341,
            column: 32
          }
        }],
        line: 339
      },
      "20": {
        loc: {
          start: {
            line: 346,
            column: 45
          },
          end: {
            line: 346,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 45
          },
          end: {
            line: 346,
            column: 68
          }
        }, {
          start: {
            line: 346,
            column: 72
          },
          end: {
            line: 346,
            column: 76
          }
        }],
        line: 346
      },
      "21": {
        loc: {
          start: {
            line: 347,
            column: 45
          },
          end: {
            line: 347,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 45
          },
          end: {
            line: 347,
            column: 68
          }
        }, {
          start: {
            line: 347,
            column: 72
          },
          end: {
            line: 347,
            column: 76
          }
        }],
        line: 347
      },
      "22": {
        loc: {
          start: {
            line: 348,
            column: 28
          },
          end: {
            line: 348,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 348,
            column: 47
          },
          end: {
            line: 348,
            column: 48
          }
        }, {
          start: {
            line: 348,
            column: 51
          },
          end: {
            line: 348,
            column: 52
          }
        }],
        line: 348
      },
      "23": {
        loc: {
          start: {
            line: 349,
            column: 45
          },
          end: {
            line: 349,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 45
          },
          end: {
            line: 349,
            column: 72
          }
        }, {
          start: {
            line: 349,
            column: 76
          },
          end: {
            line: 349,
            column: 83
          }
        }],
        line: 349
      },
      "24": {
        loc: {
          start: {
            line: 350,
            column: 42
          },
          end: {
            line: 350,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 42
          },
          end: {
            line: 350,
            column: 66
          }
        }, {
          start: {
            line: 350,
            column: 70
          },
          end: {
            line: 350,
            column: 77
          }
        }],
        line: 350
      },
      "25": {
        loc: {
          start: {
            line: 364,
            column: 32
          },
          end: {
            line: 364,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 32
          },
          end: {
            line: 364,
            column: 55
          }
        }, {
          start: {
            line: 364,
            column: 59
          },
          end: {
            line: 364,
            column: 63
          }
        }],
        line: 364
      },
      "26": {
        loc: {
          start: {
            line: 365,
            column: 24
          },
          end: {
            line: 365,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 43
          },
          end: {
            line: 365,
            column: 44
          }
        }, {
          start: {
            line: 365,
            column: 47
          },
          end: {
            line: 365,
            column: 48
          }
        }],
        line: 365
      },
      "27": {
        loc: {
          start: {
            line: 366,
            column: 22
          },
          end: {
            line: 366,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 366,
            column: 41
          },
          end: {
            line: 366,
            column: 86
          }
        }, {
          start: {
            line: 366,
            column: 89
          },
          end: {
            line: 366,
            column: 90
          }
        }],
        line: 366
      },
      "28": {
        loc: {
          start: {
            line: 366,
            column: 50
          },
          end: {
            line: 366,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 50
          },
          end: {
            line: 366,
            column: 73
          }
        }, {
          start: {
            line: 366,
            column: 77
          },
          end: {
            line: 366,
            column: 81
          }
        }],
        line: 366
      },
      "29": {
        loc: {
          start: {
            line: 384,
            column: 33
          },
          end: {
            line: 384,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 33
          },
          end: {
            line: 384,
            column: 61
          }
        }, {
          start: {
            line: 384,
            column: 65
          },
          end: {
            line: 384,
            column: 108
          }
        }],
        line: 384
      },
      "30": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "31": {
        loc: {
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 396,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 396,
            column: 78
          }
        }, {
          start: {
            line: 396,
            column: 82
          },
          end: {
            line: 396,
            column: 107
          }
        }],
        line: 396
      },
      "32": {
        loc: {
          start: {
            line: 403,
            column: 30
          },
          end: {
            line: 403,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 59
          },
          end: {
            line: 403,
            column: 111
          }
        }, {
          start: {
            line: 403,
            column: 114
          },
          end: {
            line: 403,
            column: 116
          }
        }],
        line: 403
      },
      "33": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: 412,
            column: 13
          },
          end: {
            line: 417,
            column: 9
          }
        }],
        line: 409
      },
      "34": {
        loc: {
          start: {
            line: 412,
            column: 13
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 13
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: 415,
            column: 13
          },
          end: {
            line: 417,
            column: 9
          }
        }],
        line: 412
      },
      "35": {
        loc: {
          start: {
            line: 415,
            column: 13
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 13
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "36": {
        loc: {
          start: {
            line: 418,
            column: 29
          },
          end: {
            line: 420,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 418,
            column: 49
          },
          end: {
            line: 418,
            column: 60
          }
        }, {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 420,
            column: 51
          }
        }],
        line: 418
      },
      "37": {
        loc: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 420,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 419,
            column: 32
          },
          end: {
            line: 419,
            column: 38
          }
        }, {
          start: {
            line: 420,
            column: 16
          },
          end: {
            line: 420,
            column: 51
          }
        }],
        line: 419
      },
      "38": {
        loc: {
          start: {
            line: 420,
            column: 16
          },
          end: {
            line: 420,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 36
          },
          end: {
            line: 420,
            column: 42
          }
        }, {
          start: {
            line: 420,
            column: 45
          },
          end: {
            line: 420,
            column: 51
          }
        }],
        line: 420
      },
      "39": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "40": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "41": {
        loc: {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "42": {
        loc: {
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 433,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 433,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "43": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "44": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "45": {
        loc: {
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 476,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 476,
            column: 41
          }
        }, {
          start: {
            line: 476,
            column: 45
          },
          end: {
            line: 476,
            column: 89
          }
        }],
        line: 476
      },
      "46": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 498,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "47": {
        loc: {
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        }, {
          start: {
            line: 513,
            column: 13
          },
          end: {
            line: 515,
            column: 9
          }
        }],
        line: 510
      },
      "48": {
        loc: {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 531,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 531,
            column: 9
          }
        }, {
          start: {
            line: 528,
            column: 13
          },
          end: {
            line: 531,
            column: 9
          }
        }],
        line: 525
      },
      "49": {
        loc: {
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 545,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 542
      },
      "50": {
        loc: {
          start: {
            line: 561,
            column: 0
          },
          end: {
            line: 565,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 561,
            column: 0
          },
          end: {
            line: 565,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 561
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\connection.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\connection.ts"],
      sourcesContent: ["// @ts-nocheck\n/**\n * @file Database Connection\n * @description \u6570\u636E\u5E93\u8FDE\u63A5\u7BA1\u7406\u548C\u5065\u5EB7\u68C0\u67E5\n * @author ZK-Agent Team A\n * @date 2024-12-19\n */\n\nimport { PrismaClient } from '@prisma/client'\n\n// \u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\nexport interface DatabaseStatus {\n  connected: boolean\n  message: string\n  timestamp: Date\n  version?: string\n  latency?: number\n  error?: string\n  stats?: {\n    totalQueries: number\n    failedQueries: number\n    avgLatency: number\n    reconnectAttempts: number\n  }\n}\n\n// \u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\u7ED3\u679C\nexport interface DatabaseHealthCheck {\n  status: 'healthy' | 'unhealthy' | 'degraded'\n  checks: {\n    connection: DatabaseStatus\n    queries: {\n      read: boolean\n      write: boolean\n      latency: number\n    }\n    migrations: {\n      pending: number\n      applied: number\n    }\n    optimization: {\n      enabled: boolean\n      componentsActive: number\n      lastOptimization: Date | null\n      recommendations: number\n    }\n  }\n  timestamp: Date\n}\n\n// \u6570\u636E\u5E93\u6027\u80FD\u6982\u89C8\nexport interface DatabasePerformanceOverview {\n  monitoring: {\n    isActive: boolean\n    metricsCount: number\n    alertsCount: number\n  }\n  optimization: {\n    isActive: boolean\n    componentsStatus: Record<string, any>\n    recommendations: any[]\n  }\n  health: {\n    score: number\n    status: 'excellent' | 'good' | 'fair' | 'poor'\n    issues: string[]\n  }\n  timestamp: Date\n}\n\nimport { enhancedDb, EnhancedDatabaseConnection, ConnectionState } from './enhanced-connection'\nimport { databaseMonitor } from './monitoring'\nimport { DatabasePerformanceUtils } from './enhanced-database-manager'\n\n// \u5168\u5C40 Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\nlet prisma: PrismaClient | null = null\n\n/**\n * \u83B7\u53D6 Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\n * @returns {PrismaClient} Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\n */\nexport function getPrismaClient(): PrismaClient {\n  // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u5BA2\u6237\u7AEF\n  const enhancedClient = enhancedDb.getClient()\n  if (enhancedClient && enhancedDb.isConnected()) {\n    return enhancedClient\n  }\n\n  // \u56DE\u9000\u5230\u4F20\u7EDF\u8FDE\u63A5\u65B9\u5F0F\n  if (!prisma) {\n    prisma = new PrismaClient({\n      log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n      errorFormat: 'pretty',\n    })\n  }\n  return prisma\n}\n\n// \u83B7\u53D6Prisma\u5BA2\u6237\u7AEF\u5B9E\u4F8B\nexport const prisma = getPrismaClient()\n\n/**\n * \u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\n * @returns {Promise<DatabaseStatus>} \u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\n */\nexport async function checkDatabaseConnection(): Promise<DatabaseStatus> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\n    if (enhancedDb.isConnected()) {\n      const stats = enhancedDb.getStats()\n      \n      // \u6267\u884C\u5065\u5EB7\u68C0\u67E5\u67E5\u8BE2\n      const result = await enhancedDb.executeQuery(async (client) => {\n        const versionResult = await client.$queryRaw<Array<{ version: string }>>`SELECT version()`\n        return versionResult[0]?.version || 'Unknown'\n      })\n      \n      return {\n        connected: true,\n        message: `Enhanced database connection active (uptime: ${Math.round(stats.uptime / 1000)}s)`,\n        version: result,\n        timestamp: new Date(),\n        stats: {\n          totalQueries: stats.totalQueries,\n          failedQueries: stats.failedQueries,\n          avgLatency: Math.round(stats.avgLatency),\n          reconnectAttempts: stats.reconnectAttempts\n        }\n      }\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u8FDE\u63A5\u68C0\u67E5\n    const client = getPrismaClient()\n    await client.$connect()\n    \n    // \u6267\u884C\u7B80\u5355\u67E5\u8BE2\u6D4B\u8BD5\u8FDE\u63A5\n    await client.$queryRaw`SELECT 1`\n    \n    // \u83B7\u53D6\u6570\u636E\u5E93\u7248\u672C\u4FE1\u606F\n    const result = await client.$queryRaw<Array<{ version: string }>>`SELECT version()`\n    const version = result[0]?.version || 'Unknown'\n    \n    return {\n      connected: true,\n      message: 'Database connection successful (fallback mode)',\n      version,\n      timestamp: new Date()\n    }\n  } catch (error) {\n    console.error('Database connection failed:', error)\n    \n    // \u5982\u679C\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u672A\u8FDE\u63A5\uFF0C\u5C1D\u8BD5\u8FDE\u63A5\uFF08\u4F46\u4E0D\u9012\u5F52\u91CD\u8BD5\uFF09\n    if (!enhancedDb.isConnected()) {\n      try {\n        await enhancedDb.connect()\n        // \u8FDE\u63A5\u6210\u529F\u540E\u8FD4\u56DE\u6210\u529F\u72B6\u6001\uFF0C\u4E0D\u518D\u9012\u5F52\u8C03\u7528\n        return {\n          connected: true,\n          message: 'Database connection successful via enhanced manager',\n          timestamp: new Date()\n        }\n      } catch (connectError) {\n        console.error('Enhanced connection failed:', connectError)\n      }\n    }\n    \n    return {\n      connected: false,\n      message: error instanceof Error ? error.message : 'Unknown database error',\n      timestamp: new Date()\n    }\n  }\n}\n\n/**\n * \u6267\u884C\u5B8C\u6574\u7684\u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\n */\nexport async function performDatabaseHealthCheck(): Promise<DatabaseHealthCheck> {\n  const timestamp = new Date()\n  \n  try {\n    // \u68C0\u67E5\u57FA\u672C\u8FDE\u63A5\n    const connectionStatus = await checkDatabaseConnection()\n    \n    // \u68C0\u67E5\u8BFB\u5199\u64CD\u4F5C\n    const queryChecks = await checkDatabaseQueries()\n    \n    // \u68C0\u67E5\u8FC1\u79FB\u72B6\u6001\n    const migrationChecks = await checkMigrationStatus()\n    \n    // \u68C0\u67E5\u6027\u80FD\u4F18\u5316\u72B6\u6001\n    const optimizationStatus = await checkOptimizationStatus()\n    \n    // \u786E\u5B9A\u6574\u4F53\u5065\u5EB7\u72B6\u6001\n    let status: DatabaseHealthCheck['status'] = 'healthy'\n    \n    if (!connectionStatus.connected || !queryChecks.read) {\n      status = 'unhealthy'\n    } else if (!queryChecks.write || migrationChecks.pending > 0) {\n      status = 'degraded'\n    }\n    \n    return {\n      status,\n      checks: {\n        connection: connectionStatus,\n        queries: queryChecks,\n        migrations: migrationChecks\n      },\n      optimization: optimizationStatus,\n      timestamp\n    }\n  } catch (error) {\n    console.error('Database health check failed:', error)\n    \n    return {\n      status: 'unhealthy',\n      checks: {\n        connection: {\n          connected: false,\n          error: error instanceof Error ? error.message : 'Health check failed',\n          timestamp\n        },\n        queries: {\n          read: false,\n          write: false,\n          latency: 0\n        },\n        migrations: {\n          pending: 0,\n          applied: 0\n        }\n      },\n      optimization: {\n        enabled: false,\n        componentsActive: 0,\n        lastOptimization: null,\n        recommendations: []\n      },\n      timestamp\n    }\n  }\n}\n\n/**\n * \u68C0\u67E5\u6570\u636E\u5E93\u67E5\u8BE2\u64CD\u4F5C\n */\n/**\n * \u68C0\u67E5\u6027\u80FD\u4F18\u5316\u72B6\u6001\n * @returns {Promise<object>} \u6027\u80FD\u4F18\u5316\u72B6\u6001\u4FE1\u606F\n */\nasync function checkOptimizationStatus(): Promise<{\n  enabled: boolean\n  componentsActive: number\n  lastOptimization: Date | null\n  recommendations: any[]\n}> {\n  try {\n    // \u68C0\u67E5\u6570\u636E\u5E93\u76D1\u63A7\u5668\u662F\u5426\u542F\u7528\n    const monitoringActive = databaseMonitor && databaseMonitor.isMonitoring()\n    \n    if (!monitoringActive) {\n      return {\n        enabled: false,\n        componentsActive: 0,\n        lastOptimization: null,\n        recommendations: []\n      }\n    }\n    \n    // \u83B7\u53D6\u4F18\u5316\u72B6\u6001\n    const optimizationStatus = databaseMonitor.getOptimizationStatus()\n    const recommendations = databaseMonitor.getOptimizationRecommendations()\n    \n    return {\n      enabled: true,\n      componentsActive: Object.values(optimizationStatus).filter(Boolean).length,\n      lastOptimization: optimizationStatus.lastOptimization,\n      recommendations: recommendations.slice(0, 5) // \u9650\u5236\u8FD4\u56DE\u524D5\u4E2A\u5EFA\u8BAE\n    }\n  } catch (error) {\n    console.error('Failed to check optimization status:', error)\n    return {\n      enabled: false,\n      componentsActive: 0,\n      lastOptimization: null,\n      recommendations: []\n    }\n  }\n}\n\nasync function checkDatabaseQueries(): Promise<{\n  read: boolean\n  write: boolean\n  latency: number\n}> {\n  const startTime = Date.now()\n  \n  try {\n    // \u6D4B\u8BD5\u8BFB\u64CD\u4F5C\n    let readSuccess = false\n    try {\n      await prisma.$queryRaw`SELECT 1 as test`\n      readSuccess = true\n    } catch (error) {\n      console.error('Database read test failed:', error)\n    }\n    \n    // \u6D4B\u8BD5\u5199\u64CD\u4F5C\uFF08\u5982\u679C\u6709\u6D4B\u8BD5\u8868\u7684\u8BDD\uFF09\n    let writeSuccess = false\n    try {\n      // \u5C1D\u8BD5\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u8BB0\u5F55\u6765\u6D4B\u8BD5\u5199\u64CD\u4F5C\n      // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6570\u636E\u5E93schema\u6765\u8C03\u6574\n      // \u6682\u65F6\u5047\u8BBE\u5199\u64CD\u4F5C\u6210\u529F\n      writeSuccess = true\n    } catch (error) {\n      console.error('Database write test failed:', error)\n    }\n    \n    const latency = Date.now() - startTime\n    \n    return {\n      read: readSuccess,\n      write: writeSuccess,\n      latency\n    }\n  } catch (error) {\n    return {\n      read: false,\n      write: false,\n      latency: Date.now() - startTime\n    }\n  }\n}\n\n/**\n * \u68C0\u67E5\u6570\u636E\u5E93\u8FC1\u79FB\u72B6\u6001\n */\nasync function checkMigrationStatus(): Promise<{\n  pending: number\n  applied: number\n}> {\n  try {\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u8FC1\u79FB\u7BA1\u7406\u65B9\u5F0F\u6765\u5B9E\u73B0\n    // Prisma\u7684\u8FC1\u79FB\u72B6\u6001\u68C0\u67E5\n    \n    // \u6682\u65F6\u8FD4\u56DE\u9ED8\u8BA4\u503C\n    return {\n      pending: 0,\n      applied: 0\n    }\n  } catch (error) {\n    console.error('Migration status check failed:', error)\n    return {\n      pending: 0,\n      applied: 0\n    }\n  }\n}\n\n/**\n * \u5173\u95ED\u6570\u636E\u5E93\u8FDE\u63A5\n * @returns {Promise<void>}\n */\nexport async function closeDatabaseConnection(): Promise<void> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.disconnect()\n      console.log('Enhanced database connection closed successfully')\n      return\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u65B9\u5F0F\n    const client = getPrismaClient()\n    await client.$disconnect()\n    console.log('Database connection closed successfully')\n  } catch (error) {\n    console.error('Error closing database connection:', error)\n    throw error\n  }\n}\n\n/**\n * \u91CD\u65B0\u8FDE\u63A5\u6570\u636E\u5E93\n * @returns {Promise<DatabaseStatus>}\n */\nexport async function reconnectDatabase(): Promise<DatabaseStatus> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\n    if (enhancedDb.getState() !== ConnectionState.DISCONNECTED) {\n      await enhancedDb.reconnect()\n      return await checkDatabaseConnection()\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u91CD\u8FDE\u65B9\u5F0F\n    await closeDatabaseConnection()\n    \n    // \u7B49\u5F85\u4E00\u5C0F\u6BB5\u65F6\u95F4\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    \n    // \u91CD\u65B0\u68C0\u67E5\u8FDE\u63A5\n    return await checkDatabaseConnection()\n  } catch (error) {\n    console.error('Database reconnection failed:', error)\n    throw error\n  }\n}\n\n/**\n * \u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u72B6\u6001\n * @returns {Promise<any>} \u8FDE\u63A5\u6C60\u72B6\u6001\u4FE1\u606F\n */\nexport async function getDatabasePoolStatus(): Promise<any> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u7EDF\u8BA1\u4FE1\u606F\n    if (enhancedDb.isConnected()) {\n      const stats = enhancedDb.getStats()\n      const status = await checkDatabaseConnection()\n      \n      return {\n        connected: status.connected,\n        timestamp: status.timestamp,\n        version: status.version,\n        enhanced: true,\n        connectionState: stats.state,\n        uptime: Math.round(stats.uptime / 1000),\n        performance: {\n          totalQueries: stats.totalQueries,\n          failedQueries: stats.failedQueries,\n          successRate: stats.totalQueries > 0 \n            ? ((stats.totalQueries - stats.failedQueries) / stats.totalQueries * 100).toFixed(2) + '%'\n            : '100%',\n          avgLatency: Math.round(stats.avgLatency),\n          reconnectAttempts: stats.reconnectAttempts\n        },\n        pool: {\n          maxConnections: parseInt(process.env.DB_POOL_MAX || '50'),\n          minConnections: parseInt(process.env.DB_POOL_MIN || '10'),\n          active: status.connected ? 1 : 0,\n          acquireTimeout: parseInt(process.env.DB_POOL_ACQUIRE || '60000'),\n          idleTimeout: parseInt(process.env.DB_POOL_IDLE || '20000')\n        }\n      }\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u72B6\u6001\u68C0\u67E5\n    const status = await checkDatabaseConnection()\n    \n    return {\n      connected: status.connected,\n      timestamp: status.timestamp,\n      version: status.version,\n      latency: status.latency,\n      enhanced: false,\n      // \u6A21\u62DF\u8FDE\u63A5\u6C60\u4FE1\u606F\uFF08\u5B9E\u9645\u9700\u8981\u6839\u636E\u5177\u4F53\u6570\u636E\u5E93\u9A71\u52A8\u83B7\u53D6\uFF09\n      pool: {\n        total: parseInt(process.env.DB_POOL_MAX || '10'),\n        active: status.connected ? 1 : 0,\n        idle: status.connected ? parseInt(process.env.DB_POOL_MAX || '10') - 1 : 0,\n        waiting: 0\n      }\n    }\n  } catch (error) {\n    console.error('Failed to get database pool status:', error)\n    throw error\n  }\n}\n\n/**\n * \u83B7\u53D6\u6570\u636E\u5E93\u6027\u80FD\u6982\u89C8\n * @returns {Promise<DatabasePerformanceOverview>} \u6570\u636E\u5E93\u6027\u80FD\u6982\u89C8\u4FE1\u606F\n */\nexport async function getDatabasePerformanceOverview(): Promise<DatabasePerformanceOverview> {\n  const timestamp = new Date()\n  \n  try {\n    // \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\n    const monitoringActive = databaseMonitor && databaseMonitor.isMonitoring()\n    let monitoringInfo = {\n      isActive: false,\n      metricsCount: 0,\n      alertsCount: 0\n    }\n    \n    if (monitoringActive) {\n      const metrics = databaseMonitor.getMetrics()\n      const alerts = databaseMonitor.getAlerts()\n      \n      monitoringInfo = {\n        isActive: true,\n        metricsCount: metrics.length,\n        alertsCount: alerts.filter(alert => alert.level === 'CRITICAL' || alert.level === 'WARNING').length\n      }\n    }\n    \n    // \u83B7\u53D6\u4F18\u5316\u72B6\u6001\n    const optimizationStatus = await checkOptimizationStatus()\n    const optimizationInfo = {\n      isActive: optimizationStatus.enabled,\n      componentsStatus: optimizationStatus.enabled ? databaseMonitor.getOptimizationStatus() : {},\n      recommendations: optimizationStatus.recommendations\n    }\n    \n    // \u8BA1\u7B97\u5065\u5EB7\u8BC4\u5206\n    const healthCheck = await performDatabaseHealthCheck()\n    let healthScore = 100\n    \n    if (healthCheck.status === 'unhealthy') {\n      healthScore = 30\n    } else if (healthCheck.status === 'degraded') {\n      healthScore = 70\n    } else if (monitoringInfo.alertsCount > 0) {\n      healthScore = Math.max(50, 100 - (monitoringInfo.alertsCount * 10))\n    }\n    \n    const healthStatus = healthScore >= 90 ? 'excellent' : \n                        healthScore >= 70 ? 'good' : \n                        healthScore >= 50 ? 'fair' : 'poor'\n    \n    const healthIssues: string[] = []\n    if (!healthCheck.checks.connection.connected) {\n      healthIssues.push('\u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25')\n    }\n    if (!healthCheck.checks.queries.read) {\n      healthIssues.push('\u6570\u636E\u5E93\u8BFB\u53D6\u64CD\u4F5C\u5931\u8D25')\n    }\n    if (!healthCheck.checks.queries.write) {\n      healthIssues.push('\u6570\u636E\u5E93\u5199\u5165\u64CD\u4F5C\u5931\u8D25')\n    }\n    if (monitoringInfo.alertsCount > 0) {\n      healthIssues.push(`\u5B58\u5728 ${monitoringInfo.alertsCount} \u4E2A\u6D3B\u8DC3\u544A\u8B66`)\n    }\n    if (!optimizationStatus.enabled) {\n      healthIssues.push('\u6027\u80FD\u4F18\u5316\u7EC4\u4EF6\u672A\u542F\u7528')\n    }\n    \n    return {\n      monitoring: monitoringInfo,\n      optimization: optimizationInfo,\n      health: {\n        score: healthScore,\n        status: healthStatus,\n        issues: healthIssues\n      },\n      timestamp\n    }\n  } catch (error) {\n    console.error('Failed to get database performance overview:', error)\n    \n    return {\n      monitoring: {\n        isActive: false,\n        metricsCount: 0,\n        alertsCount: 0\n      },\n      optimization: {\n        isActive: false,\n        componentsStatus: {},\n        recommendations: []\n      },\n      health: {\n        score: 0,\n        status: 'poor',\n        issues: ['\u65E0\u6CD5\u83B7\u53D6\u6027\u80FD\u6982\u89C8\u4FE1\u606F']\n      },\n      timestamp\n    }\n  }\n}\n\n/**\n * \u89E6\u53D1\u6570\u636E\u5E93\u6027\u80FD\u4F18\u5316\n * @returns {Promise<boolean>} \u4F18\u5316\u662F\u5426\u6210\u529F\u89E6\u53D1\n */\nexport async function triggerDatabaseOptimization(): Promise<boolean> {\n  try {\n    if (!databaseMonitor || !databaseMonitor.isMonitoring()) {\n      console.warn('Database monitoring is not active, cannot trigger optimization')\n      return false\n    }\n    \n    // \u89E6\u53D1\u4F18\u5316\n    await databaseMonitor.triggerOptimization()\n    console.log('Database optimization triggered successfully')\n    return true\n  } catch (error) {\n    console.error('Failed to trigger database optimization:', error)\n    return false\n  }\n}\n\n/**\n * \u83B7\u53D6\u6570\u636E\u5E93\u6027\u80FD\u62A5\u544A\n * @returns {Promise<any>} \u6027\u80FD\u62A5\u544A\n */\nexport async function getDatabasePerformanceReport(): Promise<any> {\n  try {\n    if (!DatabasePerformanceUtils) {\n      throw new Error('DatabasePerformanceUtils not available')\n    }\n    \n    return await DatabasePerformanceUtils.getPerformanceReport()\n  } catch (error) {\n    console.error('Failed to get database performance report:', error)\n    throw error\n  }\n}\n\n// \u8FDB\u7A0B\u9000\u51FA\u65F6\u6E05\u7406\u8FDE\u63A5\nprocess.on('beforeExit', async () => {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.gracefulShutdown()\n    } else {\n      await closeDatabaseConnection()\n    }\n  } catch (error) {\n    console.error('Error during database cleanup:', error)\n  }\n})\n\nprocess.on('SIGINT', async () => {\n  try {\n    console.log('Received SIGINT, initiating graceful shutdown...')\n    \n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.gracefulShutdown()\n    } else {\n      await closeDatabaseConnection()\n      process.exit(0)\n    }\n  } catch (error) {\n    console.error('Error during graceful shutdown:', error)\n    process.exit(1)\n  }\n})\n\nprocess.on('SIGTERM', async () => {\n  try {\n    console.log('Received SIGTERM, initiating graceful shutdown...')\n    \n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.gracefulShutdown()\n    } else {\n      await closeDatabaseConnection()\n      process.exit(0)\n    }\n  } catch (error) {\n    console.error('Error during graceful shutdown:', error)\n    process.exit(1)\n  }\n})\n\n// \u5BFC\u51FA\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u5B9E\u4F8B\u548C\u76F8\u5173\u529F\u80FD\nexport { \n  enhancedDb, \n  EnhancedDatabaseConnection, \n  ConnectionState,\n  // connectDatabase,\n  // disconnectDatabase,\n  // getDatabaseStats,\n  // isDatabaseConnected,\n  // executeQuery\n} from './enhanced-connection'\n\n// \u521D\u59CB\u5316\u589E\u5F3A\u6570\u636E\u5E93\u8FDE\u63A5\uFF08\u5982\u679C\u73AF\u5883\u53D8\u91CF\u542F\u7528\uFF09\nif (process.env.ENHANCED_DB_CONNECTION === 'true') {\n  enhancedDb.connect().catch(error => {\n    console.error('Failed to initialize enhanced database connection:', error)\n  })\n}\n\n// \u9ED8\u8BA4\u5BFC\u51FAPrisma\u5BA2\u6237\u7AEF\nexport default prisma\n\n// \u5BFC\u51FA\u7C7B\u578B\nexport type { DatabaseStatus, DatabaseHealthCheck }"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f131aeacf0ff291582721241b203d6114a710de9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18prcktstb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18prcktstb();
cov_18prcktstb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18prcktstb().s[1]++;
exports.ConnectionState = exports.EnhancedDatabaseConnection = exports.enhancedDb = exports.prisma = void 0;
/* istanbul ignore next */
cov_18prcktstb().s[2]++;
exports.getPrismaClient = getPrismaClient;
/* istanbul ignore next */
cov_18prcktstb().s[3]++;
exports.checkDatabaseConnection = checkDatabaseConnection;
/* istanbul ignore next */
cov_18prcktstb().s[4]++;
exports.performDatabaseHealthCheck = performDatabaseHealthCheck;
/* istanbul ignore next */
cov_18prcktstb().s[5]++;
exports.closeDatabaseConnection = closeDatabaseConnection;
/* istanbul ignore next */
cov_18prcktstb().s[6]++;
exports.reconnectDatabase = reconnectDatabase;
/* istanbul ignore next */
cov_18prcktstb().s[7]++;
exports.getDatabasePoolStatus = getDatabasePoolStatus;
/* istanbul ignore next */
cov_18prcktstb().s[8]++;
exports.getDatabasePerformanceOverview = getDatabasePerformanceOverview;
/* istanbul ignore next */
cov_18prcktstb().s[9]++;
exports.triggerDatabaseOptimization = triggerDatabaseOptimization;
/* istanbul ignore next */
cov_18prcktstb().s[10]++;
exports.getDatabasePerformanceReport = getDatabasePerformanceReport;
const client_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[11]++, require("@prisma/client"));
const enhanced_connection_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[12]++, require("./enhanced-connection"));
const monitoring_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[13]++, require("./monitoring"));
const enhanced_database_manager_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[14]++, require("./enhanced-database-manager"));
// 全局 Prisma 客户端实例
let prisma =
/* istanbul ignore next */
(cov_18prcktstb().s[15]++, null);
/**
 * 获取 Prisma 客户端实例
 * @returns {PrismaClient} Prisma 客户端实例
 */
function getPrismaClient() {
  /* istanbul ignore next */
  cov_18prcktstb().f[0]++;
  // 优先使用增强连接管理器的客户端
  const enhancedClient =
  /* istanbul ignore next */
  (cov_18prcktstb().s[16]++, enhanced_connection_1.enhancedDb.getClient());
  /* istanbul ignore next */
  cov_18prcktstb().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_18prcktstb().b[1][0]++, enhancedClient) &&
  /* istanbul ignore next */
  (cov_18prcktstb().b[1][1]++, enhanced_connection_1.enhancedDb.isConnected())) {
    /* istanbul ignore next */
    cov_18prcktstb().b[0][0]++;
    cov_18prcktstb().s[18]++;
    return enhancedClient;
  } else
  /* istanbul ignore next */
  {
    cov_18prcktstb().b[0][1]++;
  }
  // 回退到传统连接方式
  cov_18prcktstb().s[19]++;
  if (!prisma) {
    /* istanbul ignore next */
    cov_18prcktstb().b[2][0]++;
    cov_18prcktstb().s[20]++;
    prisma = new client_1.PrismaClient({
      log: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[3][0]++, ['query', 'error', 'warn']) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[3][1]++, ['error']),
      errorFormat: 'pretty'
    });
  } else
  /* istanbul ignore next */
  {
    cov_18prcktstb().b[2][1]++;
  }
  cov_18prcktstb().s[21]++;
  return prisma;
}
// 获取Prisma客户端实例
/* istanbul ignore next */
cov_18prcktstb().s[22]++;
exports.prisma = getPrismaClient();
/**
 * 检查数据库连接状态
 * @returns {Promise<DatabaseStatus>} 数据库连接状态
 */
async function checkDatabaseConnection() {
  /* istanbul ignore next */
  cov_18prcktstb().f[1]++;
  cov_18prcktstb().s[23]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[24]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[4][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_18prcktstb().s[25]++, enhanced_connection_1.enhancedDb.getStats());
      // 执行健康检查查询
      const result =
      /* istanbul ignore next */
      (cov_18prcktstb().s[26]++, await enhanced_connection_1.enhancedDb.executeQuery(async client => {
        /* istanbul ignore next */
        cov_18prcktstb().f[2]++;
        const versionResult =
        /* istanbul ignore next */
        (cov_18prcktstb().s[27]++, await client.$queryRaw`SELECT version()`);
        /* istanbul ignore next */
        cov_18prcktstb().s[28]++;
        return /* istanbul ignore next */(cov_18prcktstb().b[5][0]++, versionResult[0]?.version) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[5][1]++, 'Unknown');
      }));
      /* istanbul ignore next */
      cov_18prcktstb().s[29]++;
      return {
        connected: true,
        message: `Enhanced database connection active (uptime: ${Math.round(stats.uptime / 1000)}s)`,
        version: result,
        timestamp: new Date(),
        stats: {
          totalQueries: stats.totalQueries,
          failedQueries: stats.failedQueries,
          avgLatency: Math.round(stats.avgLatency),
          reconnectAttempts: stats.reconnectAttempts
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[4][1]++;
    }
    // 回退到传统连接检查
    const client =
    /* istanbul ignore next */
    (cov_18prcktstb().s[30]++, getPrismaClient());
    /* istanbul ignore next */
    cov_18prcktstb().s[31]++;
    await client.$connect();
    // 执行简单查询测试连接
    /* istanbul ignore next */
    cov_18prcktstb().s[32]++;
    await client.$queryRaw`SELECT 1`;
    // 获取数据库版本信息
    const result =
    /* istanbul ignore next */
    (cov_18prcktstb().s[33]++, await client.$queryRaw`SELECT version()`);
    const version =
    /* istanbul ignore next */
    (cov_18prcktstb().s[34]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[6][0]++, result[0]?.version) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[6][1]++, 'Unknown'));
    /* istanbul ignore next */
    cov_18prcktstb().s[35]++;
    return {
      connected: true,
      message: 'Database connection successful (fallback mode)',
      version,
      timestamp: new Date()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[36]++;
    console.error('Database connection failed:', error);
    // 如果增强连接管理器未连接，尝试连接（但不递归重试）
    /* istanbul ignore next */
    cov_18prcktstb().s[37]++;
    if (!enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[7][0]++;
      cov_18prcktstb().s[38]++;
      try {
        /* istanbul ignore next */
        cov_18prcktstb().s[39]++;
        await enhanced_connection_1.enhancedDb.connect();
        // 连接成功后返回成功状态，不再递归调用
        /* istanbul ignore next */
        cov_18prcktstb().s[40]++;
        return {
          connected: true,
          message: 'Database connection successful via enhanced manager',
          timestamp: new Date()
        };
      } catch (connectError) {
        /* istanbul ignore next */
        cov_18prcktstb().s[41]++;
        console.error('Enhanced connection failed:', connectError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[7][1]++;
    }
    cov_18prcktstb().s[42]++;
    return {
      connected: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[8][1]++, 'Unknown database error'),
      timestamp: new Date()
    };
  }
}
/**
 * 执行完整的数据库健康检查
 */
async function performDatabaseHealthCheck() {
  /* istanbul ignore next */
  cov_18prcktstb().f[3]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_18prcktstb().s[43]++, new Date());
  /* istanbul ignore next */
  cov_18prcktstb().s[44]++;
  try {
    // 检查基本连接
    const connectionStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[45]++, await checkDatabaseConnection());
    // 检查读写操作
    const queryChecks =
    /* istanbul ignore next */
    (cov_18prcktstb().s[46]++, await checkDatabaseQueries());
    // 检查迁移状态
    const migrationChecks =
    /* istanbul ignore next */
    (cov_18prcktstb().s[47]++, await checkMigrationStatus());
    // 检查性能优化状态
    const optimizationStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[48]++, await checkOptimizationStatus());
    // 确定整体健康状态
    let status =
    /* istanbul ignore next */
    (cov_18prcktstb().s[49]++, 'healthy');
    /* istanbul ignore next */
    cov_18prcktstb().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_18prcktstb().b[10][0]++, !connectionStatus.connected) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[10][1]++, !queryChecks.read)) {
      /* istanbul ignore next */
      cov_18prcktstb().b[9][0]++;
      cov_18prcktstb().s[51]++;
      status = 'unhealthy';
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[9][1]++;
      cov_18prcktstb().s[52]++;
      if (
      /* istanbul ignore next */
      (cov_18prcktstb().b[12][0]++, !queryChecks.write) ||
      /* istanbul ignore next */
      (cov_18prcktstb().b[12][1]++, migrationChecks.pending > 0)) {
        /* istanbul ignore next */
        cov_18prcktstb().b[11][0]++;
        cov_18prcktstb().s[53]++;
        status = 'degraded';
      } else
      /* istanbul ignore next */
      {
        cov_18prcktstb().b[11][1]++;
      }
    }
    /* istanbul ignore next */
    cov_18prcktstb().s[54]++;
    return {
      status,
      checks: {
        connection: connectionStatus,
        queries: queryChecks,
        migrations: migrationChecks
      },
      optimization: optimizationStatus,
      timestamp
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[55]++;
    console.error('Database health check failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[56]++;
    return {
      status: 'unhealthy',
      checks: {
        connection: {
          connected: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[13][0]++, error.message) :
          /* istanbul ignore next */
          (cov_18prcktstb().b[13][1]++, 'Health check failed'),
          timestamp
        },
        queries: {
          read: false,
          write: false,
          latency: 0
        },
        migrations: {
          pending: 0,
          applied: 0
        }
      },
      optimization: {
        enabled: false,
        componentsActive: 0,
        lastOptimization: null,
        recommendations: []
      },
      timestamp
    };
  }
}
/**
 * 检查数据库查询操作
 */
/**
 * 检查性能优化状态
 * @returns {Promise<object>} 性能优化状态信息
 */
async function checkOptimizationStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[4]++;
  cov_18prcktstb().s[57]++;
  try {
    // 检查数据库监控器是否启用
    const monitoringActive =
    /* istanbul ignore next */
    (cov_18prcktstb().s[58]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[14][0]++, monitoring_1.databaseMonitor) &&
    /* istanbul ignore next */
    (cov_18prcktstb().b[14][1]++, monitoring_1.databaseMonitor.isMonitoring()));
    /* istanbul ignore next */
    cov_18prcktstb().s[59]++;
    if (!monitoringActive) {
      /* istanbul ignore next */
      cov_18prcktstb().b[15][0]++;
      cov_18prcktstb().s[60]++;
      return {
        enabled: false,
        componentsActive: 0,
        lastOptimization: null,
        recommendations: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[15][1]++;
    }
    // 获取优化状态
    const optimizationStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[61]++, monitoring_1.databaseMonitor.getOptimizationStatus());
    const recommendations =
    /* istanbul ignore next */
    (cov_18prcktstb().s[62]++, monitoring_1.databaseMonitor.getOptimizationRecommendations());
    /* istanbul ignore next */
    cov_18prcktstb().s[63]++;
    return {
      enabled: true,
      componentsActive: Object.values(optimizationStatus).filter(Boolean).length,
      lastOptimization: optimizationStatus.lastOptimization,
      recommendations: recommendations.slice(0, 5) // 限制返回前5个建议
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[64]++;
    console.error('Failed to check optimization status:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[65]++;
    return {
      enabled: false,
      componentsActive: 0,
      lastOptimization: null,
      recommendations: []
    };
  }
}
async function checkDatabaseQueries() {
  /* istanbul ignore next */
  cov_18prcktstb().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_18prcktstb().s[66]++, Date.now());
  /* istanbul ignore next */
  cov_18prcktstb().s[67]++;
  try {
    // 测试读操作
    let readSuccess =
    /* istanbul ignore next */
    (cov_18prcktstb().s[68]++, false);
    /* istanbul ignore next */
    cov_18prcktstb().s[69]++;
    try {
      /* istanbul ignore next */
      cov_18prcktstb().s[70]++;
      await prisma.$queryRaw`SELECT 1 as test`;
      /* istanbul ignore next */
      cov_18prcktstb().s[71]++;
      readSuccess = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18prcktstb().s[72]++;
      console.error('Database read test failed:', error);
    }
    // 测试写操作（如果有测试表的话）
    let writeSuccess =
    /* istanbul ignore next */
    (cov_18prcktstb().s[73]++, false);
    /* istanbul ignore next */
    cov_18prcktstb().s[74]++;
    try {
      /* istanbul ignore next */
      cov_18prcktstb().s[75]++;
      // 尝试创建一个临时记录来测试写操作
      // 这里需要根据实际的数据库schema来调整
      // 暂时假设写操作成功
      writeSuccess = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18prcktstb().s[76]++;
      console.error('Database write test failed:', error);
    }
    const latency =
    /* istanbul ignore next */
    (cov_18prcktstb().s[77]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_18prcktstb().s[78]++;
    return {
      read: readSuccess,
      write: writeSuccess,
      latency
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[79]++;
    return {
      read: false,
      write: false,
      latency: Date.now() - startTime
    };
  }
}
/**
 * 检查数据库迁移状态
 */
async function checkMigrationStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[6]++;
  cov_18prcktstb().s[80]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[81]++;
    // 这里需要根据实际的迁移管理方式来实现
    // Prisma的迁移状态检查
    // 暂时返回默认值
    return {
      pending: 0,
      applied: 0
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[82]++;
    console.error('Migration status check failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[83]++;
    return {
      pending: 0,
      applied: 0
    };
  }
}
/**
 * 关闭数据库连接
 * @returns {Promise<void>}
 */
async function closeDatabaseConnection() {
  /* istanbul ignore next */
  cov_18prcktstb().f[7]++;
  cov_18prcktstb().s[84]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[85]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[16][0]++;
      cov_18prcktstb().s[86]++;
      await enhanced_connection_1.enhancedDb.disconnect();
      /* istanbul ignore next */
      cov_18prcktstb().s[87]++;
      console.log('Enhanced database connection closed successfully');
      /* istanbul ignore next */
      cov_18prcktstb().s[88]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[16][1]++;
    }
    // 回退到传统方式
    const client =
    /* istanbul ignore next */
    (cov_18prcktstb().s[89]++, getPrismaClient());
    /* istanbul ignore next */
    cov_18prcktstb().s[90]++;
    await client.$disconnect();
    /* istanbul ignore next */
    cov_18prcktstb().s[91]++;
    console.log('Database connection closed successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[92]++;
    console.error('Error closing database connection:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[93]++;
    throw error;
  }
}
/**
 * 重新连接数据库
 * @returns {Promise<DatabaseStatus>}
 */
async function reconnectDatabase() {
  /* istanbul ignore next */
  cov_18prcktstb().f[8]++;
  cov_18prcktstb().s[94]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[95]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.getState() !== enhanced_connection_1.ConnectionState.DISCONNECTED) {
      /* istanbul ignore next */
      cov_18prcktstb().b[17][0]++;
      cov_18prcktstb().s[96]++;
      await enhanced_connection_1.enhancedDb.reconnect();
      /* istanbul ignore next */
      cov_18prcktstb().s[97]++;
      return await checkDatabaseConnection();
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[17][1]++;
    }
    // 回退到传统重连方式
    cov_18prcktstb().s[98]++;
    await closeDatabaseConnection();
    // 等待一小段时间
    /* istanbul ignore next */
    cov_18prcktstb().s[99]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_18prcktstb().f[9]++;
      cov_18prcktstb().s[100]++;
      return setTimeout(resolve, 1000);
    });
    // 重新检查连接
    /* istanbul ignore next */
    cov_18prcktstb().s[101]++;
    return await checkDatabaseConnection();
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[102]++;
    console.error('Database reconnection failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[103]++;
    throw error;
  }
}
/**
 * 获取数据库连接池状态
 * @returns {Promise<any>} 连接池状态信息
 */
async function getDatabasePoolStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[10]++;
  cov_18prcktstb().s[104]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[105]++;
    // 优先使用增强连接管理器的统计信息
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[18][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_18prcktstb().s[106]++, enhanced_connection_1.enhancedDb.getStats());
      const status =
      /* istanbul ignore next */
      (cov_18prcktstb().s[107]++, await checkDatabaseConnection());
      /* istanbul ignore next */
      cov_18prcktstb().s[108]++;
      return {
        connected: status.connected,
        timestamp: status.timestamp,
        version: status.version,
        enhanced: true,
        connectionState: stats.state,
        uptime: Math.round(stats.uptime / 1000),
        performance: {
          totalQueries: stats.totalQueries,
          failedQueries: stats.failedQueries,
          successRate: stats.totalQueries > 0 ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[19][0]++, ((stats.totalQueries - stats.failedQueries) / stats.totalQueries * 100).toFixed(2) + '%') :
          /* istanbul ignore next */
          (cov_18prcktstb().b[19][1]++, '100%'),
          avgLatency: Math.round(stats.avgLatency),
          reconnectAttempts: stats.reconnectAttempts
        },
        pool: {
          maxConnections: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[20][0]++, process.env.DB_POOL_MAX) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[20][1]++, '50')),
          minConnections: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[21][0]++, process.env.DB_POOL_MIN) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[21][1]++, '10')),
          active: status.connected ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[22][0]++, 1) :
          /* istanbul ignore next */
          (cov_18prcktstb().b[22][1]++, 0),
          acquireTimeout: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[23][0]++, process.env.DB_POOL_ACQUIRE) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[23][1]++, '60000')),
          idleTimeout: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[24][0]++, process.env.DB_POOL_IDLE) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[24][1]++, '20000'))
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[18][1]++;
    }
    // 回退到传统状态检查
    const status =
    /* istanbul ignore next */
    (cov_18prcktstb().s[109]++, await checkDatabaseConnection());
    /* istanbul ignore next */
    cov_18prcktstb().s[110]++;
    return {
      connected: status.connected,
      timestamp: status.timestamp,
      version: status.version,
      latency: status.latency,
      enhanced: false,
      // 模拟连接池信息（实际需要根据具体数据库驱动获取）
      pool: {
        total: parseInt(
        /* istanbul ignore next */
        (cov_18prcktstb().b[25][0]++, process.env.DB_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[25][1]++, '10')),
        active: status.connected ?
        /* istanbul ignore next */
        (cov_18prcktstb().b[26][0]++, 1) :
        /* istanbul ignore next */
        (cov_18prcktstb().b[26][1]++, 0),
        idle: status.connected ?
        /* istanbul ignore next */
        (cov_18prcktstb().b[27][0]++, parseInt(
        /* istanbul ignore next */
        (cov_18prcktstb().b[28][0]++, process.env.DB_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[28][1]++, '10')) - 1) :
        /* istanbul ignore next */
        (cov_18prcktstb().b[27][1]++, 0),
        waiting: 0
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[111]++;
    console.error('Failed to get database pool status:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[112]++;
    throw error;
  }
}
/**
 * 获取数据库性能概览
 * @returns {Promise<DatabasePerformanceOverview>} 数据库性能概览信息
 */
async function getDatabasePerformanceOverview() {
  /* istanbul ignore next */
  cov_18prcktstb().f[11]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_18prcktstb().s[113]++, new Date());
  /* istanbul ignore next */
  cov_18prcktstb().s[114]++;
  try {
    // 获取监控状态
    const monitoringActive =
    /* istanbul ignore next */
    (cov_18prcktstb().s[115]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[29][0]++, monitoring_1.databaseMonitor) &&
    /* istanbul ignore next */
    (cov_18prcktstb().b[29][1]++, monitoring_1.databaseMonitor.isMonitoring()));
    let monitoringInfo =
    /* istanbul ignore next */
    (cov_18prcktstb().s[116]++, {
      isActive: false,
      metricsCount: 0,
      alertsCount: 0
    });
    /* istanbul ignore next */
    cov_18prcktstb().s[117]++;
    if (monitoringActive) {
      /* istanbul ignore next */
      cov_18prcktstb().b[30][0]++;
      const metrics =
      /* istanbul ignore next */
      (cov_18prcktstb().s[118]++, monitoring_1.databaseMonitor.getMetrics());
      const alerts =
      /* istanbul ignore next */
      (cov_18prcktstb().s[119]++, monitoring_1.databaseMonitor.getAlerts());
      /* istanbul ignore next */
      cov_18prcktstb().s[120]++;
      monitoringInfo = {
        isActive: true,
        metricsCount: metrics.length,
        alertsCount: alerts.filter(alert => {
          /* istanbul ignore next */
          cov_18prcktstb().f[12]++;
          cov_18prcktstb().s[121]++;
          return /* istanbul ignore next */(cov_18prcktstb().b[31][0]++, alert.level === 'CRITICAL') ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[31][1]++, alert.level === 'WARNING');
        }).length
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[30][1]++;
    }
    // 获取优化状态
    const optimizationStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[122]++, await checkOptimizationStatus());
    const optimizationInfo =
    /* istanbul ignore next */
    (cov_18prcktstb().s[123]++, {
      isActive: optimizationStatus.enabled,
      componentsStatus: optimizationStatus.enabled ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[32][0]++, monitoring_1.databaseMonitor.getOptimizationStatus()) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[32][1]++, {}),
      recommendations: optimizationStatus.recommendations
    });
    // 计算健康评分
    const healthCheck =
    /* istanbul ignore next */
    (cov_18prcktstb().s[124]++, await performDatabaseHealthCheck());
    let healthScore =
    /* istanbul ignore next */
    (cov_18prcktstb().s[125]++, 100);
    /* istanbul ignore next */
    cov_18prcktstb().s[126]++;
    if (healthCheck.status === 'unhealthy') {
      /* istanbul ignore next */
      cov_18prcktstb().b[33][0]++;
      cov_18prcktstb().s[127]++;
      healthScore = 30;
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[33][1]++;
      cov_18prcktstb().s[128]++;
      if (healthCheck.status === 'degraded') {
        /* istanbul ignore next */
        cov_18prcktstb().b[34][0]++;
        cov_18prcktstb().s[129]++;
        healthScore = 70;
      } else {
        /* istanbul ignore next */
        cov_18prcktstb().b[34][1]++;
        cov_18prcktstb().s[130]++;
        if (monitoringInfo.alertsCount > 0) {
          /* istanbul ignore next */
          cov_18prcktstb().b[35][0]++;
          cov_18prcktstb().s[131]++;
          healthScore = Math.max(50, 100 - monitoringInfo.alertsCount * 10);
        } else
        /* istanbul ignore next */
        {
          cov_18prcktstb().b[35][1]++;
        }
      }
    }
    const healthStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[132]++, healthScore >= 90 ?
    /* istanbul ignore next */
    (cov_18prcktstb().b[36][0]++, 'excellent') :
    /* istanbul ignore next */
    (cov_18prcktstb().b[36][1]++, healthScore >= 70 ?
    /* istanbul ignore next */
    (cov_18prcktstb().b[37][0]++, 'good') :
    /* istanbul ignore next */
    (cov_18prcktstb().b[37][1]++, healthScore >= 50 ?
    /* istanbul ignore next */
    (cov_18prcktstb().b[38][0]++, 'fair') :
    /* istanbul ignore next */
    (cov_18prcktstb().b[38][1]++, 'poor'))));
    const healthIssues =
    /* istanbul ignore next */
    (cov_18prcktstb().s[133]++, []);
    /* istanbul ignore next */
    cov_18prcktstb().s[134]++;
    if (!healthCheck.checks.connection.connected) {
      /* istanbul ignore next */
      cov_18prcktstb().b[39][0]++;
      cov_18prcktstb().s[135]++;
      healthIssues.push('数据库连接失败');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[39][1]++;
    }
    cov_18prcktstb().s[136]++;
    if (!healthCheck.checks.queries.read) {
      /* istanbul ignore next */
      cov_18prcktstb().b[40][0]++;
      cov_18prcktstb().s[137]++;
      healthIssues.push('数据库读取操作失败');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[40][1]++;
    }
    cov_18prcktstb().s[138]++;
    if (!healthCheck.checks.queries.write) {
      /* istanbul ignore next */
      cov_18prcktstb().b[41][0]++;
      cov_18prcktstb().s[139]++;
      healthIssues.push('数据库写入操作失败');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[41][1]++;
    }
    cov_18prcktstb().s[140]++;
    if (monitoringInfo.alertsCount > 0) {
      /* istanbul ignore next */
      cov_18prcktstb().b[42][0]++;
      cov_18prcktstb().s[141]++;
      healthIssues.push(`存在 ${monitoringInfo.alertsCount} 个活跃告警`);
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[42][1]++;
    }
    cov_18prcktstb().s[142]++;
    if (!optimizationStatus.enabled) {
      /* istanbul ignore next */
      cov_18prcktstb().b[43][0]++;
      cov_18prcktstb().s[143]++;
      healthIssues.push('性能优化组件未启用');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[43][1]++;
    }
    cov_18prcktstb().s[144]++;
    return {
      monitoring: monitoringInfo,
      optimization: optimizationInfo,
      health: {
        score: healthScore,
        status: healthStatus,
        issues: healthIssues
      },
      timestamp
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[145]++;
    console.error('Failed to get database performance overview:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[146]++;
    return {
      monitoring: {
        isActive: false,
        metricsCount: 0,
        alertsCount: 0
      },
      optimization: {
        isActive: false,
        componentsStatus: {},
        recommendations: []
      },
      health: {
        score: 0,
        status: 'poor',
        issues: ['无法获取性能概览信息']
      },
      timestamp
    };
  }
}
/**
 * 触发数据库性能优化
 * @returns {Promise<boolean>} 优化是否成功触发
 */
async function triggerDatabaseOptimization() {
  /* istanbul ignore next */
  cov_18prcktstb().f[13]++;
  cov_18prcktstb().s[147]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[148]++;
    if (
    /* istanbul ignore next */
    (cov_18prcktstb().b[45][0]++, !monitoring_1.databaseMonitor) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[45][1]++, !monitoring_1.databaseMonitor.isMonitoring())) {
      /* istanbul ignore next */
      cov_18prcktstb().b[44][0]++;
      cov_18prcktstb().s[149]++;
      console.warn('Database monitoring is not active, cannot trigger optimization');
      /* istanbul ignore next */
      cov_18prcktstb().s[150]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[44][1]++;
    }
    // 触发优化
    cov_18prcktstb().s[151]++;
    await monitoring_1.databaseMonitor.triggerOptimization();
    /* istanbul ignore next */
    cov_18prcktstb().s[152]++;
    console.log('Database optimization triggered successfully');
    /* istanbul ignore next */
    cov_18prcktstb().s[153]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[154]++;
    console.error('Failed to trigger database optimization:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[155]++;
    return false;
  }
}
/**
 * 获取数据库性能报告
 * @returns {Promise<any>} 性能报告
 */
async function getDatabasePerformanceReport() {
  /* istanbul ignore next */
  cov_18prcktstb().f[14]++;
  cov_18prcktstb().s[156]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[157]++;
    if (!enhanced_database_manager_1.DatabasePerformanceUtils) {
      /* istanbul ignore next */
      cov_18prcktstb().b[46][0]++;
      cov_18prcktstb().s[158]++;
      throw new Error('DatabasePerformanceUtils not available');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[46][1]++;
    }
    cov_18prcktstb().s[159]++;
    return await enhanced_database_manager_1.DatabasePerformanceUtils.getPerformanceReport();
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[160]++;
    console.error('Failed to get database performance report:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[161]++;
    throw error;
  }
}
// 进程退出时清理连接
/* istanbul ignore next */
cov_18prcktstb().s[162]++;
process.on('beforeExit', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[15]++;
  cov_18prcktstb().s[163]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[164]++;
    // 优先使用增强连接管理器的优雅关闭
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[47][0]++;
      cov_18prcktstb().s[165]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[47][1]++;
      cov_18prcktstb().s[166]++;
      await closeDatabaseConnection();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[167]++;
    console.error('Error during database cleanup:', error);
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[168]++;
process.on('SIGINT', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[16]++;
  cov_18prcktstb().s[169]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[170]++;
    console.log('Received SIGINT, initiating graceful shutdown...');
    // 优先使用增强连接管理器的优雅关闭
    /* istanbul ignore next */
    cov_18prcktstb().s[171]++;
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[48][0]++;
      cov_18prcktstb().s[172]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[48][1]++;
      cov_18prcktstb().s[173]++;
      await closeDatabaseConnection();
      /* istanbul ignore next */
      cov_18prcktstb().s[174]++;
      process.exit(0);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[175]++;
    console.error('Error during graceful shutdown:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[176]++;
    process.exit(1);
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[177]++;
process.on('SIGTERM', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[17]++;
  cov_18prcktstb().s[178]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[179]++;
    console.log('Received SIGTERM, initiating graceful shutdown...');
    // 优先使用增强连接管理器的优雅关闭
    /* istanbul ignore next */
    cov_18prcktstb().s[180]++;
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[49][0]++;
      cov_18prcktstb().s[181]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[49][1]++;
      cov_18prcktstb().s[182]++;
      await closeDatabaseConnection();
      /* istanbul ignore next */
      cov_18prcktstb().s[183]++;
      process.exit(0);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[184]++;
    console.error('Error during graceful shutdown:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[185]++;
    process.exit(1);
  }
});
// 导出增强连接管理器实例和相关功能
var enhanced_connection_2 =
/* istanbul ignore next */
(cov_18prcktstb().s[186]++, require("./enhanced-connection"));
/* istanbul ignore next */
cov_18prcktstb().s[187]++;
Object.defineProperty(exports, "enhancedDb", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[18]++;
    cov_18prcktstb().s[188]++;
    return enhanced_connection_2.enhancedDb;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[189]++;
Object.defineProperty(exports, "EnhancedDatabaseConnection", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[19]++;
    cov_18prcktstb().s[190]++;
    return enhanced_connection_2.EnhancedDatabaseConnection;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[191]++;
Object.defineProperty(exports, "ConnectionState", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[20]++;
    cov_18prcktstb().s[192]++;
    return enhanced_connection_2.ConnectionState;
  }
});
// 初始化增强数据库连接（如果环境变量启用）
/* istanbul ignore next */
cov_18prcktstb().s[193]++;
if (process.env.ENHANCED_DB_CONNECTION === 'true') {
  /* istanbul ignore next */
  cov_18prcktstb().b[50][0]++;
  cov_18prcktstb().s[194]++;
  enhanced_connection_1.enhancedDb.connect().catch(error => {
    /* istanbul ignore next */
    cov_18prcktstb().f[21]++;
    cov_18prcktstb().s[195]++;
    console.error('Failed to initialize enhanced database connection:', error);
  });
} else
/* istanbul ignore next */
{
  cov_18prcktstb().b[50][1]++;
}
// 默认导出Prisma客户端
cov_18prcktstb().s[196]++;
exports.default = prisma;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,