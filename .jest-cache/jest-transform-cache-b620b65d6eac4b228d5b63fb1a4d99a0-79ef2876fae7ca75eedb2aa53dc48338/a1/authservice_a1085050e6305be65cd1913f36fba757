eb410382585df4f120e28a5e3037f740
"use strict";

/**
 * @file lib/services/auth-service.ts
 * @description Authentication service for handling user authentication and authorization.
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_4ers7xjov() {
  var path = "E:\\zk-agent\\lib\\services\\auth-service.ts";
  var hash = "3a3b4563120a20c69c4ae43f6bcdb5214f787042";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\services\\auth-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 12
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "2": {
        start: {
          line: 9,
          column: 34
        },
        end: {
          line: 9,
          column: 125
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 11,
          column: 150
        }
      },
      "4": {
        start: {
          line: 10,
          column: 79
        },
        end: {
          line: 10,
          column: 131
        }
      },
      "5": {
        start: {
          line: 11,
          column: 9
        },
        end: {
          line: 11,
          column: 150
        }
      },
      "6": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "7": {
        start: {
          line: 11,
          column: 58
        },
        end: {
          line: 11,
          column: 150
        }
      },
      "8": {
        start: {
          line: 11,
          column: 81
        },
        end: {
          line: 11,
          column: 150
        }
      },
      "9": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 66
        }
      },
      "10": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "11": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 96
        }
      },
      "12": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "13": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 49
        }
      },
      "14": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "15": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "16": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "17": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "18": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "20": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "21": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 93
        }
      },
      "22": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "23": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 58
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "25": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 54
        }
      },
      "26": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "27": {
        start: {
          line: 53,
          column: 46
        },
        end: {
          line: 53,
          column: 82
        }
      },
      "28": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "29": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 34
        }
      },
      "30": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 69,
          column: 16
        }
      },
      "31": {
        start: {
          line: 76,
          column: 17
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "32": {
        start: {
          line: 77,
          column: 46
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "33": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "34": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "35": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 68
        }
      },
      "37": {
        start: {
          line: 85,
          column: 31
        },
        end: {
          line: 85,
          column: 75
        }
      },
      "38": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "39": {
        start: {
          line: 103,
          column: 46
        },
        end: {
          line: 103,
          column: 85
        }
      },
      "40": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "41": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 110,
          column: 28
        }
      },
      "42": {
        start: {
          line: 117,
          column: 21
        },
        end: {
          line: 138,
          column: 1
        }
      },
      "43": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 66
        }
      },
      "44": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 50
        }
      },
      "46": {
        start: {
          line: 122,
          column: 17
        },
        end: {
          line: 132,
          column: 6
        }
      },
      "47": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "48": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 55
        }
      },
      "49": {
        start: {
          line: 136,
          column: 59
        },
        end: {
          line: 136,
          column: 95
        }
      },
      "50": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 58
        }
      },
      "51": {
        start: {
          line: 139,
          column: 0
        },
        end: {
          line: 139,
          column: 36
        }
      },
      "52": {
        start: {
          line: 147,
          column: 23
        },
        end: {
          line: 173,
          column: 1
        }
      },
      "53": {
        start: {
          line: 148,
          column: 41
        },
        end: {
          line: 148,
          column: 45
        }
      },
      "54": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 172,
          column: 7
        }
      },
      "55": {
        start: {
          line: 150,
          column: 21
        },
        end: {
          line: 156,
          column: 10
        }
      },
      "56": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "57": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 47
        }
      },
      "58": {
        start: {
          line: 160,
          column: 32
        },
        end: {
          line: 160,
          column: 96
        }
      },
      "59": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "60": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "61": {
        start: {
          line: 164,
          column: 31
        },
        end: {
          line: 164,
          column: 78
        }
      },
      "62": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "63": {
        start: {
          line: 174,
          column: 0
        },
        end: {
          line: 174,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 8,
            column: 47
          }
        },
        loc: {
          start: {
            line: 8,
            column: 87
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 76,
            column: 17
          },
          end: {
            line: 76,
            column: 18
          }
        },
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 76
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 78,
            column: 42
          }
        },
        loc: {
          start: {
            line: 78,
            column: 59
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 78
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 117,
            column: 22
          }
        },
        loc: {
          start: {
            line: 117,
            column: 38
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 117
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 147,
            column: 23
          },
          end: {
            line: 147,
            column: 24
          }
        },
        loc: {
          start: {
            line: 147,
            column: 47
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 147
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 149,
            column: 41
          },
          end: {
            line: 149,
            column: 42
          }
        },
        loc: {
          start: {
            line: 149,
            column: 59
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 22
          }
        }, {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 41
          }
        }, {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 42
          },
          end: {
            line: 9,
            column: 48
          }
        }, {
          start: {
            line: 9,
            column: 51
          },
          end: {
            line: 9,
            column: 125
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 51
          },
          end: {
            line: 9,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 67
          },
          end: {
            line: 9,
            column: 118
          }
        }, {
          start: {
            line: 9,
            column: 121
          },
          end: {
            line: 9,
            column: 125
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 11,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 11,
            column: 150
          }
        }, {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 150
          }
        }],
        line: 10
      },
      "4": {
        loc: {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 10,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 10,
            column: 35
          }
        }, {
          start: {
            line: 10,
            column: 39
          },
          end: {
            line: 10,
            column: 77
          }
        }],
        line: 10
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 58
          },
          end: {
            line: 11,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 58
          },
          end: {
            line: 11,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 11,
            column: 85
          },
          end: {
            line: 11,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 86
          },
          end: {
            line: 11,
            column: 143
          }
        }, {
          start: {
            line: 11,
            column: 148
          },
          end: {
            line: 11,
            column: 149
          }
        }],
        line: 11
      },
      "7": {
        loc: {
          start: {
            line: 11,
            column: 86
          },
          end: {
            line: 11,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 94
          },
          end: {
            line: 11,
            column: 98
          }
        }, {
          start: {
            line: 11,
            column: 101
          },
          end: {
            line: 11,
            column: 143
          }
        }],
        line: 11
      },
      "8": {
        loc: {
          start: {
            line: 11,
            column: 101
          },
          end: {
            line: 11,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 109
          },
          end: {
            line: 11,
            column: 126
          }
        }, {
          start: {
            line: 11,
            column: 129
          },
          end: {
            line: 11,
            column: 143
          }
        }],
        line: 11
      },
      "9": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 16
          }
        }, {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        }, {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 12,
            column: 62
          }
        }],
        line: 12
      },
      "10": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "11": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "15": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "16": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 133,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: 133,
            column: 17
          },
          end: {
            line: 133,
            column: 41
          }
        }],
        line: 133
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\services\\auth-service.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\services\\auth-service.ts"],
      sourcesContent: ["/**\n * @file lib/services/auth-service.ts\n * @description Authentication service for handling user authentication and authorization.\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { z } from 'zod';\nimport { enhancedDb, dbTransaction } from '@/lib/database';\nimport { hashPassword, verifyPassword } from '@/lib/auth/password';\nimport { generateToken, verifyToken } from '@/lib/auth/jwt';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { IAuthService, loginSchema, registerSchema, changePasswordSchema } from '../interfaces/auth-manager.interface';\nimport { injectable } from '../di/container';\n\n@injectable()\nexport class AuthService implements IAuthService {\n  async login(data: z.infer<typeof loginSchema>) {\n    const { email, password } = data;\n\n    const user = await enhancedDb.prisma.user.findUnique({\n      where: { email: email.toLowerCase() },\n      select: {\n        id: true,\n        email: true,\n        password: true,\n        name: true,\n        avatar: true,\n        role: true,\n        status: true,\n      },\n    });\n\n    if (!user) {\n      throw new Error('Invalid email or password.');\n    }\n\n    const isValidPassword = await verifyPassword(password, user.password);\n    if (!isValidPassword) {\n      throw new Error('Invalid email or password.');\n    }\n\n    if (user.status !== 'ACTIVE') {\n      throw new Error('Account is not active.');\n    }\n\n    // Update login stats\n    await enhancedDb.prisma.user.update({\n      where: { id: user.id },\n      data: {\n        lastLoginAt: new Date(),\n        loginCount: { increment: 1 },\n      },\n    });\n\n    const { accessToken, refreshToken } = await generateToken(user);\n\n    return {\n      user: {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        avatar: user.avatar,\n        role: user.role,\n      },\n      tokens: { accessToken, refreshToken },\n    };\n  }\n}\n\n/**\n * Handles user registration.\n *\n * @param {object} data - The registration data.\n * @returns {Promise<object>} The registration result with tokens.\n */\nexport const register = async (data: z.infer<typeof registerSchema>) => {\n  const { email, password, name, avatar } = data;\n\n  return dbTransaction(async (prisma) => {\n    const existingUser = await prisma.user.findUnique({\n      where: { email: email.toLowerCase() },\n    });\n\n    if (existingUser) {\n      throw new Error('User with this email already exists.');\n    }\n\n    const hashedPassword = await hashPassword(password);\n\n    const newUser = await prisma.user.create({\n      data: {\n        email: email.toLowerCase(),\n        password: hashedPassword,\n        name,\n        avatar,\n        role: 'USER',\n        status: 'ACTIVE',\n      },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        avatar: true,\n        role: true,\n      },\n    });\n\n    const { accessToken, refreshToken } = await generateToken(newUser);\n\n    return {\n      user: newUser,\n      tokens: { accessToken, refreshToken },\n    };\n  });\n};\n\n/**\n * Refreshes the access token using a refresh token.\n *\n * @param {string} refreshToken - The refresh token.\n * @returns {Promise<object>} The new tokens.\n */\nexport const refreshToken = async (token: string) => {\n  const payload = await verifyToken(token, 'refresh');\n  if (!payload) {\n    throw new Error('Invalid refresh token.');\n  }\n\n  const user = await enhancedDb.prisma.user.findUnique({\n    where: { id: payload.userId },\n    select: {\n      id: true,\n      email: true,\n      name: true,\n      avatar: true,\n      role: true,\n      status: true,\n    },\n  });\n\n  if (!user || user.status !== 'ACTIVE') {\n    throw new Error('User not found or inactive.');\n  }\n\n  const { accessToken, refreshToken: newRefreshToken } = await generateToken(user);\n\n  return { accessToken, refreshToken: newRefreshToken };\n};\n\n/**\n * Changes the user's password.\n *\n * @param {string} userId - The user ID.\n * @param {object} data - The password change data.\n * @returns {Promise<void>}\n */\nexport const changePassword = async (userId: string, data: z.infer<typeof changePasswordSchema>) => {\n  const { oldPassword, newPassword } = data;\n\n  return dbTransaction(async (prisma) => {\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        password: true,\n      },\n    });\n\n    if (!user) {\n      throw new Error('User not found.');\n    }\n\n    const isValidPassword = await verifyPassword(oldPassword, user.password);\n    if (!isValidPassword) {\n      throw new Error('Invalid current password.');\n    }\n\n    const hashedPassword = await hashPassword(newPassword);\n\n    await prisma.user.update({\n      where: { id: userId },\n      data: {\n        password: hashedPassword,\n        updatedAt: new Date(),\n      },\n    });\n  });\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a3b4563120a20c69c4ae43f6bcdb5214f787042"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4ers7xjov = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4ers7xjov();
var __decorate =
/* istanbul ignore next */
(cov_4ers7xjov().s[0]++,
/* istanbul ignore next */
(cov_4ers7xjov().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_4ers7xjov().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_4ers7xjov().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_4ers7xjov().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_4ers7xjov().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_4ers7xjov().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_4ers7xjov().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_4ers7xjov().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_4ers7xjov().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_4ers7xjov().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_4ers7xjov().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_4ers7xjov().b[3][0]++;
    cov_4ers7xjov().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_4ers7xjov().b[3][1]++;
    cov_4ers7xjov().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_4ers7xjov().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_4ers7xjov().b[5][0]++;
        cov_4ers7xjov().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_4ers7xjov().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_4ers7xjov().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_4ers7xjov().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_4ers7xjov().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_4ers7xjov().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_4ers7xjov().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_4ers7xjov().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_4ers7xjov().s[9]++;
  return /* istanbul ignore next */(cov_4ers7xjov().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_4ers7xjov().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_4ers7xjov().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
/* istanbul ignore next */
cov_4ers7xjov().s[10]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4ers7xjov().s[11]++;
exports.changePassword = exports.refreshToken = exports.register = exports.AuthService = void 0;
const database_1 =
/* istanbul ignore next */
(cov_4ers7xjov().s[12]++, require("@/lib/database"));
const password_1 =
/* istanbul ignore next */
(cov_4ers7xjov().s[13]++, require("@/lib/auth/password"));
const jwt_1 =
/* istanbul ignore next */
(cov_4ers7xjov().s[14]++, require("@/lib/auth/jwt"));
const container_1 =
/* istanbul ignore next */
(cov_4ers7xjov().s[15]++, require("../di/container"));
/* istanbul ignore next */
cov_4ers7xjov().s[16]++;
let AuthService = class AuthService {
  async login(data) {
    /* istanbul ignore next */
    cov_4ers7xjov().f[1]++;
    const {
      email,
      password
    } =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[17]++, data);
    const user =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[18]++, await database_1.enhancedDb.prisma.user.findUnique({
      where: {
        email: email.toLowerCase()
      },
      select: {
        id: true,
        email: true,
        password: true,
        name: true,
        avatar: true,
        role: true,
        status: true
      }
    }));
    /* istanbul ignore next */
    cov_4ers7xjov().s[19]++;
    if (!user) {
      /* istanbul ignore next */
      cov_4ers7xjov().b[10][0]++;
      cov_4ers7xjov().s[20]++;
      throw new Error('Invalid email or password.');
    } else
    /* istanbul ignore next */
    {
      cov_4ers7xjov().b[10][1]++;
    }
    const isValidPassword =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[21]++, await (0, password_1.verifyPassword)(password, user.password));
    /* istanbul ignore next */
    cov_4ers7xjov().s[22]++;
    if (!isValidPassword) {
      /* istanbul ignore next */
      cov_4ers7xjov().b[11][0]++;
      cov_4ers7xjov().s[23]++;
      throw new Error('Invalid email or password.');
    } else
    /* istanbul ignore next */
    {
      cov_4ers7xjov().b[11][1]++;
    }
    cov_4ers7xjov().s[24]++;
    if (user.status !== 'ACTIVE') {
      /* istanbul ignore next */
      cov_4ers7xjov().b[12][0]++;
      cov_4ers7xjov().s[25]++;
      throw new Error('Account is not active.');
    } else
    /* istanbul ignore next */
    {
      cov_4ers7xjov().b[12][1]++;
    }
    // Update login stats
    cov_4ers7xjov().s[26]++;
    await database_1.enhancedDb.prisma.user.update({
      where: {
        id: user.id
      },
      data: {
        lastLoginAt: new Date(),
        loginCount: {
          increment: 1
        }
      }
    });
    const {
      accessToken,
      refreshToken
    } =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[27]++, await (0, jwt_1.generateToken)(user));
    /* istanbul ignore next */
    cov_4ers7xjov().s[28]++;
    return {
      user: {
        id: user.id,
        email: user.email,
        name: user.name,
        avatar: user.avatar,
        role: user.role
      },
      tokens: {
        accessToken,
        refreshToken
      }
    };
  }
};
/* istanbul ignore next */
cov_4ers7xjov().s[29]++;
exports.AuthService = AuthService;
/* istanbul ignore next */
cov_4ers7xjov().s[30]++;
exports.AuthService = AuthService = __decorate([(0, container_1.injectable)()], AuthService);
/**
 * Handles user registration.
 *
 * @param {object} data - The registration data.
 * @returns {Promise<object>} The registration result with tokens.
 */
/* istanbul ignore next */
cov_4ers7xjov().s[31]++;
const register = async data => {
  /* istanbul ignore next */
  cov_4ers7xjov().f[2]++;
  const {
    email,
    password,
    name,
    avatar
  } =
  /* istanbul ignore next */
  (cov_4ers7xjov().s[32]++, data);
  /* istanbul ignore next */
  cov_4ers7xjov().s[33]++;
  return (0, database_1.dbTransaction)(async prisma => {
    /* istanbul ignore next */
    cov_4ers7xjov().f[3]++;
    const existingUser =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[34]++, await prisma.user.findUnique({
      where: {
        email: email.toLowerCase()
      }
    }));
    /* istanbul ignore next */
    cov_4ers7xjov().s[35]++;
    if (existingUser) {
      /* istanbul ignore next */
      cov_4ers7xjov().b[13][0]++;
      cov_4ers7xjov().s[36]++;
      throw new Error('User with this email already exists.');
    } else
    /* istanbul ignore next */
    {
      cov_4ers7xjov().b[13][1]++;
    }
    const hashedPassword =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[37]++, await (0, password_1.hashPassword)(password));
    const newUser =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[38]++, await prisma.user.create({
      data: {
        email: email.toLowerCase(),
        password: hashedPassword,
        name,
        avatar,
        role: 'USER',
        status: 'ACTIVE'
      },
      select: {
        id: true,
        email: true,
        name: true,
        avatar: true,
        role: true
      }
    }));
    const {
      accessToken,
      refreshToken
    } =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[39]++, await (0, jwt_1.generateToken)(newUser));
    /* istanbul ignore next */
    cov_4ers7xjov().s[40]++;
    return {
      user: newUser,
      tokens: {
        accessToken,
        refreshToken
      }
    };
  });
};
/* istanbul ignore next */
cov_4ers7xjov().s[41]++;
exports.register = register;
/**
 * Refreshes the access token using a refresh token.
 *
 * @param {string} refreshToken - The refresh token.
 * @returns {Promise<object>} The new tokens.
 */
/* istanbul ignore next */
cov_4ers7xjov().s[42]++;
const refreshToken = async token => {
  /* istanbul ignore next */
  cov_4ers7xjov().f[4]++;
  const payload =
  /* istanbul ignore next */
  (cov_4ers7xjov().s[43]++, await (0, jwt_1.verifyToken)(token, 'refresh'));
  /* istanbul ignore next */
  cov_4ers7xjov().s[44]++;
  if (!payload) {
    /* istanbul ignore next */
    cov_4ers7xjov().b[14][0]++;
    cov_4ers7xjov().s[45]++;
    throw new Error('Invalid refresh token.');
  } else
  /* istanbul ignore next */
  {
    cov_4ers7xjov().b[14][1]++;
  }
  const user =
  /* istanbul ignore next */
  (cov_4ers7xjov().s[46]++, await database_1.enhancedDb.prisma.user.findUnique({
    where: {
      id: payload.userId
    },
    select: {
      id: true,
      email: true,
      name: true,
      avatar: true,
      role: true,
      status: true
    }
  }));
  /* istanbul ignore next */
  cov_4ers7xjov().s[47]++;
  if (
  /* istanbul ignore next */
  (cov_4ers7xjov().b[16][0]++, !user) ||
  /* istanbul ignore next */
  (cov_4ers7xjov().b[16][1]++, user.status !== 'ACTIVE')) {
    /* istanbul ignore next */
    cov_4ers7xjov().b[15][0]++;
    cov_4ers7xjov().s[48]++;
    throw new Error('User not found or inactive.');
  } else
  /* istanbul ignore next */
  {
    cov_4ers7xjov().b[15][1]++;
  }
  const {
    accessToken,
    refreshToken: newRefreshToken
  } =
  /* istanbul ignore next */
  (cov_4ers7xjov().s[49]++, await (0, jwt_1.generateToken)(user));
  /* istanbul ignore next */
  cov_4ers7xjov().s[50]++;
  return {
    accessToken,
    refreshToken: newRefreshToken
  };
};
/* istanbul ignore next */
cov_4ers7xjov().s[51]++;
exports.refreshToken = refreshToken;
/**
 * Changes the user's password.
 *
 * @param {string} userId - The user ID.
 * @param {object} data - The password change data.
 * @returns {Promise<void>}
 */
/* istanbul ignore next */
cov_4ers7xjov().s[52]++;
const changePassword = async (userId, data) => {
  /* istanbul ignore next */
  cov_4ers7xjov().f[5]++;
  const {
    oldPassword,
    newPassword
  } =
  /* istanbul ignore next */
  (cov_4ers7xjov().s[53]++, data);
  /* istanbul ignore next */
  cov_4ers7xjov().s[54]++;
  return (0, database_1.dbTransaction)(async prisma => {
    /* istanbul ignore next */
    cov_4ers7xjov().f[6]++;
    const user =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[55]++, await prisma.user.findUnique({
      where: {
        id: userId
      },
      select: {
        id: true,
        password: true
      }
    }));
    /* istanbul ignore next */
    cov_4ers7xjov().s[56]++;
    if (!user) {
      /* istanbul ignore next */
      cov_4ers7xjov().b[17][0]++;
      cov_4ers7xjov().s[57]++;
      throw new Error('User not found.');
    } else
    /* istanbul ignore next */
    {
      cov_4ers7xjov().b[17][1]++;
    }
    const isValidPassword =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[58]++, await (0, password_1.verifyPassword)(oldPassword, user.password));
    /* istanbul ignore next */
    cov_4ers7xjov().s[59]++;
    if (!isValidPassword) {
      /* istanbul ignore next */
      cov_4ers7xjov().b[18][0]++;
      cov_4ers7xjov().s[60]++;
      throw new Error('Invalid current password.');
    } else
    /* istanbul ignore next */
    {
      cov_4ers7xjov().b[18][1]++;
    }
    const hashedPassword =
    /* istanbul ignore next */
    (cov_4ers7xjov().s[61]++, await (0, password_1.hashPassword)(newPassword));
    /* istanbul ignore next */
    cov_4ers7xjov().s[62]++;
    await prisma.user.update({
      where: {
        id: userId
      },
      data: {
        password: hashedPassword,
        updatedAt: new Date()
      }
    });
  });
};
/* istanbul ignore next */
cov_4ers7xjov().s[63]++;
exports.changePassword = changePassword;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,