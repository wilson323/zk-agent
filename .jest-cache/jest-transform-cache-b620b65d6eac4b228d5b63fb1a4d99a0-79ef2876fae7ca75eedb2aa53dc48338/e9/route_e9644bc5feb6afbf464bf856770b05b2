753f175d759d238a3b97c38882505336
"use strict";

/**
 * @file fastgpt\batch-forward\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_4umnuob1f() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts";
  var hash = "66a051ac12d5592fd416656f75416bc134f8b486";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 95
        }
      },
      "8": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "9": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 118
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 105
          },
          end: {
            line: 12,
            column: 106
          }
        },
        loc: {
          start: {
            line: 12,
            column: 180
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 36
          }
        }, {
          start: {
            line: 15,
            column: 40
          },
          end: {
            line: 15,
            column: 68
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 29,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 29,
            column: 65
          }
        }, {
          start: {
            line: 29,
            column: 69
          },
          end: {
            line: 29,
            column: 99
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE/C,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;IAE9B,SAAS;IACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;QACjE,OAAO,+BAAkB,CAAC,KAAK,CAC7B,mCAAmC,EACnC,GAAG,CACJ,CAAC;IACJ,CAAC;IAED,gBAAgB;IAChB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,uBAAuB,EAAE;QAClF,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAU,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;SACzD;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B,CAAC,CAAC;IAEH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;QACjB,OAAO,+BAAkB,CAAC,KAAK,CAC7B,IAAI,CAAC,OAAO,IAAI,8BAA8B,EAC9C,QAAQ,CAAC,MAAM,CAChB,CAAC;IACJ,CAAC;IAED,OAAO,+BAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1C,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\batch-forward\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const body = await req.json();\n    \n    // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n    if (!process.env.FASTGPT_API_URL || !process.env.FASTGPT_API_KEY) {\n      return ApiResponseWrapper.error(\n        'FastGPT API configuration missing',\n        500\n      );\n    }\n\n    // \u8F6C\u53D1\u8BF7\u6C42\u5230 FastGPT\n    const response = await fetch(`${process.env.FASTGPT_API_URL}/api/v1/batch-forward`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${process.env.FASTGPT_API_KEY}`,\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      return ApiResponseWrapper.error(\n        data.message || 'FastGPT batch forward failed',\n        response.status\n      );\n    }\n\n    return ApiResponseWrapper.success(data);\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66a051ac12d5592fd416656f75416bc134f8b486"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4umnuob1f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4umnuob1f();
cov_4umnuob1f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4umnuob1f().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_4umnuob1f().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_4umnuob1f().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_4umnuob1f().s[4]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_4umnuob1f().f[0]++;
  const body =
  /* istanbul ignore next */
  (cov_4umnuob1f().s[5]++, await req.json());
  // 检查环境变量
  /* istanbul ignore next */
  cov_4umnuob1f().s[6]++;
  if (
  /* istanbul ignore next */
  (cov_4umnuob1f().b[1][0]++, !process.env.FASTGPT_API_URL) ||
  /* istanbul ignore next */
  (cov_4umnuob1f().b[1][1]++, !process.env.FASTGPT_API_KEY)) {
    /* istanbul ignore next */
    cov_4umnuob1f().b[0][0]++;
    cov_4umnuob1f().s[7]++;
    return api_helper_1.ApiResponseWrapper.error('FastGPT API configuration missing', 500);
  } else
  /* istanbul ignore next */
  {
    cov_4umnuob1f().b[0][1]++;
  }
  // 转发请求到 FastGPT
  const response =
  /* istanbul ignore next */
  (cov_4umnuob1f().s[8]++, await fetch(`${process.env.FASTGPT_API_URL}/api/v1/batch-forward`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${process.env.FASTGPT_API_KEY}`
    },
    body: JSON.stringify(body)
  }));
  const data =
  /* istanbul ignore next */
  (cov_4umnuob1f().s[9]++, await response.json());
  /* istanbul ignore next */
  cov_4umnuob1f().s[10]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_4umnuob1f().b[2][0]++;
    cov_4umnuob1f().s[11]++;
    return api_helper_1.ApiResponseWrapper.error(
    /* istanbul ignore next */
    (cov_4umnuob1f().b[3][0]++, data.message) ||
    /* istanbul ignore next */
    (cov_4umnuob1f().b[3][1]++, 'FastGPT batch forward failed'), response.status);
  } else
  /* istanbul ignore next */
  {
    cov_4umnuob1f().b[2][1]++;
  }
  cov_4umnuob1f().s[12]++;
  return api_helper_1.ApiResponseWrapper.success(data);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNHVtbnVvYjFmIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiYXBpX3JvdXRlX3dyYXBwZXJfMSIsInJlcXVpcmUiLCJhcGlfaGVscGVyXzEiLCJleHBvcnRzIiwiUE9TVCIsImNyZWF0ZUFwaVJvdXRlIiwiUm91dGVDb25maWdzIiwicHJvdGVjdGVkUG9zdCIsInJlcSIsInBhcmFtcyIsInZhbGlkYXRlZEJvZHkiLCJ2YWxpZGF0ZWRRdWVyeSIsInVzZXIiLCJyZXF1ZXN0SWQiLCJib2R5IiwianNvbiIsInByb2Nlc3MiLCJlbnYiLCJGQVNUR1BUX0FQSV9VUkwiLCJGQVNUR1BUX0FQSV9LRVkiLCJBcGlSZXNwb25zZVdyYXBwZXIiLCJlcnJvciIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJvayIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJzdWNjZXNzIl0sInNvdXJjZXMiOlsiRTpcXHprLWFnZW50XFxhcHBcXGFwaVxcZmFzdGdwdFxcYmF0Y2gtZm9yd2FyZFxccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBmYXN0Z3B0XFxiYXRjaC1mb3J3YXJkXFxyb3V0ZS50c1xuICogQGRlc2NyaXB0aW9uIE1pZ3JhdGVkIEFQSSByb3V0ZSB3aXRoIGdsb2JhbCBlcnJvciBoYW5kbGluZ1xuICogQGF1dGhvciBaSy1BZ2VudCBUZWFtXG4gKiBAZGF0ZSAyMDI1LTA2LTI1XG4gKi9cblxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGNyZWF0ZUFwaVJvdXRlLCBSb3V0ZUNvbmZpZ3MsIENvbW1vblZhbGlkYXRpb25zIH0gZnJvbSAnQC9saWIvbWlkZGxld2FyZS9hcGktcm91dGUtd3JhcHBlcic7XG5pbXBvcnQgeyBBcGlSZXNwb25zZVdyYXBwZXIgfSBmcm9tICdAL2xpYi91dGlscy9hcGktaGVscGVyJztcblxuZXhwb3J0IGNvbnN0IFBPU1QgPSBjcmVhdGVBcGlSb3V0ZShcbiAgUm91dGVDb25maWdzLnByb3RlY3RlZFBvc3QoKSxcbiAgYXN5bmMgKHJlcTogTmV4dFJlcXVlc3QsIHsgcGFyYW1zLCB2YWxpZGF0ZWRCb2R5LCB2YWxpZGF0ZWRRdWVyeSwgdXNlciwgcmVxdWVzdElkIH0pID0+IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgICBcbiAgICAvLyDmo4Dmn6Xnjq/looPlj5jph49cbiAgICBpZiAoIXByb2Nlc3MuZW52LkZBU1RHUFRfQVBJX1VSTCB8fCAhcHJvY2Vzcy5lbnYuRkFTVEdQVF9BUElfS0VZKSB7XG4gICAgICByZXR1cm4gQXBpUmVzcG9uc2VXcmFwcGVyLmVycm9yKFxuICAgICAgICAnRmFzdEdQVCBBUEkgY29uZmlndXJhdGlvbiBtaXNzaW5nJyxcbiAgICAgICAgNTAwXG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIOi9rOWPkeivt+axguWIsCBGYXN0R1BUXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtwcm9jZXNzLmVudi5GQVNUR1BUX0FQSV9VUkx9L2FwaS92MS9iYXRjaC1mb3J3YXJkYCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3Byb2Nlc3MuZW52LkZBU1RHUFRfQVBJX0tFWX1gLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICAgIH0pO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHJldHVybiBBcGlSZXNwb25zZVdyYXBwZXIuZXJyb3IoXG4gICAgICAgIGRhdGEubWVzc2FnZSB8fCAnRmFzdEdQVCBiYXRjaCBmb3J3YXJkIGZhaWxlZCcsXG4gICAgICAgIHJlc3BvbnNlLnN0YXR1c1xuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gQXBpUmVzcG9uc2VXcmFwcGVyLnN1Y2Nlc3MoZGF0YSk7XG4gIH1cbik7XG5cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBNUIsSUFBQTtFQUFBO0VBQUEsSUFBQTZCLFFBQUEsR0FBQTVCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBMEIsUUFBQSxDQUFBOUIsSUFBQSxLQUFBOEIsUUFBQSxDQUFBOUIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTZC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