4aedbed41648c602c94c97106459d5c0
"use strict";

/* istanbul ignore next */
function cov_2ihkarx89z() {
  var path = "E:\\zk-agent\\lib\\database\\phase-123-optimizer.ts";
  var hash = "b3d334cc93d81d687918a5d4a6b11675ecf56ca6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\phase-123-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 63
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 66
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "4": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 72
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "6": {
        start: {
          line: 8,
          column: 33
        },
        end: {
          line: 8,
          column: 68
        }
      },
      "7": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 56
        }
      },
      "8": {
        start: {
          line: 10,
          column: 30
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 16
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 94
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 88
        }
      },
      "17": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 80
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 89
        }
      },
      "19": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "21": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "24": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "25": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 58
        }
      },
      "26": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "27": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "29": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "30": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "31": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "32": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "33": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 42
        }
      },
      "34": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "35": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "36": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "37": {
        start: {
          line: 67,
          column: 37
        },
        end: {
          line: 67,
          column: 63
        }
      },
      "38": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "39": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "40": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "41": {
        start: {
          line: 73,
          column: 37
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "42": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 43
        }
      },
      "43": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 60
        }
      },
      "44": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "45": {
        start: {
          line: 79,
          column: 37
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "46": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 43
        }
      },
      "47": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 60
        }
      },
      "48": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "49": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "50": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "51": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 24
        }
      },
      "52": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 35
        }
      },
      "53": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 37
        }
      },
      "54": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 30
        }
      },
      "55": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "56": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 36
        }
      },
      "57": {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "58": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "59": {
        start: {
          line: 113,
          column: 39
        },
        end: {
          line: 113,
          column: 91
        }
      },
      "60": {
        start: {
          line: 115,
          column: 39
        },
        end: {
          line: 115,
          column: 87
        }
      },
      "61": {
        start: {
          line: 117,
          column: 38
        },
        end: {
          line: 117,
          column: 90
        }
      },
      "62": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "63": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "64": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "65": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 34
        }
      },
      "66": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 62
        }
      },
      "67": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 50
        }
      },
      "68": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 61
        }
      },
      "69": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 45
        }
      },
      "70": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "71": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "72": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 30
        }
      },
      "73": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 38
        }
      },
      "74": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "75": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "76": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "77": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 72
        }
      },
      "78": {
        start: {
          line: 157,
          column: 32
        },
        end: {
          line: 157,
          column: 74
        }
      },
      "79": {
        start: {
          line: 159,
          column: 37
        },
        end: {
          line: 159,
          column: 79
        }
      },
      "80": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 68
        }
      },
      "81": {
        start: {
          line: 161,
          column: 36
        },
        end: {
          line: 161,
          column: 78
        }
      },
      "82": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "83": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "84": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 170,
          column: 14
        }
      },
      "85": {
        start: {
          line: 168,
          column: 77
        },
        end: {
          line: 168,
          column: 103
        }
      },
      "86": {
        start: {
          line: 169,
          column: 73
        },
        end: {
          line: 169,
          column: 97
        }
      },
      "87": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "88": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 34
        }
      },
      "89": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 63
        }
      },
      "90": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 50
        }
      },
      "91": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 61
        }
      },
      "92": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 45
        }
      },
      "93": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 49
        }
      },
      "94": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 22
        }
      },
      "95": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 30
        }
      },
      "96": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "97": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 193,
          column: 36
        }
      },
      "98": {
        start: {
          line: 194,
          column: 23
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "99": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "100": {
        start: {
          line: 205,
          column: 35
        },
        end: {
          line: 205,
          column: 73
        }
      },
      "101": {
        start: {
          line: 206,
          column: 43
        },
        end: {
          line: 206,
          column: 111
        }
      },
      "102": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 68
        }
      },
      "103": {
        start: {
          line: 209,
          column: 37
        },
        end: {
          line: 209,
          column: 93
        }
      },
      "104": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "105": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 219,
          column: 14
        }
      },
      "106": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 34
        }
      },
      "107": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 64
        }
      },
      "108": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 50
        }
      },
      "109": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 61
        }
      },
      "110": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 45
        }
      },
      "111": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 49
        }
      },
      "112": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 22
        }
      },
      "113": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 45
        }
      },
      "114": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "115": {
        start: {
          line: 251,
          column: 23
        },
        end: {
          line: 251,
          column: 52
        }
      },
      "116": {
        start: {
          line: 252,
          column: 31
        },
        end: {
          line: 252,
          column: 67
        }
      },
      "117": {
        start: {
          line: 252,
          column: 53
        },
        end: {
          line: 252,
          column: 66
        }
      },
      "118": {
        start: {
          line: 253,
          column: 30
        },
        end: {
          line: 253,
          column: 84
        }
      },
      "119": {
        start: {
          line: 253,
          column: 60
        },
        end: {
          line: 253,
          column: 80
        }
      },
      "120": {
        start: {
          line: 254,
          column: 35
        },
        end: {
          line: 254,
          column: 87
        }
      },
      "121": {
        start: {
          line: 254,
          column: 59
        },
        end: {
          line: 254,
          column: 86
        }
      },
      "122": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "123": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "124": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 19
        }
      },
      "125": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 31
        }
      },
      "126": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 33
        }
      },
      "127": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 52
        }
      },
      "128": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 44
        }
      },
      "129": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 50
        }
      },
      "130": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 63
        }
      },
      "131": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 42
        }
      },
      "132": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 26
        }
      },
      "133": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 34
        }
      },
      "134": {
        start: {
          line: 287,
          column: 0
        },
        end: {
          line: 287,
          column: 46
        }
      },
      "135": {
        start: {
          line: 289,
          column: 0
        },
        end: {
          line: 289,
          column: 52
        }
      },
      "136": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 297,
          column: 6
        }
      },
      "137": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "138": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 44
        }
      },
      "139": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 7
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 38,
            column: 65
          }
        },
        loc: {
          start: {
            line: 38,
            column: 76
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 54
          },
          end: {
            line: 41,
            column: 55
          }
        },
        loc: {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 58
          }
        },
        loc: {
          start: {
            line: 44,
            column: 71
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 52
          }
        },
        loc: {
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 55
          },
          end: {
            line: 50,
            column: 56
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 57
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 141
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 168,
            column: 63
          },
          end: {
            line: 168,
            column: 64
          }
        },
        loc: {
          start: {
            line: 168,
            column: 77
          },
          end: {
            line: 168,
            column: 103
          }
        },
        line: 168
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 169,
            column: 59
          },
          end: {
            line: 169,
            column: 60
          }
        },
        loc: {
          start: {
            line: 169,
            column: 73
          },
          end: {
            line: 169,
            column: 97
          }
        },
        line: 169
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 26
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 190
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 29
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 234
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 240
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 33
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 250
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 252,
            column: 44
          },
          end: {
            line: 252,
            column: 45
          }
        },
        loc: {
          start: {
            line: 252,
            column: 53
          },
          end: {
            line: 252,
            column: 66
          }
        },
        line: 252
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 253,
            column: 44
          },
          end: {
            line: 253,
            column: 45
          }
        },
        loc: {
          start: {
            line: 253,
            column: 60
          },
          end: {
            line: 253,
            column: 80
          }
        },
        line: 253
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 254,
            column: 50
          },
          end: {
            line: 254,
            column: 51
          }
        },
        loc: {
          start: {
            line: 254,
            column: 59
          },
          end: {
            line: 254,
            column: 86
          }
        },
        line: 254
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 17
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 266
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 282
      },
      "21": {
        name: "executePhase123Optimization",
        decl: {
          start: {
            line: 291,
            column: 15
          },
          end: {
            line: 291,
            column: 42
          }
        },
        loc: {
          start: {
            line: 291,
            column: 51
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 291
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "7": {
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 213,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 70
          },
          end: {
            line: 213,
            column: 72
          }
        }, {
          start: {
            line: 213,
            column: 75
          },
          end: {
            line: 213,
            column: 77
          }
        }],
        line: 213
      },
      "8": {
        loc: {
          start: {
            line: 216,
            column: 34
          },
          end: {
            line: 216,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 34
          },
          end: {
            line: 216,
            column: 62
          }
        }, {
          start: {
            line: 216,
            column: 66
          },
          end: {
            line: 216,
            column: 67
          }
        }],
        line: 216
      },
      "9": {
        loc: {
          start: {
            line: 254,
            column: 59
          },
          end: {
            line: 254,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 59
          },
          end: {
            line: 254,
            column: 80
          }
        }, {
          start: {
            line: 254,
            column: 84
          },
          end: {
            line: 254,
            column: 86
          }
        }],
        line: 254
      },
      "10": {
        loc: {
          start: {
            line: 256,
            column: 31
          },
          end: {
            line: 256,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 256,
            column: 52
          }
        }, {
          start: {
            line: 256,
            column: 55
          },
          end: {
            line: 256,
            column: 61
          }
        }],
        line: 256
      },
      "11": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\phase-123-optimizer.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\phase-123-optimizer.ts"],
      sourcesContent: ["import { EventEmitter } from 'events'\nimport { ConnectionPoolEnhancer } from './connection-pool-enhancer'\nimport { QueryOptimizer } from './query-optimizer'\nimport { CacheStrategyManager } from './cache-strategy-manager'\nimport { DatabaseSecurityManager } from './security-manager'\nimport { DatabaseMonitoringEnhancer } from './monitoring-enhancer'\nimport { databaseMonitor } from './monitoring'\nimport { enhancedDatabaseManager } from './enhanced-database-manager'\n\n/**\n * 123\u9636\u6BB5\u4F18\u5316\u7ED3\u679C\n */\nexport interface Phase123OptimizationResult {\n  phase: 1 | 2 | 3\n  success: boolean\n  duration: number\n  improvements: {\n    connectionPool?: {\n      beforeOptimization: any\n      afterOptimization: any\n      improvement: string\n    }\n    queryPerformance?: {\n      slowQueriesReduced: number\n      averageQueryTimeImprovement: number\n      optimizationSuggestions: number\n    }\n    cacheStrategy?: {\n      hitRateImprovement: number\n      memoryUsageOptimization: number\n      strategyChanges: string[]\n    }\n    security?: {\n      threatsDetected: number\n      vulnerabilitiesFixed: number\n      securityScore: number\n    }\n    monitoring?: {\n      alertsConfigured: number\n      metricsImproved: number\n      predictionAccuracy: number\n    }\n  }\n  errors?: string[]\n  warnings?: string[]\n  recommendations?: string[]\n}\n\n/**\n * 123\u9636\u6BB5\u4F18\u5316\u914D\u7F6E\n */\nexport interface Phase123Config {\n  enablePhase1: boolean // \u8FDE\u63A5\u6C60\u4F18\u5316\n  enablePhase2: boolean // \u67E5\u8BE2\u548C\u7F13\u5B58\u4F18\u5316\n  enablePhase3: boolean // \u5B89\u5168\u548C\u76D1\u63A7\u589E\u5F3A\n  \n  // \u9636\u6BB51\u914D\u7F6E\n  connectionPoolConfig?: {\n    enableDynamicAdjustment: boolean\n    enableBenchmarking: boolean\n    optimizationInterval: number\n  }\n  \n  // \u9636\u6BB52\u914D\u7F6E\n  queryOptimizationConfig?: {\n    enableSlowQueryDetection: boolean\n    slowQueryThreshold: number\n    enableQueryCaching: boolean\n  }\n  \n  cacheStrategyConfig?: {\n    enableMultiLevel: boolean\n    enableAdaptiveStrategy: boolean\n    preloadCriticalData: boolean\n  }\n  \n  // \u9636\u6BB53\u914D\u7F6E\n  securityConfig?: {\n    enableThreatDetection: boolean\n    enableAuditLogging: boolean\n    enableDataMasking: boolean\n  }\n  \n  monitoringConfig?: {\n    enablePredictiveAnalysis: boolean\n    enableAnomalyDetection: boolean\n    enableAdvancedReporting: boolean\n  }\n}\n\n/**\n * 123\u9636\u6BB5\u6570\u636E\u5E93\u4F18\u5316\u5668\n * \u6309\u9636\u6BB5\u6267\u884C\u6570\u636E\u5E93\u6027\u80FD\u4F18\u5316\n */\nexport class Phase123Optimizer extends EventEmitter {\n  private connectionPoolEnhancer: ConnectionPoolEnhancer\n  private queryOptimizer: QueryOptimizer\n  private cacheStrategyManager: CacheStrategyManager\n  private securityManager: DatabaseSecurityManager\n  private monitoringEnhancer: DatabaseMonitoringEnhancer\n  \n  private isRunning = false\n  private currentPhase: number | null = null\n  private optimizationHistory: Phase123OptimizationResult[] = []\n  \n  constructor(private config: Phase123Config = {\n    enablePhase1: true,\n    enablePhase2: true,\n    enablePhase3: true\n  }) {\n    super()\n    \n    this.connectionPoolEnhancer = new ConnectionPoolEnhancer()\n    this.queryOptimizer = new QueryOptimizer()\n    this.cacheStrategyManager = new CacheStrategyManager()\n    this.securityManager = new DatabaseSecurityManager()\n    this.monitoringEnhancer = new DatabaseMonitoringEnhancer()\n    \n    this.setupEventListeners()\n  }\n  \n  /**\n   * \u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\u5668\n   */\n  private setupEventListeners(): void {\n    // \u76D1\u542C\u5404\u7EC4\u4EF6\u7684\u4E8B\u4EF6\n    this.connectionPoolEnhancer.on('optimization-complete', (result) => {\n      this.emit('phase1-progress', result)\n    })\n    \n    this.queryOptimizer.on('slow-query-detected', (query) => {\n      this.emit('slow-query-detected', query)\n    })\n    \n    this.cacheStrategyManager.on('strategy-changed', (strategy) => {\n      this.emit('cache-strategy-changed', strategy)\n    })\n    \n    this.securityManager.on('threat-detected', (threat) => {\n      this.emit('security-threat', threat)\n    })\n    \n    this.monitoringEnhancer.on('anomaly-detected', (anomaly) => {\n      this.emit('monitoring-anomaly', anomaly)\n    })\n  }\n  \n  /**\n   * \u6267\u884C\u5B8C\u6574\u7684123\u9636\u6BB5\u4F18\u5316\n   */\n  async executeAll(): Promise<Phase123OptimizationResult[]> {\n    if (this.isRunning) {\n      throw new Error('\u4F18\u5316\u5DF2\u5728\u8FDB\u884C\u4E2D')\n    }\n    \n    this.isRunning = true\n    this.emit('optimization-started')\n    \n    const results: Phase123OptimizationResult[] = []\n    \n    try {\n      // \u9636\u6BB51: \u8FDE\u63A5\u6C60\u4F18\u5316\n      if (this.config.enablePhase1) {\n        const phase1Result = await this.executePhase1()\n        results.push(phase1Result)\n        this.optimizationHistory.push(phase1Result)\n      }\n      \n      // \u9636\u6BB52: \u67E5\u8BE2\u548C\u7F13\u5B58\u4F18\u5316\n      if (this.config.enablePhase2) {\n        const phase2Result = await this.executePhase2()\n        results.push(phase2Result)\n        this.optimizationHistory.push(phase2Result)\n      }\n      \n      // \u9636\u6BB53: \u5B89\u5168\u548C\u76D1\u63A7\u589E\u5F3A\n      if (this.config.enablePhase3) {\n        const phase3Result = await this.executePhase3()\n        results.push(phase3Result)\n        this.optimizationHistory.push(phase3Result)\n      }\n      \n      this.emit('optimization-completed', results)\n      return results\n      \n    } catch (error) {\n      this.emit('optimization-error', error)\n      throw error\n    } finally {\n      this.isRunning = false\n      this.currentPhase = null\n    }\n  }\n  \n  /**\n   * \u6267\u884C\u9636\u6BB51: \u8FDE\u63A5\u6C60\u4F18\u5316\n   */\n  async executePhase1(): Promise<Phase123OptimizationResult> {\n    this.currentPhase = 1\n    this.emit('phase-started', 1)\n    \n    const startTime = Date.now()\n    const result: Phase123OptimizationResult = {\n      phase: 1,\n      success: false,\n      duration: 0,\n      improvements: {},\n      errors: [],\n      warnings: [],\n      recommendations: []\n    }\n    \n    try {\n      // \u83B7\u53D6\u4F18\u5316\u524D\u7684\u8FDE\u63A5\u6C60\u72B6\u6001\n      const beforeOptimization = await this.connectionPoolEnhancer.getCurrentConfig()\n      \n      // \u6267\u884C\u8FDE\u63A5\u6C60\u4F18\u5316\n      const optimizationResult = await this.connectionPoolEnhancer.optimizePool()\n      \n      // \u83B7\u53D6\u4F18\u5316\u540E\u7684\u8FDE\u63A5\u6C60\u72B6\u6001\n      const afterOptimization = await this.connectionPoolEnhancer.getCurrentConfig()\n      \n      // \u8FD0\u884C\u57FA\u51C6\u6D4B\u8BD5\n      if (this.config.connectionPoolConfig?.enableBenchmarking) {\n        await this.connectionPoolEnhancer.runBenchmark()\n      }\n      \n      result.improvements.connectionPool = {\n        beforeOptimization,\n        afterOptimization,\n        improvement: optimizationResult.reason\n      }\n      \n      result.success = true\n      result.recommendations?.push('\u8FDE\u63A5\u6C60\u5DF2\u4F18\u5316\uFF0C\u5EFA\u8BAE\u76D1\u63A7\u6027\u80FD\u6307\u6807\u53D8\u5316')\n      \n      this.emit('phase1-completed', result)\n      \n    } catch (error) {\n      result.errors?.push(`\u9636\u6BB51\u4F18\u5316\u5931\u8D25: ${(error as Error).message}`)\n      this.emit('phase1-error', error)\n    }\n    \n    result.duration = Date.now() - startTime\n    return result\n  }\n  \n  /**\n   * \u6267\u884C\u9636\u6BB52: \u67E5\u8BE2\u548C\u7F13\u5B58\u4F18\u5316\n   */\n  async executePhase2(): Promise<Phase123OptimizationResult> {\n    this.currentPhase = 2\n    this.emit('phase-started', 2)\n    \n    const startTime = Date.now()\n    const result: Phase123OptimizationResult = {\n      phase: 2,\n      success: false,\n      duration: 0,\n      improvements: {},\n      errors: [],\n      warnings: [],\n      recommendations: []\n    }\n    \n    try {\n      // \u67E5\u8BE2\u4F18\u5316\n      const queryStats = await this.queryOptimizer.getQueryStats()\n      const slowQueries = await this.queryOptimizer.getSlowQueries()\n      \n      // \u7F13\u5B58\u7B56\u7565\u4F18\u5316\n      const cacheStatsBefore = await this.cacheStrategyManager.getStats()\n      await this.cacheStrategyManager.optimizeCacheStrategy()\n      const cacheStatsAfter = await this.cacheStrategyManager.getStats()\n      \n      // \u9884\u52A0\u8F7D\u5173\u952E\u6570\u636E\n      if (this.config.cacheStrategyConfig?.preloadCriticalData) {\n        await this.cacheStrategyManager.warmupCache()\n      }\n      \n      result.improvements.queryPerformance = {\n        slowQueriesReduced: slowQueries.length,\n        averageQueryTimeImprovement: queryStats.reduce((acc, cur) => acc + cur.avgExecutionTime, 0) / queryStats.length,\n        optimizationSuggestions: queryStats.reduce((acc, cur) => acc + cur.executionCount, 0)\n      }\n      \n      result.improvements.cacheStrategy = {\n        hitRateImprovement: cacheStatsAfter.hitRate - cacheStatsBefore.hitRate,\n        memoryUsageOptimization: cacheStatsBefore.memoryUsage - cacheStatsAfter.memoryUsage,\n        strategyChanges: ['\u7B56\u7565\u4F18\u5316\u5B8C\u6210']\n      }\n      \n      result.success = true\n      result.recommendations?.push('\u67E5\u8BE2\u548C\u7F13\u5B58\u4F18\u5316\u5B8C\u6210\uFF0C\u5EFA\u8BAE\u5B9A\u671F\u6E05\u7406\u7F13\u5B58')\n      \n      this.emit('phase2-completed', result)\n      \n    } catch (error) {\n      result.errors?.push(`\u9636\u6BB52\u4F18\u5316\u5931\u8D25: ${(error as Error).message}`)\n      this.emit('phase2-error', error)\n    }\n    \n    result.duration = Date.now() - startTime\n    return result\n  }\n  \n  /**\n   * \u6267\u884C\u9636\u6BB53: \u5B89\u5168\u548C\u76D1\u63A7\u589E\u5F3A\n   */\n  async executePhase3(): Promise<Phase123OptimizationResult> {\n    this.currentPhase = 3\n    this.emit('phase-started', 3)\n    \n    const startTime = Date.now()\n    const result: Phase123OptimizationResult = {\n      phase: 3,\n      success: false,\n      duration: 0,\n      improvements: {},\n      errors: [],\n      warnings: [],\n      recommendations: []\n    }\n    \n    try {\n      // \u5B89\u5168\u589E\u5F3A\n      const securityConfig = await this.securityManager.getConfig()\n      const threatDetectionResults = await this.securityManager.detectSQLInjection('SELECT * FROM users')\n      \n      // \u76D1\u63A7\u589E\u5F3A\n      await this.monitoringEnhancer.startEnhancedMonitoring()\n      const monitoringReport = await this.monitoringEnhancer.generateMonitoringReport()\n      \n      \n      \n      result.improvements.security = {\n        threatsDetected: threatDetectionResults.length,\n        vulnerabilitiesFixed: 0, // \u9700\u8981\u6839\u636E\u5B9E\u9645\u4FEE\u590D\u60C5\u51B5\u66F4\u65B0\n        securityScore: securityConfig.enableThreatDetection ? 85 : 60\n      }\n      \n      result.improvements.monitoring = {\n        alertsConfigured: monitoringReport.alertsCount || 0,\n        metricsImproved: 10, // \u793A\u4F8B\u503C\n        predictionAccuracy: 0.85 // \u793A\u4F8B\u503C\n      }\n      \n      result.success = true\n      result.recommendations?.push('\u5B89\u5168\u548C\u76D1\u63A7\u7CFB\u7EDF\u5DF2\u589E\u5F3A\uFF0C\u5EFA\u8BAE\u5B9A\u671F\u68C0\u67E5\u544A\u8B66')\n      \n      this.emit('phase3-completed', result)\n      \n    } catch (error) {\n      result.errors?.push(`\u9636\u6BB53\u4F18\u5316\u5931\u8D25: ${(error as Error).message}`)\n      this.emit('phase3-error', error)\n    }\n    \n    result.duration = Date.now() - startTime\n    return result\n  }\n  \n  /**\n   * \u83B7\u53D6\u4F18\u5316\u5386\u53F2\n   */\n  getOptimizationHistory(): Phase123OptimizationResult[] {\n    return [...this.optimizationHistory]\n  }\n  \n  /**\n   * \u83B7\u53D6\u5F53\u524D\u8FD0\u884C\u72B6\u6001\n   */\n  getStatus(): {\n    isRunning: boolean\n    currentPhase: number | null\n    totalOptimizations: number\n  } {\n    return {\n      isRunning: this.isRunning,\n      currentPhase: this.currentPhase,\n      totalOptimizations: this.optimizationHistory.length\n    }\n  }\n  \n  /**\n   * \u751F\u6210\u4F18\u5316\u62A5\u544A\n   */\n  generateOptimizationReport(): {\n    summary: string\n    phases: Phase123OptimizationResult[]\n    overallSuccess: boolean\n    totalDuration: number\n    recommendations: string[]\n  } {\n    const phases = this.getOptimizationHistory()\n    const overallSuccess = phases.every(phase => phase.success)\n    const totalDuration = phases.reduce((sum, phase) => sum + phase.duration, 0)\n    const allRecommendations = phases.flatMap(phase => phase.recommendations || [])\n    \n    return {\n      summary: `123\u9636\u6BB5\u4F18\u5316${overallSuccess ? '\u6210\u529F' : '\u90E8\u5206\u6210\u529F'}\u5B8C\u6210\uFF0C\u5171\u8017\u65F6${totalDuration}ms`,\n      phases,\n      overallSuccess,\n      totalDuration,\n      recommendations: [...new Set(allRecommendations)]\n    }\n  }\n  \n  /**\n   * \u505C\u6B62\u4F18\u5316\n   */\n  async stop(): Promise<void> {\n    if (!this.isRunning) {\n      return\n    }\n    \n    this.isRunning = false\n    this.currentPhase = null\n    \n    // \u505C\u6B62\u5404\u7EC4\u4EF6\n    await this.connectionPoolEnhancer.destroy()\n    await this.queryOptimizer.destroy()\n    await this.cacheStrategyManager.destroy()\n    await this.monitoringEnhancer.stopEnhancedMonitoring()\n    \n    this.emit('optimization-stopped')\n  }\n  \n  /**\n   * \u9500\u6BC1\u4F18\u5316\u5668\n   */\n  async destroy(): Promise<void> {\n    await this.stop()\n    this.removeAllListeners()\n  }\n}\n\n// \u521B\u5EFA\u9ED8\u8BA4\u5B9E\u4F8B\nexport const phase123Optimizer = new Phase123Optimizer()\n\n// \u5BFC\u51FA\u4FBF\u6377\u51FD\u6570\nexport async function executePhase123Optimization(config?: Partial<Phase123Config>): Promise<Phase123OptimizationResult[]> {\n  const optimizer = new Phase123Optimizer({\n    enablePhase1: true,\n    enablePhase2: true,\n    enablePhase3: true,\n    ...config\n  })\n  \n  try {\n    return await optimizer.executeAll()\n  } finally {\n    await optimizer.destroy()\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b3d334cc93d81d687918a5d4a6b11675ecf56ca6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ihkarx89z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ihkarx89z();
cov_2ihkarx89z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ihkarx89z().s[1]++;
exports.phase123Optimizer = exports.Phase123Optimizer = void 0;
/* istanbul ignore next */
cov_2ihkarx89z().s[2]++;
exports.executePhase123Optimization = executePhase123Optimization;
const events_1 =
/* istanbul ignore next */
(cov_2ihkarx89z().s[3]++, require("events"));
const connection_pool_enhancer_1 =
/* istanbul ignore next */
(cov_2ihkarx89z().s[4]++, require("./connection-pool-enhancer"));
const query_optimizer_1 =
/* istanbul ignore next */
(cov_2ihkarx89z().s[5]++, require("./query-optimizer"));
const cache_strategy_manager_1 =
/* istanbul ignore next */
(cov_2ihkarx89z().s[6]++, require("./cache-strategy-manager"));
const security_manager_1 =
/* istanbul ignore next */
(cov_2ihkarx89z().s[7]++, require("./security-manager"));
const monitoring_enhancer_1 =
/* istanbul ignore next */
(cov_2ihkarx89z().s[8]++, require("./monitoring-enhancer"));
/**
 * 123阶段数据库优化器
 * 按阶段执行数据库性能优化
 */
class Phase123Optimizer extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(config =
  /* istanbul ignore next */
  (cov_2ihkarx89z().b[0][0]++, {
    enablePhase1: true,
    enablePhase2: true,
    enablePhase3: true
  })) {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[0]++;
    cov_2ihkarx89z().s[9]++;
    super();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[10]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[11]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[12]++;
    this.currentPhase = null;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[13]++;
    this.optimizationHistory = [];
    /* istanbul ignore next */
    cov_2ihkarx89z().s[14]++;
    this.connectionPoolEnhancer = new connection_pool_enhancer_1.ConnectionPoolEnhancer();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[15]++;
    this.queryOptimizer = new query_optimizer_1.QueryOptimizer();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[16]++;
    this.cacheStrategyManager = new cache_strategy_manager_1.CacheStrategyManager();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[17]++;
    this.securityManager = new security_manager_1.DatabaseSecurityManager();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[18]++;
    this.monitoringEnhancer = new monitoring_enhancer_1.DatabaseMonitoringEnhancer();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[19]++;
    this.setupEventListeners();
  }
  /**
   * 设置事件监听器
   */
  setupEventListeners() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[1]++;
    cov_2ihkarx89z().s[20]++;
    // 监听各组件的事件
    this.connectionPoolEnhancer.on('optimization-complete', result => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[2]++;
      cov_2ihkarx89z().s[21]++;
      this.emit('phase1-progress', result);
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[22]++;
    this.queryOptimizer.on('slow-query-detected', query => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[3]++;
      cov_2ihkarx89z().s[23]++;
      this.emit('slow-query-detected', query);
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[24]++;
    this.cacheStrategyManager.on('strategy-changed', strategy => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[4]++;
      cov_2ihkarx89z().s[25]++;
      this.emit('cache-strategy-changed', strategy);
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[26]++;
    this.securityManager.on('threat-detected', threat => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[5]++;
      cov_2ihkarx89z().s[27]++;
      this.emit('security-threat', threat);
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[28]++;
    this.monitoringEnhancer.on('anomaly-detected', anomaly => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[6]++;
      cov_2ihkarx89z().s[29]++;
      this.emit('monitoring-anomaly', anomaly);
    });
  }
  /**
   * 执行完整的123阶段优化
   */
  async executeAll() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[7]++;
    cov_2ihkarx89z().s[30]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_2ihkarx89z().b[1][0]++;
      cov_2ihkarx89z().s[31]++;
      throw new Error('优化已在进行中');
    } else
    /* istanbul ignore next */
    {
      cov_2ihkarx89z().b[1][1]++;
    }
    cov_2ihkarx89z().s[32]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[33]++;
    this.emit('optimization-started');
    const results =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[34]++, []);
    /* istanbul ignore next */
    cov_2ihkarx89z().s[35]++;
    try {
      /* istanbul ignore next */
      cov_2ihkarx89z().s[36]++;
      // 阶段1: 连接池优化
      if (this.config.enablePhase1) {
        /* istanbul ignore next */
        cov_2ihkarx89z().b[2][0]++;
        const phase1Result =
        /* istanbul ignore next */
        (cov_2ihkarx89z().s[37]++, await this.executePhase1());
        /* istanbul ignore next */
        cov_2ihkarx89z().s[38]++;
        results.push(phase1Result);
        /* istanbul ignore next */
        cov_2ihkarx89z().s[39]++;
        this.optimizationHistory.push(phase1Result);
      } else
      /* istanbul ignore next */
      {
        cov_2ihkarx89z().b[2][1]++;
      }
      // 阶段2: 查询和缓存优化
      cov_2ihkarx89z().s[40]++;
      if (this.config.enablePhase2) {
        /* istanbul ignore next */
        cov_2ihkarx89z().b[3][0]++;
        const phase2Result =
        /* istanbul ignore next */
        (cov_2ihkarx89z().s[41]++, await this.executePhase2());
        /* istanbul ignore next */
        cov_2ihkarx89z().s[42]++;
        results.push(phase2Result);
        /* istanbul ignore next */
        cov_2ihkarx89z().s[43]++;
        this.optimizationHistory.push(phase2Result);
      } else
      /* istanbul ignore next */
      {
        cov_2ihkarx89z().b[3][1]++;
      }
      // 阶段3: 安全和监控增强
      cov_2ihkarx89z().s[44]++;
      if (this.config.enablePhase3) {
        /* istanbul ignore next */
        cov_2ihkarx89z().b[4][0]++;
        const phase3Result =
        /* istanbul ignore next */
        (cov_2ihkarx89z().s[45]++, await this.executePhase3());
        /* istanbul ignore next */
        cov_2ihkarx89z().s[46]++;
        results.push(phase3Result);
        /* istanbul ignore next */
        cov_2ihkarx89z().s[47]++;
        this.optimizationHistory.push(phase3Result);
      } else
      /* istanbul ignore next */
      {
        cov_2ihkarx89z().b[4][1]++;
      }
      cov_2ihkarx89z().s[48]++;
      this.emit('optimization-completed', results);
      /* istanbul ignore next */
      cov_2ihkarx89z().s[49]++;
      return results;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ihkarx89z().s[50]++;
      this.emit('optimization-error', error);
      /* istanbul ignore next */
      cov_2ihkarx89z().s[51]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2ihkarx89z().s[52]++;
      this.isRunning = false;
      /* istanbul ignore next */
      cov_2ihkarx89z().s[53]++;
      this.currentPhase = null;
    }
  }
  /**
   * 执行阶段1: 连接池优化
   */
  async executePhase1() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[8]++;
    cov_2ihkarx89z().s[54]++;
    this.currentPhase = 1;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[55]++;
    this.emit('phase-started', 1);
    const startTime =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[56]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[57]++, {
      phase: 1,
      success: false,
      duration: 0,
      improvements: {},
      errors: [],
      warnings: [],
      recommendations: []
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[58]++;
    try {
      // 获取优化前的连接池状态
      const beforeOptimization =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[59]++, await this.connectionPoolEnhancer.getCurrentConfig());
      // 执行连接池优化
      const optimizationResult =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[60]++, await this.connectionPoolEnhancer.optimizePool());
      // 获取优化后的连接池状态
      const afterOptimization =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[61]++, await this.connectionPoolEnhancer.getCurrentConfig());
      // 运行基准测试
      /* istanbul ignore next */
      cov_2ihkarx89z().s[62]++;
      if (this.config.connectionPoolConfig?.enableBenchmarking) {
        /* istanbul ignore next */
        cov_2ihkarx89z().b[5][0]++;
        cov_2ihkarx89z().s[63]++;
        await this.connectionPoolEnhancer.runBenchmark();
      } else
      /* istanbul ignore next */
      {
        cov_2ihkarx89z().b[5][1]++;
      }
      cov_2ihkarx89z().s[64]++;
      result.improvements.connectionPool = {
        beforeOptimization,
        afterOptimization,
        improvement: optimizationResult.reason
      };
      /* istanbul ignore next */
      cov_2ihkarx89z().s[65]++;
      result.success = true;
      /* istanbul ignore next */
      cov_2ihkarx89z().s[66]++;
      result.recommendations?.push('连接池已优化，建议监控性能指标变化');
      /* istanbul ignore next */
      cov_2ihkarx89z().s[67]++;
      this.emit('phase1-completed', result);
    } catch (error) {
      /* istanbul ignore next */
      cov_2ihkarx89z().s[68]++;
      result.errors?.push(`阶段1优化失败: ${error.message}`);
      /* istanbul ignore next */
      cov_2ihkarx89z().s[69]++;
      this.emit('phase1-error', error);
    }
    /* istanbul ignore next */
    cov_2ihkarx89z().s[70]++;
    result.duration = Date.now() - startTime;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[71]++;
    return result;
  }
  /**
   * 执行阶段2: 查询和缓存优化
   */
  async executePhase2() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[9]++;
    cov_2ihkarx89z().s[72]++;
    this.currentPhase = 2;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[73]++;
    this.emit('phase-started', 2);
    const startTime =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[74]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[75]++, {
      phase: 2,
      success: false,
      duration: 0,
      improvements: {},
      errors: [],
      warnings: [],
      recommendations: []
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[76]++;
    try {
      // 查询优化
      const queryStats =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[77]++, await this.queryOptimizer.getQueryStats());
      const slowQueries =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[78]++, await this.queryOptimizer.getSlowQueries());
      // 缓存策略优化
      const cacheStatsBefore =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[79]++, await this.cacheStrategyManager.getStats());
      /* istanbul ignore next */
      cov_2ihkarx89z().s[80]++;
      await this.cacheStrategyManager.optimizeCacheStrategy();
      const cacheStatsAfter =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[81]++, await this.cacheStrategyManager.getStats());
      // 预加载关键数据
      /* istanbul ignore next */
      cov_2ihkarx89z().s[82]++;
      if (this.config.cacheStrategyConfig?.preloadCriticalData) {
        /* istanbul ignore next */
        cov_2ihkarx89z().b[6][0]++;
        cov_2ihkarx89z().s[83]++;
        await this.cacheStrategyManager.warmupCache();
      } else
      /* istanbul ignore next */
      {
        cov_2ihkarx89z().b[6][1]++;
      }
      cov_2ihkarx89z().s[84]++;
      result.improvements.queryPerformance = {
        slowQueriesReduced: slowQueries.length,
        averageQueryTimeImprovement: queryStats.reduce((acc, cur) => {
          /* istanbul ignore next */
          cov_2ihkarx89z().f[10]++;
          cov_2ihkarx89z().s[85]++;
          return acc + cur.avgExecutionTime;
        }, 0) / queryStats.length,
        optimizationSuggestions: queryStats.reduce((acc, cur) => {
          /* istanbul ignore next */
          cov_2ihkarx89z().f[11]++;
          cov_2ihkarx89z().s[86]++;
          return acc + cur.executionCount;
        }, 0)
      };
      /* istanbul ignore next */
      cov_2ihkarx89z().s[87]++;
      result.improvements.cacheStrategy = {
        hitRateImprovement: cacheStatsAfter.hitRate - cacheStatsBefore.hitRate,
        memoryUsageOptimization: cacheStatsBefore.memoryUsage - cacheStatsAfter.memoryUsage,
        strategyChanges: ['策略优化完成']
      };
      /* istanbul ignore next */
      cov_2ihkarx89z().s[88]++;
      result.success = true;
      /* istanbul ignore next */
      cov_2ihkarx89z().s[89]++;
      result.recommendations?.push('查询和缓存优化完成，建议定期清理缓存');
      /* istanbul ignore next */
      cov_2ihkarx89z().s[90]++;
      this.emit('phase2-completed', result);
    } catch (error) {
      /* istanbul ignore next */
      cov_2ihkarx89z().s[91]++;
      result.errors?.push(`阶段2优化失败: ${error.message}`);
      /* istanbul ignore next */
      cov_2ihkarx89z().s[92]++;
      this.emit('phase2-error', error);
    }
    /* istanbul ignore next */
    cov_2ihkarx89z().s[93]++;
    result.duration = Date.now() - startTime;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[94]++;
    return result;
  }
  /**
   * 执行阶段3: 安全和监控增强
   */
  async executePhase3() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[12]++;
    cov_2ihkarx89z().s[95]++;
    this.currentPhase = 3;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[96]++;
    this.emit('phase-started', 3);
    const startTime =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[97]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[98]++, {
      phase: 3,
      success: false,
      duration: 0,
      improvements: {},
      errors: [],
      warnings: [],
      recommendations: []
    });
    /* istanbul ignore next */
    cov_2ihkarx89z().s[99]++;
    try {
      // 安全增强
      const securityConfig =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[100]++, await this.securityManager.getConfig());
      const threatDetectionResults =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[101]++, await this.securityManager.detectSQLInjection('SELECT * FROM users'));
      // 监控增强
      /* istanbul ignore next */
      cov_2ihkarx89z().s[102]++;
      await this.monitoringEnhancer.startEnhancedMonitoring();
      const monitoringReport =
      /* istanbul ignore next */
      (cov_2ihkarx89z().s[103]++, await this.monitoringEnhancer.generateMonitoringReport());
      /* istanbul ignore next */
      cov_2ihkarx89z().s[104]++;
      result.improvements.security = {
        threatsDetected: threatDetectionResults.length,
        vulnerabilitiesFixed: 0,
        // 需要根据实际修复情况更新
        securityScore: securityConfig.enableThreatDetection ?
        /* istanbul ignore next */
        (cov_2ihkarx89z().b[7][0]++, 85) :
        /* istanbul ignore next */
        (cov_2ihkarx89z().b[7][1]++, 60)
      };
      /* istanbul ignore next */
      cov_2ihkarx89z().s[105]++;
      result.improvements.monitoring = {
        alertsConfigured:
        /* istanbul ignore next */
        (cov_2ihkarx89z().b[8][0]++, monitoringReport.alertsCount) ||
        /* istanbul ignore next */
        (cov_2ihkarx89z().b[8][1]++, 0),
        metricsImproved: 10,
        // 示例值
        predictionAccuracy: 0.85 // 示例值
      };
      /* istanbul ignore next */
      cov_2ihkarx89z().s[106]++;
      result.success = true;
      /* istanbul ignore next */
      cov_2ihkarx89z().s[107]++;
      result.recommendations?.push('安全和监控系统已增强，建议定期检查告警');
      /* istanbul ignore next */
      cov_2ihkarx89z().s[108]++;
      this.emit('phase3-completed', result);
    } catch (error) {
      /* istanbul ignore next */
      cov_2ihkarx89z().s[109]++;
      result.errors?.push(`阶段3优化失败: ${error.message}`);
      /* istanbul ignore next */
      cov_2ihkarx89z().s[110]++;
      this.emit('phase3-error', error);
    }
    /* istanbul ignore next */
    cov_2ihkarx89z().s[111]++;
    result.duration = Date.now() - startTime;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[112]++;
    return result;
  }
  /**
   * 获取优化历史
   */
  getOptimizationHistory() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[13]++;
    cov_2ihkarx89z().s[113]++;
    return [...this.optimizationHistory];
  }
  /**
   * 获取当前运行状态
   */
  getStatus() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[14]++;
    cov_2ihkarx89z().s[114]++;
    return {
      isRunning: this.isRunning,
      currentPhase: this.currentPhase,
      totalOptimizations: this.optimizationHistory.length
    };
  }
  /**
   * 生成优化报告
   */
  generateOptimizationReport() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[15]++;
    const phases =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[115]++, this.getOptimizationHistory());
    const overallSuccess =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[116]++, phases.every(phase => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[16]++;
      cov_2ihkarx89z().s[117]++;
      return phase.success;
    }));
    const totalDuration =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[118]++, phases.reduce((sum, phase) => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[17]++;
      cov_2ihkarx89z().s[119]++;
      return sum + phase.duration;
    }, 0));
    const allRecommendations =
    /* istanbul ignore next */
    (cov_2ihkarx89z().s[120]++, phases.flatMap(phase => {
      /* istanbul ignore next */
      cov_2ihkarx89z().f[18]++;
      cov_2ihkarx89z().s[121]++;
      return /* istanbul ignore next */(cov_2ihkarx89z().b[9][0]++, phase.recommendations) ||
      /* istanbul ignore next */
      (cov_2ihkarx89z().b[9][1]++, []);
    }));
    /* istanbul ignore next */
    cov_2ihkarx89z().s[122]++;
    return {
      summary: `123阶段优化${overallSuccess ?
      /* istanbul ignore next */
      (cov_2ihkarx89z().b[10][0]++, '成功') :
      /* istanbul ignore next */
      (cov_2ihkarx89z().b[10][1]++, '部分成功')}完成，共耗时${totalDuration}ms`,
      phases,
      overallSuccess,
      totalDuration,
      recommendations: [...new Set(allRecommendations)]
    };
  }
  /**
   * 停止优化
   */
  async stop() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[19]++;
    cov_2ihkarx89z().s[123]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_2ihkarx89z().b[11][0]++;
      cov_2ihkarx89z().s[124]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ihkarx89z().b[11][1]++;
    }
    cov_2ihkarx89z().s[125]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_2ihkarx89z().s[126]++;
    this.currentPhase = null;
    // 停止各组件
    /* istanbul ignore next */
    cov_2ihkarx89z().s[127]++;
    await this.connectionPoolEnhancer.destroy();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[128]++;
    await this.queryOptimizer.destroy();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[129]++;
    await this.cacheStrategyManager.destroy();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[130]++;
    await this.monitoringEnhancer.stopEnhancedMonitoring();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[131]++;
    this.emit('optimization-stopped');
  }
  /**
   * 销毁优化器
   */
  async destroy() {
    /* istanbul ignore next */
    cov_2ihkarx89z().f[20]++;
    cov_2ihkarx89z().s[132]++;
    await this.stop();
    /* istanbul ignore next */
    cov_2ihkarx89z().s[133]++;
    this.removeAllListeners();
  }
}
/* istanbul ignore next */
cov_2ihkarx89z().s[134]++;
exports.Phase123Optimizer = Phase123Optimizer;
// 创建默认实例
/* istanbul ignore next */
cov_2ihkarx89z().s[135]++;
exports.phase123Optimizer = new Phase123Optimizer();
// 导出便捷函数
async function executePhase123Optimization(config) {
  /* istanbul ignore next */
  cov_2ihkarx89z().f[21]++;
  const optimizer =
  /* istanbul ignore next */
  (cov_2ihkarx89z().s[136]++, new Phase123Optimizer({
    enablePhase1: true,
    enablePhase2: true,
    enablePhase3: true,
    ...config
  }));
  /* istanbul ignore next */
  cov_2ihkarx89z().s[137]++;
  try {
    /* istanbul ignore next */
    cov_2ihkarx89z().s[138]++;
    return await optimizer.executeAll();
  } finally {
    /* istanbul ignore next */
    cov_2ihkarx89z().s[139]++;
    await optimizer.destroy();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,