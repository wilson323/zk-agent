75a2c0f4380adf2af6cacdfc67b8fe11
// Mock Next.js router
_getJestObj().mock('next/router', () => ({
  useRouter: () => ({
    route: '/',
    pathname: '/',
    query: {},
    asPath: '/',
    push: jest.fn(),
    replace: jest.fn(),
    reload: jest.fn(),
    back: jest.fn(),
    prefetch: jest.fn(),
    beforePopState: jest.fn(),
    events: {
      on: jest.fn(),
      off: jest.fn(),
      emit: jest.fn()
    }
  })
}));

// Mock Next.js navigation
_getJestObj().mock('next/navigation', () => ({
  useRouter: () => ({
    push: jest.fn(),
    replace: jest.fn(),
    refresh: jest.fn(),
    back: jest.fn(),
    forward: jest.fn()
  }),
  usePathname: () => '/',
  useSearchParams: () => new URLSearchParams()
}));

// Mock window.matchMedia
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
// Jest setup file - Simplified version

// 全局测试配置
global.console = {
  ...console,
  // 在测试中静默某些日志
  log: jest.fn(),
  debug: jest.fn(),
  info: jest.fn(),
  warn: console.warn,
  error: console.error
};

// 模拟环境变量
process.env.NODE_ENV = 'test';
process.env.NEXT_PUBLIC_APP_URL = 'http://localhost:3000';

// 设置测试超时
jest.setTimeout(30000);

// 基础全局变量
global.fetch = jest.fn();
global.TextEncoder = TextEncoder;
global.TextDecoder = TextDecoder;
Object.defineProperty(window, 'matchMedia', {
  writable: true,
  value: jest.fn().mockImplementation(query => ({
    matches: false,
    media: query,
    onchange: null,
    addListener: jest.fn(),
    removeListener: jest.fn(),
    addEventListener: jest.fn(),
    removeEventListener: jest.fn(),
    dispatchEvent: jest.fn()
  }))
});

// Mock IntersectionObserver
global.IntersectionObserver = jest.fn().mockImplementation(() => ({
  observe: jest.fn(),
  unobserve: jest.fn(),
  disconnect: jest.fn()
}));

// Mock ResizeObserver
global.ResizeObserver = jest.fn().mockImplementation(() => ({
  observe: jest.fn(),
  unobserve: jest.fn(),
  disconnect: jest.fn()
}));

// Mock localStorage
const localStorageMock = {
  getItem: jest.fn(),
  setItem: jest.fn(),
  removeItem: jest.fn(),
  clear: jest.fn()
};
Object.defineProperty(window, 'localStorage', {
  value: localStorageMock
});

// Mock sessionStorage
const sessionStorageMock = {
  getItem: jest.fn(),
  setItem: jest.fn(),
  removeItem: jest.fn(),
  clear: jest.fn()
};
Object.defineProperty(window, 'sessionStorage', {
  value: sessionStorageMock
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VSb3V0ZXIiLCJyb3V0ZSIsInBhdGhuYW1lIiwicXVlcnkiLCJhc1BhdGgiLCJwdXNoIiwiamVzdCIsImZuIiwicmVwbGFjZSIsInJlbG9hZCIsImJhY2siLCJwcmVmZXRjaCIsImJlZm9yZVBvcFN0YXRlIiwiZXZlbnRzIiwib24iLCJvZmYiLCJlbWl0IiwicmVmcmVzaCIsImZvcndhcmQiLCJ1c2VQYXRobmFtZSIsInVzZVNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsInJlcXVpcmUiLCJnbG9iYWwiLCJjb25zb2xlIiwibG9nIiwiZGVidWciLCJpbmZvIiwid2FybiIsImVycm9yIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTkVYVF9QVUJMSUNfQVBQX1VSTCIsInNldFRpbWVvdXQiLCJmZXRjaCIsIlRleHRFbmNvZGVyIiwiVGV4dERlY29kZXIiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIndpbmRvdyIsIndyaXRhYmxlIiwidmFsdWUiLCJtb2NrSW1wbGVtZW50YXRpb24iLCJtYXRjaGVzIiwibWVkaWEiLCJvbmNoYW5nZSIsImFkZExpc3RlbmVyIiwicmVtb3ZlTGlzdGVuZXIiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRpc3BhdGNoRXZlbnQiLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsIm9ic2VydmUiLCJ1bm9ic2VydmUiLCJkaXNjb25uZWN0IiwiUmVzaXplT2JzZXJ2ZXIiLCJsb2NhbFN0b3JhZ2VNb2NrIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwiY2xlYXIiLCJzZXNzaW9uU3RvcmFnZU1vY2siXSwic291cmNlcyI6WyJqZXN0LnNldHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEplc3Qgc2V0dXAgZmlsZSAtIFNpbXBsaWZpZWQgdmVyc2lvblxuXG4vLyDlhajlsYDmtYvor5XphY3nva5cbmdsb2JhbC5jb25zb2xlID0ge1xuICAuLi5jb25zb2xlLFxuICAvLyDlnKjmtYvor5XkuK3pnZnpu5jmn5Dkupvml6Xlv5dcbiAgbG9nOiBqZXN0LmZuKCksXG4gIGRlYnVnOiBqZXN0LmZuKCksXG4gIGluZm86IGplc3QuZm4oKSxcbiAgd2FybjogY29uc29sZS53YXJuLFxuICBlcnJvcjogY29uc29sZS5lcnJvcixcbn07XG5cbi8vIOaooeaLn+eOr+Wig+WPmOmHj1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAndGVzdCc7XG5wcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUFBfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7XG5cbi8vIOiuvue9rua1i+ivlei2heaXtlxuamVzdC5zZXRUaW1lb3V0KDMwMDAwKTtcblxuLy8g5Z+656GA5YWo5bGA5Y+Y6YePXG5nbG9iYWwuZmV0Y2ggPSBqZXN0LmZuKCk7XG5nbG9iYWwuVGV4dEVuY29kZXIgPSBUZXh0RW5jb2Rlcjtcbmdsb2JhbC5UZXh0RGVjb2RlciA9IFRleHREZWNvZGVyO1xuXG4vLyBNb2NrIE5leHQuanMgcm91dGVyXG5qZXN0Lm1vY2soJ25leHQvcm91dGVyJywgKCkgPT4gKHtcbiAgdXNlUm91dGVyOiAoKSA9PiAoe1xuICAgIHJvdXRlOiAnLycsXG4gICAgcGF0aG5hbWU6ICcvJyxcbiAgICBxdWVyeToge30sXG4gICAgYXNQYXRoOiAnLycsXG4gICAgcHVzaDogamVzdC5mbigpLFxuICAgIHJlcGxhY2U6IGplc3QuZm4oKSxcbiAgICByZWxvYWQ6IGplc3QuZm4oKSxcbiAgICBiYWNrOiBqZXN0LmZuKCksXG4gICAgcHJlZmV0Y2g6IGplc3QuZm4oKSxcbiAgICBiZWZvcmVQb3BTdGF0ZTogamVzdC5mbigpLFxuICAgIGV2ZW50czoge1xuICAgICAgb246IGplc3QuZm4oKSxcbiAgICAgIG9mZjogamVzdC5mbigpLFxuICAgICAgZW1pdDogamVzdC5mbigpLFxuICAgIH0sXG4gIH0pLFxufSkpO1xuXG4vLyBNb2NrIE5leHQuanMgbmF2aWdhdGlvblxuamVzdC5tb2NrKCduZXh0L25hdmlnYXRpb24nLCAoKSA9PiAoe1xuICB1c2VSb3V0ZXI6ICgpID0+ICh7XG4gICAgcHVzaDogamVzdC5mbigpLFxuICAgIHJlcGxhY2U6IGplc3QuZm4oKSxcbiAgICByZWZyZXNoOiBqZXN0LmZuKCksXG4gICAgYmFjazogamVzdC5mbigpLFxuICAgIGZvcndhcmQ6IGplc3QuZm4oKSxcbiAgfSksXG4gIHVzZVBhdGhuYW1lOiAoKSA9PiAnLycsXG4gIHVzZVNlYXJjaFBhcmFtczogKCkgPT4gbmV3IFVSTFNlYXJjaFBhcmFtcygpLFxufSkpO1xuXG4vLyBNb2NrIHdpbmRvdy5tYXRjaE1lZGlhXG5PYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnbWF0Y2hNZWRpYScsIHtcbiAgd3JpdGFibGU6IHRydWUsXG4gIHZhbHVlOiBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKHF1ZXJ5ID0+ICh7XG4gICAgbWF0Y2hlczogZmFsc2UsXG4gICAgbWVkaWE6IHF1ZXJ5LFxuICAgIG9uY2hhbmdlOiBudWxsLFxuICAgIGFkZExpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgcmVtb3ZlTGlzdGVuZXI6IGplc3QuZm4oKSxcbiAgICBhZGRFdmVudExpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogamVzdC5mbigpLFxuICAgIGRpc3BhdGNoRXZlbnQ6IGplc3QuZm4oKSxcbiAgfSkpLFxufSk7XG5cbi8vIE1vY2sgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJcbmdsb2JhbC5JbnRlcnNlY3Rpb25PYnNlcnZlciA9IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4gKHtcbiAgb2JzZXJ2ZTogamVzdC5mbigpLFxuICB1bm9ic2VydmU6IGplc3QuZm4oKSxcbiAgZGlzY29ubmVjdDogamVzdC5mbigpLFxufSkpO1xuXG4vLyBNb2NrIFJlc2l6ZU9ic2VydmVyXG5nbG9iYWwuUmVzaXplT2JzZXJ2ZXIgPSBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+ICh7XG4gIG9ic2VydmU6IGplc3QuZm4oKSxcbiAgdW5vYnNlcnZlOiBqZXN0LmZuKCksXG4gIGRpc2Nvbm5lY3Q6IGplc3QuZm4oKSxcbn0pKTtcblxuLy8gTW9jayBsb2NhbFN0b3JhZ2VcbmNvbnN0IGxvY2FsU3RvcmFnZU1vY2sgPSB7XG4gIGdldEl0ZW06IGplc3QuZm4oKSxcbiAgc2V0SXRlbTogamVzdC5mbigpLFxuICByZW1vdmVJdGVtOiBqZXN0LmZuKCksXG4gIGNsZWFyOiBqZXN0LmZuKCksXG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KHdpbmRvdywgJ2xvY2FsU3RvcmFnZScsIHtcbiAgdmFsdWU6IGxvY2FsU3RvcmFnZU1vY2ssXG59KTtcblxuLy8gTW9jayBzZXNzaW9uU3RvcmFnZVxuY29uc3Qgc2Vzc2lvblN0b3JhZ2VNb2NrID0ge1xuICBnZXRJdGVtOiBqZXN0LmZuKCksXG4gIHNldEl0ZW06IGplc3QuZm4oKSxcbiAgcmVtb3ZlSXRlbTogamVzdC5mbigpLFxuICBjbGVhcjogamVzdC5mbigpLFxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdzZXNzaW9uU3RvcmFnZScsIHtcbiAgdmFsdWU6IHNlc3Npb25TdG9yYWdlTW9jayxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUF5QkE7QUFDQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsYUFBYSxFQUFFLE9BQU87RUFDOUJDLFNBQVMsRUFBRUEsQ0FBQSxNQUFPO0lBQ2hCQyxLQUFLLEVBQUUsR0FBRztJQUNWQyxRQUFRLEVBQUUsR0FBRztJQUNiQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ1RDLE1BQU0sRUFBRSxHQUFHO0lBQ1hDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUNmQyxPQUFPLEVBQUVGLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7SUFDbEJFLE1BQU0sRUFBRUgsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUNqQkcsSUFBSSxFQUFF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QUFDO0FBQ0osQ0FBQyxDQUFDOztBQUVGO0FBQ0FnQixNQUFNLENBQUM2QixvQkFBb0IsR0FBRzlDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ29DLGtCQUFrQixDQUFDLE9BQU87RUFDaEVVLE9BQU8sRUFBRS9DLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFDbEIrQyxTQUFTLEVBQUVoRCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0VBQ3BCZ0QsVUFBVSxFQUFFakQsSUFBSSxDQUFDQyxFQUFFLENBQUM7QUFDdEIsQ0FBQyxDQUFDLENBQUM7O0FBRUg7QUFDQWdCLE1BQU0sQ0FBQ2lDLGNBQWMsR0FBR2xELElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ29DLGtCQUFrQixDQUFDLE9BQU87RUFDMURVLE9BQU8sRUFBRS9DLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFDbEIrQyxTQUFTLEVBQUVoRCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0VBQ3BCZ0QsVUFBVSxFQUFFakQsSUFBSSxDQUFDQyxFQUFFLENBQUM7QUFDdEIsQ0FBQyxDQUFDLENBQUM7O0FBRUg7QUFDQSxNQUFNa0QsZ0JBQWdCLEdBQUc7RUFDdkJDLE9BQU8sRUFBRXBELElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFDbEJvRCxPQUFPLEVBQUVyRCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0VBQ2xCcUQsVUFBVSxFQUFFdEQsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztFQUNyQnNELEtBQUssRUFBRXZELElBQUksQ0FBQ0MsRUFBRSxDQUFDO0FBQ2pCLENBQUM7QUFDRCtCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxNQUFNLEVBQUUsY0FBYyxFQUFFO0VBQzVDRSxLQUFLLEVBQUVlO0FBQ1QsQ0FBQyxDQUFDOztBQUVGO0FBQ0EsTUFBTUssa0JBQWtCLEdBQUc7RUFDekJKLE9BQU8sRUFBRXBELElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFDbEJvRCxPQUFPLEVBQUVyRCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0VBQ2xCcUQsVUFBVSxFQUFFdEQsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztFQUNyQnNELEtBQUssRUFBRXZELElBQUksQ0FBQ0MsRUFBRSxDQUFDO0FBQ2pCLENBQUM7QUFDRCtCLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxNQUFNLEVBQUUsZ0JBQWdCLEVBQUU7RUFDOUNFLEtBQUssRUFBRW9CO0FBQ1QsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119