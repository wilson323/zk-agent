{"version":3,"names":["cov_1qw8fgha2x","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","logger_1","require","performance_monitor_1","enhanced_database_manager_1","high_availability_manager_1","unified_ai_adapter_1","enhanced_mock_service_1","error_monitor_1","error_tracker_1","error_monitoring_config_1","SystemInitializer","constructor","logger","Logger","initialized","initializationPromise","getInstance","instance","initialize","info","performInitialization","startTime","Date","now","validateEnvironment","initializeCoreComponents","initializeAIComponents","initializeMonitoringComponents","initializeMockServices","performInitialHealthCheck","setupGracefulShutdown","duration","components","notifyInitializationComplete","error","message","stack","requiredEnvVars","missingVars","filter","varName","process","env","length","Error","join","DATABASE_URL","startsWith","warn","aiConfigs","url","FASTGPT_API_URL","key","FASTGPT_API_KEY","QWEN_BASE_URL","QWEN_API_KEY","SILICONFLOW_BASE_URL","SILICONFLOW_API_KEY","configuredAI","config","services","map","c","dbHealth","enhancedDatabaseManager","healthCheck","connected","database","latency","initializeAIServices","configuredServices","unifiedAIAdapter","getConfiguredServices","healthStatus","getHealthStatus","healthyServices","Object","values","service","healthy","configured","performanceStats","performanceMonitor","getPerformanceStats","systemStatus","highAvailabilityManager","getSystemStatus","monitoringConfig","getErrorMonitoringConfig","validateErrorMonitoringConfig","errorMonitor","startMonitoring","monitoringInterval","errorTracker","startTracking","interval","errorRateThreshold","alertThresholds","errorRate","autoRecovery","enabled","notifications","keys","enhancedMockService","isEnabled","mockStats","getMockStatistics","users","total","cadFiles","aiModels","databaseHealth","aiHealth","Promise","all","healthSummary","status","ai","system","uptime","gracefulShutdown","signal","exit","on","reason","promise","notification","timestamp","toISOString","environment","NODE_ENV","npm_package_version","fetch","method","headers","body","JSON","stringify","catch","getInitializationStatus","inProgress","reinitialize","getSystemInfo","nodeVersion","platform","arch","pid","memory","memoryUsage","exports","systemInitializer","initializeSystem","bind"],"sources":["E:\\zk-agent\\lib\\system\\system-initializer.ts"],"sourcesContent":["/* eslint-disable */\n// @ts-nocheck\n/**\n * @file lib/system/system-initializer.ts\n * @description 系统初始化器 - B团队核心组件统一管理\n * @author B团队系统架构师\n * @lastUpdate 2024-12-19\n * @purpose 统一初始化和配置所有核心组件\n */\n\nimport { Logger } from '@/lib/utils/logger';\nimport { performanceMonitor } from '@/lib/middleware/performance-monitor';\nimport { enhancedDatabaseManager } from '@/lib/database/enhanced-database-manager';\nimport { highAvailabilityManager } from '@/lib/system/high-availability-manager';\nimport { unifiedAIAdapter, initializeAIServices } from '@/lib/ai/unified-ai-adapter';\nimport { enhancedMockService } from '@/lib/mocks/enhanced-mock-service';\nimport { errorMonitor } from '@/lib/monitoring/error-monitor';\nimport { errorTracker } from '@/lib/monitoring/error-tracker';\nimport { getErrorMonitoringConfig, validateErrorMonitoringConfig } from '@/lib/config/error-monitoring-config';\n\nexport class SystemInitializer {\n  private static instance: SystemInitializer;\n  private logger = new Logger('SystemInitializer');\n  private initialized = false;\n  private initializationPromise: Promise<void> | null = null;\n\n  private constructor() {}\n\n  public static getInstance(): SystemInitializer {\n    if (!SystemInitializer.instance) {\n      SystemInitializer.instance = new SystemInitializer();\n    }\n    return SystemInitializer.instance;\n  }\n\n  /**\n   * 初始化所有系统组件\n   */\n  async initialize(): Promise<void> {\n    if (this.initialized) {\n      this.logger.info('System already initialized');\n      return;\n    }\n\n    if (this.initializationPromise) {\n      this.logger.info('System initialization in progress, waiting...');\n      return this.initializationPromise;\n    }\n\n    this.initializationPromise = this.performInitialization();\n    return this.initializationPromise;\n  }\n\n  /**\n   * 执行系统初始化\n   */\n  private async performInitialization(): Promise<void> {\n    const startTime: any = Date.now();\n    this.logger.info('🚀 Starting B团队 system initialization...');\n\n    try {\n      // 1. 验证环境配置\n      await this.validateEnvironment();\n\n      // 2. 初始化核心组件\n      await this.initializeCoreComponents();\n\n      // 3. 初始化AI服务\n      await this.initializeAIComponents();\n\n      // 4. 初始化监控和高可用组件\n      await this.initializeMonitoringComponents();\n\n      // 5. 初始化Mock服务（开发环境）\n      await this.initializeMockServices();\n\n      // 6. 执行健康检查\n      await this.performInitialHealthCheck();\n\n      // 7. 设置优雅关闭处理\n      this.setupGracefulShutdown();\n\n      const duration: any = Date.now() - startTime;\n      this.initialized = true;\n\n      this.logger.info('✅ B团队 system initialization completed', {\n        duration: `${duration}ms`,\n        components: [\n          'PerformanceMonitor',\n          'DatabaseManager',\n          'AIAdapter',\n          'HighAvailabilityManager',\n          'MockService',\n        ],\n      });\n\n      // 发送初始化完成事件\n      await this.notifyInitializationComplete(duration);\n\n    } catch (error) {\n      this.logger.error('❌ System initialization failed', {\n        error: error.message,\n        stack: error.stack,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * 验证环境配置\n   */\n  private async validateEnvironment(): Promise<void> {\n    this.logger.info('🔍 Validating environment configuration...');\n\n    const requiredEnvVars: any = [\n      'DATABASE_URL',\n      'NODE_ENV',\n    ];\n\n    const missingVars: any = requiredEnvVars.filter(varName => !process.env[varName]);\n\n    if (missingVars.length > 0) {\n      throw new Error(`Missing required environment variables: ${missingVars.join(', ')}`);\n    }\n\n    // 验证数据库连接字符串\n    if (!process.env.DATABASE_URL?.startsWith('postgresql://') && \n        !process.env.DATABASE_URL?.startsWith('mysql://')) {\n      this.logger.warn('DATABASE_URL format may be incorrect');\n    }\n\n    // 检查AI服务配置\n    const aiConfigs: any = [\n      { name: 'FastGPT', url: process.env.FASTGPT_API_URL, key: process.env.FASTGPT_API_KEY },\n      { name: 'Qianwen', url: process.env.QWEN_BASE_URL, key: process.env.QWEN_API_KEY },\n      { name: 'SiliconFlow', url: process.env.SILICONFLOW_BASE_URL, key: process.env.SILICONFLOW_API_KEY },\n    ];\n\n    const configuredAI: any = aiConfigs.filter(config => config.url && config.key);\n    \n    if (configuredAI.length === 0) {\n      this.logger.warn('No AI services configured - AI features will be limited');\n    } else {\n      this.logger.info('AI services configured', {\n        services: configuredAI.map(c => c.name),\n      });\n    }\n\n    this.logger.info('✅ Environment validation completed');\n  }\n\n  /**\n   * 初始化核心组件\n   */\n  private async initializeCoreComponents(): Promise<void> {\n    this.logger.info('🔧 Initializing core components...');\n\n    // 数据库管理器已通过单例自动初始化\n    const dbHealth: any = await enhancedDatabaseManager.healthCheck();\n    if (!dbHealth.connected) {\n      throw new Error('Database connection failed during initialization');\n    }\n\n    this.logger.info('✅ Core components initialized', {\n      database: dbHealth.connected ? 'connected' : 'disconnected',\n      latency: `${dbHealth.latency}ms`,\n    });\n  }\n\n  /**\n   * 初始化AI组件\n   */\n  private async initializeAIComponents(): Promise<void> {\n    this.logger.info('🤖 Initializing AI components...');\n\n    // 初始化AI服务配置\n    initializeAIServices();\n\n    // 获取配置的服务列表\n    const configuredServices: any = unifiedAIAdapter.getConfiguredServices();\n    \n    if (configuredServices.length > 0) {\n      // 测试AI服务连接\n      const healthStatus: any = await unifiedAIAdapter.getHealthStatus();\n      const healthyServices: any = Object.values(healthStatus).filter(\n        (service: any) => service.healthy\n      ).length;\n\n      this.logger.info('✅ AI components initialized', {\n        configured: configuredServices.length,\n        healthy: healthyServices,\n        services: configuredServices,\n      });\n    } else {\n      this.logger.warn('⚠️ No AI services configured');\n    }\n  }\n\n  /**\n   * 初始化监控组件\n   */\n  private async initializeMonitoringComponents(): Promise<void> {\n    this.logger.info('📊 Initializing monitoring components...');\n\n    // 性能监控器已通过单例自动初始化\n    const performanceStats: any = performanceMonitor.getPerformanceStats();\n\n    // 高可用管理器已通过单例自动初始化\n    const systemStatus: any = await highAvailabilityManager.getSystemStatus();\n\n    // 启动错误监控系统\n    this.logger.info('🔍 Starting error monitoring system...');\n    const monitoringConfig = getErrorMonitoringConfig();\n    \n    // 验证配置\n    if (!validateErrorMonitoringConfig(monitoringConfig)) {\n      this.logger.warn('⚠️ Error monitoring config validation failed, using defaults');\n    }\n    \n    // 启动错误监控器\n    errorMonitor.startMonitoring(monitoringConfig.monitoringInterval);\n    \n    // 启动错误追踪器\n    this.logger.info('📋 Starting error tracker...');\n    errorTracker.startTracking();\n    \n    this.logger.info('✅ Error monitoring system started', {\n      interval: monitoringConfig.monitoringInterval,\n      errorRateThreshold: monitoringConfig.alertThresholds.errorRate,\n      autoRecovery: monitoringConfig.autoRecovery.enabled,\n      notifications: monitoringConfig.notifications.enabled\n    });\n\n    this.logger.info('✅ Monitoring components initialized', {\n      performanceMonitor: 'active',\n      highAvailabilityManager: 'active',\n      errorMonitor: 'active',\n      errorTracker: 'active',\n      services: Object.keys(systemStatus.services).length,\n    });\n  }\n\n  /**\n   * 初始化Mock服务\n   */\n  private async initializeMockServices(): Promise<void> {\n    if (enhancedMockService.isEnabled()) {\n      this.logger.info('🎭 Initializing mock services...');\n      \n      const mockStats: any = enhancedMockService.getMockStatistics();\n      \n      this.logger.info('✅ Mock services initialized', {\n        enabled: true,\n        users: mockStats?.users?.total || 0,\n        cadFiles: mockStats?.cadFiles?.total || 0,\n        aiModels: mockStats?.aiModels?.total || 0,\n      });\n    } else {\n      this.logger.info('🎭 Mock services disabled');\n    }\n  }\n\n  /**\n   * 执行初始健康检查\n   */\n  private async performInitialHealthCheck(): Promise<void> {\n    this.logger.info('🏥 Performing initial health check...');\n\n    const [\n      databaseHealth,\n      aiHealth,\n      systemStatus,\n    ] = await Promise.all([\n      enhancedDatabaseManager.healthCheck(),\n      unifiedAIAdapter.getHealthStatus(),\n      highAvailabilityManager.getSystemStatus(),\n    ]);\n\n    const healthSummary: any = {\n      database: {\n        status: databaseHealth.connected ? 'healthy' : 'unhealthy',\n        latency: databaseHealth.latency,\n      },\n      ai: {\n        total: Object.keys(aiHealth).length,\n        healthy: Object.values(aiHealth).filter((s: any) => s.healthy).length,\n      },\n      system: {\n        services: Object.keys(systemStatus.services).length,\n        uptime: systemStatus.uptime,\n      },\n    };\n\n    this.logger.info('✅ Initial health check completed', healthSummary);\n\n    // 如果关键服务不健康，发出警告\n    if (!databaseHealth.connected) {\n      this.logger.error('❌ Database is not healthy');\n    }\n\n    if (healthSummary.ai.healthy === 0 && healthSummary.ai.total > 0) {\n      this.logger.warn('⚠️ No AI services are healthy');\n    }\n  }\n\n  /**\n   * 设置优雅关闭处理\n   */\n  private setupGracefulShutdown(): void {\n    const gracefulShutdown: any = async (signal: string) => {\n      this.logger.info(`🛑 Received ${signal}, starting graceful shutdown...`);\n\n      try {\n        // 停止接受新请求\n        // 这里可以添加停止HTTP服务器的逻辑\n\n        // 关闭高可用管理器\n        await highAvailabilityManager.gracefulShutdown();\n\n        // 关闭数据库连接\n        await enhancedDatabaseManager.gracefulShutdown();\n\n        this.logger.info('✅ Graceful shutdown completed');\n        process.exit(0);\n      } catch (error) {\n        this.logger.error('❌ Error during graceful shutdown', {\n          error: error.message,\n        });\n        process.exit(1);\n      }\n    };\n\n    // 监听关闭信号\n    process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));\n    process.on('SIGINT', () => gracefulShutdown('SIGINT'));\n\n    // 监听未捕获的异常\n    process.on('uncaughtException', (error) => {\n      this.logger.error('❌ Uncaught exception', {\n        error: error.message,\n        stack: error.stack,\n      });\n      gracefulShutdown('uncaughtException');\n    });\n\n    process.on('unhandledRejection', (reason, promise) => {\n      this.logger.error('❌ Unhandled rejection', {\n        reason,\n        promise,\n      });\n      gracefulShutdown('unhandledRejection');\n    });\n\n    this.logger.info('✅ Graceful shutdown handlers registered');\n  }\n\n  /**\n   * 通知初始化完成\n   */\n  private async notifyInitializationComplete(duration: number): Promise<void> {\n    try {\n      // 这里可以发送初始化完成的通知\n      // 例如发送到监控系统、Slack、邮件等\n\n      const notification: any = {\n        type: 'SYSTEM_INITIALIZED',\n        timestamp: new Date().toISOString(),\n        duration,\n        environment: process.env.NODE_ENV,\n        version: process.env.npm_package_version || '1.0.0',\n      };\n\n      // 发送到内部监控API\n      if (process.env.NODE_ENV === 'production') {\n        await fetch('/api/admin/alerts', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(notification),\n        }).catch(() => {\n          // 忽略通知发送失败\n        });\n      }\n\n    } catch (error) {\n      this.logger.warn('Failed to send initialization notification', {\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * 获取初始化状态\n   */\n  getInitializationStatus(): {\n    initialized: boolean;\n    inProgress: boolean;\n  } {\n    return {\n      initialized: this.initialized,\n      inProgress: this.initializationPromise !== null && !this.initialized,\n    };\n  }\n\n  /**\n   * 重新初始化系统\n   */\n  async reinitialize(): Promise<void> {\n    this.logger.info('🔄 Reinitializing system...');\n    \n    this.initialized = false;\n    this.initializationPromise = null;\n    \n    await this.initialize();\n  }\n\n  /**\n   * 获取系统信息\n   */\n  getSystemInfo(): any {\n    return {\n      initialized: this.initialized,\n      nodeVersion: process.version,\n      platform: process.platform,\n      arch: process.arch,\n      uptime: process.uptime(),\n      environment: process.env.NODE_ENV,\n      pid: process.pid,\n      memory: process.memoryUsage(),\n    };\n  }\n}\n\n// 导出单例实例\nexport const systemInitializer: any = SystemInitializer.getInstance();\n\n// 导出便捷方法\nexport const initializeSystem: any = systemInitializer.initialize.bind(systemInitializer);\nexport const getSystemInfo: any = systemInitializer.getSystemInfo.bind(systemInitializer);"],"mappings":"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","ignoreList":[]}