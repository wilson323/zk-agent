{"version":3,"names":["cov_1d3ud3b2c2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","client_1","require","DatabaseService","getInstance","instance","globalThis","__prisma","PrismaClient","log","process","env","NODE_ENV","errorFormat","connect","$connect","console","error","disconnect","$disconnect","healthCheck","$queryRaw","runTransaction","callback","prisma","$transaction","exports","cleanup","on"],"sources":["E:\\zk-agent\\lib\\database\\index.ts"],"sourcesContent":["// @ts-nocheck\n/**\r\n * @file lib/database/index.ts\r\n * @description 数据库连接管理和Prisma客户端初始化\r\n * @author zk-agent开发团队\r\n * @lastUpdate 2024-12-19\r\n * @updateLog\r\n *   - 2024-12-19 初始创建数据库连接服务\r\n */\r\n\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\n// 全局Prisma客户端类型声明\r\ndeclare global {\r\n  var __prisma: PrismaClient | undefined;\r\n}\r\n\r\n// 创建Prisma客户端实例\r\nclass DatabaseService {\r\n  private static instance: PrismaClient;\r\n\r\n  static getInstance(): PrismaClient {\r\n    if (!DatabaseService.instance) {\r\n      DatabaseService.instance = globalThis.__prisma ?? new PrismaClient({\r\n        log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\r\n        errorFormat: 'pretty',\r\n      });\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        globalThis.__prisma = DatabaseService.instance;\r\n      }\r\n    }\r\n\r\n    return DatabaseService.instance;\r\n  }\r\n\r\n  static async connect(): Promise<void> {\r\n    try {\r\n      await DatabaseService.getInstance().$connect();\r\n      console.log('✅ Database connected successfully');\r\n    } catch (error) {\r\n      console.error('❌ Database connection failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async disconnect(): Promise<void> {\r\n    try {\r\n      await DatabaseService.getInstance().$disconnect();\r\n      console.log('✅ Database disconnected successfully');\r\n    } catch (error) {\r\n      console.error('❌ Database disconnection failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async healthCheck(): Promise<boolean> {\r\n    try {\r\n      await DatabaseService.getInstance().$queryRaw`SELECT 1`;\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Database health check failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static async runTransaction<T>(\r\n    callback: (prisma: PrismaClient) => Promise<T>\r\n  ): Promise<T> {\r\n    const prisma = DatabaseService.getInstance();\r\n    return await prisma.$transaction(callback);\r\n  }\r\n}\r\n\r\n// 导出Prisma客户端实例\r\nexport const prisma = DatabaseService.getInstance();\r\n\r\n// 导出数据库服务\r\nexport { DatabaseService };\r\n\r\n// 清理函数（在应用关闭时调用）\r\nexport const cleanup = async () => {\r\n  await DatabaseService.disconnect();\r\n};\r\n\r\n// 进程退出时自动清理\r\nif (typeof process !== 'undefined') {\r\n  process.on('beforeExit', cleanup);\r\n  process.on('SIGINT', cleanup);\r\n  process.on('SIGTERM', cleanup);\r\n} "],"mappings":";;AAAA;AACA;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,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","ignoreList":[]}