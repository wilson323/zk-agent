{"version":3,"names":["cov_1gqly97c0l","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","zod_1","require","exports","loginSchema","z","object","email","string","password","min","registerSchema","name","optional","avatar","changePasswordSchema","oldPassword","newPassword"],"sources":["E:\\zk-agent\\lib\\interfaces\\auth-manager.interface.ts"],"sourcesContent":["/**\n * @file 认证服务接口定义\n * @description 定义认证服务的标准接口，确保类型安全和一致性\n * @author ZK-Agent Team\n * @date 2025-06-29\n */\n\nimport { z } from 'zod';\n\n// Zod validation schema for login\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\n// Zod validation schema for registration\nexport const registerSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n});\n\n// Zod validation schema for password change\nexport const changePasswordSchema = z.object({\n  oldPassword: z.string(),\n  newPassword: z.string().min(8),\n});\n\nexport interface IAuthService {\n  login(data: z.infer<typeof loginSchema>): Promise<{\n    user: {\n      id: string;\n      email: string;\n      name: string | null;\n      avatar: string | null;\n      role: string;\n    };\n    tokens: { accessToken: string; refreshToken: string };\n  }>;\n  register(data: z.infer<typeof registerSchema>): Promise<{\n    user: {\n      id: string;\n      email: string;\n      name: string | null;\n      avatar: string | null;\n      role: string;\n    };\n    tokens: { accessToken: string; refreshToken: string };\n  }>;\n  refreshToken(token: string): Promise<{ accessToken: string; refreshToken: string }>;\n  changePassword(userId: string, data: z.infer<typeof changePasswordSchema>): Promise<void>;\n}\n"],"mappings":"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","ignoreList":[]}