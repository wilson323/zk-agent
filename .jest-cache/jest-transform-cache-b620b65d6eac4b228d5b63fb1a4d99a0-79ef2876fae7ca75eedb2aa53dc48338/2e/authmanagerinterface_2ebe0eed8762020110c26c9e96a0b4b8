0c4a5337a3c44f76325102c6946a8491
"use strict";

/**
 * @file 认证服务接口定义
 * @description 定义认证服务的标准接口，确保类型安全和一致性
 * @author ZK-Agent Team
 * @date 2025-06-29
 */
/* istanbul ignore next */
function cov_1gqly97c0l() {
  var path = "E:\\zk-agent\\lib\\interfaces\\auth-manager.interface.ts";
  var hash = "20958fd2c1757d92f4a2656c5ea6774cd9406500";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\interfaces\\auth-manager.interface.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 85
        }
      },
      "2": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "5": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\interfaces\\auth-manager.interface.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,6BAAwB;AAExB,kCAAkC;AACrB,QAAA,WAAW,GAAG,OAAC,CAAC,MAAM,CAAC;IAClC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;IACzB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;CAC5B,CAAC,CAAC;AAEH,yCAAyC;AAC5B,QAAA,cAAc,GAAG,OAAC,CAAC,MAAM,CAAC;IACrC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;IACzB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC3B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC,CAAC;AAEH,4CAA4C;AAC/B,QAAA,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC3C,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;CAC/B,CAAC,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\lib\\interfaces\\auth-manager.interface.ts"],
      sourcesContent: ["/**\n * @file \u8BA4\u8BC1\u670D\u52A1\u63A5\u53E3\u5B9A\u4E49\n * @description \u5B9A\u4E49\u8BA4\u8BC1\u670D\u52A1\u7684\u6807\u51C6\u63A5\u53E3\uFF0C\u786E\u4FDD\u7C7B\u578B\u5B89\u5168\u548C\u4E00\u81F4\u6027\n * @author ZK-Agent Team\n * @date 2025-06-29\n */\n\nimport { z } from 'zod';\n\n// Zod validation schema for login\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\n// Zod validation schema for registration\nexport const registerSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n});\n\n// Zod validation schema for password change\nexport const changePasswordSchema = z.object({\n  oldPassword: z.string(),\n  newPassword: z.string().min(8),\n});\n\nexport interface IAuthService {\n  login(data: z.infer<typeof loginSchema>): Promise<{\n    user: {\n      id: string;\n      email: string;\n      name: string | null;\n      avatar: string | null;\n      role: string;\n    };\n    tokens: { accessToken: string; refreshToken: string };\n  }>;\n  register(data: z.infer<typeof registerSchema>): Promise<{\n    user: {\n      id: string;\n      email: string;\n      name: string | null;\n      avatar: string | null;\n      role: string;\n    };\n    tokens: { accessToken: string; refreshToken: string };\n  }>;\n  refreshToken(token: string): Promise<{ accessToken: string; refreshToken: string }>;\n  changePassword(userId: string, data: z.infer<typeof changePasswordSchema>): Promise<void>;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "20958fd2c1757d92f4a2656c5ea6774cd9406500"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gqly97c0l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gqly97c0l();
cov_1gqly97c0l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1gqly97c0l().s[1]++;
exports.changePasswordSchema = exports.registerSchema = exports.loginSchema = void 0;
const zod_1 =
/* istanbul ignore next */
(cov_1gqly97c0l().s[2]++, require("zod"));
// Zod validation schema for login
/* istanbul ignore next */
cov_1gqly97c0l().s[3]++;
exports.loginSchema = zod_1.z.object({
  email: zod_1.z.string().email(),
  password: zod_1.z.string().min(8)
});
// Zod validation schema for registration
/* istanbul ignore next */
cov_1gqly97c0l().s[4]++;
exports.registerSchema = zod_1.z.object({
  email: zod_1.z.string().email(),
  password: zod_1.z.string().min(8),
  name: zod_1.z.string().optional(),
  avatar: zod_1.z.string().optional()
});
// Zod validation schema for password change
/* istanbul ignore next */
cov_1gqly97c0l().s[5]++;
exports.changePasswordSchema = zod_1.z.object({
  oldPassword: zod_1.z.string(),
  newPassword: zod_1.z.string().min(8)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWdxbHk5N2MwbCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsInpvZF8xIiwicmVxdWlyZSIsImV4cG9ydHMiLCJsb2dpblNjaGVtYSIsInoiLCJvYmplY3QiLCJlbWFpbCIsInN0cmluZyIsInBhc3N3b3JkIiwibWluIiwicmVnaXN0ZXJTY2hlbWEiLCJuYW1lIiwib3B0aW9uYWwiLCJhdmF0YXIiLCJjaGFuZ2VQYXNzd29yZFNjaGVtYSIsIm9sZFBhc3N3b3JkIiwibmV3UGFzc3dvcmQiXSwic291cmNlcyI6WyJFOlxcemstYWdlbnRcXGxpYlxcaW50ZXJmYWNlc1xcYXV0aC1tYW5hZ2VyLmludGVyZmFjZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIOiupOivgeacjeWKoeaOpeWPo+WumuS5iVxuICogQGRlc2NyaXB0aW9uIOWumuS5ieiupOivgeacjeWKoeeahOagh+WHhuaOpeWPo++8jOehruS/neexu+Wei+WuieWFqOWSjOS4gOiHtOaAp1xuICogQGF1dGhvciBaSy1BZ2VudCBUZWFtXG4gKiBAZGF0ZSAyMDI1LTA2LTI5XG4gKi9cblxuaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5cbi8vIFpvZCB2YWxpZGF0aW9uIHNjaGVtYSBmb3IgbG9naW5cbmV4cG9ydCBjb25zdCBsb2dpblNjaGVtYSA9IHoub2JqZWN0KHtcbiAgZW1haWw6IHouc3RyaW5nKCkuZW1haWwoKSxcbiAgcGFzc3dvcmQ6IHouc3RyaW5nKCkubWluKDgpLFxufSk7XG5cbi8vIFpvZCB2YWxpZGF0aW9uIHNjaGVtYSBmb3IgcmVnaXN0cmF0aW9uXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGVtYWlsOiB6LnN0cmluZygpLmVtYWlsKCksXG4gIHBhc3N3b3JkOiB6LnN0cmluZygpLm1pbig4KSxcbiAgbmFtZTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBhdmF0YXI6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbn0pO1xuXG4vLyBab2QgdmFsaWRhdGlvbiBzY2hlbWEgZm9yIHBhc3N3b3JkIGNoYW5nZVxuZXhwb3J0IGNvbnN0IGNoYW5nZVBhc3N3b3JkU2NoZW1hID0gei5vYmplY3Qoe1xuICBvbGRQYXNzd29yZDogei5zdHJpbmcoKSxcbiAgbmV3UGFzc3dvcmQ6IHouc3RyaW5nKCkubWluKDgpLFxufSk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUF1dGhTZXJ2aWNlIHtcbiAgbG9naW4oZGF0YTogei5pbmZlcjx0eXBlb2YgbG9naW5TY2hlbWE+KTogUHJvbWlzZTx7XG4gICAgdXNlcjoge1xuICAgICAgaWQ6IHN0cmluZztcbiAgICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgICBuYW1lOiBzdHJpbmcgfCBudWxsO1xuICAgICAgYXZhdGFyOiBzdHJpbmcgfCBudWxsO1xuICAgICAgcm9sZTogc3RyaW5nO1xuICAgIH07XG4gICAgdG9rZW5zOiB7IGFjY2Vzc1Rva2VuOiBzdHJpbmc7IHJlZnJlc2hUb2tlbjogc3RyaW5nIH07XG4gIH0+O1xuICByZWdpc3RlcihkYXRhOiB6LmluZmVyPHR5cGVvZiByZWdpc3RlclNjaGVtYT4pOiBQcm9taXNlPHtcbiAgICB1c2VyOiB7XG4gICAgICBpZDogc3RyaW5nO1xuICAgICAgZW1haWw6IHN0cmluZztcbiAgICAgIG5hbWU6IHN0cmluZyB8IG51bGw7XG4gICAgICBhdmF0YXI6IHN0cmluZyB8IG51bGw7XG4gICAgICByb2xlOiBzdHJpbmc7XG4gICAgfTtcbiAgICB0b2tlbnM6IHsgYWNjZXNzVG9rZW46IHN0cmluZzsgcmVmcmVzaFRva2VuOiBzdHJpbmcgfTtcbiAgfT47XG4gIHJlZnJlc2hUb2tlbih0b2tlbjogc3RyaW5nKTogUHJvbWlzZTx7IGFjY2Vzc1Rva2VuOiBzdHJpbmc7IHJlZnJlc2hUb2tlbjogc3RyaW5nIH0+O1xuICBjaGFuZ2VQYXNzd29yZCh1c2VySWQ6IHN0cmluZywgZGF0YTogei5pbmZlcjx0eXBlb2YgY2hhbmdlUGFzc3dvcmRTY2hlbWE+KTogUHJvbWlzZTx2b2lkPjtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO0lBQUFDLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBdEIsSUFBQTtFQUFBO0VBQUEsSUFBQXVCLFFBQUEsR0FBQXRCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBb0IsUUFBQSxDQUFBeEIsSUFBQSxLQUFBd0IsUUFBQSxDQUFBeEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQXVCLFFBQUEsQ0FBQXhCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQW9CLGNBQUEsR0FBQUQsUUFBQSxDQUFBeEIsSUFBQTtFQUFBO0lBZUE7SUFBQUQsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQTBCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUExQixjQUFBO0FBQUFBLGNBQUEsR0FBQWMsQ0FBQTs7Ozs7OztBQVJBLE1BQUFhLEtBQUE7QUFBQTtBQUFBLENBQUEzQixjQUFBLEdBQUFjLENBQUEsT0FBQWMsT0FBQTtBQUVBO0FBQUE7QUFBQTVCLGNBQUEsR0FBQWMsQ0FBQTtBQUNhZSxPQUFBLENBQUFDLFdBQVcsR0FBR0gsS0FBQSxDQUFBSSxDQUFDLENBQUNDLE1BQU0sQ0FBQztFQUNsQ0MsS0FBSyxFQUFFTixLQUFBLENBQUFJLENBQUMsQ0FBQ0csTUFBTSxFQUFFLENBQUNELEtBQUssRUFBRTtFQUN6QkUsUUFBUSxFQUFFUixLQUFBLENBQUFJLENBQUMsQ0FBQ0csTUFBTSxFQUFFLENBQUNFLEdBQUcsQ0FBQyxDQUFDO0NBQzNCLENBQUM7QUFFRjtBQUFBO0FBQUFwQyxjQUFBLEdBQUFjLENBQUE7QUFDYWUsT0FBQSxDQUFBUSxjQUFjLEdBQUdWLEtBQUEsQ0FBQUksQ0FBQyxDQUFDQyxNQUFNLENBQUM7RUFDckNDLEtBQUssRUFBRU4sS0FBQSxDQUFBSSxDQUFDLENBQUNHLE1BQU0sRUFBRSxDQUFDRCxLQUFLLEVBQUU7RUFDekJFLFFBQVEsRUFBRVIsS0FBQSxDQUFBSSxDQUFDLENBQUNHLE1BQU0sRUFBRSxDQUFDRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQzNCRSxJQUFJLEVBQUVYLEtBQUEsQ0FBQUksQ0FBQyxDQUFDRyxNQUFNLEVBQUUsQ0FBQ0ssUUFBUSxFQUFFO0VBQzNCQyxNQUFNLEVBQUViLEtBQUEsQ0FBQUksQ0FBQyxDQUFDRyxNQUFNLEVBQUUsQ0FBQ0ssUUFBUTtDQUM1QixDQUFDO0FBRUY7QUFBQTtBQUFBdkMsY0FBQSxHQUFBYyxDQUFBO0FBQ2FlLE9BQUEsQ0FBQVksb0JBQW9CLEdBQUdkLEtBQUEsQ0FBQUksQ0FBQyxDQUFDQyxNQUFNLENBQUM7RUFDM0NVLFdBQVcsRUFBRWYsS0FBQSxDQUFBSSxDQUFDLENBQUNHLE1BQU0sRUFBRTtFQUN2QlMsV0FBVyxFQUFFaEIsS0FBQSxDQUFBSSxDQUFDLENBQUNHLE1BQU0sRUFBRSxDQUFDRSxHQUFHLENBQUMsQ0FBQztDQUM5QixDQUFDIiwiaWdub3JlTGlzdCI6W119