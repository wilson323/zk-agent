{"version":3,"names":["path","require","EnvValidator","validateEnvVar","getSSLConfig","getPoolConfig","validateSecurityConfig","calculateSecurityScore","config","production","host","port","parseInt","database","username","password","dialect","logging","pool","max","min","acquire","idle","evict","validate","validateConnection","dialectOptions","ssl","connectTimeout","process","env","DB_CONNECT_TIMEOUT","requestTimeout","DB_REQUEST_TIMEOUT","statement_timeout","DB_STATEMENT_TIMEOUT","idle_in_transaction_session_timeout","DB_IDLE_TRANSACTION_TIMEOUT","application_name","options","healthCheck","enabled","interval","DB_HEALTH_CHECK_INTERVAL","timeout","DB_HEALTH_CHECK_TIMEOUT","retries","DB_HEALTH_CHECK_RETRIES","securityCheck","sslCheck","prisma","log","errorFormat","datasources","db","url","DATABASE_URL","security","auditLog","encryptionAtRest","DATABASE_ENCRYPTION_AT_REST","encryptionInTransit","passwordRotation","test","DB_HOST_TEST","DB_PORT_TEST","DB_NAME_TEST","DB_USER_TEST","DB_PASSWORD_TEST","DATABASE_URL_TEST","development","DB_HOST","DATABASE_HOST","DB_PORT","DATABASE_PORT","DATABASE_NAME","DB_USER","DATABASE_USER","DB_PASSWORD","DATABASE_PASSWORD","console","DATABASE_SECURITY_DEV","DATABASE_SSL_DEV","getCurrentConfig","NODE_ENV","getDatabaseUrl","envConfig","datasourceUrl","sslParam","validateDatabaseConfig","Error","errors","warnings","securityScore","performanceScore","push","isNaN","length","unsafeUsernames","includes","securityValidation","valid","issues","Math","score","recommendations","generateConfigRecommendations","getDatabaseSecurityConfig","generateSecurityReport","validation","securityConfig","report","environment","timestamp","Date","toISOString","securityLevel","status","compliance","gdpr","sox","pci","configuration","details","poolSecurity","auditEnabled","severity","type","category","message","impact","minLength","complexityRegex","defaultCredentials","criticalCount","filter","issue","errorCount","warningCount","originalRecommendations","generateSecurityRecommendations","getPrismaConfig","logLevel","module","exports"],"sources":["database.config.js"],"sourcesContent":["const path = require('path');\nconst EnvValidator = require('../../utils/env-validator');\nconst { validateEnvVar } = EnvValidator;\nconst { \n  getSSLConfig, \n  getPoolConfig, \n  validateSecurityConfig,\n  calculateSecurityScore \n} = require('./security-config');\n\n// 数据库连接配置\nconst config = {\n  production: {\n    host: validateEnvVar('DB_HOST', 'localhost'),\n    port: parseInt(validateEnvVar('DB_PORT', '5432')),\n    database: validateEnvVar('DB_NAME', 'zkagent_dev'),\n    username: validateEnvVar('DB_USER', 'postgres'),\n    password: validateEnvVar('DB_PASSWORD', '123456'),\n    dialect: 'postgres',\n    logging: false, // 生产环境关闭SQL日志\n    pool: {\n  max: 100,\n  min: 10,\n  acquire: 30000,\n  idle: 30000,\n  evict: 15000,\n  validate: () => validateConnection(),\n}, // 生产级连接池配置\n    dialectOptions: {\n      ssl: getSSLConfig('production'),\n      connectTimeout: parseInt(process.env.DB_CONNECT_TIMEOUT || '5000'),\n      requestTimeout: parseInt(process.env.DB_REQUEST_TIMEOUT || '10000'),\n      // 生产环境安全设置\n      statement_timeout: parseInt(process.env.DB_STATEMENT_TIMEOUT || '30000'),\n      idle_in_transaction_session_timeout: parseInt(process.env.DB_IDLE_TRANSACTION_TIMEOUT || '60000'),\n      // 连接安全选项\n      application_name: 'zk-agent-prod',\n      options: '--search_path=public'\n    },\n    // 健康检查配置\n    healthCheck: {\n      enabled: true,\n      interval: parseInt(process.env.DB_HEALTH_CHECK_INTERVAL || '30000'),\n      timeout: parseInt(process.env.DB_HEALTH_CHECK_TIMEOUT || '5000'),\n      retries: parseInt(process.env.DB_HEALTH_CHECK_RETRIES || '3'),\n      // 安全健康检查\n      securityCheck: true,\n      sslCheck: true\n    },\n    // Prisma配置\n    prisma: {\n      log: ['error', 'warn'],\n      errorFormat: 'minimal',\n      // 生产环境安全配置\n      datasources: {\n        db: {\n          url: process.env.DATABASE_URL || 'postgresql://postgres:123456@localhost:5432/zkagent_dev'\n        }\n      }\n    },\n    // 安全配置\n    security: {\n      enabled: true,\n      auditLog: true,\n      encryptionAtRest: process.env.DATABASE_ENCRYPTION_AT_REST === 'true',\n      encryptionInTransit: true,\n      passwordRotation: true\n    }\n  },\n  \n  test: {\n    host: process.env.DB_HOST_TEST || 'localhost',\n    port: parseInt(process.env.DB_PORT_TEST) || 5432,\n    database: process.env.DB_NAME_TEST || 'zkagent_dev',\n    username: process.env.DB_USER_TEST || 'postgres',\n    password: process.env.DB_PASSWORD_TEST || '123456',\n    dialect: 'postgres',\n    logging: false,\n    pool: getPoolConfig('test'),\n    dialectOptions: {\n      ssl: getSSLConfig('test'),\n      connectTimeout: 5000,\n      requestTimeout: 10000,\n      application_name: 'zk-agent-test'\n    },\n    healthCheck: {\n      enabled: false,\n      securityCheck: false\n    },\n    // Prisma配置\n    prisma: {\n      log: ['error'],\n      errorFormat: 'pretty',\n      datasources: {\n        db: {\n          url: process.env.DATABASE_URL_TEST || 'postgresql://postgres:123456@localhost:5432/zkagent_dev'\n        }\n      }\n    },\n    // 测试环境安全配置\n    security: {\n      enabled: false,\n      auditLog: false,\n      encryptionAtRest: false,\n      encryptionInTransit: false\n    }\n  },\n  \n  development: {\n    host: process.env.DB_HOST || process.env.DATABASE_HOST || 'localhost',\n    port: parseInt(process.env.DB_PORT || process.env.DATABASE_PORT) || 5432,\n    database: process.env.DATABASE_NAME || 'zkagent_dev',\n    username: process.env.DB_USER || process.env.DATABASE_USER || 'postgres',\n    password: process.env.DB_PASSWORD || process.env.DATABASE_PASSWORD || '123456',\n    dialect: 'postgres',\n    logging: console.log, // 开发环境显示SQL日志\n    pool: getPoolConfig('development'),\n    dialectOptions: {\n      ssl: getSSLConfig('development'),\n      connectTimeout: 5000,\n      requestTimeout: 10000,\n      application_name: 'zk-agent-dev'\n    },\n    healthCheck: {\n      enabled: true,\n      interval: 30000,\n      timeout: 5000,\n      retries: 3,\n      securityCheck: false\n    },\n    // Prisma配置\n    prisma: {\n      log: ['query', 'info', 'warn', 'error'],\n      errorFormat: 'pretty',\n      datasources: {\n        db: {\n          url: process.env.DATABASE_URL || 'postgresql://postgres:123456@localhost:5432/zkagent_dev'\n        }\n      }\n    },\n    // 开发环境安全配置\n    security: {\n      enabled: process.env.DATABASE_SECURITY_DEV === 'true',\n      auditLog: false,\n      encryptionAtRest: false,\n      encryptionInTransit: process.env.DATABASE_SSL_DEV === 'true'\n    }\n  }\n};\n\n// 获取当前环境配置\nfunction getCurrentConfig() {\n  const env = process.env.NODE_ENV || 'development';\n  return config[env] || config.development;\n}\n\n// 获取数据库连接URL\nfunction getDatabaseUrl(env = process.env.NODE_ENV || 'development') {\n  const envConfig = config[env] || config.development;\n  \n  if (envConfig.prisma && envConfig.prisma.datasourceUrl) {\n    return envConfig.prisma.datasourceUrl;\n  }\n  \n  // 构建连接URL\n  const { host, port, database, username, password, ssl } = envConfig;\n  const sslParam = ssl ? '?sslmode=require' : '';\n  return `postgresql://${username}:${password}@${host}:${port}/${database}${sslParam}`;\n}\n\n/**\n * 验证数据库配置\n * @param {string} env - 环境名称\n * @returns {object} 验证结果\n */\nfunction validateDatabaseConfig(env = process.env.NODE_ENV || 'development') {\n  const envConfig = config[env];\n  if (!envConfig) {\n    throw new Error(`未找到环境 ${env} 的数据库配置`);\n  }\n\n  const errors = [];\n  const warnings = [];\n  let securityScore = 100;\n  let performanceScore = 100;\n  \n  // 验证必需字段\n  if (!envConfig.host) {\n    errors.push('数据库主机地址不能为空');\n    securityScore -= 20;\n  }\n  if (!envConfig.port || isNaN(envConfig.port) || envConfig.port < 1 || envConfig.port > 65535) {\n    errors.push('数据库端口必须是1-65535之间的数字');\n    securityScore -= 15;\n  }\n  if (!envConfig.database) {\n    errors.push('数据库名称不能为空');\n    securityScore -= 15;\n  }\n  if (!envConfig.username) {\n    errors.push('数据库用户名不能为空');\n    securityScore -= 15;\n  }\n  \n  // 生产环境额外验证\n  if (env === 'production') {\n    if (!envConfig.password || envConfig.password.length < 12) {\n      errors.push('生产环境数据库密码长度至少需要12个字符');\n      securityScore -= 25;\n    }\n    \n    // 密码强度检查\n    if (envConfig.password && !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])/.test(envConfig.password)) {\n      warnings.push('密码强度不足，建议包含大小写字母、数字和特殊字符');\n      securityScore -= 10;\n    }\n    \n    if (envConfig.host === 'localhost' || envConfig.host === '127.0.0.1') {\n      warnings.push('生产环境不建议使用localhost');\n      securityScore -= 10;\n    }\n    \n    if (!getSSLConfig(env)) {\n      warnings.push('生产环境强烈建议启用SSL连接');\n      securityScore -= 15;\n    }\n    \n    if (envConfig.logging !== false) {\n      errors.push('生产环境应关闭SQL日志记录');\n      securityScore -= 10;\n    }\n    \n    // 用户名安全检查\n    const unsafeUsernames = ['postgres', 'admin', 'root', 'sa', 'user'];\n    if (unsafeUsernames.includes(envConfig.username)) {\n      warnings.push('使用默认用户名存在安全风险');\n      securityScore -= 10;\n    }\n  }\n  \n  // 连接池配置验证\n  if (envConfig.pool) {\n    if (envConfig.pool.max && (envConfig.pool.max < 1 || envConfig.pool.max > 100)) {\n      warnings.push('连接池最大连接数建议在1-100之间');\n      performanceScore -= 10;\n    }\n    \n    if (envConfig.pool.min && envConfig.pool.min < 0) {\n      errors.push('连接池最小连接数不能为负数');\n      performanceScore -= 15;\n    }\n    \n    if (envConfig.pool.min && envConfig.pool.max && envConfig.pool.min > envConfig.pool.max) {\n      errors.push('连接池最小连接数不能大于最大连接数');\n      performanceScore -= 20;\n    }\n  }\n  \n  // 集成安全配置验证\n  const securityValidation = validateSecurityConfig(env);\n  if (!securityValidation.valid) {\n    errors.push(...securityValidation.issues);\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors,\n    warnings: [...warnings, ...(securityValidation.warnings || [])],\n    config: envConfig,\n    securityScore: Math.min(securityScore, securityValidation.score || 100),\n    performanceScore: Math.max(0, performanceScore),\n    recommendations: generateConfigRecommendations(envConfig, securityScore, performanceScore)\n  };\n}\n\n/**\n * 生成配置建议\n * @param {Object} config - 配置对象\n * @param {number} securityScore - 安全分数\n * @param {number} performanceScore - 性能分数\n * @returns {Array} 建议列表\n */\nfunction generateConfigRecommendations(config, securityScore, performanceScore) {\n  const recommendations = [];\n  \n  if (securityScore < 80) {\n    recommendations.push('安全分数偏低，建议立即优化安全配置');\n  }\n  \n  if (performanceScore < 80) {\n    recommendations.push('性能分数偏低，建议优化连接池和超时配置');\n  }\n  \n  if (process.env.NODE_ENV === 'production') {\n    recommendations.push('定期轮换数据库密码');\n    recommendations.push('监控数据库连接数和性能指标');\n    recommendations.push('配置数据库备份策略');\n    recommendations.push('设置数据库访问白名单');\n  }\n  \n  return recommendations;\n}\n\n/**\n * 获取数据库安全配置\n * @param {string} env - 环境名称\n * @returns {object} 安全配置\n */\nfunction getDatabaseSecurityConfig(env = process.env.NODE_ENV || 'development') {\n  const envConfig = config[env];\n  return {\n    ssl: getSSLConfig(env),\n    pool: getPoolConfig(env),\n    security: envConfig.security || {},\n    healthCheck: envConfig.healthCheck || {},\n    securityScore: calculateSecurityScore(env)\n  };\n}\n\n/**\n * 生成数据库安全报告\n * @param {string} env - 环境名称\n * @returns {object} 安全报告\n */\nfunction generateSecurityReport(env = process.env.NODE_ENV || 'development') {\n  const validation = validateSecurityConfig(env);\n  const securityConfig = getDatabaseSecurityConfig(env);\n  const envConfig = config[env] || config.development;\n  \n  const report = {\n    environment: env,\n    timestamp: new Date().toISOString(),\n    securityLevel: 'high',\n    securityScore: validation.score || 100,\n    status: validation.valid ? 'PASS' : 'FAIL',\n    issues: [...(validation.issues || [])],\n    warnings: [...(validation.warnings || [])],\n    recommendations: [],\n    compliance: {\n      gdpr: true,\n      sox: true,\n      pci: true\n    },\n    configuration: {\n      ssl: {\n        enabled: securityConfig.ssl !== false,\n        details: securityConfig.ssl\n      },\n      poolSecurity: securityConfig.pool,\n      auditEnabled: securityConfig.security.auditLog,\n      encryptionAtRest: securityConfig.security.encryptionAtRest,\n      encryptionInTransit: securityConfig.security.encryptionInTransit\n    }\n  };\n  \n  let securityScore = validation.score || 100;\n  \n  // SSL检查\n  if (!getSSLConfig(env)) {\n    const severity = env === 'production' ? 'high' : 'medium';\n    report.issues.push({\n      type: 'warning',\n      category: 'encryption',\n      message: 'SSL连接未启用',\n      severity,\n      impact: 'data_transmission_vulnerability'\n    });\n    report.recommendations.push('启用SSL/TLS加密连接');\n    securityScore -= env === 'production' ? 20 : 10;\n    if (env === 'production') {\n      report.compliance.pci = false;\n    }\n  }\n  \n  // 密码强度检查\n  if (envConfig.password) {\n    const minLength = env === 'production' ? 12 : 8;\n    if (envConfig.password.length < minLength) {\n      report.issues.push({\n        type: 'error',\n        category: 'authentication',\n        message: `密码长度不足(当前: ${envConfig.password.length}, 要求: ${minLength})`,\n        severity: 'high',\n        impact: 'weak_authentication'\n      });\n      report.recommendations.push(`使用至少${minLength}个字符的强密码`);\n      securityScore -= 25;\n      report.compliance.sox = false;\n    }\n    \n    // 密码复杂度检查\n    const complexityRegex = /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])/;\n    if (!complexityRegex.test(envConfig.password)) {\n      report.issues.push({\n        type: 'warning',\n        category: 'authentication',\n        message: '密码复杂度不足',\n        severity: 'medium',\n        impact: 'password_vulnerability'\n      });\n      report.recommendations.push('密码应包含大小写字母、数字和特殊字符');\n      securityScore -= 15;\n    }\n  }\n  \n  // 默认凭据检查\n  const defaultCredentials = ['postgres', 'admin', 'root', 'sa', 'user'];\n  if (defaultCredentials.includes(envConfig.username)) {\n    report.issues.push({\n      type: 'warning',\n      category: 'authentication',\n      message: '使用默认用户名',\n      severity: 'medium',\n      impact: 'predictable_credentials'\n    });\n    report.recommendations.push('避免使用默认用户名');\n    securityScore -= 15;\n  }\n  \n  // 审计和监控检查\n  if (!envConfig.security?.auditLog) {\n    report.issues.push({\n      type: 'warning',\n      category: 'monitoring',\n      message: '未启用审计日志',\n      severity: 'medium',\n      impact: 'audit_trail_missing'\n    });\n    report.recommendations.push('启用数据库审计日志');\n    securityScore -= 10;\n    if (env === 'production') {\n      report.compliance.sox = false;\n    }\n  }\n  \n  // 更新安全分数\n  report.securityScore = Math.max(0, securityScore);\n  \n  // 确定安全级别\n  const criticalCount = report.issues.filter(issue => issue.severity === 'critical').length;\n  const errorCount = report.issues.filter(issue => issue.type === 'error').length;\n  const warningCount = report.issues.filter(issue => issue.type === 'warning').length;\n  \n  if (criticalCount > 0 || report.securityScore < 50) {\n    report.securityLevel = 'critical';\n  } else if (errorCount > 0 || report.securityScore < 70) {\n    report.securityLevel = 'low';\n  } else if (warningCount > 2 || report.securityScore < 85) {\n    report.securityLevel = 'medium';\n  } else {\n    report.securityLevel = 'high';\n  }\n  \n  // 添加原有的建议\n  const originalRecommendations = generateSecurityRecommendations(env, validation);\n  report.recommendations.push(...originalRecommendations);\n  \n  return report;\n}\n\n/**\n * 生成安全建议\n * @param {string} env - 环境名称\n * @param {object} validation - 验证结果\n * @returns {array} 建议列表\n */\nfunction generateSecurityRecommendations(env, validation) {\n  const recommendations = [];\n  \n  if (env === 'production') {\n    if (validation.score < 80) {\n      recommendations.push('生产环境安全分数偏低，建议启用所有安全功能');\n    }\n    if (!getSSLConfig(env)) {\n      recommendations.push('强烈建议在生产环境启用SSL/TLS加密');\n    }\n    recommendations.push('定期轮换数据库密码');\n    recommendations.push('启用数据库审计日志');\n    recommendations.push('配置数据库防火墙规则');\n  }\n  \n  if (env === 'development') {\n    recommendations.push('考虑在开发环境启用SSL以模拟生产环境');\n    recommendations.push('使用强密码进行开发测试');\n  }\n  \n  return recommendations;\n}\n\n// 获取Prisma配置\nfunction getPrismaConfig(env = process.env.NODE_ENV || 'development') {\n  const envConfig = config[env] || config.development;\n  return {\n    datasourceUrl: process.env.DATABASE_URL || 'postgresql://postgres:123456@localhost:5432/zkagent_dev',\n    log: envConfig.prisma?.logLevel === 'info' ? ['query', 'info', 'warn', 'error'] : ['warn', 'error'],\n    errorFormat: envConfig.prisma?.errorFormat || 'pretty'\n  };\n}\n\nmodule.exports = {\n  config,\n  getCurrentConfig,\n  getDatabaseUrl,\n  validateDatabaseConfig,\n  getPrismaConfig,\n  getDatabaseSecurityConfig,\n  generateSecurityReport,\n  generateSecurityRecommendations,\n  generateConfigRecommendations\n};"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,YAAY,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACzD,MAAM;EAAEE;AAAe,CAAC,GAAGD,YAAY;AACvC,MAAM;EACJE,YAAY;EACZC,aAAa;EACbC,sBAAsB;EACtBC;AACF,CAAC,GAAGN,OAAO,CAAC,mBAAmB,CAAC;;AAEhC;AACA,MAAMO,MAAM,GAAG;EACbC,UAAU,EAAE;IACVC,IAAI,EAAEP,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC;IAC5CQ,IAAI,EAAEC,QAAQ,CAACT,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACjDU,QAAQ,EAAEV,cAAc,CAAC,SAAS,EAAE,aAAa,CAAC;IAClDW,QAAQ,EAAEX,cAAc,CAAC,SAAS,EAAE,UAAU,CAAC;IAC/CY,QAAQ,EAAEZ,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC;IACjDa,OAAO,EAAE,UAAU;IACnBC,OAAO,EAAE,KAAK;IAAE;IAChBC,IAAI,EAAE;MACRC,GAAG,EAAE,GAAG;MACRC,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAEA,CAAA,KAAMC,kBAAkB,CAAC;IACrC,CAAC;IAAE;IACCC,cAAc,EAAE;MACdC,GAAG,EAAEvB,YAAY,CAAC,YAAY,CAAC;MAC/BwB,cAAc,EAAEhB,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,MAAM,CAAC;MAClEC,cAAc,EAAEpB,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACG,kBAAkB,IAAI,OAAO,CAAC;MACnE;MACAC,iBAAiB,EAAEtB,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACK,oBAAoB,IAAI,OAAO,CAAC;MACxEC,mCAAmC,EAAExB,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACO,2BAA2B,IAAI,OAAO,CAAC;MACjG;MACAC,gBAAgB,EAAE,eAAe;MACjCC,OAAO,EAAE;IACX,CAAC;IACD;IACAC,WAAW,EAAE;MACXC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE9B,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACa,wBAAwB,IAAI,OAAO,CAAC;MACnEC,OAAO,EAAEhC,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACe,uBAAuB,IAAI,MAAM,CAAC;MAChEC,OAAO,EAAElC,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACiB,uBAAuB,IAAI,GAAG,CAAC;MAC7D;MACAC,aAAa,EAAE,IAAI;MACnBC,QAAQ,EAAE;IACZ,CAAC;IACD;IACAC,MAAM,EAAE;MACNC,GAAG,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;MACtBC,WAAW,EAAE,SAAS;MACtB;MACAC,WAAW,EAAE;QACXC,EAAE,EAAE;UACFC,GAAG,EAAE1B,OAAO,CAACC,GAAG,CAAC0B,YAAY,IAAI;QACnC;MACF;IACF,CAAC;IACD;IACAC,QAAQ,EAAE;MACRhB,OAAO,EAAE,IAAI;MACbiB,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE9B,OAAO,CAACC,GAAG,CAAC8B,2BAA2B,KAAK,MAAM;MACpEC,mBAAmB,EAAE,IAAI;MACzBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EAEDC,IAAI,EAAE;IACJrD,IAAI,EAAEmB,OAAO,CAACC,GAAG,CAACkC,YAAY,IAAI,WAAW;IAC7CrD,IAAI,EAAEC,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAACmC,YAAY,CAAC,IAAI,IAAI;IAChDpD,QAAQ,EAAEgB,OAAO,CAACC,GAAG,CAACoC,YAAY,IAAI,aAAa;IACnDpD,QAAQ,EAAEe,OAAO,CAACC,GAAG,CAACqC,YAAY,IAAI,UAAU;IAChDpD,QAAQ,EAAEc,OAAO,CAACC,GAAG,CAACsC,gBAAgB,IAAI,QAAQ;IAClDpD,OAAO,EAAE,UAAU;IACnBC,OAAO,EAAE,KAAK;IACdC,IAAI,EAAEb,aAAa,CAAC,MAAM,CAAC;IAC3BqB,cAAc,EAAE;MACdC,GAAG,EAAEvB,YAAY,CAAC,MAAM,CAAC;MACzBwB,cAAc,EAAE,IAAI;MACpBI,cAAc,EAAE,KAAK;MACrBM,gBAAgB,EAAE;IACpB,CAAC;IACDE,WAAW,EAAE;MACXC,OAAO,EAAE,KAAK;MACdO,aAAa,EAAE;IACjB,CAAC;IACD;IACAE,MAAM,EAAE;MACNC,GAAG,EAAE,CAAC,OAAO,CAAC;MACdC,WAAW,EAAE,QAAQ;MACrBC,WAAW,EAAE;QACXC,EAAE,EAAE;UACFC,GAAG,EAAE1B,OAAO,CAACC,GAAG,CAACuC,iBAAiB,IAAI;QACxC;MACF;IACF,CAAC;IACD;IACAZ,QAAQ,EAAE;MACRhB,OAAO,EAAE,KAAK;MACdiB,QAAQ,EAAE,KAAK;MACfC,gBAAgB,EAAE,KAAK;MACvBE,mBAAmB,EAAE;IACvB;EACF,CAAC;EAEDS,WAAW,EAAE;IACX5D,IAAI,EAAEmB,OAAO,CAACC,GAAG,CAACyC,OAAO,IAAI1C,OAAO,CAACC,GAAG,CAAC0C,aAAa,IAAI,WAAW;IACrE7D,IAAI,EAAEC,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAAC2C,OAAO,IAAI5C,OAAO,CAACC,GAAG,CAAC4C,aAAa,CAAC,IAAI,IAAI;IACxE7D,QAAQ,EAAEgB,OAAO,CAACC,GAAG,CAAC6C,aAAa,IAAI,aAAa;IACpD7D,QAAQ,EAAEe,OAAO,CAACC,GAAG,CAAC8C,OAAO,IAAI/C,OAAO,CAACC,GAAG,CAAC+C,aAAa,IAAI,UAAU;IACxE9D,QAAQ,EAAEc,OAAO,CAACC,GAAG,CAACgD,WAAW,IAAIjD,OAAO,CAACC,GAAG,CAACiD,iBAAiB,IAAI,QAAQ;IAC9E/D,OAAO,EAAE,UAAU;IACnBC,OAAO,EAAE+D,OAAO,CAAC7B,GAAG;IAAE;IACtBjC,IAAI,EAAEb,aAAa,CAAC,aAAa,CAAC;IAClCqB,cAAc,EAAE;MACdC,GAAG,EAAEvB,YAAY,CAAC,aAAa,CAAC;MAChCwB,cAAc,EAAE,IAAI;MACpBI,cAAc,EAAE,KAAK;MACrBM,gBAAgB,EAAE;IACpB,CAAC;IACDE,WAAW,EAAE;MACXC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,KAAK;MACfE,OAAO,EAAE,IAAI;MACbE,OAAO,EAAE,CAAC;MACVE,aAAa,EAAE;IACjB,CAAC;IACD;IACAE,MAAM,EAAE;MACNC,GAAG,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;MACvCC,WAAW,EAAE,QAAQ;MACrBC,WAAW,EAAE;QACXC,EAAE,EAAE;UACFC,GAAG,EAAE1B,OAAO,CAACC,GAAG,CAAC0B,YAAY,IAAI;QACnC;MACF;IACF,CAAC;IACD;IACAC,QAAQ,EAAE;MACRhB,OAAO,EAAEZ,OAAO,CAACC,GAAG,CAACmD,qBAAqB,KAAK,MAAM;MACrDvB,QAAQ,EAAE,KAAK;MACfC,gBAAgB,EAAE,KAAK;MACvBE,mBAAmB,EAAEhC,OAAO,CAACC,GAAG,CAACoD,gBAAgB,KAAK;IACxD;EACF;AACF,CAAC;;AAED;AACA,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,MAAMrD,GAAG,GAAGD,OAAO,CAACC,GAAG,CAACsD,QAAQ,IAAI,aAAa;EACjD,OAAO5E,MAAM,CAACsB,GAAG,CAAC,IAAItB,MAAM,CAAC8D,WAAW;AAC1C;;AAEA;AACA,SAASe,cAAcA,CAACvD,GAAG,GAAGD,OAAO,CAACC,GAAG,CAACsD,QAAQ,IAAI,aAAa,EAAE;EACnE,MAAME,SAAS,GAAG9E,MAAM,CAACsB,GAAG,CAAC,IAAItB,MAAM,CAAC8D,WAAW;EAEnD,IAAIgB,SAAS,CAACpC,MAAM,IAAIoC,SAAS,CAACpC,MAAM,CAACqC,aAAa,EAAE;IACtD,OAAOD,SAAS,CAACpC,MAAM,CAACqC,aAAa;EACvC;;EAEA;EACA,MAAM;IAAE7E,IAAI;IAAEC,IAAI;IAAEE,QAAQ;IAAEC,QAAQ;IAAEC,QAAQ;IAAEY;EAAI,CAAC,GAAG2D,SAAS;EACnE,MAAME,QAAQ,GAAG7D,GAAG,GAAG,kBAAkB,GAAG,EAAE;EAC9C,OAAO,gBAAgBb,QAAQ,IAAIC,QAAQ,IAAIL,IAAI,IAAIC,IAAI,IAAIE,QAAQ,GAAG2E,QAAQ,EAAE;AACtF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAAC3D,GAAG,GAAGD,OAAO,CAACC,GAAG,CAACsD,QAAQ,IAAI,aAAa,EAAE;EAC3E,MAAME,SAAS,GAAG9E,MAAM,CAACsB,GAAG,CAAC;EAC7B,IAAI,CAACwD,SAAS,EAAE;IACd,MAAM,IAAII,KAAK,CAAC,SAAS5D,GAAG,SAAS,CAAC;EACxC;EAEA,MAAM6D,MAAM,GAAG,EAAE;EACjB,MAAMC,QAAQ,GAAG,EAAE;EACnB,IAAIC,aAAa,GAAG,GAAG;EACvB,IAAIC,gBAAgB,GAAG,GAAG;;EAE1B;EACA,IAAI,CAACR,SAAS,CAAC5E,IAAI,EAAE;IACnBiF,MAAM,CAACI,IAAI,CAAC,aAAa,CAAC;IAC1BF,aAAa,IAAI,EAAE;EACrB;EACA,IAAI,CAACP,SAAS,CAAC3E,IAAI,IAAIqF,KAAK,CAACV,SAAS,CAAC3E,IAAI,CAAC,IAAI2E,SAAS,CAAC3E,IAAI,GAAG,CAAC,IAAI2E,SAAS,CAAC3E,IAAI,GAAG,KAAK,EAAE;IAC5FgF,MAAM,CAACI,IAAI,CAAC,sBAAsB,CAAC;IACnCF,aAAa,IAAI,EAAE;EACrB;EACA,IAAI,CAACP,SAAS,CAACzE,QAAQ,EAAE;IACvB8E,MAAM,CAACI,IAAI,CAAC,WAAW,CAAC;IACxBF,aAAa,IAAI,EAAE;EACrB;EACA,IAAI,CAACP,SAAS,CAACxE,QAAQ,EAAE;IACvB6E,MAAM,CAACI,IAAI,CAAC,YAAY,CAAC;IACzBF,aAAa,IAAI,EAAE;EACrB;;EAEA;EACA,IAAI/D,GAAG,KAAK,YAAY,EAAE;IACxB,IAAI,CAACwD,SAAS,CAACvE,QAAQ,IAAIuE,SAAS,CAACvE,QAAQ,CAACkF,MAAM,GAAG,EAAE,EAAE;MACzDN,MAAM,CAACI,IAAI,CAAC,sBAAsB,CAAC;MACnCF,aAAa,IAAI,EAAE;IACrB;;IAEA;IACA,IAAIP,SAAS,CAACvE,QAAQ,IAAI,CAAC,gDAAgD,CAACgD,IAAI,CAACuB,SAAS,CAACvE,QAAQ,CAAC,EAAE;MACpG6E,QAAQ,CAACG,IAAI,CAAC,0BAA0B,CAAC;MACzCF,aAAa,IAAI,EAAE;IACrB;IAEA,IAAIP,SAAS,CAAC5E,IAAI,KAAK,WAAW,IAAI4E,SAAS,CAAC5E,IAAI,KAAK,WAAW,EAAE;MACpEkF,QAAQ,CAACG,IAAI,CAAC,oBAAoB,CAAC;MACnCF,aAAa,IAAI,EAAE;IACrB;IAEA,IAAI,CAACzF,YAAY,CAAC0B,GAAG,CAAC,EAAE;MACtB8D,QAAQ,CAACG,IAAI,CAAC,iBAAiB,CAAC;MAChCF,aAAa,IAAI,EAAE;IACrB;IAEA,IAAIP,SAAS,CAACrE,OAAO,KAAK,KAAK,EAAE;MAC/B0E,MAAM,CAACI,IAAI,CAAC,gBAAgB,CAAC;MAC7BF,aAAa,IAAI,EAAE;IACrB;;IAEA;IACA,MAAMK,eAAe,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC;IACnE,IAAIA,eAAe,CAACC,QAAQ,CAACb,SAAS,CAACxE,QAAQ,CAAC,EAAE;MAChD8E,QAAQ,CAACG,IAAI,CAAC,eAAe,CAAC;MAC9BF,aAAa,IAAI,EAAE;IACrB;EACF;;EAEA;EACA,IAAIP,SAAS,CAACpE,IAAI,EAAE;IAClB,IAAIoE,SAAS,CAACpE,IAAI,CAACC,GAAG,KAAKmE,SAAS,CAACpE,IAAI,CAACC,GAAG,GAAG,CAAC,IAAImE,SAAS,CAACpE,IAAI,CAACC,GAAG,GAAG,GAAG,CAAC,EAAE;MAC9EyE,QAAQ,CAACG,IAAI,CAAC,oBAAoB,CAAC;MACnCD,gBAAgB,IAAI,EAAE;IACxB;IAEA,IAAIR,SAAS,CAACpE,IAAI,CAACE,GAAG,IAAIkE,SAAS,CAACpE,IAAI,CAACE,GAAG,GAAG,CAAC,EAAE;MAChDuE,MAAM,CAACI,IAAI,CAAC,eAAe,CAAC;MAC5BD,gBAAgB,IAAI,EAAE;IACxB;IAEA,IAAIR,SAAS,CAACpE,IAAI,CAACE,GAAG,IAAIkE,SAAS,CAACpE,IAAI,CAACC,GAAG,IAAImE,SAAS,CAACpE,IAAI,CAACE,GAAG,GAAGkE,SAAS,CAACpE,IAAI,CAACC,GAAG,EAAE;MACvFwE,MAAM,CAACI,IAAI,CAAC,mBAAmB,CAAC;MAChCD,gBAAgB,IAAI,EAAE;IACxB;EACF;;EAEA;EACA,MAAMM,kBAAkB,GAAG9F,sBAAsB,CAACwB,GAAG,CAAC;EACtD,IAAI,CAACsE,kBAAkB,CAACC,KAAK,EAAE;IAC7BV,MAAM,CAACI,IAAI,CAAC,GAAGK,kBAAkB,CAACE,MAAM,CAAC;EAC3C;EAEA,OAAO;IACLD,KAAK,EAAEV,MAAM,CAACM,MAAM,KAAK,CAAC;IAC1BN,MAAM;IACNC,QAAQ,EAAE,CAAC,GAAGA,QAAQ,EAAE,IAAIQ,kBAAkB,CAACR,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC/DpF,MAAM,EAAE8E,SAAS;IACjBO,aAAa,EAAEU,IAAI,CAACnF,GAAG,CAACyE,aAAa,EAAEO,kBAAkB,CAACI,KAAK,IAAI,GAAG,CAAC;IACvEV,gBAAgB,EAAES,IAAI,CAACpF,GAAG,CAAC,CAAC,EAAE2E,gBAAgB,CAAC;IAC/CW,eAAe,EAAEC,6BAA6B,CAACpB,SAAS,EAAEO,aAAa,EAAEC,gBAAgB;EAC3F,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASY,6BAA6BA,CAAClG,MAAM,EAAEqF,aAAa,EAAEC,gBAAgB,EAAE;EAC9E,MAAMW,eAAe,GAAG,EAAE;EAE1B,IAAIZ,aAAa,GAAG,EAAE,EAAE;IACtBY,eAAe,CAACV,IAAI,CAAC,mBAAmB,CAAC;EAC3C;EAEA,IAAID,gBAAgB,GAAG,EAAE,EAAE;IACzBW,eAAe,CAACV,IAAI,CAAC,qBAAqB,CAAC;EAC7C;EAEA,IAAIlE,OAAO,CAACC,GAAG,CAACsD,QAAQ,KAAK,YAAY,EAAE;IACzCqB,eAAe,CAACV,IAAI,CAAC,WAAW,CAAC;IACjCU,eAAe,CAACV,IAAI,CAAC,eAAe,CAAC;IACrCU,eAAe,CAACV,IAAI,CAAC,WAAW,CAAC;IACjCU,eAAe,CAACV,IAAI,CAAC,YAAY,CAAC;EACpC;EAEA,OAAOU,eAAe;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASE,yBAAyBA,CAAC7E,GAAG,GAAGD,OAAO,CAACC,GAAG,CAACsD,QAAQ,IAAI,aAAa,EAAE;EAC9E,MAAME,SAAS,GAAG9E,MAAM,CAACsB,GAAG,CAAC;EAC7B,OAAO;IACLH,GAAG,EAAEvB,YAAY,CAAC0B,GAAG,CAAC;IACtBZ,IAAI,EAAEb,aAAa,CAACyB,GAAG,CAAC;IACxB2B,QAAQ,EAAE6B,SAAS,CAAC7B,QAAQ,IAAI,CAAC,CAAC;IAClCjB,WAAW,EAAE8C,SAAS,CAAC9C,WAAW,IAAI,CAAC,CAAC;IACxCqD,aAAa,EAAEtF,sBAAsB,CAACuB,GAAG;EAC3C,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS8E,sBAAsBA,CAAC9E,GAAG,GAAGD,OAAO,CAACC,GAAG,CAACsD,QAAQ,IAAI,aAAa,EAAE;EAC3E,MAAMyB,UAAU,GAAGvG,sBAAsB,CAACwB,GAAG,CAAC;EAC9C,MAAMgF,cAAc,GAAGH,yBAAyB,CAAC7E,GAAG,CAAC;EACrD,MAAMwD,SAAS,GAAG9E,MAAM,CAACsB,GAAG,CAAC,IAAItB,MAAM,CAAC8D,WAAW;EAEnD,MAAMyC,MAAM,GAAG;IACbC,WAAW,EAAElF,GAAG;IAChBmF,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCC,aAAa,EAAE,MAAM;IACrBvB,aAAa,EAAEgB,UAAU,CAACL,KAAK,IAAI,GAAG;IACtCa,MAAM,EAAER,UAAU,CAACR,KAAK,GAAG,MAAM,GAAG,MAAM;IAC1CC,MAAM,EAAE,CAAC,IAAIO,UAAU,CAACP,MAAM,IAAI,EAAE,CAAC,CAAC;IACtCV,QAAQ,EAAE,CAAC,IAAIiB,UAAU,CAACjB,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC1Ca,eAAe,EAAE,EAAE;IACnBa,UAAU,EAAE;MACVC,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE;IACP,CAAC;IACDC,aAAa,EAAE;MACb/F,GAAG,EAAE;QACHc,OAAO,EAAEqE,cAAc,CAACnF,GAAG,KAAK,KAAK;QACrCgG,OAAO,EAAEb,cAAc,CAACnF;MAC1B,CAAC;MACDiG,YAAY,EAAEd,cAAc,CAAC5F,IAAI;MACjC2G,YAAY,EAAEf,cAAc,CAACrD,QAAQ,CAACC,QAAQ;MAC9CC,gBAAgB,EAAEmD,cAAc,CAACrD,QAAQ,CAACE,gBAAgB;MAC1DE,mBAAmB,EAAEiD,cAAc,CAACrD,QAAQ,CAACI;IAC/C;EACF,CAAC;EAED,IAAIgC,aAAa,GAAGgB,UAAU,CAACL,KAAK,IAAI,GAAG;;EAE3C;EACA,IAAI,CAACpG,YAAY,CAAC0B,GAAG,CAAC,EAAE;IACtB,MAAMgG,QAAQ,GAAGhG,GAAG,KAAK,YAAY,GAAG,MAAM,GAAG,QAAQ;IACzDiF,MAAM,CAACT,MAAM,CAACP,IAAI,CAAC;MACjBgC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE,YAAY;MACtBC,OAAO,EAAE,UAAU;MACnBH,QAAQ;MACRI,MAAM,EAAE;IACV,CAAC,CAAC;IACFnB,MAAM,CAACN,eAAe,CAACV,IAAI,CAAC,eAAe,CAAC;IAC5CF,aAAa,IAAI/D,GAAG,KAAK,YAAY,GAAG,EAAE,GAAG,EAAE;IAC/C,IAAIA,GAAG,KAAK,YAAY,EAAE;MACxBiF,MAAM,CAACO,UAAU,CAACG,GAAG,GAAG,KAAK;IAC/B;EACF;;EAEA;EACA,IAAInC,SAAS,CAACvE,QAAQ,EAAE;IACtB,MAAMoH,SAAS,GAAGrG,GAAG,KAAK,YAAY,GAAG,EAAE,GAAG,CAAC;IAC/C,IAAIwD,SAAS,CAACvE,QAAQ,CAACkF,MAAM,GAAGkC,SAAS,EAAE;MACzCpB,MAAM,CAACT,MAAM,CAACP,IAAI,CAAC;QACjBgC,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE,gBAAgB;QAC1BC,OAAO,EAAE,cAAc3C,SAAS,CAACvE,QAAQ,CAACkF,MAAM,SAASkC,SAAS,GAAG;QACrEL,QAAQ,EAAE,MAAM;QAChBI,MAAM,EAAE;MACV,CAAC,CAAC;MACFnB,MAAM,CAACN,eAAe,CAACV,IAAI,CAAC,OAAOoC,SAAS,SAAS,CAAC;MACtDtC,aAAa,IAAI,EAAE;MACnBkB,MAAM,CAACO,UAAU,CAACE,GAAG,GAAG,KAAK;IAC/B;;IAEA;IACA,MAAMY,eAAe,GAAG,gDAAgD;IACxE,IAAI,CAACA,eAAe,CAACrE,IAAI,CAACuB,SAAS,CAACvE,QAAQ,CAAC,EAAE;MAC7CgG,MAAM,CAACT,MAAM,CAACP,IAAI,CAAC;QACjBgC,IAAI,EAAE,SAAS;QACfC,QAAQ,EAAE,gBAAgB;QAC1BC,OAAO,EAAE,SAAS;QAClBH,QAAQ,EAAE,QAAQ;QAClBI,MAAM,EAAE;MACV,CAAC,CAAC;MACFnB,MAAM,CAACN,eAAe,CAACV,IAAI,CAAC,oBAAoB,CAAC;MACjDF,aAAa,IAAI,EAAE;IACrB;EACF;;EAEA;EACA,MAAMwC,kBAAkB,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC;EACtE,IAAIA,kBAAkB,CAAClC,QAAQ,CAACb,SAAS,CAACxE,QAAQ,CAAC,EAAE;IACnDiG,MAAM,CAACT,MAAM,CAACP,IAAI,CAAC;MACjBgC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE,gBAAgB;MAC1BC,OAAO,EAAE,SAAS;MAClBH,QAAQ,EAAE,QAAQ;MAClBI,MAAM,EAAE;IACV,CAAC,CAAC;IACFnB,MAAM,CAACN,eAAe,CAACV,IAAI,CAAC,WAAW,CAAC;IACxCF,aAAa,IAAI,EAAE;EACrB;;EAEA;EACA,IAAI,CAACP,SAAS,CAAC7B,QAAQ,EAAEC,QAAQ,EAAE;IACjCqD,MAAM,CAACT,MAAM,CAACP,IAAI,CAAC;MACjBgC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE,YAAY;MACtBC,OAAO,EAAE,SAAS;MAClBH,QAAQ,EAAE,QAAQ;MAClBI,MAAM,EAAE;IACV,CAAC,CAAC;IACFnB,MAAM,CAACN,eAAe,CAACV,IAAI,CAAC,WAAW,CAAC;IACxCF,aAAa,IAAI,EAAE;IACnB,IAAI/D,GAAG,KAAK,YAAY,EAAE;MACxBiF,MAAM,CAACO,UAAU,CAACE,GAAG,GAAG,KAAK;IAC/B;EACF;;EAEA;EACAT,MAAM,CAAClB,aAAa,GAAGU,IAAI,CAACpF,GAAG,CAAC,CAAC,EAAE0E,aAAa,CAAC;;EAEjD;EACA,MAAMyC,aAAa,GAAGvB,MAAM,CAACT,MAAM,CAACiC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACV,QAAQ,KAAK,UAAU,CAAC,CAAC7B,MAAM;EACzF,MAAMwC,UAAU,GAAG1B,MAAM,CAACT,MAAM,CAACiC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACT,IAAI,KAAK,OAAO,CAAC,CAAC9B,MAAM;EAC/E,MAAMyC,YAAY,GAAG3B,MAAM,CAACT,MAAM,CAACiC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACT,IAAI,KAAK,SAAS,CAAC,CAAC9B,MAAM;EAEnF,IAAIqC,aAAa,GAAG,CAAC,IAAIvB,MAAM,CAAClB,aAAa,GAAG,EAAE,EAAE;IAClDkB,MAAM,CAACK,aAAa,GAAG,UAAU;EACnC,CAAC,MAAM,IAAIqB,UAAU,GAAG,CAAC,IAAI1B,MAAM,CAAClB,aAAa,GAAG,EAAE,EAAE;IACtDkB,MAAM,CAACK,aAAa,GAAG,KAAK;EAC9B,CAAC,MAAM,IAAIsB,YAAY,GAAG,CAAC,IAAI3B,MAAM,CAAClB,aAAa,GAAG,EAAE,EAAE;IACxDkB,MAAM,CAACK,aAAa,GAAG,QAAQ;EACjC,CAAC,MAAM;IACLL,MAAM,CAACK,aAAa,GAAG,MAAM;EAC/B;;EAEA;EACA,MAAMuB,uBAAuB,GAAGC,+BAA+B,CAAC9G,GAAG,EAAE+E,UAAU,CAAC;EAChFE,MAAM,CAACN,eAAe,CAACV,IAAI,CAAC,GAAG4C,uBAAuB,CAAC;EAEvD,OAAO5B,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6B,+BAA+BA,CAAC9G,GAAG,EAAE+E,UAAU,EAAE;EACxD,MAAMJ,eAAe,GAAG,EAAE;EAE1B,IAAI3E,GAAG,KAAK,YAAY,EAAE;IACxB,IAAI+E,UAAU,CAACL,KAAK,GAAG,EAAE,EAAE;MACzBC,eAAe,CAACV,IAAI,CAAC,uBAAuB,CAAC;IAC/C;IACA,IAAI,CAAC3F,YAAY,CAAC0B,GAAG,CAAC,EAAE;MACtB2E,eAAe,CAACV,IAAI,CAAC,sBAAsB,CAAC;IAC9C;IACAU,eAAe,CAACV,IAAI,CAAC,WAAW,CAAC;IACjCU,eAAe,CAACV,IAAI,CAAC,WAAW,CAAC;IACjCU,eAAe,CAACV,IAAI,CAAC,YAAY,CAAC;EACpC;EAEA,IAAIjE,GAAG,KAAK,aAAa,EAAE;IACzB2E,eAAe,CAACV,IAAI,CAAC,qBAAqB,CAAC;IAC3CU,eAAe,CAACV,IAAI,CAAC,aAAa,CAAC;EACrC;EAEA,OAAOU,eAAe;AACxB;;AAEA;AACA,SAASoC,eAAeA,CAAC/G,GAAG,GAAGD,OAAO,CAACC,GAAG,CAACsD,QAAQ,IAAI,aAAa,EAAE;EACpE,MAAME,SAAS,GAAG9E,MAAM,CAACsB,GAAG,CAAC,IAAItB,MAAM,CAAC8D,WAAW;EACnD,OAAO;IACLiB,aAAa,EAAE1D,OAAO,CAACC,GAAG,CAAC0B,YAAY,IAAI,yDAAyD;IACpGL,GAAG,EAAEmC,SAAS,CAACpC,MAAM,EAAE4F,QAAQ,KAAK,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;IACnG1F,WAAW,EAAEkC,SAAS,CAACpC,MAAM,EAAEE,WAAW,IAAI;EAChD,CAAC;AACH;AAEA2F,MAAM,CAACC,OAAO,GAAG;EACfxI,MAAM;EACN2E,gBAAgB;EAChBE,cAAc;EACdI,sBAAsB;EACtBoD,eAAe;EACflC,yBAAyB;EACzBC,sBAAsB;EACtBgC,+BAA+B;EAC/BlC;AACF,CAAC","ignoreList":[]}