6f838022cd76ced5fee7a498f402bd61
"use strict";

/**
 * @file poster\templates\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_xpylbo59t() {
  var path = "E:\\zk-agent\\app\\api\\poster\\templates\\route.ts";
  var hash = "aa752508ff37e3197e0e4b0bb91b822e9e24076c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\poster\\templates\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 68
        },
        end: {
          line: 15,
          column: 83
        }
      },
      "8": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 81
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "10": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 85
        }
      },
      "11": {
        start: {
          line: 20,
          column: 53
        },
        end: {
          line: 20,
          column: 83
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "13": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "14": {
        start: {
          line: 24,
          column: 58
        },
        end: {
          line: 24,
          column: 68
        }
      },
      "15": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 107
        }
      },
      "16": {
        start: {
          line: 25,
          column: 53
        },
        end: {
          line: 25,
          column: 105
        }
      },
      "17": {
        start: {
          line: 25,
          column: 76
        },
        end: {
          line: 25,
          column: 104
        }
      },
      "18": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "19": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "20": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "21": {
        start: {
          line: 30,
          column: 53
        },
        end: {
          line: 31,
          column: 72
        }
      },
      "22": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "23": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "24": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "25": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "26": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 58
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "28": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "29": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "30": {
        start: {
          line: 54,
          column: 39
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "31": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "32": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 96
        }
      },
      "33": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "34": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "35": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 63
        }
      },
      "36": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 95
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 100
          },
          end: {
            line: 13,
            column: 101
          }
        },
        loc: {
          start: {
            line: 13,
            column: 167
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 42
          }
        },
        loc: {
          start: {
            line: 20,
            column: 53
          },
          end: {
            line: 20,
            column: 83
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 50
          }
        },
        loc: {
          start: {
            line: 24,
            column: 58
          },
          end: {
            line: 24,
            column: 68
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 25,
            column: 42
          }
        },
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 25,
            column: 105
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 67
          },
          end: {
            line: 25,
            column: 68
          }
        },
        loc: {
          start: {
            line: 25,
            column: 76
          },
          end: {
            line: 25,
            column: 104
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 30,
            column: 42
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 31,
            column: 72
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 102
          },
          end: {
            line: 52,
            column: 103
          }
        },
        loc: {
          start: {
            line: 52,
            column: 169
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 52
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 40
          },
          end: {
            line: 15,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 15,
            column: 48
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 61
          },
          end: {
            line: 15,
            column: 63
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 31,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 30,
            column: 101
          }
        }, {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 72
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\poster\\templates\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\poster\\templates\\route.ts"],
      sourcesContent: ["/**\n * @file poster\\templates\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { PosterConfigDB } from '@/lib/database/poster-config-db';\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { category, tags, search, page = 1, pageSize = 20 } = _validatedQuery;\n      \n      // Get templates based on category\n      let templates = await PosterConfigDB.getAllTemplates();\n      \n      // Filter by category if provided\n      if (category) {\n        templates = templates.filter(template => template.category === category);\n      }\n      \n      // Filter by tags if provided\n      if (tags) {\n        const tagArray = tags.split(',').map((tag: string) => tag.trim());\n        templates = templates.filter(template => \n          tagArray.some((tag: string) => template.tags?.includes(tag))\n        );\n      }\n      \n      // Filter by search term if provided\n      if (search) {\n        const searchTerm = search.toLowerCase();\n        templates = templates.filter(template => \n          template.name.toLowerCase().includes(searchTerm) ||\n          template.description?.toLowerCase().includes(searchTerm)\n        );\n      }\n      \n      // Pagination\n      const startIndex = (page - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const paginatedTemplates = templates.slice(startIndex, endIndex);\n      \n      return ApiResponseWrapper.success({\n        templates: paginatedTemplates,\n        pagination: {\n          page,\n          pageSize,\n          total: templates.length,\n          totalPages: Math.ceil(templates.length / pageSize)\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.publicPost(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { templateId, userId } = _validatedBody;\n      \n      if (!templateId) {\n        return ApiResponseWrapper.error(\n          \"Missing templateId\",\n          { status: 400 }\n        );\n      }\n      \n      // Update template usage statistics\n      await PosterConfigDB.updateTemplateUsage(templateId, userId);\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"Template usage updated\"\n      });\n    } catch (error) {\n      console.error('Error updating template usage:', error);\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aa752508ff37e3197e0e4b0bb91b822e9e24076c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xpylbo59t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xpylbo59t();
cov_xpylbo59t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xpylbo59t().s[1]++;
exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_xpylbo59t().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_xpylbo59t().s[3]++, require("@/lib/utils/api-helper"));
const poster_config_db_1 =
/* istanbul ignore next */
(cov_xpylbo59t().s[4]++, require("@/lib/database/poster-config-db"));
/* istanbul ignore next */
cov_xpylbo59t().s[5]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_xpylbo59t().f[0]++;
  cov_xpylbo59t().s[6]++;
  try {
    const {
      category,
      tags,
      search,
      page =
      /* istanbul ignore next */
      (cov_xpylbo59t().b[0][0]++, 1),
      pageSize =
      /* istanbul ignore next */
      (cov_xpylbo59t().b[1][0]++, 20)
    } =
    /* istanbul ignore next */
    (cov_xpylbo59t().s[7]++, _validatedQuery);
    // Get templates based on category
    let templates =
    /* istanbul ignore next */
    (cov_xpylbo59t().s[8]++, await poster_config_db_1.PosterConfigDB.getAllTemplates());
    // Filter by category if provided
    /* istanbul ignore next */
    cov_xpylbo59t().s[9]++;
    if (category) {
      /* istanbul ignore next */
      cov_xpylbo59t().b[2][0]++;
      cov_xpylbo59t().s[10]++;
      templates = templates.filter(template => {
        /* istanbul ignore next */
        cov_xpylbo59t().f[1]++;
        cov_xpylbo59t().s[11]++;
        return template.category === category;
      });
    } else
    /* istanbul ignore next */
    {
      cov_xpylbo59t().b[2][1]++;
    }
    // Filter by tags if provided
    cov_xpylbo59t().s[12]++;
    if (tags) {
      /* istanbul ignore next */
      cov_xpylbo59t().b[3][0]++;
      const tagArray =
      /* istanbul ignore next */
      (cov_xpylbo59t().s[13]++, tags.split(',').map(tag => {
        /* istanbul ignore next */
        cov_xpylbo59t().f[2]++;
        cov_xpylbo59t().s[14]++;
        return tag.trim();
      }));
      /* istanbul ignore next */
      cov_xpylbo59t().s[15]++;
      templates = templates.filter(template => {
        /* istanbul ignore next */
        cov_xpylbo59t().f[3]++;
        cov_xpylbo59t().s[16]++;
        return tagArray.some(tag => {
          /* istanbul ignore next */
          cov_xpylbo59t().f[4]++;
          cov_xpylbo59t().s[17]++;
          return template.tags?.includes(tag);
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_xpylbo59t().b[3][1]++;
    }
    // Filter by search term if provided
    cov_xpylbo59t().s[18]++;
    if (search) {
      /* istanbul ignore next */
      cov_xpylbo59t().b[4][0]++;
      const searchTerm =
      /* istanbul ignore next */
      (cov_xpylbo59t().s[19]++, search.toLowerCase());
      /* istanbul ignore next */
      cov_xpylbo59t().s[20]++;
      templates = templates.filter(template => {
        /* istanbul ignore next */
        cov_xpylbo59t().f[5]++;
        cov_xpylbo59t().s[21]++;
        return /* istanbul ignore next */(cov_xpylbo59t().b[5][0]++, template.name.toLowerCase().includes(searchTerm)) ||
        /* istanbul ignore next */
        (cov_xpylbo59t().b[5][1]++, template.description?.toLowerCase().includes(searchTerm));
      });
    } else
    /* istanbul ignore next */
    {
      cov_xpylbo59t().b[4][1]++;
    }
    // Pagination
    const startIndex =
    /* istanbul ignore next */
    (cov_xpylbo59t().s[22]++, (page - 1) * pageSize);
    const endIndex =
    /* istanbul ignore next */
    (cov_xpylbo59t().s[23]++, startIndex + pageSize);
    const paginatedTemplates =
    /* istanbul ignore next */
    (cov_xpylbo59t().s[24]++, templates.slice(startIndex, endIndex));
    /* istanbul ignore next */
    cov_xpylbo59t().s[25]++;
    return api_helper_1.ApiResponseWrapper.success({
      templates: paginatedTemplates,
      pagination: {
        page,
        pageSize,
        total: templates.length,
        totalPages: Math.ceil(templates.length / pageSize)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_xpylbo59t().s[26]++;
    console.error('Error fetching templates:', error);
    /* istanbul ignore next */
    cov_xpylbo59t().s[27]++;
    return api_helper_1.ApiResponseWrapper.error("Internal server error", {
      status: 500
    });
  }
});
/* istanbul ignore next */
cov_xpylbo59t().s[28]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicPost(), async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_xpylbo59t().f[6]++;
  cov_xpylbo59t().s[29]++;
  try {
    const {
      templateId,
      userId
    } =
    /* istanbul ignore next */
    (cov_xpylbo59t().s[30]++, _validatedBody);
    /* istanbul ignore next */
    cov_xpylbo59t().s[31]++;
    if (!templateId) {
      /* istanbul ignore next */
      cov_xpylbo59t().b[6][0]++;
      cov_xpylbo59t().s[32]++;
      return api_helper_1.ApiResponseWrapper.error("Missing templateId", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_xpylbo59t().b[6][1]++;
    }
    // Update template usage statistics
    cov_xpylbo59t().s[33]++;
    await poster_config_db_1.PosterConfigDB.updateTemplateUsage(templateId, userId);
    /* istanbul ignore next */
    cov_xpylbo59t().s[34]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      message: "Template usage updated"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_xpylbo59t().s[35]++;
    console.error('Error updating template usage:', error);
    /* istanbul ignore next */
    cov_xpylbo59t().s[36]++;
    return api_helper_1.ApiResponseWrapper.error("Internal server error", {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,