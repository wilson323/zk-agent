547a16821ee354e96ae6a47fcff94973
"use strict";

/**
 * @file auth\refresh\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_27z27hid64() {
  var path = "E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts";
  var hash = "cf653064347e1374f3a9970b5c1c52f5d1989679";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 74
        }
      },
      "8": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "9": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "10": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "11": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "12": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 58
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "15": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "16": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "19": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "20": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "21": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 28
        }
      },
      "22": {
        start: {
          line: 59,
          column: 19
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "23": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "24": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "25": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "26": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 105
          },
          end: {
            line: 21,
            column: 106
          }
        },
        loc: {
          start: {
            line: 21,
            column: 180
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 16
          }
        },
        loc: {
          start: {
            line: 77,
            column: 26
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 14
          },
          end: {
            line: 62,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 50
          },
          end: {
            line: 62,
            column: 57
          }
        }, {
          start: {
            line: 62,
            column: 60
          },
          end: {
            line: 62,
            column: 66
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 73,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 73,
            column: 54
          }
        }, {
          start: {
            line: 73,
            column: 58
          },
          end: {
            line: 73,
            column: 86
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 18
          },
          end: {
            line: 87,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 54
          },
          end: {
            line: 87,
            column: 61
          }
        }, {
          start: {
            line: 87,
            column: 64
          },
          end: {
            line: 87,
            column: 70
          }
        }],
        line: 87
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\refresh\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport prisma from \"@/lib/database/connection\"\nimport { verifyRefreshToken, generateTokenPair } from \"@/lib/auth/jwt\"\nimport type { RefreshTokenRequest, LoginResponse } from \"@/types/auth\"\n\nconst refreshSchema = z.object({\n  refreshToken: z.string().min(1, \"\u5237\u65B0\u4EE4\u724C\u4E0D\u80FD\u4E3A\u7A7A\")\n})\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const body: RefreshTokenRequest = await req.json()\n    \n    // \u9A8C\u8BC1\u8BF7\u6C42\u6570\u636E\n    const validationResult = refreshSchema.safeParse(body)\n    if (!validationResult.success) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: validationResult.error.errors[0].message,\n        } as LoginResponse,\n        { status: 400 },\n      )\n    }\n\n    const { refreshToken } = validationResult.data\n\n    // \u9A8C\u8BC1\u5237\u65B0\u4EE4\u724C\n    const payload = verifyRefreshToken(refreshToken)\n    if (!payload) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u65E0\u6548\u7684\u5237\u65B0\u4EE4\u724C\",\n        } as LoginResponse,\n        { status: 401 },\n      )\n    }\n\n    // \u67E5\u627E\u7528\u6237\n    const foundUser = await prisma.user.findUnique({\n      where: { id: payload.userId },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        avatar: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    })\n\n    if (!foundUser) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u7528\u6237\u4E0D\u5B58\u5728\",\n        } as LoginResponse,\n        { status: 404 },\n      )\n    }\n\n    // \u751F\u6210\u65B0\u7684\u4EE4\u724C\u5BF9\n    const tokens = generateTokenPair({\n      id: foundUser.id,\n      email: foundUser.email,\n      role: foundUser.email.includes(\"admin\") ? \"admin\" : \"user\",\n    })\n\n    // \u8BB0\u5F55\u4EE4\u724C\u5237\u65B0\u65E5\u5FD7\n    await prisma.usageStats\n      .create({\n        data: {\n          userId: foundUser.id,\n          agentType: \"auth\",\n          action: \"refresh_token\",\n          metadata: {\n            userAgent: req.headers.get(\"user-agent\"),\n            ip: req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\"),\n          },\n        },\n      })\n      .catch((error) => {\n        console.error(\"Failed to log refresh token usage:\", error)\n      })\n\n    const response: LoginResponse = {\n      success: true,\n      user: {\n        id: foundUser.id,\n        email: foundUser.email,\n        name: foundUser.name,\n        avatar: foundUser.avatar,\n        role: foundUser.email.includes(\"admin\") ? \"admin\" : \"user\",\n        createdAt: foundUser.createdAt,\n        updatedAt: foundUser.updatedAt,\n      },\n      tokens,\n    }\n\n    return ApiResponseWrapper.success(response)\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf653064347e1374f3a9970b5c1c52f5d1989679"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27z27hid64 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27z27hid64();
var __importDefault =
/* istanbul ignore next */
(cov_27z27hid64().s[0]++,
/* istanbul ignore next */
(cov_27z27hid64().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_27z27hid64().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_27z27hid64().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_27z27hid64().f[0]++;
  cov_27z27hid64().s[1]++;
  return /* istanbul ignore next */(cov_27z27hid64().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_27z27hid64().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_27z27hid64().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_27z27hid64().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_27z27hid64().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27z27hid64().s[3]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[4]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[5]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[6]++, require("zod"));
const connection_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[7]++, __importDefault(require("@/lib/database/connection")));
const jwt_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[8]++, require("@/lib/auth/jwt"));
const refreshSchema =
/* istanbul ignore next */
(cov_27z27hid64().s[9]++, zod_1.z.object({
  refreshToken: zod_1.z.string().min(1, "刷新令牌不能为空")
}));
/* istanbul ignore next */
cov_27z27hid64().s[10]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_27z27hid64().f[1]++;
  const body =
  /* istanbul ignore next */
  (cov_27z27hid64().s[11]++, await req.json());
  // 验证请求数据
  const validationResult =
  /* istanbul ignore next */
  (cov_27z27hid64().s[12]++, refreshSchema.safeParse(body));
  /* istanbul ignore next */
  cov_27z27hid64().s[13]++;
  if (!validationResult.success) {
    /* istanbul ignore next */
    cov_27z27hid64().b[3][0]++;
    cov_27z27hid64().s[14]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: validationResult.error.errors[0].message
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_27z27hid64().b[3][1]++;
  }
  const {
    refreshToken
  } =
  /* istanbul ignore next */
  (cov_27z27hid64().s[15]++, validationResult.data);
  // 验证刷新令牌
  const payload =
  /* istanbul ignore next */
  (cov_27z27hid64().s[16]++, (0, jwt_1.verifyRefreshToken)(refreshToken));
  /* istanbul ignore next */
  cov_27z27hid64().s[17]++;
  if (!payload) {
    /* istanbul ignore next */
    cov_27z27hid64().b[4][0]++;
    cov_27z27hid64().s[18]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "无效的刷新令牌"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_27z27hid64().b[4][1]++;
  }
  // 查找用户
  const foundUser =
  /* istanbul ignore next */
  (cov_27z27hid64().s[19]++, await connection_1.default.user.findUnique({
    where: {
      id: payload.userId
    },
    select: {
      id: true,
      email: true,
      name: true,
      avatar: true,
      createdAt: true,
      updatedAt: true
    }
  }));
  /* istanbul ignore next */
  cov_27z27hid64().s[20]++;
  if (!foundUser) {
    /* istanbul ignore next */
    cov_27z27hid64().b[5][0]++;
    cov_27z27hid64().s[21]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "用户不存在"
    }, {
      status: 404
    });
  } else
  /* istanbul ignore next */
  {
    cov_27z27hid64().b[5][1]++;
  }
  // 生成新的令牌对
  const tokens =
  /* istanbul ignore next */
  (cov_27z27hid64().s[22]++, (0, jwt_1.generateTokenPair)({
    id: foundUser.id,
    email: foundUser.email,
    role: foundUser.email.includes("admin") ?
    /* istanbul ignore next */
    (cov_27z27hid64().b[6][0]++, "admin") :
    /* istanbul ignore next */
    (cov_27z27hid64().b[6][1]++, "user")
  }));
  // 记录令牌刷新日志
  /* istanbul ignore next */
  cov_27z27hid64().s[23]++;
  await connection_1.default.usageStats.create({
    data: {
      userId: foundUser.id,
      agentType: "auth",
      action: "refresh_token",
      metadata: {
        userAgent: req.headers.get("user-agent"),
        ip:
        /* istanbul ignore next */
        (cov_27z27hid64().b[7][0]++, req.headers.get("x-forwarded-for")) ||
        /* istanbul ignore next */
        (cov_27z27hid64().b[7][1]++, req.headers.get("x-real-ip"))
      }
    }
  }).catch(error => {
    /* istanbul ignore next */
    cov_27z27hid64().f[2]++;
    cov_27z27hid64().s[24]++;
    console.error("Failed to log refresh token usage:", error);
  });
  const response =
  /* istanbul ignore next */
  (cov_27z27hid64().s[25]++, {
    success: true,
    user: {
      id: foundUser.id,
      email: foundUser.email,
      name: foundUser.name,
      avatar: foundUser.avatar,
      role: foundUser.email.includes("admin") ?
      /* istanbul ignore next */
      (cov_27z27hid64().b[8][0]++, "admin") :
      /* istanbul ignore next */
      (cov_27z27hid64().b[8][1]++, "user"),
      createdAt: foundUser.createdAt,
      updatedAt: foundUser.updatedAt
    },
    tokens
  });
  /* istanbul ignore next */
  cov_27z27hid64().s[26]++;
  return api_helper_1.ApiResponseWrapper.success(response);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,