e5148ff5e219ab76d43cd20b7ed8ed69
"use strict";

/**
 * @file app/api/admin/security/rules/route.ts
 * @description API endpoints for security rules management
 * @author Security Team
 * @lastUpdate 2024-12-19
 */
/* istanbul ignore next */
function cov_2njc7b6jb5() {
  var path = "E:\\zk-agent\\app\\api\\admin\\security\\rules\\route.ts";
  var hash = "d7ef0e55cd1a432741d4d9ee948309890f4ab5e1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\admin\\security\\rules\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "5": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 79
        }
      },
      "6": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "7": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "8": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 20,
          column: 53
        }
      },
      "11": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 53
        }
      },
      "12": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "13": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "14": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "18": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "19": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "20": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "21": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 34,
          column: 85
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "23": {
        start: {
          line: 40,
          column: 43
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "24": {
        start: {
          line: 41,
          column: 44
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "25": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "27": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "28": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "29": {
        start: {
          line: 60,
          column: 108
        },
        end: {
          line: 60,
          column: 112
        }
      },
      "30": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "31": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 66,
          column: 32
        }
      },
      "32": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "33": {
        start: {
          line: 73,
          column: 23
        },
        end: {
          line: 73,
          column: 88
        }
      },
      "34": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "35": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "36": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "37": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "38": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "39": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 122,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 38
          },
          end: {
            line: 40,
            column: 39
          }
        },
        loc: {
          start: {
            line: 40,
            column: 43
          },
          end: {
            line: 40,
            column: 52
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 40
          }
        },
        loc: {
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 41,
            column: 54
          }
        },
        line: 41
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 19
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 30
          }
        }, {
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 43
          }
        }, {
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 62,
            column: 59
          }
        }, {
          start: {
            line: 62,
            column: 63
          },
          end: {
            line: 62,
            column: 71
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 71,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 63
          }
        }, {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 44
          }
        }, {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 23
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 82,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 82,
            column: 42
          }
        }, {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 82,
            column: 76
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 36
          }
        }, {
          start: {
            line: 84,
            column: 40
          },
          end: {
            line: 84,
            column: 62
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 85,
            column: 24
          },
          end: {
            line: 85,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 24
          },
          end: {
            line: 85,
            column: 34
          }
        }, {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 85,
            column: 40
          }
        }],
        line: 85
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\admin\\security\\rules\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;AAWH,kBAmCC;AAGD,oBA2EC;AA1HD,wCAAwD;AACxD,0EAAqE;AACrE,gFAAgH;AAChH,6DAA4D;AAC5D,+CAA4C;AAE5C,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,kBAAkB,CAAC,CAAC;AAE9C,qDAAqD;AAC9C,KAAK,UAAU,GAAG,CAAC,OAAoB;IAC5C,IAAI,CAAC;QACH,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,IAAI,QAAQ,EAAE,CAAC;YAAA,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAAA,CAAC;QAC5C,IAAI,QAAQ,EAAE,CAAC;YAAA,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAAA,CAAC;QAC5C,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;YAAA,OAAO,CAAC,OAAO,GAAG,OAAO,KAAK,MAAM,CAAC;QAAA,CAAC;QAE7D,MAAM,KAAK,GAAG,qCAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAEzD,OAAO,qBAAY,CAAC,IAAI,CAAC;YACvB,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;YACX,IAAI,EAAE;gBACJ,KAAK,EAAE,KAAK,CAAC,MAAM;gBACnB,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;gBAC5C,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;aAC/C;SACF,CAAC,CAAC;IAEL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE;YAC3C,KAAK,EAAE,IAAA,+BAAe,EAAC,KAAK,CAAC;SAC9B,CAAC,CAAC;QAEH,OAAO,qBAAY,CAAC,IAAI,CAAC;YACvB,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,8BAA8B;YACrC,OAAO,EAAE,IAAA,+BAAe,EAAC,KAAK,CAAC;SAChC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IACtB,CAAC;AACH,CAAC;AAED,4DAA4D;AACrD,KAAK,UAAU,IAAI,CAAC,OAAoB;IAC7C,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;QAClC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAEzG,2BAA2B;QAC3B,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO,EAAE,CAAC;YAChE,OAAO,qBAAY,CAAC,IAAI,CAAC;gBACvB,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,yBAAyB;aACjC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;QACtB,CAAC;QAED,kCAAkC;QAClC,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;YACtC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YAChC,WAAW,CAAC;QAE7B,mBAAmB;QACnB,MAAM,MAAM,GAAG,UAAU,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;QAEjF,2FAA2F;QAC3F,MAAM,OAAO,GAAG;YACd,EAAE,EAAE,MAAM;YACV,IAAI;YACJ,QAAQ;YACR,QAAQ;YACR,WAAW;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;YAClC,cAAc,EAAE,cAAc,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;YAChE,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,WAAW,IAAI,sBAAsB;YAClD,UAAU,EAAE,UAAU,IAAI,EAAE;SAC7B,CAAC;QAEF,wBAAwB;QACxB,MAAM,2CAAmB,CAAC,WAAW,CAAC;YACpC,IAAI,EAAE,yCAAiB,CAAC,YAAY;YACpC,QAAQ,EAAE,wCAAgB,CAAC,MAAM;YACjC,EAAE,EAAE,QAAQ;YACZ,OAAO,EAAE;gBACP,MAAM,EAAE,sBAAsB;gBAC9B,MAAM;gBACN,QAAQ,EAAE,IAAI;gBACd,QAAQ;gBACR,QAAQ;aACT;YACD,SAAS,EAAE,CAAC;SACb,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACnC,MAAM;YACN,IAAI;YACJ,QAAQ;YACR,QAAQ;YACR,QAAQ;SACT,CAAC,CAAC;QAEH,OAAO,qBAAY,CAAC,IAAI,CAAC;YACvB,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,EAAE,MAAM,EAAE;YAChB,OAAO,EAAE,oCAAoC;SAC9C,CAAC,CAAC;IAEL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE;YAC7C,KAAK,EAAE,IAAA,+BAAe,EAAC,KAAK,CAAC;SAC9B,CAAC,CAAC;QAEH,OAAO,qBAAY,CAAC,IAAI,CAAC;YACvB,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,gCAAgC;YACvC,OAAO,EAAE,IAAA,+BAAe,EAAC,KAAK,CAAC;SAChC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IACtB,CAAC;AACH,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\admin\\security\\rules\\route.ts"],
      sourcesContent: ["/**\n * @file app/api/admin/security/rules/route.ts\n * @description API endpoints for security rules management\n * @author Security Team\n * @lastUpdate 2024-12-19\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { codeReviewSystem } from '@/lib/security/code-review-system';\nimport { securityAuditSystem, SecurityEventType, SecuritySeverity } from '@/lib/security/security-audit-system';\nimport { getErrorMessage } from '@/lib/utils/error-handler';\nimport { Logger } from '@/lib/utils/logger';\n\nconst logger = new Logger('SecurityRulesAPI');\n\n// GET /api/admin/security/rules - Get security rules\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const category = searchParams.get('category');\n    const severity = searchParams.get('severity');\n    const enabled = searchParams.get('enabled');\n\n    const options: any = {};\n    if (category) {options.category = category;}\n    if (severity) {options.severity = severity;}\n    if (enabled !== null) {options.enabled = enabled === 'true';}\n\n    const rules = codeReviewSystem.getSecurityRules(options);\n\n    return NextResponse.json({\n      success: true,\n      data: rules,\n      meta: {\n        total: rules.length,\n        enabled: rules.filter(r => r.enabled).length,\n        disabled: rules.filter(r => !r.enabled).length,\n      },\n    });\n\n  } catch (error) {\n    logger.error('Failed to get security rules', {\n      error: getErrorMessage(error),\n    });\n\n    return NextResponse.json({\n      success: false,\n      error: 'Failed to get security rules',\n      details: getErrorMessage(error),\n    }, { status: 500 });\n  }\n}\n\n// POST /api/admin/security/rules - Create new security rule\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { name, category, severity, description, pattern, fileExtensions, remediation, references } = body;\n\n    // Validate required fields\n    if (!name || !category || !severity || !description || !pattern) {\n      return NextResponse.json({\n        success: false,\n        error: 'Missing required fields',\n      }, { status: 400 });\n    }\n\n    // Get client IP for audit logging\n    const clientIP = request.headers.get('x-forwarded-for') || \n                     request.headers.get('x-real-ip') || \n                     '127.0.0.1';\n\n    // Generate rule ID\n    const ruleId = `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    // Create security rule (Note: This would need to be implemented in the code review system)\n    const newRule = {\n      id: ruleId,\n      name,\n      category,\n      severity,\n      description,\n      pattern: new RegExp(pattern, 'gi'),\n      fileExtensions: fileExtensions || ['.js', '.ts', '.jsx', '.tsx'],\n      enabled: true,\n      remediation: remediation || 'Review code manually',\n      references: references || [],\n    };\n\n    // Record security event\n    await securityAuditSystem.recordEvent({\n      type: SecurityEventType.ADMIN_ACTION,\n      severity: SecuritySeverity.MEDIUM,\n      ip: clientIP,\n      details: {\n        action: 'create_security_rule',\n        ruleId,\n        ruleName: name,\n        category,\n        severity,\n      },\n      riskScore: 3,\n    });\n\n    logger.info('Security rule created', {\n      ruleId,\n      name,\n      category,\n      severity,\n      clientIP,\n    });\n\n    return NextResponse.json({\n      success: true,\n      data: { ruleId },\n      message: 'Security rule created successfully',\n    });\n\n  } catch (error) {\n    logger.error('Failed to create security rule', {\n      error: getErrorMessage(error),\n    });\n\n    return NextResponse.json({\n      success: false,\n      error: 'Failed to create security rule',\n      details: getErrorMessage(error),\n    }, { status: 500 });\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d7ef0e55cd1a432741d4d9ee948309890f4ab5e1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2njc7b6jb5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2njc7b6jb5();
cov_2njc7b6jb5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2njc7b6jb5().s[1]++;
exports.GET = GET;
/* istanbul ignore next */
cov_2njc7b6jb5().s[2]++;
exports.POST = POST;
const server_1 =
/* istanbul ignore next */
(cov_2njc7b6jb5().s[3]++, require("next/server"));
const code_review_system_1 =
/* istanbul ignore next */
(cov_2njc7b6jb5().s[4]++, require("@/lib/security/code-review-system"));
const security_audit_system_1 =
/* istanbul ignore next */
(cov_2njc7b6jb5().s[5]++, require("@/lib/security/security-audit-system"));
const error_handler_1 =
/* istanbul ignore next */
(cov_2njc7b6jb5().s[6]++, require("@/lib/utils/error-handler"));
const logger_1 =
/* istanbul ignore next */
(cov_2njc7b6jb5().s[7]++, require("@/lib/utils/logger"));
const logger =
/* istanbul ignore next */
(cov_2njc7b6jb5().s[8]++, new logger_1.Logger('SecurityRulesAPI'));
// GET /api/admin/security/rules - Get security rules
async function GET(request) {
  /* istanbul ignore next */
  cov_2njc7b6jb5().f[0]++;
  cov_2njc7b6jb5().s[9]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[10]++, new URL(request.url));
    const category =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[11]++, searchParams.get('category'));
    const severity =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[12]++, searchParams.get('severity'));
    const enabled =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[13]++, searchParams.get('enabled'));
    const options =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[14]++, {});
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[15]++;
    if (category) {
      /* istanbul ignore next */
      cov_2njc7b6jb5().b[0][0]++;
      cov_2njc7b6jb5().s[16]++;
      options.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_2njc7b6jb5().b[0][1]++;
    }
    cov_2njc7b6jb5().s[17]++;
    if (severity) {
      /* istanbul ignore next */
      cov_2njc7b6jb5().b[1][0]++;
      cov_2njc7b6jb5().s[18]++;
      options.severity = severity;
    } else
    /* istanbul ignore next */
    {
      cov_2njc7b6jb5().b[1][1]++;
    }
    cov_2njc7b6jb5().s[19]++;
    if (enabled !== null) {
      /* istanbul ignore next */
      cov_2njc7b6jb5().b[2][0]++;
      cov_2njc7b6jb5().s[20]++;
      options.enabled = enabled === 'true';
    } else
    /* istanbul ignore next */
    {
      cov_2njc7b6jb5().b[2][1]++;
    }
    const rules =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[21]++, code_review_system_1.codeReviewSystem.getSecurityRules(options));
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[22]++;
    return server_1.NextResponse.json({
      success: true,
      data: rules,
      meta: {
        total: rules.length,
        enabled: rules.filter(r => {
          /* istanbul ignore next */
          cov_2njc7b6jb5().f[1]++;
          cov_2njc7b6jb5().s[23]++;
          return r.enabled;
        }).length,
        disabled: rules.filter(r => {
          /* istanbul ignore next */
          cov_2njc7b6jb5().f[2]++;
          cov_2njc7b6jb5().s[24]++;
          return !r.enabled;
        }).length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[25]++;
    logger.error('Failed to get security rules', {
      error: (0, error_handler_1.getErrorMessage)(error)
    });
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[26]++;
    return server_1.NextResponse.json({
      success: false,
      error: 'Failed to get security rules',
      details: (0, error_handler_1.getErrorMessage)(error)
    }, {
      status: 500
    });
  }
}
// POST /api/admin/security/rules - Create new security rule
async function POST(request) {
  /* istanbul ignore next */
  cov_2njc7b6jb5().f[3]++;
  cov_2njc7b6jb5().s[27]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[28]++, await request.json());
    const {
      name,
      category,
      severity,
      description,
      pattern,
      fileExtensions,
      remediation,
      references
    } =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[29]++, body);
    // Validate required fields
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[4][0]++, !name) ||
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[4][1]++, !category) ||
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[4][2]++, !severity) ||
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[4][3]++, !description) ||
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[4][4]++, !pattern)) {
      /* istanbul ignore next */
      cov_2njc7b6jb5().b[3][0]++;
      cov_2njc7b6jb5().s[31]++;
      return server_1.NextResponse.json({
        success: false,
        error: 'Missing required fields'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2njc7b6jb5().b[3][1]++;
    }
    // Get client IP for audit logging
    const clientIP =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[32]++,
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[5][0]++, request.headers.get('x-forwarded-for')) ||
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[5][1]++, request.headers.get('x-real-ip')) ||
    /* istanbul ignore next */
    (cov_2njc7b6jb5().b[5][2]++, '127.0.0.1'));
    // Generate rule ID
    const ruleId =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[33]++, `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    // Create security rule (Note: This would need to be implemented in the code review system)
    const newRule =
    /* istanbul ignore next */
    (cov_2njc7b6jb5().s[34]++, {
      id: ruleId,
      name,
      category,
      severity,
      description,
      pattern: new RegExp(pattern, 'gi'),
      fileExtensions:
      /* istanbul ignore next */
      (cov_2njc7b6jb5().b[6][0]++, fileExtensions) ||
      /* istanbul ignore next */
      (cov_2njc7b6jb5().b[6][1]++, ['.js', '.ts', '.jsx', '.tsx']),
      enabled: true,
      remediation:
      /* istanbul ignore next */
      (cov_2njc7b6jb5().b[7][0]++, remediation) ||
      /* istanbul ignore next */
      (cov_2njc7b6jb5().b[7][1]++, 'Review code manually'),
      references:
      /* istanbul ignore next */
      (cov_2njc7b6jb5().b[8][0]++, references) ||
      /* istanbul ignore next */
      (cov_2njc7b6jb5().b[8][1]++, [])
    });
    // Record security event
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[35]++;
    await security_audit_system_1.securityAuditSystem.recordEvent({
      type: security_audit_system_1.SecurityEventType.ADMIN_ACTION,
      severity: security_audit_system_1.SecuritySeverity.MEDIUM,
      ip: clientIP,
      details: {
        action: 'create_security_rule',
        ruleId,
        ruleName: name,
        category,
        severity
      },
      riskScore: 3
    });
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[36]++;
    logger.info('Security rule created', {
      ruleId,
      name,
      category,
      severity,
      clientIP
    });
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[37]++;
    return server_1.NextResponse.json({
      success: true,
      data: {
        ruleId
      },
      message: 'Security rule created successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[38]++;
    logger.error('Failed to create security rule', {
      error: (0, error_handler_1.getErrorMessage)(error)
    });
    /* istanbul ignore next */
    cov_2njc7b6jb5().s[39]++;
    return server_1.NextResponse.json({
      success: false,
      error: 'Failed to create security rule',
      details: (0, error_handler_1.getErrorMessage)(error)
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm5qYzdiNmpiNSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImV4cG9ydHMiLCJHRVQiLCJQT1NUIiwic2VydmVyXzEiLCJyZXF1aXJlIiwiY29kZV9yZXZpZXdfc3lzdGVtXzEiLCJzZWN1cml0eV9hdWRpdF9zeXN0ZW1fMSIsImVycm9yX2hhbmRsZXJfMSIsImxvZ2dlcl8xIiwibG9nZ2VyIiwiTG9nZ2VyIiwicmVxdWVzdCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsImNhdGVnb3J5IiwiZ2V0Iiwic2V2ZXJpdHkiLCJlbmFibGVkIiwib3B0aW9ucyIsInJ1bGVzIiwiY29kZVJldmlld1N5c3RlbSIsImdldFNlY3VyaXR5UnVsZXMiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwic3VjY2VzcyIsImRhdGEiLCJtZXRhIiwidG90YWwiLCJsZW5ndGgiLCJmaWx0ZXIiLCJyIiwiZGlzYWJsZWQiLCJlcnJvciIsImdldEVycm9yTWVzc2FnZSIsImRldGFpbHMiLCJzdGF0dXMiLCJib2R5IiwiZGVzY3JpcHRpb24iLCJwYXR0ZXJuIiwiZmlsZUV4dGVuc2lvbnMiLCJyZW1lZGlhdGlvbiIsInJlZmVyZW5jZXMiLCJjbGllbnRJUCIsImhlYWRlcnMiLCJydWxlSWQiLCJEYXRlIiwibm93IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwibmV3UnVsZSIsImlkIiwiUmVnRXhwIiwic2VjdXJpdHlBdWRpdFN5c3RlbSIsInJlY29yZEV2ZW50IiwiU2VjdXJpdHlFdmVudFR5cGUiLCJBRE1JTl9BQ1RJT04iLCJTZWN1cml0eVNldmVyaXR5IiwiTUVESVVNIiwiaXAiLCJhY3Rpb24iLCJydWxlTmFtZSIsInJpc2tTY29yZSIsImluZm8iLCJtZXNzYWdlIl0sInNvdXJjZXMiOlsiRTpcXHprLWFnZW50XFxhcHBcXGFwaVxcYWRtaW5cXHNlY3VyaXR5XFxydWxlc1xccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBhcHAvYXBpL2FkbWluL3NlY3VyaXR5L3J1bGVzL3JvdXRlLnRzXG4gKiBAZGVzY3JpcHRpb24gQVBJIGVuZHBvaW50cyBmb3Igc2VjdXJpdHkgcnVsZXMgbWFuYWdlbWVudFxuICogQGF1dGhvciBTZWN1cml0eSBUZWFtXG4gKiBAbGFzdFVwZGF0ZSAyMDI0LTEyLTE5XG4gKi9cblxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGNvZGVSZXZpZXdTeXN0ZW0gfSBmcm9tICdAL2xpYi9zZWN1cml0eS9jb2RlLXJldmlldy1zeXN0ZW0nO1xuaW1wb3J0IHsgc2VjdXJpdHlBdWRpdFN5c3RlbSwgU2VjdXJpdHlFdmVudFR5cGUsIFNlY3VyaXR5U2V2ZXJpdHkgfSBmcm9tICdAL2xpYi9zZWN1cml0eS9zZWN1cml0eS1hdWRpdC1zeXN0ZW0nO1xuaW1wb3J0IHsgZ2V0RXJyb3JNZXNzYWdlIH0gZnJvbSAnQC9saWIvdXRpbHMvZXJyb3ItaGFuZGxlcic7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICdAL2xpYi91dGlscy9sb2dnZXInO1xuXG5jb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKCdTZWN1cml0eVJ1bGVzQVBJJyk7XG5cbi8vIEdFVCAvYXBpL2FkbWluL3NlY3VyaXR5L3J1bGVzIC0gR2V0IHNlY3VyaXR5IHJ1bGVzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIGNvbnN0IGNhdGVnb3J5ID0gc2VhcmNoUGFyYW1zLmdldCgnY2F0ZWdvcnknKTtcbiAgICBjb25zdCBzZXZlcml0eSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3NldmVyaXR5Jyk7XG4gICAgY29uc3QgZW5hYmxlZCA9IHNlYXJjaFBhcmFtcy5nZXQoJ2VuYWJsZWQnKTtcblxuICAgIGNvbnN0IG9wdGlvbnM6IGFueSA9IHt9O1xuICAgIGlmIChjYXRlZ29yeSkge29wdGlvbnMuY2F0ZWdvcnkgPSBjYXRlZ29yeTt9XG4gICAgaWYgKHNldmVyaXR5KSB7b3B0aW9ucy5zZXZlcml0eSA9IHNldmVyaXR5O31cbiAgICBpZiAoZW5hYmxlZCAhPT0gbnVsbCkge29wdGlvbnMuZW5hYmxlZCA9IGVuYWJsZWQgPT09ICd0cnVlJzt9XG5cbiAgICBjb25zdCBydWxlcyA9IGNvZGVSZXZpZXdTeXN0ZW0uZ2V0U2VjdXJpdHlSdWxlcyhvcHRpb25zKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogcnVsZXMsXG4gICAgICBtZXRhOiB7XG4gICAgICAgIHRvdGFsOiBydWxlcy5sZW5ndGgsXG4gICAgICAgIGVuYWJsZWQ6IHJ1bGVzLmZpbHRlcihyID0+IHIuZW5hYmxlZCkubGVuZ3RoLFxuICAgICAgICBkaXNhYmxlZDogcnVsZXMuZmlsdGVyKHIgPT4gIXIuZW5hYmxlZCkubGVuZ3RoLFxuICAgICAgfSxcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZ2dlci5lcnJvcignRmFpbGVkIHRvIGdldCBzZWN1cml0eSBydWxlcycsIHtcbiAgICAgIGVycm9yOiBnZXRFcnJvck1lc3NhZ2UoZXJyb3IpLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6ICdGYWlsZWQgdG8gZ2V0IHNlY3VyaXR5IHJ1bGVzJyxcbiAgICAgIGRldGFpbHM6IGdldEVycm9yTWVzc2FnZShlcnJvciksXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KTtcbiAgfVxufVxuXG4vLyBQT1NUIC9hcGkvYWRtaW4vc2VjdXJpdHkvcnVsZXMgLSBDcmVhdGUgbmV3IHNlY3VyaXR5IHJ1bGVcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIGNvbnN0IHsgbmFtZSwgY2F0ZWdvcnksIHNldmVyaXR5LCBkZXNjcmlwdGlvbiwgcGF0dGVybiwgZmlsZUV4dGVuc2lvbnMsIHJlbWVkaWF0aW9uLCByZWZlcmVuY2VzIH0gPSBib2R5O1xuXG4gICAgLy8gVmFsaWRhdGUgcmVxdWlyZWQgZmllbGRzXG4gICAgaWYgKCFuYW1lIHx8ICFjYXRlZ29yeSB8fCAhc2V2ZXJpdHkgfHwgIWRlc2NyaXB0aW9uIHx8ICFwYXR0ZXJuKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdNaXNzaW5nIHJlcXVpcmVkIGZpZWxkcycsXG4gICAgICB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgIH1cblxuICAgIC8vIEdldCBjbGllbnQgSVAgZm9yIGF1ZGl0IGxvZ2dpbmdcbiAgICBjb25zdCBjbGllbnRJUCA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3gtZm9yd2FyZGVkLWZvcicpIHx8IFxuICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLmdldCgneC1yZWFsLWlwJykgfHwgXG4gICAgICAgICAgICAgICAgICAgICAnMTI3LjAuMC4xJztcblxuICAgIC8vIEdlbmVyYXRlIHJ1bGUgSURcbiAgICBjb25zdCBydWxlSWQgPSBgY3VzdG9tXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YDtcblxuICAgIC8vIENyZWF0ZSBzZWN1cml0eSBydWxlIChOb3RlOiBUaGlzIHdvdWxkIG5lZWQgdG8gYmUgaW1wbGVtZW50ZWQgaW4gdGhlIGNvZGUgcmV2aWV3IHN5c3RlbSlcbiAgICBjb25zdCBuZXdSdWxlID0ge1xuICAgICAgaWQ6IHJ1bGVJZCxcbiAgICAgIG5hbWUsXG4gICAgICBjYXRlZ29yeSxcbiAgICAgIHNldmVyaXR5LFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBwYXR0ZXJuOiBuZXcgUmVnRXhwKHBhdHRlcm4sICdnaScpLFxuICAgICAgZmlsZUV4dGVuc2lvbnM6IGZpbGVFeHRlbnNpb25zIHx8IFsnLmpzJywgJy50cycsICcuanN4JywgJy50c3gnXSxcbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICByZW1lZGlhdGlvbjogcmVtZWRpYXRpb24gfHwgJ1JldmlldyBjb2RlIG1hbnVhbGx5JyxcbiAgICAgIHJlZmVyZW5jZXM6IHJlZmVyZW5jZXMgfHwgW10sXG4gICAgfTtcblxuICAgIC8vIFJlY29yZCBzZWN1cml0eSBldmVudFxuICAgIGF3YWl0IHNlY3VyaXR5QXVkaXRTeXN0ZW0ucmVjb3JkRXZlbnQoe1xuICAgICAgdHlwZTogU2VjdXJpdHlFdmVudFR5cGUuQURNSU5fQUNUSU9OLFxuICAgICAgc2V2ZXJpdHk6IFNlY3VyaXR5U2V2ZXJpdHkuTUVESVVNLFxuICAgICAgaXA6IGNsaWVudElQLFxuICAgICAgZGV0YWlsczoge1xuICAgICAgICBhY3Rpb246ICdjcmVhdGVfc2VjdXJpdHlfcnVsZScsXG4gICAgICAgIHJ1bGVJZCxcbiAgICAgICAgcnVsZU5hbWU6IG5hbWUsXG4gICAgICAgIGNhdGVnb3J5LFxuICAgICAgICBzZXZlcml0eSxcbiAgICAgIH0sXG4gICAgICByaXNrU2NvcmU6IDMsXG4gICAgfSk7XG5cbiAgICBsb2dnZXIuaW5mbygnU2VjdXJpdHkgcnVsZSBjcmVhdGVkJywge1xuICAgICAgcnVsZUlkLFxuICAgICAgbmFtZSxcbiAgICAgIGNhdGVnb3J5LFxuICAgICAgc2V2ZXJpdHksXG4gICAgICBjbGllbnRJUCxcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogeyBydWxlSWQgfSxcbiAgICAgIG1lc3NhZ2U6ICdTZWN1cml0eSBydWxlIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZ2dlci5lcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBzZWN1cml0eSBydWxlJywge1xuICAgICAgZXJyb3I6IGdldEVycm9yTWVzc2FnZShlcnJvciksXG4gICAgfSk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBjcmVhdGUgc2VjdXJpdHkgcnVsZScsXG4gICAgICBkZXRhaWxzOiBnZXRFcnJvck1lc3NhZ2UoZXJyb3IpLFxuICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtV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