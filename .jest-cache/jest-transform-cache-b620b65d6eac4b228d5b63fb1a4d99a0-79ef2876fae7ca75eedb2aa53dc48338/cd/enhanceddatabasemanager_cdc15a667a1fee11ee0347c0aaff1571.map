{"version":3,"names":["cov_1okmjd2ydn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","client_1","require","logger_1","connection_health_1","performance_monitor_1","EnhancedDatabaseManager","constructor","logger","Logger","queryMetrics","Map","queryCache","slowQueryThreshold","cacheEnabled","cacheTTL","poolConfig","min","max","acquireTimeoutMillis","createTimeoutMillis","destroyTimeoutMillis","idleTimeoutMillis","reapIntervalMillis","initializePrisma","setupQueryLogging","startCacheCleanup","initializeHealthMonitoring","getInstance","instance","prisma","PrismaClient","log","emit","level","datasources","db","url","process","env","DATABASE_URL","info","healthChecker","initialize","on","error","message","performanceMonitor","recordError","record","warn","query","duration","alert","$on","e","queryId","generateQueryId","metrics","sql","timestamp","Date","now","params","set","substring","sendSlowQueryAlert","size","oldestKey","keys","next","value","delete","target","executeTransaction","operations","options","transactionId","generateTransactionId","startTime","result","$transaction","maxWait","timeout","isolationLevel","Prisma","TransactionIsolationLevel","ReadCommitted","executeQuery","queryFn","cacheKey","cached","getFromCache","debug","JSON","stringify","length","recordQuery","success","connectionId","setCache","threshold","executeBatch","batchSize","results","batches","chunkArray","batch","batchResults","Promise","all","map","operation","push","healthCheck","testConnection","latency","poolStatus","getPoolStatus","perfStats","getPerformanceStats","cacheHitRate","calculateCacheHitRate","connected","status","activeConnections","totalCount","maxConnections","queuedQueries","waitingCount","slowQueries","overall","lastChecked","toISOString","getQueryAnalytics","Array","from","values","recentMetrics","filter","m","totalQueries","averageLatency","reduce","sum","Math","round","slowQueryRate","queryDistribution","getQueryDistribution","key","get","expiry","hits","data","ttl","caches","totalHits","cache","totalRequests","setInterval","entries","fetch","method","headers","body","random","toString","substr","array","chunks","i","slice","distribution","fast","normal","slow","forEach","metric","getConnectionPoolStatus","active","floor","idle","waiting","total","config","gracefulShutdown","stop","close","$disconnect","clearCache","getPrismaClient","clear","setSlowQueryThreshold","setCacheEnabled","enabled","exports","enhancedDatabaseManager","bind"],"sources":["E:\\zk-agent\\lib\\database\\enhanced-database-manager.ts"],"sourcesContent":["/**\n * @file lib/database/enhanced-database-manager.ts\n * @description 增强数据库管理器 - B团队核心组件\n * @author B团队数据库架构师\n * @lastUpdate 2024-12-19\n * @performance 数据库查询≤100ms，强制事务，连接池管理\n */\n\nimport { PrismaClient, Prisma } from '@prisma/client';\nimport { Logger } from '@/lib/utils/logger';\nimport { performanceMonitor } from '@/lib/middleware/performance-monitor';\nimport { healthChecker } from './connection-health';\nimport { performanceMonitor as dbPerformanceMonitor } from './performance-monitor';\n\n// 查询性能指标接口\ninterface QueryMetrics {\n  queryId: string;\n  sql: string;\n  duration: number;\n  timestamp: number;\n  params?: Record<string, unknown>;\n  result?: unknown;\n  error?: string;\n}\n\n// 连接池配置接口\ninterface ConnectionPoolConfig {\n  min: number;\n  max: number;\n  acquireTimeoutMillis: number;\n  createTimeoutMillis: number;\n  destroyTimeoutMillis: number;\n  idleTimeoutMillis: number;\n  reapIntervalMillis: number;\n}\n\n// 查询缓存接口\ninterface QueryCache<T = unknown> {\n  key: string;\n  data: T;\n  expiry: number;\n  hits: number;\n}\n\n// 数据库健康状态\ninterface DatabaseHealth {\n  connected: boolean;\n  latency: number;\n  activeConnections: number;\n  maxConnections: number;\n  queuedQueries: number;\n  cacheHitRate: number;\n  slowQueries: number;\n  lastChecked: string;\n}\n\nexport class EnhancedDatabaseManager {\n  private static instance: EnhancedDatabaseManager;\n  private prisma: PrismaClient;\n  private logger = new Logger('EnhancedDatabaseManager');\n  private queryMetrics: Map<string, QueryMetrics> = new Map();\n  private queryCache: Map<string, QueryCache<unknown>> = new Map();\n  private slowQueryThreshold = 100; // 100ms\n  private cacheEnabled = true;\n  private cacheTTL = 300000; // 5分钟\n  \n  // 连接池配置\n  private readonly poolConfig: ConnectionPoolConfig = {\n    min: 2,\n    max: 20,\n    acquireTimeoutMillis: 30000,\n    createTimeoutMillis: 30000,\n    destroyTimeoutMillis: 5000,\n    idleTimeoutMillis: 30000,\n    reapIntervalMillis: 1000,\n  };\n\n  private constructor() {\n    this.initializePrisma();\n    this.setupQueryLogging();\n    this.startCacheCleanup();\n    this.initializeHealthMonitoring();\n  }\n\n  public static getInstance(): EnhancedDatabaseManager {\n    if (!EnhancedDatabaseManager.instance) {\n      EnhancedDatabaseManager.instance = new EnhancedDatabaseManager();\n    }\n    return EnhancedDatabaseManager.instance;\n  }\n\n  /**\n   * 初始化Prisma客户端\n   */\n  private initializePrisma(): void {\n    this.prisma = new PrismaClient({\n      log: [\n        { emit: 'event', level: 'query' },\n        { emit: 'event', level: 'error' },\n        { emit: 'event', level: 'warn' },\n      ],\n      datasources: {\n        db: {\n          url: process.env.DATABASE_URL,\n        },\n      },\n    });\n\n    this.logger.info('Prisma client initialized with enhanced configuration');\n  }\n\n  /**\n   * 初始化健康监控\n   */\n  private async initializeHealthMonitoring(): Promise<void> {\n    try {\n      // 初始化数据库健康检查器\n      await healthChecker.initialize();\n      \n      // 监听健康检查事件\n      healthChecker.on('connected', () => {\n        this.logger.info('Database connection established');\n      });\n      \n      healthChecker.on('error', (error) => {\n        this.logger.error('Database connection error', { error: error.message });\n        dbPerformanceMonitor.recordError(error, 'connection');\n      });\n      \n      healthChecker.on('reconnected', () => {\n        this.logger.info('Database connection restored');\n      });\n      \n      healthChecker.on('maxReconnectAttemptsReached', (error) => {\n        this.logger.error('Max reconnect attempts reached', { error: error.message });\n      });\n      \n      // 监听性能告警\n      dbPerformanceMonitor.on('slowQuery', (record) => {\n        this.logger.warn('Slow query detected by performance monitor', {\n          query: record.query,\n          duration: record.duration\n        });\n      });\n      \n      dbPerformanceMonitor.on('alert', (alert) => {\n        this.logger.warn('Performance alert', alert);\n      });\n      \n      this.logger.info('Database health monitoring initialized');\n    } catch (error) {\n      this.logger.error('Failed to initialize health monitoring', { error: error.message });\n    }\n  }\n\n  /**\n   * 设置查询日志记录\n   */\n  private setupQueryLogging(): void {\n    this.prisma.$on('query', (e) => {\n      const queryId = this.generateQueryId();\n      const duration = e.duration;\n      \n      const metrics: QueryMetrics = {\n        queryId,\n        sql: e.query,\n        duration,\n        timestamp: Date.now(),\n        params: e.params,\n      };\n\n      this.queryMetrics.set(queryId, metrics);\n\n      // 检查慢查询\n      if (duration > this.slowQueryThreshold) {\n        this.logger.warn('Slow query detected', {\n          queryId,\n          duration,\n          sql: e.query.substring(0, 200), // 截取前200字符\n        });\n\n        // 发送慢查询告警\n        this.sendSlowQueryAlert(metrics);\n      }\n\n      // 清理旧指标（保留最近1000条）\n      if (this.queryMetrics.size > 1000) {\n        const oldestKey = this.queryMetrics.keys().next().value;\n        this.queryMetrics.delete(oldestKey);\n      }\n    });\n\n    this.prisma.$on('error', (e) => {\n      this.logger.error('Database error', {\n        message: e.message,\n        target: e.target,\n      });\n    });\n  }\n\n  /**\n   * 强制事务执行\n   */\n  async executeTransaction<T>(\n    operations: (prisma: Prisma.TransactionClient) => Promise<T>,\n    options?: {\n      maxWait?: number;\n      timeout?: number;\n      isolationLevel?: Prisma.TransactionIsolationLevel;\n    }\n  ): Promise<T> {\n    const transactionId = this.generateTransactionId();\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Transaction started', { transactionId });\n\n      const result = await this.prisma.$transaction(operations, {\n        maxWait: options?.maxWait || 5000, // 5秒最大等待\n        timeout: options?.timeout || 10000, // 10秒超时\n        isolationLevel: options?.isolationLevel || Prisma.TransactionIsolationLevel.ReadCommitted,\n      });\n\n      const duration = Date.now() - startTime;\n      this.logger.info('Transaction completed', {\n        transactionId,\n        duration,\n      });\n\n      return result;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.error('Transaction failed', {\n        transactionId,\n        duration,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * 优化查询执行（带缓存）\n   */\n  async executeQuery<T>(\n    queryFn: () => Promise<T>,\n    cacheKey?: string,\n    cacheTTL?: number\n  ): Promise<T> {\n    const queryId = this.generateQueryId();\n    const startTime = Date.now();\n\n    try {\n      // 检查缓存\n      if (cacheKey && this.cacheEnabled) {\n        const cached = this.getFromCache(cacheKey);\n        if (cached) {\n          this.logger.debug('Cache hit', { queryId, cacheKey });\n          return cached;\n        }\n      }\n\n      // 执行查询\n      const result = await queryFn();\n      const duration = Date.now() - startTime;\n\n      // 记录查询指标\n      const metrics: QueryMetrics = {\n        queryId,\n        sql: 'Custom Query',\n        duration,\n        timestamp: Date.now(),\n        result: typeof result === 'object' ? JSON.stringify(result).length : result,\n      };\n\n      this.queryMetrics.set(queryId, metrics);\n\n      // 记录到性能监控器\n      dbPerformanceMonitor.recordQuery({\n        query: 'Custom Query',\n        duration,\n        success: true,\n        connectionId: queryId\n      });\n\n      // 缓存结果\n      if (cacheKey && this.cacheEnabled && duration < this.slowQueryThreshold) {\n        this.setCache(cacheKey, result, cacheTTL || this.cacheTTL);\n      }\n\n      // 检查性能\n      if (duration > this.slowQueryThreshold) {\n        this.logger.warn('Slow query execution', {\n          queryId,\n          duration,\n          threshold: this.slowQueryThreshold,\n        });\n      }\n\n      return result;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      \n      // 记录错误到性能监控器\n      dbPerformanceMonitor.recordQuery({\n        query: 'Custom Query',\n        duration,\n        success: false,\n        error,\n        connectionId: queryId\n      });\n      \n      this.logger.error('Query execution failed', {\n        queryId,\n        duration,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * 批量操作优化\n   */\n  async executeBatch<T>(\n    operations: Array<() => Promise<T>>,\n    batchSize = 10\n  ): Promise<T[]> {\n    const results: T[] = [];\n    const batches = this.chunkArray(operations, batchSize);\n\n    for (const batch of batches) {\n      const batchResults = await Promise.all(\n        batch.map(operation => operation())\n      );\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  /**\n   * 数据库健康检查\n   */\n  async healthCheck(): Promise<DatabaseHealth> {\n    const startTime = Date.now();\n\n    try {\n      // 使用健康检查器测试连接\n      await healthChecker.testConnection();\n      const latency = Date.now() - startTime;\n\n      // 获取连接池状态\n      const poolStatus = healthChecker.getPoolStatus();\n      \n      // 获取性能统计\n      const perfStats = dbPerformanceMonitor.getPerformanceStats();\n\n      // 计算缓存命中率\n      const cacheHitRate = this.calculateCacheHitRate();\n\n      return {\n        connected: poolStatus.status === 'healthy',\n        latency,\n        activeConnections: poolStatus.totalCount || 0,\n        maxConnections: this.poolConfig.max,\n        queuedQueries: poolStatus.waitingCount || 0,\n        cacheHitRate,\n        slowQueries: perfStats.overall.slowQueries,\n        lastChecked: new Date().toISOString(),\n      };\n    } catch (error) {\n      const latency = Date.now() - startTime;\n      \n      // 记录健康检查错误\n      dbPerformanceMonitor.recordError(error, 'health_check');\n      \n      this.logger.error('Database health check failed', {\n        error: error.message,\n        latency,\n      });\n\n      return {\n        connected: false,\n        latency,\n        activeConnections: 0,\n        maxConnections: this.poolConfig.max,\n        queuedQueries: 0,\n        cacheHitRate: 0,\n        slowQueries: 0,\n        lastChecked: new Date().toISOString(),\n      };\n    }\n  }\n\n  /**\n   * 查询性能分析\n   */\n  getQueryAnalytics(): {\n    totalQueries: number;\n    averageLatency: number;\n    slowQueries: number;\n    slowQueryRate?: number;\n    cacheHitRate: number;\n    queryDistribution?: {\n      fast: number;\n      normal: number;\n      slow: number;\n    };\n  } {\n    const metrics = Array.from(this.queryMetrics.values());\n    const recentMetrics = metrics.filter(\n      m => Date.now() - m.timestamp < 300000 // 最近5分钟\n    );\n\n    if (recentMetrics.length === 0) {\n      return {\n        totalQueries: 0,\n        averageLatency: 0,\n        slowQueries: 0,\n        cacheHitRate: 0,\n      };\n    }\n\n    const totalQueries = recentMetrics.length;\n    const averageLatency = recentMetrics.reduce((sum, m) => sum + m.duration, 0) / totalQueries;\n    const slowQueries = recentMetrics.filter(m => m.duration > this.slowQueryThreshold).length;\n    const cacheHitRate = this.calculateCacheHitRate();\n\n    return {\n      totalQueries,\n      averageLatency: Math.round(averageLatency),\n      slowQueries,\n      slowQueryRate: Math.round((slowQueries / totalQueries) * 100),\n      cacheHitRate,\n      queryDistribution: this.getQueryDistribution(recentMetrics),\n    };\n  }\n\n  /**\n   * 缓存管理\n   */\n  private getFromCache<T>(key: string): T | null {\n    const cached = this.queryCache.get(key);\n    if (!cached) {return null;}\n\n    if (Date.now() > cached.expiry) {\n      this.queryCache.delete(key);\n      return null;\n    }\n\n    cached.hits++;\n    return cached.data as T;\n  }\n\n  private setCache<T>(key: string, data: T, ttl: number): void {\n    this.queryCache.set(key, {\n      key,\n      data,\n      expiry: Date.now() + ttl,\n      hits: 0,\n    });\n  }\n\n  private calculateCacheHitRate(): number {\n    const caches = Array.from(this.queryCache.values());\n    if (caches.length === 0) {return 0;}\n\n    const totalHits = caches.reduce((sum, cache) => sum + cache.hits, 0);\n    const totalRequests = caches.length + totalHits;\n    \n    return totalRequests > 0 ? Math.round((totalHits / totalRequests) * 100) : 0;\n  }\n\n  /**\n   * 缓存清理\n   */\n  private startCacheCleanup(): void {\n    setInterval(() => {\n      const now = Date.now();\n      for (const [key, cache] of this.queryCache.entries()) {\n        if (now > cache.expiry) {\n          this.queryCache.delete(key);\n        }\n      }\n    }, 60000); // 每分钟清理一次\n  }\n\n  /**\n   * 慢查询告警\n   */\n  private async sendSlowQueryAlert(metrics: QueryMetrics): Promise<void> {\n    try {\n      await fetch('/api/admin/alerts', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          type: 'SLOW_QUERY',\n          data: {\n            queryId: metrics.queryId,\n            duration: metrics.duration,\n            threshold: this.slowQueryThreshold,\n            sql: metrics.sql.substring(0, 200),\n          },\n          timestamp: new Date().toISOString(),\n        }),\n      });\n    } catch (error) {\n      this.logger.error('Failed to send slow query alert', {\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * 工具方法\n   */\n  private generateQueryId(): string {\n    return `query_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateTransactionId(): string {\n    return `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private chunkArray<T>(array: T[], size: number): T[][] {\n    const chunks: T[][] = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunks.push(array.slice(i, i + size));\n    }\n    return chunks;\n  }\n\n  private getQueryDistribution(metrics: QueryMetrics[]): {\n    fast: number;\n    normal: number;\n    slow: number;\n  } {\n    const distribution = {\n      fast: 0,    // < 50ms\n      normal: 0,  // 50-100ms\n      slow: 0,    // > 100ms\n    };\n\n    metrics.forEach(metric => {\n      if (metric.duration < 50) {\n        distribution.fast++;\n      } else if (metric.duration <= 100) {\n        distribution.normal++;\n      } else {\n        distribution.slow++;\n      }\n    });\n\n    return distribution;\n  }\n\n  /**\n   * 连接池管理\n   */\n  async getConnectionPoolStatus(): Promise<{\n    active: number;\n    idle: number;\n    waiting: number;\n    total: number;\n    config: ConnectionPoolConfig;\n  }> {\n    // 这里应该从实际的连接池获取状态\n    // Prisma 不直接暴露连接池状态，这里提供模拟数据\n    return {\n      active: Math.floor(Math.random() * this.poolConfig.max),\n      idle: Math.floor(Math.random() * (this.poolConfig.max - 5)),\n      waiting: Math.floor(Math.random() * 5),\n      total: this.poolConfig.max,\n      config: this.poolConfig,\n    };\n  }\n\n  /**\n   * 优雅关闭\n   */\n  async gracefulShutdown(): Promise<void> {\n    this.logger.info('Starting graceful database shutdown');\n    \n    try {\n      // 停止性能监控\n      dbPerformanceMonitor.stop();\n      \n      // 关闭健康检查器\n      await healthChecker.close();\n      \n      // 断开Prisma连接\n      await this.prisma.$disconnect();\n      \n      // 清理缓存\n      this.clearCache();\n      \n      this.logger.info('Database disconnected successfully');\n    } catch (error) {\n      this.logger.error('Error during database shutdown', {\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * 获取Prisma客户端实例\n   */\n  getPrismaClient(): PrismaClient {\n    return this.prisma;\n  }\n\n  /**\n   * 清理缓存\n   */\n  clearCache(): void {\n    this.queryCache.clear();\n    this.logger.info('Query cache cleared');\n  }\n\n  /**\n   * 设置慢查询阈值\n   */\n  setSlowQueryThreshold(threshold: number): void {\n    this.slowQueryThreshold = threshold;\n    this.logger.info('Slow query threshold updated', { threshold });\n  }\n\n  /**\n   * 启用/禁用缓存\n   */\n  setCacheEnabled(enabled: boolean): void {\n    this.cacheEnabled = enabled;\n    if (!enabled) {\n      this.clearCache();\n    }\n    this.logger.info('Cache enabled status changed', { enabled });\n  }\n}\n\n// 导出单例实例\nexport const enhancedDatabaseManager = EnhancedDatabaseManager.getInstance();\n\n// 导出便捷方法\nexport const db = enhancedDatabaseManager.getPrismaClient();\n\n// 导出事务执行器\nexport const executeTransaction = enhancedDatabaseManager.executeTransaction.bind(enhancedDatabaseManager);\n\n// 导出查询执行器\nexport const executeQuery = enhancedDatabaseManager.executeQuery.bind(enhancedDatabaseManager);"],"mappings":"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","ignoreList":[]}