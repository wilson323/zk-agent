{"version":3,"names":["cov_19hnipx1bf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","poster_db_1","exports","GET","createApiRoute","RouteConfigs","publicGet","req","params","validatedBody","validatedQuery","user","requestId","styles","PosterDatabase","getStyles","ApiResponseWrapper","success","data","sizes","getSizes","palettes","getColorPalettes","category","industry","productType","templates","getTemplates","undefined","allStyles","allSizes","allPalettes","Promise","all","error","message","status"],"sources":["E:\\zk-agent\\app\\api\\poster\\config\\route.ts"],"sourcesContent":["/**\n * @file poster\\config\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { PosterDatabase } from \"@/lib/database/poster-db\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const type = validatedQuery?.type as string\n      \n      switch (type) {\n        case \"styles\":\n          const styles = await PosterDatabase.getStyles()\n          return ApiResponseWrapper.success({\n            success: true,\n            data: styles,\n          })\n        \n        case \"sizes\":\n          const sizes = await PosterDatabase.getSizes()\n          return ApiResponseWrapper.success({\n            success: true,\n            data: sizes,\n          })\n        \n        case \"palettes\":\n          const palettes = await PosterDatabase.getColorPalettes()\n          return ApiResponseWrapper.success({\n            success: true,\n            data: palettes,\n          })\n        \n        case \"templates\":\n          const category = validatedQuery?.category as string\n          const industry = validatedQuery?.industry as string\n          const productType = validatedQuery?.productType as string\n          \n          const templates = await PosterDatabase.getTemplates({\n            category: category || undefined,\n            industry: industry || undefined,\n            productType: productType || undefined,\n          })\n          \n          return ApiResponseWrapper.success({\n            success: true,\n            data: templates,\n          })\n        \n        case \"all\":\n          const [allStyles, allSizes, allPalettes] = await Promise.all([\n            PosterDatabase.getStyles(),\n            PosterDatabase.getSizes(),\n            PosterDatabase.getColorPalettes(),\n          ])\n          \n          return ApiResponseWrapper.success({\n            success: true,\n            data: {\n              styles: allStyles,\n              sizes: allSizes,\n              palettes: allPalettes,\n            },\n          })\n        \n        default:\n          return ApiResponseWrapper.error(\n            { message: \"Invalid config type. Use: styles, sizes, palettes, templates, or all\" },\n            { status: 400 }\n          )\n      }\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        { message: 'Failed to get poster config' },\n        { status: 500 }\n      )\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}