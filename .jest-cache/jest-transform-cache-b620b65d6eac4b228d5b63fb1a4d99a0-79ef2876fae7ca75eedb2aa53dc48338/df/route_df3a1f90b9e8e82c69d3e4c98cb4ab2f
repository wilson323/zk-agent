19fdfe181676e500ab34ba0e02a3e560
"use strict";

/**
 * @file ai-models\[id]\test\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2fqdpn80f4() {
  var path = "E:\\zk-agent\\app\\api\\ai-models\\[id]\\test\\route.ts";
  var hash = "bfecf9f02f7131e7e9339a26e26ca570719a8231";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\test\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 85
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 131
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 105
          },
          end: {
            line: 14,
            column: 106
          }
        },
        loc: {
          start: {
            line: 14,
            column: 180
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\test\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AACzC,iEAA+D;AAElD,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QAEjC,MAAM,MAAM,GAAG,MAAM,8BAAc,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAE9D,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,qBAAqB,EAAE,yBAAyB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACzG,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ai-models\\[id]\\test\\route.ts"],
      sourcesContent: ["/**\n * @file ai-models\\[id]\\test\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { aiModelManager } from '@/lib/ai-models/model-manager';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      \n      const result = await aiModelManager.testModel(routeParams.id);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to test AI model', null, 500);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bfecf9f02f7131e7e9339a26e26ca570719a8231"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fqdpn80f4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fqdpn80f4();
cov_2fqdpn80f4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fqdpn80f4().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2fqdpn80f4().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2fqdpn80f4().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_2fqdpn80f4().s[4]++, require("@/types/core"));
const model_manager_1 =
/* istanbul ignore next */
(cov_2fqdpn80f4().s[5]++, require("@/lib/ai-models/model-manager"));
/* istanbul ignore next */
cov_2fqdpn80f4().s[6]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId,
  params
}) => {
  /* istanbul ignore next */
  cov_2fqdpn80f4().f[0]++;
  cov_2fqdpn80f4().s[7]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_2fqdpn80f4().s[8]++, await params);
    const result =
    /* istanbul ignore next */
    (cov_2fqdpn80f4().s[9]++, await model_manager_1.aiModelManager.testModel(routeParams.id));
    /* istanbul ignore next */
    cov_2fqdpn80f4().s[10]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fqdpn80f4().s[11]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to test AI model', null, 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmZxZHBuODBmNCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiYXBpX3JvdXRlX3dyYXBwZXJfMSIsInJlcXVpcmUiLCJhcGlfaGVscGVyXzEiLCJjb3JlXzEiLCJtb2RlbF9tYW5hZ2VyXzEiLCJleHBvcnRzIiwiUE9TVCIsImNyZWF0ZUFwaVJvdXRlIiwiUm91dGVDb25maWdzIiwicHJvdGVjdGVkUG9zdCIsInJlcSIsInZhbGlkYXRlZEJvZHkiLCJ2YWxpZGF0ZWRRdWVyeSIsInVzZXIiLCJyZXF1ZXN0SWQiLCJwYXJhbXMiLCJyb3V0ZVBhcmFtcyIsInJlc3VsdCIsImFpTW9kZWxNYW5hZ2VyIiwidGVzdE1vZGVsIiwiaWQiLCJBcGlSZXNwb25zZVdyYXBwZXIiLCJzdWNjZXNzIiwiZGF0YSIsImVycm9yIiwiRXJyb3JDb2RlIiwiSU5URVJOQUxfU0VSVkVSX0VSUk9SIl0sInNvdXJjZXMiOlsiRTpcXHprLWFnZW50XFxhcHBcXGFwaVxcYWktbW9kZWxzXFxbaWRdXFx0ZXN0XFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIGFpLW1vZGVsc1xcW2lkXVxcdGVzdFxccm91dGUudHNcbiAqIEBkZXNjcmlwdGlvbiBNaWdyYXRlZCBBUEkgcm91dGUgd2l0aCBnbG9iYWwgZXJyb3IgaGFuZGxpbmdcbiAqIEBhdXRob3IgWkstQWdlbnQgVGVhbVxuICogQGRhdGUgMjAyNS0wNi0yNVxuICovXG5cbmltcG9ydCB7IE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgY3JlYXRlQXBpUm91dGUsIFJvdXRlQ29uZmlncyB9IGZyb20gJ0AvbGliL21pZGRsZXdhcmUvYXBpLXJvdXRlLXdyYXBwZXInO1xuaW1wb3J0IHsgQXBpUmVzcG9uc2VXcmFwcGVyIH0gZnJvbSAnQC9saWIvdXRpbHMvYXBpLWhlbHBlcic7XG5pbXBvcnQgeyBFcnJvckNvZGUgfSBmcm9tICdAL3R5cGVzL2NvcmUnO1xuaW1wb3J0IHsgYWlNb2RlbE1hbmFnZXIgfSBmcm9tICdAL2xpYi9haS1tb2RlbHMvbW9kZWwtbWFuYWdlcic7XG5cbmV4cG9ydCBjb25zdCBQT1NUID0gY3JlYXRlQXBpUm91dGUoXG4gIFJvdXRlQ29uZmlncy5wcm90ZWN0ZWRQb3N0KCksXG4gIGFzeW5jIChyZXE6IE5leHRSZXF1ZXN0LCB7IHZhbGlkYXRlZEJvZHksIHZhbGlkYXRlZFF1ZXJ5LCB1c2VyLCByZXF1ZXN0SWQsIHBhcmFtcyB9KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJvdXRlUGFyYW1zID0gYXdhaXQgcGFyYW1zO1xuICAgICAgXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhaU1vZGVsTWFuYWdlci50ZXN0TW9kZWwocm91dGVQYXJhbXMuaWQpO1xuICAgIFxuICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5zdWNjZXNzKHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgZGF0YTogcmVzdWx0LFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBBcGlSZXNwb25zZVdyYXBwZXIuZXJyb3IoRXJyb3JDb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUiwgJ0ZhaWxlZCB0byB0ZXN0IEFJIG1vZGVsJywgbnVsbCwgNTAwKTtcbiAgICB9XG4gIH1cbik7XG5cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01B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