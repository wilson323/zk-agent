fc2bb723b541995557effd3760edb6c5
"use strict";

/* istanbul ignore next */
function cov_225qs0wa0q() {
  var path = "E:\\zk-agent\\app\\api\\admin\\error-monitoring\\root-cause\\route.ts";
  var hash = "2e8f627ad1438ba672751a8498b6560dca71ec5f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\admin\\error-monitoring\\root-cause\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 18
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 20
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 18
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 39
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 65
        }
      },
      "6": {
        start: {
          line: 8,
          column: 30
        },
        end: {
          line: 8,
          column: 77
        }
      },
      "7": {
        start: {
          line: 9,
          column: 31
        },
        end: {
          line: 9,
          column: 79
        }
      },
      "8": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "9": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "10": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 79
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "12": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 85
        }
      },
      "13": {
        start: {
          line: 22,
          column: 33
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "14": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "15": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "17": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 106
        }
      },
      "18": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "19": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 87
        }
      },
      "20": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 34,
          column: 13
        }
      },
      "21": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 94
        }
      },
      "22": {
        start: {
          line: 36,
          column: 13
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "23": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 93
        }
      },
      "24": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "25": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 99
        }
      },
      "26": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 63
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "29": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 82
        }
      },
      "30": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "31": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 79
        }
      },
      "32": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "33": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 85
        }
      },
      "34": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 41
        }
      },
      "35": {
        start: {
          line: 69,
          column: 51
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "36": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "37": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 90
        }
      },
      "38": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "39": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "40": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 88
        }
      },
      "41": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 100
        }
      },
      "42": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "43": {
        start: {
          line: 89,
          column: 72
        },
        end: {
          line: 89,
          column: 122
        }
      },
      "44": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 67
        }
      },
      "45": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "46": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 82
        }
      },
      "47": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "48": {
        start: {
          line: 110,
          column: 27
        },
        end: {
          line: 110,
          column: 79
        }
      },
      "49": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "50": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 85
        }
      },
      "51": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "52": {
        start: {
          line: 118,
          column: 13
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "53": {
        start: {
          line: 120,
          column: 29
        },
        end: {
          line: 126,
          column: 28
        }
      },
      "54": {
        start: {
          line: 122,
          column: 34
        },
        end: {
          line: 122,
          column: 85
        }
      },
      "55": {
        start: {
          line: 123,
          column: 37
        },
        end: {
          line: 123,
          column: 81
        }
      },
      "56": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 72
        }
      },
      "57": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "58": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "59": {
        start: {
          line: 138,
          column: 33
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "60": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "61": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 140,
          column: 108
        }
      },
      "62": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "63": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 155,
          column: 18
        }
      },
      "64": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 59
        }
      },
      "65": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 59
        }
      },
      "66": {
        start: {
          line: 159,
          column: 49
        },
        end: {
          line: 159,
          column: 58
        }
      },
      "67": {
        start: {
          line: 160,
          column: 23
        },
        end: {
          line: 160,
          column: 56
        }
      },
      "68": {
        start: {
          line: 160,
          column: 45
        },
        end: {
          line: 160,
          column: 55
        }
      },
      "69": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "70": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 65
        }
      },
      "71": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "72": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 82
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 61,
            column: 19
          }
        },
        loc: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 65
          },
          end: {
            line: 89,
            column: 66
          }
        },
        loc: {
          start: {
            line: 89,
            column: 72
          },
          end: {
            line: 89,
            column: 122
          }
        },
        line: 89
      },
      "3": {
        name: "PUT",
        decl: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 18
          }
        },
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 107
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 121,
            column: 21
          }
        },
        loc: {
          start: {
            line: 121,
            column: 31
          },
          end: {
            line: 125,
            column: 9
          }
        },
        line: 121
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 138,
            column: 51
          }
        },
        loc: {
          start: {
            line: 138,
            column: 73
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 138
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 159,
            column: 43
          }
        },
        loc: {
          start: {
            line: 159,
            column: 49
          },
          end: {
            line: 159,
            column: 58
          }
        },
        line: 159
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 160,
            column: 38
          },
          end: {
            line: 160,
            column: 39
          }
        },
        loc: {
          start: {
            line: 160,
            column: 45
          },
          end: {
            line: 160,
            column: 55
          }
        },
        line: 160
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 23
          }
        }, {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 46
          }
        }, {
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 19,
            column: 87
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 35
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 13
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 23
          }
        }, {
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 46
          }
        }, {
          start: {
            line: 65,
            column: 50
          },
          end: {
            line: 65,
            column: 87
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 69,
            column: 41
          },
          end: {
            line: 69,
            column: 46
          }
        }],
        line: 69
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 89,
            column: 72
          },
          end: {
            line: 89,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 72
          },
          end: {
            line: 89,
            column: 93
          }
        }, {
          start: {
            line: 89,
            column: 97
          },
          end: {
            line: 89,
            column: 122
          }
        }],
        line: 89
      },
      "14": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "15": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 23
          }
        }, {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 46
          }
        }, {
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 87
          }
        }],
        line: 111
      },
      "16": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 115,
            column: 28
          },
          end: {
            line: 115,
            column: 47
          }
        }],
        line: 115
      },
      "17": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 19
          },
          end: {
            line: 116,
            column: 39
          }
        }],
        line: 116
      },
      "18": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 117,
            column: 18
          }
        }],
        line: 117
      },
      "19": {
        loc: {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 32
          }
        }, {
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 124,
            column: 52
          }
        }, {
          start: {
            line: 124,
            column: 56
          },
          end: {
            line: 124,
            column: 71
          }
        }],
        line: 124
      },
      "20": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "21": {
        loc: {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 52
          },
          end: {
            line: 154,
            column: 65
          }
        }, {
          start: {
            line: 154,
            column: 68
          },
          end: {
            line: 154,
            column: 74
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\admin\\error-monitoring\\root-cause\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\admin\\error-monitoring\\root-cause\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { errorMonitor } from '@/lib/monitoring/error-monitor';\nimport { rootCauseAnalyzer } from '@/lib/monitoring/root-cause-analyzer';\nimport { globalErrorHandler } from '@/lib/middleware/global-error-handler';\nimport { authenticateRequest } from '@/lib/auth/auth-utils';\n\n/**\n * \u83B7\u53D6\u6839\u56E0\u5206\u6790\u7ED3\u679C\n * GET /api/admin/error-monitoring/root-cause?errorId=xxx\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n    const authResult = await authenticateRequest(request);\n    if (!authResult || !authResult.success || authResult.user?.['role'] !== 'admin') {\n      return NextResponse.json(\n        { error: '\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650' },\n        { status: 403 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const errorId = searchParams.get('errorId');\n    const analysisId = searchParams.get('analysisId');\n\n    if (!errorId && !analysisId) {\n      return NextResponse.json(\n        { error: '\u9700\u8981\u63D0\u4F9B errorId \u6216 analysisId \u53C2\u6570' },\n        { status: 400 }\n      );\n    }\n\n    let analysis;\n    \n    if (analysisId) {\n      // \u901A\u8FC7\u5206\u6790ID\u83B7\u53D6\u7ED3\u679C\n      analysis = rootCauseAnalyzer.getAnalysis(analysisId);\n      if (!analysis) {\n        return NextResponse.json(\n          { error: '\u672A\u627E\u5230\u6307\u5B9A\u7684\u6839\u56E0\u5206\u6790\u7ED3\u679C' },\n          { status: 404 }\n        );\n      }\n    } else if (errorId) {\n      // \u901A\u8FC7\u9519\u8BEFID\u83B7\u53D6\u6216\u751F\u6210\u5206\u6790\n      analysis = await errorMonitor.getErrorRootCauseAnalysis(errorId);\n      if (!analysis) {\n        return NextResponse.json(\n          { error: '\u672A\u627E\u5230\u6307\u5B9A\u7684\u9519\u8BEF\u6216\u65E0\u6CD5\u751F\u6210\u6839\u56E0\u5206\u6790' },\n          { status: 404 }\n        );\n      }\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: analysis\n    });\n\n  } catch (error) {\n    console.error('Root cause analysis API error:', error);\n    globalErrorHandler.handleError(error as Error, {\n      method: 'GET',\n      url: request.url\n    });\n    \n    return NextResponse.json(\n      { error: '\u83B7\u53D6\u6839\u56E0\u5206\u6790\u5931\u8D25' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * \u89E6\u53D1\u6839\u56E0\u5206\u6790\n * POST /api/admin/error-monitoring/root-cause\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n    const authResult = await authenticateRequest(request);\n    if (!authResult || !authResult.success || authResult.user?.['role'] !== 'admin') {\n      return NextResponse.json(\n        { error: '\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650' },\n        { status: 403 }\n      );\n    }\n\n    const body = await request.json();\n    const { errorId, force: _force = false } = body;\n\n    if (!errorId) {\n      return NextResponse.json(\n        { error: '\u9700\u8981\u63D0\u4F9B errorId' },\n        { status: 400 }\n      );\n    }\n\n    // \u83B7\u53D6\u9519\u8BEF\u62A5\u544A\n    const errorReport = null; // errorMonitor.getErrorById(errorId); // Method doesn't exist\n    if (!errorReport) {\n      return NextResponse.json(\n        { error: '\u672A\u627E\u5230\u6307\u5B9A\u7684\u9519\u8BEF\u62A5\u544A' },\n        { status: 404 }\n      );\n    }\n\n    // \u6267\u884C\u6839\u56E0\u5206\u6790\n    const analysis = await rootCauseAnalyzer.analyzeRootCause(errorReport);\n\n    return NextResponse.json({\n      success: true,\n      message: '\u6839\u56E0\u5206\u6790\u5DF2\u5B8C\u6210',\n      data: {\n        analysisId: analysis.id,\n        errorId: analysis.errorId,\n        rootCause: analysis.rootCause,\n        confidence: analysis.confidence,\n        impactAssessment: analysis.impactAssessment,\n        recommendations: analysis.recommendations.filter((r: any) => r.priority === 'HIGH' || r.priority === 'CRITICAL'),\n        analysisTimestamp: analysis.analysisTimestamp\n      }\n    });\n\n  } catch (error) {\n    console.error('Root cause analysis trigger error:', error);\n    globalErrorHandler.handleError(error as Error, {\n      method: 'POST',\n      url: request.url\n    });\n    \n    return NextResponse.json(\n      { error: '\u89E6\u53D1\u6839\u56E0\u5206\u6790\u5931\u8D25' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * \u6279\u91CF\u6839\u56E0\u5206\u6790\n * PUT /api/admin/error-monitoring/root-cause\n */\nexport async function PUT(request: NextRequest) {\n  try {\n    // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n    const authResult = await authenticateRequest(request);\n    if (!authResult || !authResult.success || authResult.user?.['role'] !== 'admin') {\n      return NextResponse.json(\n        { error: '\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650' },\n        { status: 403 }\n      );\n    }\n\n    const body = await request.json();\n    const { \n      timeRange = 24 * 60 * 60 * 1000, // \u9ED8\u8BA424\u5C0F\u65F6\n      severity = ['HIGH', 'CRITICAL'], // \u9ED8\u8BA4\u53EA\u5206\u6790\u9AD8\u4E25\u91CD\u6027\u9519\u8BEF\n      limit = 10 // \u9ED8\u8BA4\u6700\u591A\u5206\u679010\u4E2A\u9519\u8BEF\n    } = body;\n\n    // \u83B7\u53D6\u6700\u8FD1\u7684\u9519\u8BEF\n    const recentErrors = errorMonitor.getRecentErrors(limit * 2)\n      .filter((error: any) => {\n        const isInTimeRange = Date.now() - error.timestamp.getTime() <= timeRange;\n        const isTargetSeverity = severity.includes(error.error?.['severity']);\n        return isInTimeRange && isTargetSeverity && !error.resolved;\n      })\n      .slice(0, limit);\n\n    if (recentErrors.length === 0) {\n      return NextResponse.json({\n        success: true,\n        message: '\u6CA1\u6709\u627E\u5230\u7B26\u5408\u6761\u4EF6\u7684\u9519\u8BEF\u9700\u8981\u5206\u6790',\n        data: {\n          analyzed: 0,\n          results: []\n        }\n      });\n    }\n\n    // \u6279\u91CF\u6267\u884C\u6839\u56E0\u5206\u6790\n    const analysisPromises = recentErrors.map(async (errorReport) => {\n      try {\n        const analysis = await rootCauseAnalyzer.analyzeRootCause(errorReport);\n        return {\n          success: true,\n          errorId: errorReport.id,\n          analysisId: analysis.id,\n          rootCause: analysis.rootCause,\n          confidence: analysis.confidence,\n          businessImpact: analysis.impactAssessment.businessImpact\n        };\n      } catch (error) {\n        return {\n          success: false,\n          errorId: errorReport.id,\n          error: error instanceof Error ? error.message : '\u5206\u6790\u5931\u8D25'\n        };\n      }\n    });\n\n    const results = await Promise.all(analysisPromises);\n    const successful = results.filter((r: any) => r.success);\n    const failed = results.filter((r: any) => !r.success);\n\n    return NextResponse.json({\n      success: true,\n      message: `\u6279\u91CF\u6839\u56E0\u5206\u6790\u5B8C\u6210\uFF0C\u6210\u529F: ${successful.length}\uFF0C\u5931\u8D25: ${failed.length}`,\n      data: {\n        analyzed: successful.length,\n        failed: failed.length,\n        results: successful,\n        errors: failed\n      }\n    });\n\n  } catch (error) {\n    console.error('Batch root cause analysis error:', error);\n    globalErrorHandler.handleError(error as Error, {\n      method: 'PUT',\n      url: request.url\n    });\n    \n    return NextResponse.json(\n      { error: '\u6279\u91CF\u6839\u56E0\u5206\u6790\u5931\u8D25' },\n      { status: 500 }\n    );\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e8f627ad1438ba672751a8498b6560dca71ec5f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_225qs0wa0q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_225qs0wa0q();
cov_225qs0wa0q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_225qs0wa0q().s[1]++;
exports.GET = GET;
/* istanbul ignore next */
cov_225qs0wa0q().s[2]++;
exports.POST = POST;
/* istanbul ignore next */
cov_225qs0wa0q().s[3]++;
exports.PUT = PUT;
const server_1 =
/* istanbul ignore next */
(cov_225qs0wa0q().s[4]++, require("next/server"));
const error_monitor_1 =
/* istanbul ignore next */
(cov_225qs0wa0q().s[5]++, require("@/lib/monitoring/error-monitor"));
const root_cause_analyzer_1 =
/* istanbul ignore next */
(cov_225qs0wa0q().s[6]++, require("@/lib/monitoring/root-cause-analyzer"));
const global_error_handler_1 =
/* istanbul ignore next */
(cov_225qs0wa0q().s[7]++, require("@/lib/middleware/global-error-handler"));
const auth_utils_1 =
/* istanbul ignore next */
(cov_225qs0wa0q().s[8]++, require("@/lib/auth/auth-utils"));
/**
 * 获取根因分析结果
 * GET /api/admin/error-monitoring/root-cause?errorId=xxx
 */
async function GET(request) {
  /* istanbul ignore next */
  cov_225qs0wa0q().f[0]++;
  cov_225qs0wa0q().s[9]++;
  try {
    // 验证管理员权限
    const authResult =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[10]++, await (0, auth_utils_1.authenticateRequest)(request));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[1][0]++, !authResult) ||
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[1][1]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[1][2]++, authResult.user?.['role'] !== 'admin')) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[0][0]++;
      cov_225qs0wa0q().s[12]++;
      return server_1.NextResponse.json({
        error: '需要管理员权限'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[0][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[13]++, new URL(request.url));
    const errorId =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[14]++, searchParams.get('errorId'));
    const analysisId =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[15]++, searchParams.get('analysisId'));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[3][0]++, !errorId) &&
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[3][1]++, !analysisId)) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[2][0]++;
      cov_225qs0wa0q().s[17]++;
      return server_1.NextResponse.json({
        error: '需要提供 errorId 或 analysisId 参数'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[2][1]++;
    }
    let analysis;
    /* istanbul ignore next */
    cov_225qs0wa0q().s[18]++;
    if (analysisId) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[4][0]++;
      cov_225qs0wa0q().s[19]++;
      // 通过分析ID获取结果
      analysis = root_cause_analyzer_1.rootCauseAnalyzer.getAnalysis(analysisId);
      /* istanbul ignore next */
      cov_225qs0wa0q().s[20]++;
      if (!analysis) {
        /* istanbul ignore next */
        cov_225qs0wa0q().b[5][0]++;
        cov_225qs0wa0q().s[21]++;
        return server_1.NextResponse.json({
          error: '未找到指定的根因分析结果'
        }, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_225qs0wa0q().b[5][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[4][1]++;
      cov_225qs0wa0q().s[22]++;
      if (errorId) {
        /* istanbul ignore next */
        cov_225qs0wa0q().b[6][0]++;
        cov_225qs0wa0q().s[23]++;
        // 通过错误ID获取或生成分析
        analysis = await error_monitor_1.errorMonitor.getErrorRootCauseAnalysis(errorId);
        /* istanbul ignore next */
        cov_225qs0wa0q().s[24]++;
        if (!analysis) {
          /* istanbul ignore next */
          cov_225qs0wa0q().b[7][0]++;
          cov_225qs0wa0q().s[25]++;
          return server_1.NextResponse.json({
            error: '未找到指定的错误或无法生成根因分析'
          }, {
            status: 404
          });
        } else
        /* istanbul ignore next */
        {
          cov_225qs0wa0q().b[7][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_225qs0wa0q().b[6][1]++;
      }
    }
    /* istanbul ignore next */
    cov_225qs0wa0q().s[26]++;
    return server_1.NextResponse.json({
      success: true,
      data: analysis
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_225qs0wa0q().s[27]++;
    console.error('Root cause analysis API error:', error);
    /* istanbul ignore next */
    cov_225qs0wa0q().s[28]++;
    global_error_handler_1.globalErrorHandler.handleError(error, {
      method: 'GET',
      url: request.url
    });
    /* istanbul ignore next */
    cov_225qs0wa0q().s[29]++;
    return server_1.NextResponse.json({
      error: '获取根因分析失败'
    }, {
      status: 500
    });
  }
}
/**
 * 触发根因分析
 * POST /api/admin/error-monitoring/root-cause
 */
async function POST(request) {
  /* istanbul ignore next */
  cov_225qs0wa0q().f[1]++;
  cov_225qs0wa0q().s[30]++;
  try {
    // 验证管理员权限
    const authResult =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[31]++, await (0, auth_utils_1.authenticateRequest)(request));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[9][0]++, !authResult) ||
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[9][1]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[9][2]++, authResult.user?.['role'] !== 'admin')) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[8][0]++;
      cov_225qs0wa0q().s[33]++;
      return server_1.NextResponse.json({
        error: '需要管理员权限'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[8][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[34]++, await request.json());
    const {
      errorId,
      force: _force =
      /* istanbul ignore next */
      (cov_225qs0wa0q().b[10][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[35]++, body);
    /* istanbul ignore next */
    cov_225qs0wa0q().s[36]++;
    if (!errorId) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[11][0]++;
      cov_225qs0wa0q().s[37]++;
      return server_1.NextResponse.json({
        error: '需要提供 errorId'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[11][1]++;
    }
    // 获取错误报告
    const errorReport =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[38]++, null); // errorMonitor.getErrorById(errorId); // Method doesn't exist
    /* istanbul ignore next */
    cov_225qs0wa0q().s[39]++;
    if (!errorReport) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[12][0]++;
      cov_225qs0wa0q().s[40]++;
      return server_1.NextResponse.json({
        error: '未找到指定的错误报告'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[12][1]++;
    }
    // 执行根因分析
    const analysis =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[41]++, await root_cause_analyzer_1.rootCauseAnalyzer.analyzeRootCause(errorReport));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[42]++;
    return server_1.NextResponse.json({
      success: true,
      message: '根因分析已完成',
      data: {
        analysisId: analysis.id,
        errorId: analysis.errorId,
        rootCause: analysis.rootCause,
        confidence: analysis.confidence,
        impactAssessment: analysis.impactAssessment,
        recommendations: analysis.recommendations.filter(r => {
          /* istanbul ignore next */
          cov_225qs0wa0q().f[2]++;
          cov_225qs0wa0q().s[43]++;
          return /* istanbul ignore next */(cov_225qs0wa0q().b[13][0]++, r.priority === 'HIGH') ||
          /* istanbul ignore next */
          (cov_225qs0wa0q().b[13][1]++, r.priority === 'CRITICAL');
        }),
        analysisTimestamp: analysis.analysisTimestamp
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_225qs0wa0q().s[44]++;
    console.error('Root cause analysis trigger error:', error);
    /* istanbul ignore next */
    cov_225qs0wa0q().s[45]++;
    global_error_handler_1.globalErrorHandler.handleError(error, {
      method: 'POST',
      url: request.url
    });
    /* istanbul ignore next */
    cov_225qs0wa0q().s[46]++;
    return server_1.NextResponse.json({
      error: '触发根因分析失败'
    }, {
      status: 500
    });
  }
}
/**
 * 批量根因分析
 * PUT /api/admin/error-monitoring/root-cause
 */
async function PUT(request) {
  /* istanbul ignore next */
  cov_225qs0wa0q().f[3]++;
  cov_225qs0wa0q().s[47]++;
  try {
    // 验证管理员权限
    const authResult =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[48]++, await (0, auth_utils_1.authenticateRequest)(request));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[15][0]++, !authResult) ||
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[15][1]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_225qs0wa0q().b[15][2]++, authResult.user?.['role'] !== 'admin')) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[14][0]++;
      cov_225qs0wa0q().s[50]++;
      return server_1.NextResponse.json({
        error: '需要管理员权限'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[14][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[51]++, await request.json());
    const {
      timeRange =
      /* istanbul ignore next */
      (cov_225qs0wa0q().b[16][0]++, 24 * 60 * 60 * 1000),
      // 默认24小时
      severity =
      /* istanbul ignore next */
      (cov_225qs0wa0q().b[17][0]++, ['HIGH', 'CRITICAL']),
      // 默认只分析高严重性错误
      limit =
      /* istanbul ignore next */
      (cov_225qs0wa0q().b[18][0]++, 10) // 默认最多分析10个错误
    } =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[52]++, body);
    // 获取最近的错误
    const recentErrors =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[53]++, error_monitor_1.errorMonitor.getRecentErrors(limit * 2).filter(error => {
      /* istanbul ignore next */
      cov_225qs0wa0q().f[4]++;
      const isInTimeRange =
      /* istanbul ignore next */
      (cov_225qs0wa0q().s[54]++, Date.now() - error.timestamp.getTime() <= timeRange);
      const isTargetSeverity =
      /* istanbul ignore next */
      (cov_225qs0wa0q().s[55]++, severity.includes(error.error?.['severity']));
      /* istanbul ignore next */
      cov_225qs0wa0q().s[56]++;
      return /* istanbul ignore next */(cov_225qs0wa0q().b[19][0]++, isInTimeRange) &&
      /* istanbul ignore next */
      (cov_225qs0wa0q().b[19][1]++, isTargetSeverity) &&
      /* istanbul ignore next */
      (cov_225qs0wa0q().b[19][2]++, !error.resolved);
    }).slice(0, limit));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[57]++;
    if (recentErrors.length === 0) {
      /* istanbul ignore next */
      cov_225qs0wa0q().b[20][0]++;
      cov_225qs0wa0q().s[58]++;
      return server_1.NextResponse.json({
        success: true,
        message: '没有找到符合条件的错误需要分析',
        data: {
          analyzed: 0,
          results: []
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_225qs0wa0q().b[20][1]++;
    }
    // 批量执行根因分析
    const analysisPromises =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[59]++, recentErrors.map(async errorReport => {
      /* istanbul ignore next */
      cov_225qs0wa0q().f[5]++;
      cov_225qs0wa0q().s[60]++;
      try {
        const analysis =
        /* istanbul ignore next */
        (cov_225qs0wa0q().s[61]++, await root_cause_analyzer_1.rootCauseAnalyzer.analyzeRootCause(errorReport));
        /* istanbul ignore next */
        cov_225qs0wa0q().s[62]++;
        return {
          success: true,
          errorId: errorReport.id,
          analysisId: analysis.id,
          rootCause: analysis.rootCause,
          confidence: analysis.confidence,
          businessImpact: analysis.impactAssessment.businessImpact
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_225qs0wa0q().s[63]++;
        return {
          success: false,
          errorId: errorReport.id,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_225qs0wa0q().b[21][0]++, error.message) :
          /* istanbul ignore next */
          (cov_225qs0wa0q().b[21][1]++, '分析失败')
        };
      }
    }));
    const results =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[64]++, await Promise.all(analysisPromises));
    const successful =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[65]++, results.filter(r => {
      /* istanbul ignore next */
      cov_225qs0wa0q().f[6]++;
      cov_225qs0wa0q().s[66]++;
      return r.success;
    }));
    const failed =
    /* istanbul ignore next */
    (cov_225qs0wa0q().s[67]++, results.filter(r => {
      /* istanbul ignore next */
      cov_225qs0wa0q().f[7]++;
      cov_225qs0wa0q().s[68]++;
      return !r.success;
    }));
    /* istanbul ignore next */
    cov_225qs0wa0q().s[69]++;
    return server_1.NextResponse.json({
      success: true,
      message: `批量根因分析完成，成功: ${successful.length}，失败: ${failed.length}`,
      data: {
        analyzed: successful.length,
        failed: failed.length,
        results: successful,
        errors: failed
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_225qs0wa0q().s[70]++;
    console.error('Batch root cause analysis error:', error);
    /* istanbul ignore next */
    cov_225qs0wa0q().s[71]++;
    global_error_handler_1.globalErrorHandler.handleError(error, {
      method: 'PUT',
      url: request.url
    });
    /* istanbul ignore next */
    cov_225qs0wa0q().s[72]++;
    return server_1.NextResponse.json({
      error: '批量根因分析失败'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,