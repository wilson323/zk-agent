c52df055ec844d1b48b139f83a49dc6b
"use strict";

/**
 * @file metrics\record\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2lbdklyl7y() {
  var path = "E:\\zk-agent\\app\\api\\metrics\\record\\route.ts";
  var hash = "f2215ecc24497e2224b2896cd0945ad03c435be2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\metrics\\record\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 105
          },
          end: {
            line: 12,
            column: 106
          }
        },
        loc: {
          start: {
            line: 12,
            column: 180
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\metrics\\record\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE/C,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;IAEjC,SAAS;IACT,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;IAE7B,2BAA2B;IAC3B,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC3B,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,+BAAkB,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AACvD,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\metrics\\record\\route.ts"],
      sourcesContent: ["/**\n * @file metrics\\record\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const metrics = await req.json();\n    \n    // \u8BB0\u5F55\u5230\u6570\u636E\u5E93\n    await recordMetrics(metrics);\n    \n    // \u5982\u679C\u6709Redis\uFF0C\u4E5F\u8BB0\u5F55\u5230Redis\u7528\u4E8E\u5B9E\u65F6\u76D1\u63A7\n    if (process.env.REDIS_HOST) {\n      await recordToRedis(metrics);\n    }\n    \n    return ApiResponseWrapper.success({ success: true });\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f2215ecc24497e2224b2896cd0945ad03c435be2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lbdklyl7y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lbdklyl7y();
cov_2lbdklyl7y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lbdklyl7y().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2lbdklyl7y().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2lbdklyl7y().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_2lbdklyl7y().s[4]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2lbdklyl7y().f[0]++;
  const metrics =
  /* istanbul ignore next */
  (cov_2lbdklyl7y().s[5]++, await req.json());
  // 记录到数据库
  /* istanbul ignore next */
  cov_2lbdklyl7y().s[6]++;
  await recordMetrics(metrics);
  // 如果有Redis，也记录到Redis用于实时监控
  /* istanbul ignore next */
  cov_2lbdklyl7y().s[7]++;
  if (process.env.REDIS_HOST) {
    /* istanbul ignore next */
    cov_2lbdklyl7y().b[0][0]++;
    cov_2lbdklyl7y().s[8]++;
    await recordToRedis(metrics);
  } else
  /* istanbul ignore next */
  {
    cov_2lbdklyl7y().b[0][1]++;
  }
  cov_2lbdklyl7y().s[9]++;
  return api_helper_1.ApiResponseWrapper.success({
    success: true
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmxiZGtseWw3eSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImFwaV9yb3V0ZV93cmFwcGVyXzEiLCJyZXF1aXJlIiwiYXBpX2hlbHBlcl8xIiwiZXhwb3J0cyIsIlBPU1QiLCJjcmVhdGVBcGlSb3V0ZSIsIlJvdXRlQ29uZmlncyIsInByb3RlY3RlZFBvc3QiLCJyZXEiLCJwYXJhbXMiLCJ2YWxpZGF0ZWRCb2R5IiwidmFsaWRhdGVkUXVlcnkiLCJ1c2VyIiwicmVxdWVzdElkIiwibWV0cmljcyIsImpzb24iLCJyZWNvcmRNZXRyaWNzIiwicHJvY2VzcyIsImVudiIsIlJFRElTX0hPU1QiLCJyZWNvcmRUb1JlZGlzIiwiQXBpUmVzcG9uc2VXcmFwcGVyIiwic3VjY2VzcyJdLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcYXBwXFxhcGlcXG1ldHJpY3NcXHJlY29yZFxccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBtZXRyaWNzXFxyZWNvcmRcXHJvdXRlLnRzXG4gKiBAZGVzY3JpcHRpb24gTWlncmF0ZWQgQVBJIHJvdXRlIHdpdGggZ2xvYmFsIGVycm9yIGhhbmRsaW5nXG4gKiBAYXV0aG9yIFpLLUFnZW50IFRlYW1cbiAqIEBkYXRlIDIwMjUtMDYtMjVcbiAqL1xuXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgY3JlYXRlQXBpUm91dGUsIFJvdXRlQ29uZmlncywgQ29tbW9uVmFsaWRhdGlvbnMgfSBmcm9tICdAL2xpYi9taWRkbGV3YXJlL2FwaS1yb3V0ZS13cmFwcGVyJztcbmltcG9ydCB7IEFwaVJlc3BvbnNlV3JhcHBlciB9IGZyb20gJ0AvbGliL3V0aWxzL2FwaS1oZWxwZXInO1xuXG5leHBvcnQgY29uc3QgUE9TVCA9IGNyZWF0ZUFwaVJvdXRlKFxuICBSb3V0ZUNvbmZpZ3MucHJvdGVjdGVkUG9zdCgpLFxuICBhc3luYyAocmVxOiBOZXh0UmVxdWVzdCwgeyBwYXJhbXMsIHZhbGlkYXRlZEJvZHksIHZhbGlkYXRlZFF1ZXJ5LCB1c2VyLCByZXF1ZXN0SWQgfSkgPT4ge1xuICAgIGNvbnN0IG1ldHJpY3MgPSBhd2FpdCByZXEuanNvbigpO1xuICAgIFxuICAgIC8vIOiusOW9leWIsOaVsOaNruW6k1xuICAgIGF3YWl0IHJlY29yZE1ldHJpY3MobWV0cmljcyk7XG4gICAgXG4gICAgLy8g5aaC5p6c5pyJUmVkaXPvvIzkuZ/orrDlvZXliLBSZWRpc+eUqOS6juWunuaXtuebkeaOp1xuICAgIGlmIChwcm9jZXNzLmVudi5SRURJU19IT1NUKSB7XG4gICAgICBhd2FpdCByZWNvcmRUb1JlZGlzKG1ldHJpY3MpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gQXBpUmVzcG9uc2VXcmFwcGVyLnN1Y2Nlc3MoeyBzdWNjZXNzOiB0cnVlIH0pO1xuICB9XG4pO1xuXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBNUIsSUFBQTtFQUFBO0VBQUEsSUFBQTZCLFFBQUEsR0FBQTVCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBMEIsUUFBQSxDQUFBOUIsSUFBQSxLQUFBOEIsUUFBQSxDQUFBOUIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTZCLFFBQUEsQ0FBQTlCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQTBCLGNBQUEsR0FBQUQsUUFBQSxDQUFBOUIsSUFBQTtFQUFBO0lBbUJJO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFnQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBaEMsY0FBQTtBQUFBQSxjQUFBLEdBQUFvQixDQUFBOzs7Ozs7O0FBWEosTUFBQWEsbUJBQUE7QUFBQTtBQUFBLENBQUFqQyxjQUFBLEdBQUFvQixDQUFBLE9BQUFjLE9BQUE7QUFDQSxNQUFBQyxZQUFBO0FBQUE7QUFBQSxDQUFBbkMsY0FBQSxHQUFBb0IsQ0FBQSxPQUFBYyxPQUFBO0FBQTREO0FBQUFsQyxjQUFBLEdBQUFvQixDQUFBO0FBRS9DZ0IsT0FBQSxDQUFBQyxJQUFJLEdBQUcsSUFBQUosbUJBQUEsQ0FBQUssY0FBYyxFQUNoQ0wsbUJBQUEsQ0FBQU0sWUFBWSxDQUFDQyxhQUFhLEVBQUUsRUFDNUIsT0FBT0MsR0FBZ0IsRUFBRTtFQUFFQyxNQUFNO0VBQUVDLGFBQWE7RUFBRUMsY0FBYztFQUFFQyxJQUFJO0VBQUVDO0FBQVMsQ0FBRSxLQUFJO0VBQUE7RUFBQTlDLGNBQUEsR0FBQXFCLENBQUE7RUFDckYsTUFBTTBCLE9BQU87RUFBQTtFQUFBLENBQUEvQyxjQUFBLEdBQUFvQixDQUFBLE9BQUcsTUFBTXFCLEdBQUcsQ0FBQ08sSUFBSSxFQUFFO0VBRWhDO0VBQUE7RUFBQWhELGNBQUEsR0FBQW9CLENBQUE7RUFDQSxNQUFNNkIsYUFBYSxDQUFDRixPQUFPLENBQUM7RUFFNUI7RUFBQTtFQUFBL0MsY0FBQSxHQUFBb0IsQ0FBQTtFQUNBLElBQUk4QixPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVSxFQUFFO0lBQUE7SUFBQXBELGNBQUEsR0FBQXNCLENBQUE7SUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7SUFDMUIsTUFBTWlDLGFBQWEsQ0FBQ04sT0FBTyxDQUFDO0VBQzlCLENBQUM7RUFBQTtFQUFBO0lBQUEvQyxjQUFBLEdBQUFzQixDQUFBO0VBQUE7RUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7RUFFRCxPQUFPZSxZQUFBLENBQUFtQixrQkFBa0IsQ0FBQ0MsT0FBTyxDQUFDO0lBQUVBLE9BQU8sRUFBRTtFQUFJLENBQUUsQ0FBQztBQUN0RCxDQUFDLENBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=