d4ff08457789420ee6585d4c1d4a9b4a
"use strict";

/**
 * @file fastgpt\batch-forward\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_4umnuob1f() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts";
  var hash = "368b7e23fa324ba7dee73052397cb2ddc3a4fc2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "8": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 141
        }
      },
      "9": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "10": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "12": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 152
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 61
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 124
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 105
          },
          end: {
            line: 13,
            column: 106
          }
        },
        loc: {
          start: {
            line: 13,
            column: 180
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 40
          }
        }, {
          start: {
            line: 16,
            column: 44
          },
          end: {
            line: 16,
            column: 72
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 98
          },
          end: {
            line: 30,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 98
          },
          end: {
            line: 30,
            column: 110
          }
        }, {
          start: {
            line: 30,
            column: 114
          },
          end: {
            line: 30,
            column: 144
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AAE5B,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,SAAS;QACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;YACjE,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,sBAAsB,EAChC,mCAAmC,EACnC,IAAI,CACL,CAAC;QACJ,CAAC;QAED,gBAAgB;QAChB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,uBAAuB,EAAE;YAClF,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,UAAU,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;aACzD;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;SACpC,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,sBAAsB,EAChC,IAAI,CAAC,OAAO,IAAI,8BAA8B,EAC9C,IAAI,CACL,CAAC;QACJ,CAAC;QAED,OAAO,+BAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACrD,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,uBAAuB,EACvB,IAAI,CACL,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\batch-forward\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\batch-forward\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n      if (!process.env.FASTGPT_API_URL || !process.env.FASTGPT_API_KEY) {\n        return ApiResponseWrapper.error(\n          ErrorCode.EXTERNAL_SERVICE_ERROR,\n          'FastGPT API configuration missing',\n          null\n        );\n      }\n\n      // \u8F6C\u53D1\u8BF7\u6C42\u5230 FastGPT\n      const response = await fetch(`${process.env.FASTGPT_API_URL}/api/v1/batch-forward`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.FASTGPT_API_KEY}`,\n        },\n        body: JSON.stringify(validatedBody),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        return ApiResponseWrapper.error(\n          ErrorCode.EXTERNAL_SERVICE_ERROR,\n          data.message || 'FastGPT batch forward failed',\n          null\n        );\n      }\n\n      return ApiResponseWrapper.success(data);\n    } catch (error) {\n      console.error('FastGPT batch forward error:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        'Internal server error',\n        null\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "368b7e23fa324ba7dee73052397cb2ddc3a4fc2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4umnuob1f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4umnuob1f();
cov_4umnuob1f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4umnuob1f().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_4umnuob1f().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_4umnuob1f().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_4umnuob1f().s[4]++, require("@/types/core"));
/* istanbul ignore next */
cov_4umnuob1f().s[5]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_4umnuob1f().f[0]++;
  cov_4umnuob1f().s[6]++;
  try {
    /* istanbul ignore next */
    cov_4umnuob1f().s[7]++;
    // 检查环境变量
    if (
    /* istanbul ignore next */
    (cov_4umnuob1f().b[1][0]++, !process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_4umnuob1f().b[1][1]++, !process.env.FASTGPT_API_KEY)) {
      /* istanbul ignore next */
      cov_4umnuob1f().b[0][0]++;
      cov_4umnuob1f().s[8]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.EXTERNAL_SERVICE_ERROR, 'FastGPT API configuration missing', null);
    } else
    /* istanbul ignore next */
    {
      cov_4umnuob1f().b[0][1]++;
    }
    // 转发请求到 FastGPT
    const response =
    /* istanbul ignore next */
    (cov_4umnuob1f().s[9]++, await fetch(`${process.env.FASTGPT_API_URL}/api/v1/batch-forward`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.FASTGPT_API_KEY}`
      },
      body: JSON.stringify(validatedBody)
    }));
    const data =
    /* istanbul ignore next */
    (cov_4umnuob1f().s[10]++, await response.json());
    /* istanbul ignore next */
    cov_4umnuob1f().s[11]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_4umnuob1f().b[2][0]++;
      cov_4umnuob1f().s[12]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.EXTERNAL_SERVICE_ERROR,
      /* istanbul ignore next */
      (cov_4umnuob1f().b[3][0]++, data.message) ||
      /* istanbul ignore next */
      (cov_4umnuob1f().b[3][1]++, 'FastGPT batch forward failed'), null);
    } else
    /* istanbul ignore next */
    {
      cov_4umnuob1f().b[2][1]++;
    }
    cov_4umnuob1f().s[13]++;
    return api_helper_1.ApiResponseWrapper.success(data);
  } catch (error) {
    /* istanbul ignore next */
    cov_4umnuob1f().s[14]++;
    console.error('FastGPT batch forward error:', error);
    /* istanbul ignore next */
    cov_4umnuob1f().s[15]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,