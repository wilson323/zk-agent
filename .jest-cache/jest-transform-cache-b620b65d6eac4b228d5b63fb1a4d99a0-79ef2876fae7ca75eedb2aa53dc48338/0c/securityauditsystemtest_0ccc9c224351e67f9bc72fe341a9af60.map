{"file":"E:\\zk-agent\\__tests__\\lib\\security\\security-audit-system.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\__tests__\\lib\\security\\security-audit-system.test.ts"],"sourcesContent":["// @ts-nocheck\n/**\r\n * @file __tests__/lib/security/security-audit-system.test.ts\r\n * @description 安全审计系统测试 - 无模拟数据的真实测试\r\n * @author B团队安全测试工程师\r\n * @lastUpdate 2024-12-19\r\n */\r\n\r\nimport {\r\n  SecurityAuditSystem,\r\n  SecurityEventType,\r\n  SecuritySeverity,\r\n  securityAuditSystem,\r\n  recordSecurityEvent,\r\n  scanFile,\r\n  detectThreats,\r\n  analyzeUserBehavior,\r\n  generateSecurityReport\r\n} from '@/lib/security/security-audit-system';\r\n\r\ndescribe('SecurityAuditSystem', () => {\r\n  let auditSystem: SecurityAuditSystem;\r\n\r\n  beforeAll(() => {\r\n    auditSystem = SecurityAuditSystem.getInstance();\r\n  });\r\n\r\n  describe('单例模式', () => {\r\n    it('应该返回同一个实例', () => {\r\n      const instance1 = SecurityAuditSystem.getInstance();\r\n      const instance2 = SecurityAuditSystem.getInstance();\r\n      expect(instance1).toBe(instance2);\r\n    });\r\n\r\n    it('应该与导出的单例实例相同', () => {\r\n      const instance = SecurityAuditSystem.getInstance();\r\n      expect(instance).toBe(securityAuditSystem);\r\n    });\r\n  });\r\n\r\n  describe('安全事件记录', () => {\r\n    it('应该成功记录安全事件', async () => {\r\n      const eventId = await auditSystem.recordEvent({\r\n        type: SecurityEventType.LOGIN_SUCCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '192.168.1.100',\r\n        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\r\n        details: {\r\n          username: 'testuser',\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n        riskScore: 1,\r\n        userId: 'user123',\r\n      });\r\n\r\n      expect(eventId).toBeDefined();\r\n      expect(typeof eventId).toBe('string');\r\n      expect(eventId).toMatch(/^sec_\\d+_[a-z0-9]+$/);\r\n    });\r\n\r\n    it('应该为高风险事件分配更高的风险评分', async () => {\r\n      const eventId = await auditSystem.recordEvent({\r\n        type: SecurityEventType.MALWARE_DETECTED,\r\n        severity: SecuritySeverity.CRITICAL,\r\n        ip: '10.0.0.1',\r\n        details: {\r\n          fileName: 'suspicious.exe',\r\n          malwareType: 'trojan',\r\n        },\r\n        riskScore: 9,\r\n      });\r\n\r\n      expect(eventId).toBeDefined();\r\n    });\r\n\r\n    it('应该处理本地IP地址', async () => {\r\n      const eventId = await auditSystem.recordEvent({\r\n        type: SecurityEventType.LOGIN_SUCCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '127.0.0.1',\r\n        details: {\r\n          source: 'localhost',\r\n        },\r\n        riskScore: 1,\r\n      });\r\n\r\n      expect(eventId).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('文件安全扫描', () => {\r\n    it('应该扫描安全的文本文件', async () => {\r\n      const testContent = Buffer.from('This is a safe text file content.');\r\n      const result = await auditSystem.scanFile('/test/safe.txt', testContent, {\r\n        originalName: 'safe.txt',\r\n        mimeType: 'text/plain',\r\n        size: testContent.length,\r\n      });\r\n\r\n      expect(result).toMatchObject({\r\n        safe: true,\r\n        threats: [],\r\n        fileType: 'text/plain',\r\n        size: testContent.length,\r\n      });\r\n      expect(result.hash).toBeDefined();\r\n      expect(result.scanTime).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('应该检测不安全的文件类型', async () => {\r\n      const testContent = Buffer.from('fake executable content');\r\n      const result = await auditSystem.scanFile('/test/malware.exe', testContent, {\r\n        originalName: 'malware.exe',\r\n        mimeType: 'application/x-executable',\r\n        size: testContent.length,\r\n      });\r\n\r\n      expect(result.safe).toBe(false);\r\n      expect(result.threats.length).toBeGreaterThan(0);\r\n      expect(result.threats[0]).toContain('不允许的文件类型');\r\n    });\r\n\r\n    it('应该检测过大的文件', async () => {\r\n      const largeContent = Buffer.alloc(100 * 1024 * 1024); // 100MB\r\n      const result = await auditSystem.scanFile('/test/large.txt', largeContent, {\r\n        originalName: 'large.txt',\r\n        mimeType: 'text/plain',\r\n        size: largeContent.length,\r\n      });\r\n\r\n      expect(result.safe).toBe(false);\r\n      expect(result.threats.some(threat => threat.includes('文件大小超限'))).toBe(true);\r\n    });\r\n\r\n    it('应该检测危险的文件名', async () => {\r\n      const testContent = Buffer.from('test content');\r\n      const result = await auditSystem.scanFile('/test/../../../etc/passwd', testContent, {\r\n        originalName: '../../../etc/passwd',\r\n        mimeType: 'text/plain',\r\n        size: testContent.length,\r\n      });\r\n\r\n      expect(result.safe).toBe(false);\r\n      expect(result.threats.some(threat => threat.includes('文件名包含危险字符'))).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('威胁检测', () => {\r\n    it('应该检测正常请求', async () => {\r\n      const request = {\r\n        ip: '192.168.1.100',\r\n        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\r\n        path: '/api/users',\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer valid-token',\r\n        },\r\n      };\r\n\r\n      const result = await auditSystem.detectThreats(request);\r\n\r\n      expect(result.blocked).toBe(false);\r\n      expect(result.riskScore).toBeLessThan(5);\r\n    });\r\n\r\n    it('应该检测SQL注入尝试', async () => {\r\n      const request = {\r\n        ip: '10.0.0.1',\r\n        path: '/api/users',\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: {\r\n          username: \"admin'; DROP TABLE users; --\",\r\n          password: 'password',\r\n        },\r\n      };\r\n\r\n      const result = await auditSystem.detectThreats(request);\r\n\r\n      expect(result.riskScore).toBeGreaterThan(0);\r\n      expect(result.threats.some(threat => threat.includes('SQL注入'))).toBe(true);\r\n    });\r\n\r\n    it('应该检测XSS尝试', async () => {\r\n      const request = {\r\n        ip: '10.0.0.1',\r\n        path: '/api/comments',\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: {\r\n          comment: '<script>alert(\"XSS\")</script>',\r\n        },\r\n      };\r\n\r\n      const result = await auditSystem.detectThreats(request);\r\n\r\n      expect(result.riskScore).toBeGreaterThan(0);\r\n      expect(result.threats.some(threat => threat.includes('XSS'))).toBe(true);\r\n    });\r\n\r\n    it('应该检测可疑的User-Agent', async () => {\r\n      const request = {\r\n        ip: '10.0.0.1',\r\n        userAgent: 'sqlmap/1.0',\r\n        path: '/api/users',\r\n        method: 'GET',\r\n        headers: {},\r\n      };\r\n\r\n      const result = await auditSystem.detectThreats(request);\r\n\r\n      expect(result.riskScore).toBeGreaterThan(0);\r\n      expect(result.threats.some(threat => threat.includes('User-Agent'))).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('用户行为分析', () => {\r\n    it('应该分析用户行为模式', async () => {\r\n      const userId = 'test-user-123';\r\n\r\n      // 记录一些用户事件\r\n      await auditSystem.recordEvent({\r\n        type: SecurityEventType.LOGIN_SUCCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '192.168.1.100',\r\n        userId,\r\n        details: { timestamp: new Date().toISOString() },\r\n        riskScore: 1,\r\n      });\r\n\r\n      await auditSystem.recordEvent({\r\n        type: SecurityEventType.API_ACCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '192.168.1.100',\r\n        userId,\r\n        details: { endpoint: '/api/profile' },\r\n        riskScore: 1,\r\n      });\r\n\r\n      const analysis = await auditSystem.analyzeUserBehavior(userId);\r\n\r\n      expect(analysis).toMatchObject({\r\n        userId,\r\n        riskScore: expect.any(Number),\r\n        anomalies: expect.any(Array),\r\n        patterns: {\r\n          loginTimes: expect.any(Array),\r\n          locations: expect.any(Array),\r\n          devices: expect.any(Array),\r\n          activities: expect.any(Array),\r\n        },\r\n        recommendations: expect.any(Array),\r\n      });\r\n    });\r\n\r\n    it('应该检测异常行为', async () => {\r\n      const userId = 'suspicious-user-456';\r\n\r\n      // 记录多次失败登录\r\n      for (let i = 0; i < 6; i++) {\r\n        await auditSystem.recordEvent({\r\n          type: SecurityEventType.LOGIN_FAILURE,\r\n          severity: SecuritySeverity.MEDIUM,\r\n          ip: '10.0.0.1',\r\n          userId,\r\n          details: { attempt: i + 1 },\r\n          riskScore: 3,\r\n        });\r\n      }\r\n\r\n      const analysis = await auditSystem.analyzeUserBehavior(userId);\r\n\r\n             expect(analysis.riskScore).toBeGreaterThanOrEqual(3);\r\n      expect(analysis.anomalies.some(anomaly => anomaly.includes('频繁登录失败'))).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('安全报告生成', () => {\r\n    it('应该生成安全报告', async () => {\r\n      const timeRange = {\r\n        start: new Date(Date.now() - 24 * 60 * 60 * 1000), // 24小时前\r\n        end: new Date(),\r\n      };\r\n\r\n      // 记录一些测试事件\r\n      await auditSystem.recordEvent({\r\n        type: SecurityEventType.LOGIN_SUCCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '192.168.1.100',\r\n        details: { test: true },\r\n        riskScore: 1,\r\n      });\r\n\r\n      await auditSystem.recordEvent({\r\n        type: SecurityEventType.SUSPICIOUS_ACTIVITY,\r\n        severity: SecuritySeverity.HIGH,\r\n        ip: '10.0.0.1',\r\n        details: { test: true },\r\n        riskScore: 7,\r\n      });\r\n\r\n      const report = await auditSystem.generateSecurityReport(timeRange);\r\n\r\n      expect(report).toMatchObject({\r\n        summary: {\r\n          totalEvents: expect.any(Number),\r\n          highRiskEvents: expect.any(Number),\r\n          blockedAttacks: expect.any(Number),\r\n          resolvedIncidents: expect.any(Number),\r\n        },\r\n        topThreats: expect.any(Array),\r\n        riskTrends: expect.any(Array),\r\n        recommendations: expect.any(Array),\r\n      });\r\n\r\n      expect(report.summary.totalEvents).toBeGreaterThanOrEqual(2);\r\n      expect(report.summary.highRiskEvents).toBeGreaterThanOrEqual(1);\r\n    });\r\n  });\r\n\r\n  describe('便捷方法', () => {\r\n    it('recordSecurityEvent 方法应该正常工作', async () => {\r\n      const eventId = await recordSecurityEvent({\r\n        type: SecurityEventType.API_ACCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '192.168.1.100',\r\n        details: { endpoint: '/api/test' },\r\n        riskScore: 1,\r\n      });\r\n\r\n      expect(eventId).toBeDefined();\r\n      expect(typeof eventId).toBe('string');\r\n    });\r\n\r\n    it('scanFile 方法应该正常工作', async () => {\r\n      const testContent = Buffer.from('test file content');\r\n      const result = await scanFile('/test/file.txt', testContent, {\r\n        originalName: 'file.txt',\r\n        mimeType: 'text/plain',\r\n        size: testContent.length,\r\n      });\r\n\r\n      expect(result.safe).toBe(true);\r\n      expect(result.hash).toBeDefined();\r\n    });\r\n\r\n    it('detectThreats 方法应该正常工作', async () => {\r\n      const request = {\r\n        ip: '192.168.1.100',\r\n        path: '/api/test',\r\n        method: 'GET',\r\n        headers: {},\r\n      };\r\n\r\n      const result = await detectThreats(request);\r\n\r\n      expect(result).toMatchObject({\r\n        blocked: expect.any(Boolean),\r\n        threats: expect.any(Array),\r\n        riskScore: expect.any(Number),\r\n      });\r\n    });\r\n\r\n    it('analyzeUserBehavior 方法应该正常工作', async () => {\r\n      const userId = 'test-user-789';\r\n\r\n      // 先记录一个事件\r\n      await recordSecurityEvent({\r\n        type: SecurityEventType.LOGIN_SUCCESS,\r\n        severity: SecuritySeverity.LOW,\r\n        ip: '192.168.1.100',\r\n        userId,\r\n        details: {},\r\n        riskScore: 1,\r\n      });\r\n\r\n      const analysis = await analyzeUserBehavior(userId);\r\n\r\n      expect(analysis.userId).toBe(userId);\r\n      expect(analysis.riskScore).toBeGreaterThanOrEqual(0);\r\n    });\r\n\r\n    it('generateSecurityReport 方法应该正常工作', async () => {\r\n      const timeRange = {\r\n        start: new Date(Date.now() - 60 * 60 * 1000), // 1小时前\r\n        end: new Date(),\r\n      };\r\n\r\n      const report = await generateSecurityReport(timeRange);\r\n\r\n      expect(report.summary).toBeDefined();\r\n      expect(report.topThreats).toBeInstanceOf(Array);\r\n      expect(report.riskTrends).toBeInstanceOf(Array);\r\n      expect(report.recommendations).toBeInstanceOf(Array);\r\n    });\r\n  });\r\n\r\n  describe('性能测试', () => {\r\n    it('应该在合理时间内处理安全事件', async () => {\r\n      const startTime = Date.now();\r\n\r\n      // 记录多个事件\r\n      const promises = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        promises.push(auditSystem.recordEvent({\r\n          type: SecurityEventType.API_ACCESS,\r\n          severity: SecuritySeverity.LOW,\r\n          ip: `192.168.1.${100 + i}`,\r\n          details: { index: i },\r\n          riskScore: 1,\r\n        }));\r\n      }\r\n\r\n      await Promise.all(promises);\r\n\r\n      const endTime = Date.now();\r\n      const duration = endTime - startTime;\r\n\r\n      // 应该在5秒内完成\r\n      expect(duration).toBeLessThan(5000);\r\n    });\r\n\r\n    it('应该高效处理文件扫描', async () => {\r\n      const startTime = Date.now();\r\n\r\n      const files = Array.from({ length: 5 }, (_, i) => ({\r\n        content: Buffer.from(`Test file content ${i}`),\r\n        name: `test-${i}.txt`,\r\n      }));\r\n\r\n      const promises = files.map(file =>\r\n        auditSystem.scanFile(`/test/${file.name}`, file.content, {\r\n          originalName: file.name,\r\n          mimeType: 'text/plain',\r\n          size: file.content.length,\r\n        })\r\n      );\r\n\r\n      const results = await Promise.all(promises);\r\n\r\n      const endTime = Date.now();\r\n      const duration = endTime - startTime;\r\n\r\n      expect(results.length).toBe(5);\r\n      expect(results.every(result => result.safe)).toBe(true);\r\n      expect(duration).toBeLessThan(10000); // 10秒内完成\r\n    });\r\n  });\r\n}); "],"version":3}