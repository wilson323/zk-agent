{"version":3,"names":["cov_11w4xrpfhu","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","events_1","require","pool_optimizer_1","connection_pool_analyzer_1","dynamic_pool_adjuster_1","query_performance_optimizer_1","intelligent_cache_manager_1","cache_strategy_optimizer_1","performance_monitor_enhancer_1","monitoring_1","PerformanceOptimizationCoordinator","EventEmitter","constructor","isRunning","checkInterval","optimizationInterval","components","Map","componentStatus","strategies","optimizationHistory","activeOptimizations","Set","config","autoOptimization","performanceMonitoring","alerting","logLevel","maxConcurrentOptimizations","initializeComponents","initializeStrategies","process","nextTick","setupEventListeners","set","DatabasePoolOptimizer","ConnectionPoolAnalyzer","DynamicPoolAdjuster","QueryPerformanceOptimizer","IntelligentCacheManager","CacheStrategyOptimizer","PerformanceMonitorEnhancer","component","enabled","running","lastUpdate","Date","health","priority","triggers","performanceThreshold","latencyThreshold","actions","poolOptimization","cooldownPeriod","errorRateThreshold","queryOptimization","cacheOptimization","monitoringEnhancement","performanceMonitor","get","on","anomaly","handleAnomalyDetected","alert","handleCriticalAlert","databaseMonitor","metrics","handlePerformanceDegradation","error","handleComponentError","result","handleOptimizationCompleted","console","log","startAllComponents","setInterval","performHealthCheck","evaluateOptimizationNeeds","emit","stop","clearInterval","stopAllComponents","startPromises","status","push","then","updateComponentStatus","catch","message","Promise","allSettled","stopPromises","getStatus","warnings","length","join","getOverallHealth","currentMetrics","getLatestMetrics","strategyName","strategy","isInCooldown","shouldTriggerStrategy","executeOptimizationStrategy","lastExecuted","timeSinceLastExecution","now","getTime","healthScore","lastHealthScore","queryPerformance","errorRate","avgExecutionTime","resourceUsageThreshold","connectionPool","usage","size","optimizationId","add","startTime","beforeMetrics","extractMetrics","poolOptimizer","dynamicAdjuster","triggerOptimization","triggerAdjustment","queryOptimizer","cacheManager","cacheOptimizer","optimizeCache","triggerAnalysis","resolve","setTimeout","afterMetrics","improvements","calculateImprovements","id","endTime","success","delete","connectionPoolUsage","throughput","memoryUsage","systemResources","cpuUsage","before","after","metric","beforeValue","afterValue","improvement","percentage","isNegativeMetric","includes","Math","abs","description","triggerStrategy","severity","warn","componentName","updates","currentStatus","Object","assign","Array","from","values","enabledComponents","filter","c","score","healthyCount","warningCount","errorCount","overallHealth","map","getComponentStatus","getOptimizationHistory","limit","history","reverse","slice","setComponentEnabled","Error","setStrategyEnabled","updateConfig","newConfig","triggerHealthCheck","triggerOptimizationEvaluation","executeStrategy","exports","performanceOptimizationCoordinator"],"sources":["E:\\zk-agent\\lib\\database\\performance-optimization-coordinator.ts"],"sourcesContent":["/**\r\n * 数据库性能优化协调器\r\n * 统一管理和协调所有数据库性能优化组件\r\n * \r\n * 功能:\r\n * - 组件生命周期管理\r\n * - 优化策略协调\r\n * - 性能监控集成\r\n * - 自动化优化决策\r\n * - 配置统一管理\r\n * \r\n * @author ZK-Agent Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport { EventEmitter } from 'events'\r\nimport { DatabasePoolOptimizer } from './pool-optimizer'\r\nimport { ConnectionPoolAnalyzer } from './connection-pool-analyzer'\r\nimport { DynamicPoolAdjuster } from './dynamic-pool-adjuster'\r\nimport { QueryPerformanceOptimizer } from './query-performance-optimizer'\r\nimport { IntelligentCacheManager } from './intelligent-cache-manager'\r\nimport { CacheStrategyOptimizer } from './cache-strategy-optimizer'\r\nimport { PerformanceMonitorEnhancer } from './performance-monitor-enhancer'\r\nimport { databaseMonitor } from './monitoring'\r\n\r\n/**\r\n * 优化组件状态\r\n */\r\ninterface ComponentStatus {\r\n  /** 组件名称 */\r\n  name: string\r\n  /** 是否启用 */\r\n  enabled: boolean\r\n  /** 是否运行中 */\r\n  running: boolean\r\n  /** 最后更新时间 */\r\n  lastUpdate: Date\r\n  /** 健康状态 */\r\n  health: 'healthy' | 'warning' | 'error'\r\n  /** 状态消息 */\r\n  message?: string\r\n  /** 性能指标 */\r\n  metrics?: Record<string, number>\r\n}\r\n\r\n/**\r\n * 优化策略配置\r\n */\r\ninterface OptimizationStrategy {\r\n  /** 策略名称 */\r\n  name: string\r\n  /** 是否启用 */\r\n  enabled: boolean\r\n  /** 优先级 */\r\n  priority: number\r\n  /** 触发条件 */\r\n  triggers: {\r\n    /** 性能阈值 */\r\n    performanceThreshold?: number\r\n    /** 错误率阈值 */\r\n    errorRateThreshold?: number\r\n    /** 延迟阈值 */\r\n    latencyThreshold?: number\r\n    /** 资源使用率阈值 */\r\n    resourceUsageThreshold?: number\r\n  }\r\n  /** 优化动作 */\r\n  actions: {\r\n    /** 连接池优化 */\r\n    poolOptimization?: boolean\r\n    /** 查询优化 */\r\n    queryOptimization?: boolean\r\n    /** 缓存优化 */\r\n    cacheOptimization?: boolean\r\n    /** 监控增强 */\r\n    monitoringEnhancement?: boolean\r\n  }\r\n  /** 冷却期(ms) */\r\n  cooldownPeriod: number\r\n  /** 最后执行时间 */\r\n  lastExecuted?: Date\r\n}\r\n\r\n/**\r\n * 协调器配置\r\n */\r\ninterface CoordinatorConfig {\r\n  /** 是否启用自动优化 */\r\n  autoOptimization: boolean\r\n  /** 检查间隔(ms) */\r\n  checkInterval: number\r\n  /** 优化间隔(ms) */\r\n  optimizationInterval: number\r\n  /** 是否启用性能监控 */\r\n  performanceMonitoring: boolean\r\n  /** 是否启用告警 */\r\n  alerting: boolean\r\n  /** 日志级别 */\r\n  logLevel: 'debug' | 'info' | 'warn' | 'error'\r\n  /** 最大并发优化数 */\r\n  maxConcurrentOptimizations: number\r\n}\r\n\r\n/**\r\n * 优化结果\r\n */\r\ninterface OptimizationResult {\r\n  /** 优化ID */\r\n  id: string\r\n  /** 策略名称 */\r\n  strategy: string\r\n  /** 开始时间 */\r\n  startTime: Date\r\n  /** 结束时间 */\r\n  endTime: Date\r\n  /** 是否成功 */\r\n  success: boolean\r\n  /** 错误信息 */\r\n  error?: string\r\n  /** 优化前指标 */\r\n  beforeMetrics: Record<string, number>\r\n  /** 优化后指标 */\r\n  afterMetrics: Record<string, number>\r\n  /** 改进情况 */\r\n  improvements: {\r\n    metric: string\r\n    before: number\r\n    after: number\r\n    improvement: number\r\n    percentage: number\r\n  }[]\r\n  /** 执行的动作 */\r\n  actions: string[]\r\n}\r\n\r\n/**\r\n * 性能优化协调器类\r\n */\r\nexport class PerformanceOptimizationCoordinator extends EventEmitter {\r\n  private isRunning: boolean = false\r\n  private checkInterval: NodeJS.Timeout | null = null\r\n  private optimizationInterval: NodeJS.Timeout | null = null\r\n  private components: Map<string, any> = new Map()\r\n  private componentStatus: Map<string, ComponentStatus> = new Map()\r\n  private strategies: Map<string, OptimizationStrategy> = new Map()\r\n  private optimizationHistory: OptimizationResult[] = []\r\n  private activeOptimizations: Set<string> = new Set()\r\n  private config: CoordinatorConfig\r\n\r\n  constructor() {\r\n    super()\r\n    \r\n    this.config = {\r\n      autoOptimization: true,\r\n      checkInterval: 60000,      // 1分钟\r\n      optimizationInterval: 300000, // 5分钟\r\n      performanceMonitoring: true,\r\n      alerting: true,\r\n      logLevel: 'info',\r\n      maxConcurrentOptimizations: 3\r\n    }\r\n    \r\n    this.initializeComponents()\r\n    this.initializeStrategies()\r\n    \r\n    // 延迟设置事件监听器以避免循环依赖\r\n    process.nextTick(() => {\r\n      this.setupEventListeners()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 初始化组件\r\n   */\r\n  private initializeComponents(): void {\r\n    // 注册所有优化组件\r\n    this.components.set('poolOptimizer', new DatabasePoolOptimizer())\r\n    this.components.set('poolAnalyzer', new ConnectionPoolAnalyzer())\r\n    this.components.set('dynamicAdjuster', new DynamicPoolAdjuster())\r\n    this.components.set('queryOptimizer', new QueryPerformanceOptimizer())\r\n    this.components.set('cacheManager', new IntelligentCacheManager())\r\n    this.components.set('cacheOptimizer', new CacheStrategyOptimizer())\r\n    this.components.set('performanceMonitor', new PerformanceMonitorEnhancer())\r\n    \r\n    // 初始化组件状态\r\n    for (const [name, component] of this.components) {\r\n      this.componentStatus.set(name, {\r\n        name,\r\n        enabled: true,\r\n        running: false,\r\n        lastUpdate: new Date(),\r\n        health: 'healthy'\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初始化优化策略\r\n   */\r\n  private initializeStrategies(): void {\r\n    // 连接池优化策略\r\n    this.strategies.set('connectionPoolOptimization', {\r\n      name: 'Connection Pool Optimization',\r\n      enabled: true,\r\n      priority: 1,\r\n      triggers: {\r\n        performanceThreshold: 0.8,\r\n        latencyThreshold: 200\r\n      },\r\n      actions: {\r\n        poolOptimization: true\r\n      },\r\n      cooldownPeriod: 300000 // 5分钟\r\n    })\r\n    \r\n    // 查询性能优化策略\r\n    this.strategies.set('queryPerformanceOptimization', {\r\n      name: 'Query Performance Optimization',\r\n      enabled: true,\r\n      priority: 2,\r\n      triggers: {\r\n        latencyThreshold: 500,\r\n        errorRateThreshold: 0.01\r\n      },\r\n      actions: {\r\n        queryOptimization: true\r\n      },\r\n      cooldownPeriod: 600000 // 10分钟\r\n    })\r\n    \r\n    // 缓存优化策略\r\n    this.strategies.set('cacheOptimization', {\r\n      name: 'Cache Optimization',\r\n      enabled: true,\r\n      priority: 3,\r\n      triggers: {\r\n        performanceThreshold: 0.7\r\n      },\r\n      actions: {\r\n        cacheOptimization: true\r\n      },\r\n      cooldownPeriod: 900000 // 15分钟\r\n    })\r\n    \r\n    // 综合优化策略\r\n    this.strategies.set('comprehensiveOptimization', {\r\n      name: 'Comprehensive Optimization',\r\n      enabled: true,\r\n      priority: 4,\r\n      triggers: {\r\n        performanceThreshold: 0.6,\r\n        errorRateThreshold: 0.05,\r\n        latencyThreshold: 1000\r\n      },\r\n      actions: {\r\n        poolOptimization: true,\r\n        queryOptimization: true,\r\n        cacheOptimization: true,\r\n        monitoringEnhancement: true\r\n      },\r\n      cooldownPeriod: 1800000 // 30分钟\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 设置事件监听器\r\n   */\r\n  private setupEventListeners(): void {\r\n    // 监听性能监控器事件\r\n    const performanceMonitor = this.components.get('performanceMonitor')\r\n    if (performanceMonitor) {\r\n      performanceMonitor.on('anomaly-detected', (anomaly) => {\r\n        this.handleAnomalyDetected(anomaly)\r\n      })\r\n      \r\n      performanceMonitor.on('critical-alert', (alert) => {\r\n        this.handleCriticalAlert(alert)\r\n      })\r\n    }\r\n    \r\n    // 监听数据库监控事件\r\n    databaseMonitor.on('performance-degradation', (metrics) => {\r\n      this.handlePerformanceDegradation(metrics)\r\n    })\r\n    \r\n    // 监听组件事件\r\n    for (const [name, component] of this.components) {\r\n      if (component.on) {\r\n        component.on('error', (error) => {\r\n          this.handleComponentError(name, error)\r\n        })\r\n        \r\n        component.on('optimization-completed', (result) => {\r\n          this.handleOptimizationCompleted(name, result)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 启动协调器\r\n   */\r\n  async start(): Promise<void> {\r\n    if (this.isRunning) {\r\n      console.log('Performance optimization coordinator is already running')\r\n      return\r\n    }\r\n\r\n    console.log('Starting performance optimization coordinator')\r\n    \r\n    this.isRunning = true\r\n    \r\n    // 启动所有组件\r\n    await this.startAllComponents()\r\n    \r\n    // 启动定期检查\r\n    if (this.config.autoOptimization) {\r\n      this.checkInterval = setInterval(() => {\r\n        this.performHealthCheck()\r\n      }, this.config.checkInterval)\r\n      \r\n      this.optimizationInterval = setInterval(() => {\r\n        this.evaluateOptimizationNeeds()\r\n      }, this.config.optimizationInterval)\r\n    }\r\n    \r\n    // 初始健康检查\r\n    await this.performHealthCheck()\r\n    \r\n    this.emit('coordinator-started')\r\n    console.log('Performance optimization coordinator started successfully')\r\n  }\r\n\r\n  /**\r\n   * 停止协调器\r\n   */\r\n  async stop(): Promise<void> {\r\n    if (!this.isRunning) {\r\n      return\r\n    }\r\n\r\n    console.log('Stopping performance optimization coordinator')\r\n    \r\n    this.isRunning = false\r\n    \r\n    // 停止定时器\r\n    if (this.checkInterval) {\r\n      clearInterval(this.checkInterval)\r\n      this.checkInterval = null\r\n    }\r\n    \r\n    if (this.optimizationInterval) {\r\n      clearInterval(this.optimizationInterval)\r\n      this.optimizationInterval = null\r\n    }\r\n    \r\n    // 停止所有组件\r\n    await this.stopAllComponents()\r\n    \r\n    this.emit('coordinator-stopped')\r\n  }\r\n\r\n  /**\r\n   * 启动所有组件\r\n   */\r\n  private async startAllComponents(): Promise<void> {\r\n    const startPromises: Promise<void>[] = []\r\n    \r\n    for (const [name, component] of this.components) {\r\n      const status = this.componentStatus.get(name)\r\n      if (status?.enabled && component.start) {\r\n        startPromises.push(\r\n          component.start().then(() => {\r\n            this.updateComponentStatus(name, {\r\n              running: true,\r\n              health: 'healthy',\r\n              lastUpdate: new Date()\r\n            })\r\n            console.log(`Component ${name} started successfully`)\r\n          }).catch((error) => {\r\n            this.updateComponentStatus(name, {\r\n              running: false,\r\n              health: 'error',\r\n              message: error.message,\r\n              lastUpdate: new Date()\r\n            })\r\n            console.error(`Failed to start component ${name}:`, error)\r\n          })\r\n        )\r\n      }\r\n    }\r\n    \r\n    await Promise.allSettled(startPromises)\r\n  }\r\n\r\n  /**\r\n   * 停止所有组件\r\n   */\r\n  private async stopAllComponents(): Promise<void> {\r\n    const stopPromises: Promise<void>[] = []\r\n    \r\n    for (const [name, component] of this.components) {\r\n      if (component.stop) {\r\n        stopPromises.push(\r\n          component.stop().then(() => {\r\n            this.updateComponentStatus(name, {\r\n              running: false,\r\n              lastUpdate: new Date()\r\n            })\r\n            console.log(`Component ${name} stopped successfully`)\r\n          }).catch((error) => {\r\n            console.error(`Failed to stop component ${name}:`, error)\r\n          })\r\n        )\r\n      }\r\n    }\r\n    \r\n    await Promise.allSettled(stopPromises)\r\n  }\r\n\r\n  /**\r\n   * 执行健康检查\r\n   */\r\n  private async performHealthCheck(): Promise<void> {\r\n    try {\r\n      console.log('Performing health check...')\r\n      \r\n      for (const [name, component] of this.components) {\r\n        const status = this.componentStatus.get(name)\r\n        if (!status?.enabled) continue\r\n        \r\n        try {\r\n          // 检查组件健康状态\r\n          let health: 'healthy' | 'warning' | 'error' = 'healthy'\r\n          let message: string | undefined\r\n          let metrics: Record<string, number> | undefined\r\n          \r\n          if (component.getStatus) {\r\n            const componentStatus = component.getStatus()\r\n            \r\n            // 根据组件状态判断健康度\r\n            if (componentStatus.error) {\r\n              health = 'error'\r\n              message = componentStatus.error\r\n            } else if (componentStatus.warnings && componentStatus.warnings.length > 0) {\r\n              health = 'warning'\r\n              message = componentStatus.warnings.join(', ')\r\n            }\r\n            \r\n            metrics = componentStatus.metrics\r\n          }\r\n          \r\n          this.updateComponentStatus(name, {\r\n            health,\r\n            message,\r\n            metrics,\r\n            lastUpdate: new Date()\r\n          })\r\n          \r\n        } catch (error) {\r\n          this.updateComponentStatus(name, {\r\n            health: 'error',\r\n            message: error.message,\r\n            lastUpdate: new Date()\r\n          })\r\n        }\r\n      }\r\n      \r\n      // 发送健康检查完成事件\r\n      this.emit('health-check-completed', this.getOverallHealth())\r\n      \r\n    } catch (error) {\r\n      console.error('Health check failed:', error)\r\n      this.emit('health-check-error', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 评估优化需求\r\n   */\r\n  private async evaluateOptimizationNeeds(): Promise<void> {\r\n    try {\r\n      console.log('Evaluating optimization needs...')\r\n      \r\n      // 获取当前性能指标\r\n      const performanceMonitor = this.components.get('performanceMonitor')\r\n      if (!performanceMonitor) {\r\n        return\r\n      }\r\n      \r\n      const currentMetrics = performanceMonitor.getLatestMetrics()\r\n      if (!currentMetrics) {\r\n        return\r\n      }\r\n      \r\n      // 评估每个策略\r\n      for (const [strategyName, strategy] of this.strategies) {\r\n        if (!strategy.enabled) continue\r\n        \r\n        // 检查冷却期\r\n        if (this.isInCooldown(strategy)) {\r\n          continue\r\n        }\r\n        \r\n        // 检查是否达到触发条件\r\n        if (this.shouldTriggerStrategy(strategy, currentMetrics)) {\r\n          await this.executeOptimizationStrategy(strategyName, strategy, currentMetrics)\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Optimization evaluation failed:', error)\r\n      this.emit('optimization-evaluation-error', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查策略是否在冷却期\r\n   * \r\n   * @param strategy - 优化策略\r\n   * @returns 是否在冷却期\r\n   */\r\n  private isInCooldown(strategy: OptimizationStrategy): boolean {\r\n    if (!strategy.lastExecuted) {\r\n      return false\r\n    }\r\n    \r\n    const timeSinceLastExecution = Date.now() - strategy.lastExecuted.getTime()\r\n    return timeSinceLastExecution < strategy.cooldownPeriod\r\n  }\r\n\r\n  /**\r\n   * 检查是否应该触发策略\r\n   * \r\n   * @param strategy - 优化策略\r\n   * @param metrics - 当前指标\r\n   * @returns 是否应该触发\r\n   */\r\n  private shouldTriggerStrategy(strategy: OptimizationStrategy, metrics: any): boolean {\r\n    const triggers = strategy.triggers\r\n    \r\n    // 检查性能阈值\r\n    if (triggers.performanceThreshold) {\r\n      const healthScore = this.components.get('performanceMonitor')?.lastHealthScore || 1\r\n      if (healthScore < triggers.performanceThreshold) {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    // 检查错误率阈值\r\n    if (triggers.errorRateThreshold) {\r\n      if (metrics.queryPerformance.errorRate > triggers.errorRateThreshold) {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    // 检查延迟阈值\r\n    if (triggers.latencyThreshold) {\r\n      if (metrics.queryPerformance.avgExecutionTime > triggers.latencyThreshold) {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    // 检查资源使用率阈值\r\n    if (triggers.resourceUsageThreshold) {\r\n      if (metrics.connectionPool.usage > triggers.resourceUsageThreshold) {\r\n        return true\r\n      }\r\n    }\r\n    \r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 执行优化策略\r\n   * \r\n   * @param strategyName - 策略名称\r\n   * @param strategy - 优化策略\r\n   * @param currentMetrics - 当前指标\r\n   */\r\n  private async executeOptimizationStrategy(\r\n    strategyName: string,\r\n    strategy: OptimizationStrategy,\r\n    currentMetrics: any\r\n  ): Promise<void> {\r\n    // 检查并发限制\r\n    if (this.activeOptimizations.size >= this.config.maxConcurrentOptimizations) {\r\n      console.log(`Skipping optimization ${strategyName} due to concurrency limit`)\r\n      return\r\n    }\r\n    \r\n    const optimizationId = `${strategyName}_${Date.now()}`\r\n    this.activeOptimizations.add(optimizationId)\r\n    \r\n    const startTime = new Date()\r\n    const beforeMetrics = this.extractMetrics(currentMetrics)\r\n    const actions: string[] = []\r\n    \r\n    try {\r\n      console.log(`Executing optimization strategy: ${strategy.name}`)\r\n      \r\n      // 执行连接池优化\r\n      if (strategy.actions.poolOptimization) {\r\n        const poolOptimizer = this.components.get('poolOptimizer')\r\n        const dynamicAdjuster = this.components.get('dynamicAdjuster')\r\n        \r\n        if (poolOptimizer && poolOptimizer.triggerOptimization) {\r\n          await poolOptimizer.triggerOptimization()\r\n          actions.push('Pool optimization')\r\n        }\r\n        \r\n        if (dynamicAdjuster && dynamicAdjuster.triggerAdjustment) {\r\n          await dynamicAdjuster.triggerAdjustment()\r\n          actions.push('Dynamic pool adjustment')\r\n        }\r\n      }\r\n      \r\n      // 执行查询优化\r\n      if (strategy.actions.queryOptimization) {\r\n        const queryOptimizer = this.components.get('queryOptimizer')\r\n        \r\n        if (queryOptimizer && queryOptimizer.triggerOptimization) {\r\n          await queryOptimizer.triggerOptimization()\r\n          actions.push('Query optimization')\r\n        }\r\n      }\r\n      \r\n      // 执行缓存优化\r\n      if (strategy.actions.cacheOptimization) {\r\n        const cacheManager = this.components.get('cacheManager')\r\n        const cacheOptimizer = this.components.get('cacheOptimizer')\r\n        \r\n        if (cacheManager && cacheManager.optimizeCache) {\r\n          await cacheManager.optimizeCache()\r\n          actions.push('Cache management optimization')\r\n        }\r\n        \r\n        if (cacheOptimizer && cacheOptimizer.triggerOptimization) {\r\n          await cacheOptimizer.triggerOptimization()\r\n          actions.push('Cache strategy optimization')\r\n        }\r\n      }\r\n      \r\n      // 执行监控增强\r\n      if (strategy.actions.monitoringEnhancement) {\r\n        const performanceMonitor = this.components.get('performanceMonitor')\r\n        \r\n        if (performanceMonitor && performanceMonitor.triggerAnalysis) {\r\n          await performanceMonitor.triggerAnalysis()\r\n          actions.push('Performance monitoring enhancement')\r\n        }\r\n      }\r\n      \r\n      // 等待优化生效\r\n      await new Promise(resolve => setTimeout(resolve, 5000))\r\n      \r\n      // 获取优化后指标\r\n      const afterMetrics = this.extractMetrics(\r\n        this.components.get('performanceMonitor')?.getLatestMetrics() || currentMetrics\r\n      )\r\n      \r\n      // 计算改进情况\r\n      const improvements = this.calculateImprovements(beforeMetrics, afterMetrics)\r\n      \r\n      // 记录优化结果\r\n      const result: OptimizationResult = {\r\n        id: optimizationId,\r\n        strategy: strategyName,\r\n        startTime,\r\n        endTime: new Date(),\r\n        success: true,\r\n        beforeMetrics,\r\n        afterMetrics,\r\n        improvements,\r\n        actions\r\n      }\r\n      \r\n      this.optimizationHistory.push(result)\r\n      strategy.lastExecuted = new Date()\r\n      \r\n      console.log(`Optimization strategy ${strategy.name} completed successfully`)\r\n      this.emit('optimization-completed', result)\r\n      \r\n    } catch (error) {\r\n      const result: OptimizationResult = {\r\n        id: optimizationId,\r\n        strategy: strategyName,\r\n        startTime,\r\n        endTime: new Date(),\r\n        success: false,\r\n        error: error.message,\r\n        beforeMetrics,\r\n        afterMetrics: beforeMetrics,\r\n        improvements: [],\r\n        actions\r\n      }\r\n      \r\n      this.optimizationHistory.push(result)\r\n      \r\n      console.error(`Optimization strategy ${strategy.name} failed:`, error)\r\n      this.emit('optimization-failed', result)\r\n      \r\n    } finally {\r\n      this.activeOptimizations.delete(optimizationId)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 提取关键指标\r\n   * \r\n   * @param metrics - 原始指标\r\n   * @returns 关键指标\r\n   */\r\n  private extractMetrics(metrics: any): Record<string, number> {\r\n    return {\r\n      connectionPoolUsage: metrics.connectionPool?.usage || 0,\r\n      avgExecutionTime: metrics.queryPerformance?.avgExecutionTime || 0,\r\n      errorRate: metrics.queryPerformance?.errorRate || 0,\r\n      throughput: metrics.queryPerformance?.throughput || 0,\r\n      memoryUsage: metrics.systemResources?.memoryUsage || 0,\r\n      cpuUsage: metrics.systemResources?.cpuUsage || 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算改进情况\r\n   * \r\n   * @param before - 优化前指标\r\n   * @param after - 优化后指标\r\n   * @returns 改进情况\r\n   */\r\n  private calculateImprovements(\r\n    before: Record<string, number>,\r\n    after: Record<string, number>\r\n  ): { metric: string; before: number; after: number; improvement: number; percentage: number }[] {\r\n    const improvements: any[] = []\r\n    \r\n    for (const metric in before) {\r\n      const beforeValue = before[metric]\r\n      const afterValue = after[metric]\r\n      \r\n      if (beforeValue > 0) {\r\n        const improvement = beforeValue - afterValue\r\n        const percentage = (improvement / beforeValue) * 100\r\n        \r\n        // 对于某些指标，减少是改进（如错误率、延迟）\r\n        const isNegativeMetric = metric.includes('errorRate') || \r\n                                metric.includes('avgExecutionTime') ||\r\n                                metric.includes('Usage')\r\n        \r\n        if (isNegativeMetric ? improvement > 0 : improvement < 0) {\r\n          improvements.push({\r\n            metric,\r\n            before: beforeValue,\r\n            after: afterValue,\r\n            improvement: Math.abs(improvement),\r\n            percentage: Math.abs(percentage)\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n    return improvements\r\n  }\r\n\r\n  /**\r\n   * 处理异常检测\r\n   * \r\n   * @param anomaly - 异常信息\r\n   */\r\n  private async handleAnomalyDetected(anomaly: any): Promise<void> {\r\n    console.log(`Anomaly detected: ${anomaly.description}`)\r\n    \r\n    // 根据异常类型触发相应的优化策略\r\n    if (anomaly.type === 'CONNECTION_POOL_EXHAUSTION') {\r\n      await this.triggerStrategy('connectionPoolOptimization')\r\n    } else if (anomaly.type === 'HIGH_LATENCY' || anomaly.type === 'SLOW_QUERY') {\r\n      await this.triggerStrategy('queryPerformanceOptimization')\r\n    } else if (anomaly.severity === 'critical') {\r\n      await this.triggerStrategy('comprehensiveOptimization')\r\n    }\r\n    \r\n    this.emit('anomaly-handled', anomaly)\r\n  }\r\n\r\n  /**\r\n   * 处理关键告警\r\n   * \r\n   * @param alert - 告警信息\r\n   */\r\n  private async handleCriticalAlert(alert: any): Promise<void> {\r\n    console.warn(`Critical alert: ${alert.message}`)\r\n    \r\n    // 立即触发综合优化策略\r\n    await this.triggerStrategy('comprehensiveOptimization')\r\n    \r\n    this.emit('critical-alert-handled', alert)\r\n  }\r\n\r\n  /**\r\n   * 处理性能下降\r\n   * \r\n   * @param metrics - 性能指标\r\n   */\r\n  private async handlePerformanceDegradation(metrics: any): Promise<void> {\r\n    console.log('Performance degradation detected')\r\n    \r\n    // 根据性能下降程度选择优化策略\r\n    const healthScore = this.components.get('performanceMonitor')?.lastHealthScore || 1\r\n    \r\n    if (healthScore < 0.5) {\r\n      await this.triggerStrategy('comprehensiveOptimization')\r\n    } else if (healthScore < 0.7) {\r\n      await this.triggerStrategy('connectionPoolOptimization')\r\n      await this.triggerStrategy('queryPerformanceOptimization')\r\n    }\r\n    \r\n    this.emit('performance-degradation-handled', metrics)\r\n  }\r\n\r\n  /**\r\n   * 处理组件错误\r\n   * \r\n   * @param componentName - 组件名称\r\n   * @param error - 错误信息\r\n   */\r\n  private handleComponentError(componentName: string, error: any): void {\r\n    console.error(`Component ${componentName} error:`, error)\r\n    \r\n    this.updateComponentStatus(componentName, {\r\n      health: 'error',\r\n      message: error.message,\r\n      lastUpdate: new Date()\r\n    })\r\n    \r\n    this.emit('component-error', { componentName, error })\r\n  }\r\n\r\n  /**\r\n   * 处理优化完成\r\n   * \r\n   * @param componentName - 组件名称\r\n   * @param result - 优化结果\r\n   */\r\n  private handleOptimizationCompleted(componentName: string, result: any): void {\r\n    console.log(`Component ${componentName} optimization completed`)\r\n    \r\n    this.updateComponentStatus(componentName, {\r\n      health: 'healthy',\r\n      lastUpdate: new Date(),\r\n      metrics: result.metrics\r\n    })\r\n    \r\n    this.emit('component-optimization-completed', { componentName, result })\r\n  }\r\n\r\n  /**\r\n   * 触发指定策略\r\n   * \r\n   * @param strategyName - 策略名称\r\n   */\r\n  private async triggerStrategy(strategyName: string): Promise<void> {\r\n    const strategy = this.strategies.get(strategyName)\r\n    if (!strategy || !strategy.enabled) {\r\n      return\r\n    }\r\n    \r\n    // 检查冷却期\r\n    if (this.isInCooldown(strategy)) {\r\n      console.log(`Strategy ${strategyName} is in cooldown period`)\r\n      return\r\n    }\r\n    \r\n    const performanceMonitor = this.components.get('performanceMonitor')\r\n    const currentMetrics = performanceMonitor?.getLatestMetrics()\r\n    \r\n    if (currentMetrics) {\r\n      await this.executeOptimizationStrategy(strategyName, strategy, currentMetrics)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新组件状态\r\n   * \r\n   * @param componentName - 组件名称\r\n   * @param updates - 状态更新\r\n   */\r\n  private updateComponentStatus(componentName: string, updates: Partial<ComponentStatus>): void {\r\n    const currentStatus = this.componentStatus.get(componentName)\r\n    if (currentStatus) {\r\n      Object.assign(currentStatus, updates)\r\n      this.componentStatus.set(componentName, currentStatus)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取整体健康状态\r\n   * \r\n   * @returns 整体健康状态\r\n   */\r\n  private getOverallHealth(): {\r\n    status: 'healthy' | 'warning' | 'error'\r\n    score: number\r\n    components: ComponentStatus[]\r\n  } {\r\n    const components = Array.from(this.componentStatus.values())\r\n    const enabledComponents = components.filter(c => c.enabled)\r\n    \r\n    if (enabledComponents.length === 0) {\r\n      return { status: 'error', score: 0, components }\r\n    }\r\n    \r\n    const healthyCount = enabledComponents.filter(c => c.health === 'healthy').length\r\n    const warningCount = enabledComponents.filter(c => c.health === 'warning').length\r\n    const errorCount = enabledComponents.filter(c => c.health === 'error').length\r\n    \r\n    const score = (healthyCount + warningCount * 0.5) / enabledComponents.length\r\n    \r\n    let status: 'healthy' | 'warning' | 'error'\r\n    if (errorCount > 0) {\r\n      status = 'error'\r\n    } else if (warningCount > 0) {\r\n      status = 'warning'\r\n    } else {\r\n      status = 'healthy'\r\n    }\r\n    \r\n    return { status, score, components }\r\n  }\r\n\r\n  /**\r\n   * 获取协调器状态\r\n   * \r\n   * @returns 协调器状态\r\n   */\r\n  getStatus(): {\r\n    isRunning: boolean\r\n    config: CoordinatorConfig\r\n    overallHealth: ReturnType<typeof this.getOverallHealth>\r\n    activeOptimizations: number\r\n    optimizationHistory: number\r\n    strategies: { name: string; enabled: boolean; lastExecuted?: Date }[]\r\n  } {\r\n    return {\r\n      isRunning: this.isRunning,\r\n      config: { ...this.config },\r\n      overallHealth: this.getOverallHealth(),\r\n      activeOptimizations: this.activeOptimizations.size,\r\n      optimizationHistory: this.optimizationHistory.length,\r\n      strategies: Array.from(this.strategies.values()).map(s => ({\r\n        name: s.name,\r\n        enabled: s.enabled,\r\n        lastExecuted: s.lastExecuted\r\n      }))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取组件状态\r\n   * \r\n   * @returns 组件状态列表\r\n   */\r\n  getComponentStatus(): ComponentStatus[] {\r\n    return Array.from(this.componentStatus.values())\r\n  }\r\n\r\n  /**\r\n   * 获取优化历史\r\n   * \r\n   * @param limit - 限制数量\r\n   * @returns 优化历史\r\n   */\r\n  getOptimizationHistory(limit?: number): OptimizationResult[] {\r\n    const history = [...this.optimizationHistory].reverse()\r\n    return limit ? history.slice(0, limit) : history\r\n  }\r\n\r\n  /**\r\n   * 启用/禁用组件\r\n   * \r\n   * @param componentName - 组件名称\r\n   * @param enabled - 是否启用\r\n   */\r\n  async setComponentEnabled(componentName: string, enabled: boolean): Promise<void> {\r\n    const status = this.componentStatus.get(componentName)\r\n    if (!status) {\r\n      throw new Error(`Component ${componentName} not found`)\r\n    }\r\n    \r\n    status.enabled = enabled\r\n    \r\n    if (this.isRunning) {\r\n      const component = this.components.get(componentName)\r\n      if (component) {\r\n        if (enabled && !status.running && component.start) {\r\n          await component.start()\r\n          status.running = true\r\n        } else if (!enabled && status.running && component.stop) {\r\n          await component.stop()\r\n          status.running = false\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log(`Component ${componentName} ${enabled ? 'enabled' : 'disabled'}`)\r\n    this.emit('component-status-changed', { componentName, enabled })\r\n  }\r\n\r\n  /**\r\n   * 启用/禁用策略\r\n   * \r\n   * @param strategyName - 策略名称\r\n   * @param enabled - 是否启用\r\n   */\r\n  setStrategyEnabled(strategyName: string, enabled: boolean): void {\r\n    const strategy = this.strategies.get(strategyName)\r\n    if (!strategy) {\r\n      throw new Error(`Strategy ${strategyName} not found`)\r\n    }\r\n    \r\n    strategy.enabled = enabled\r\n    \r\n    console.log(`Strategy ${strategyName} ${enabled ? 'enabled' : 'disabled'}`)\r\n    this.emit('strategy-status-changed', { strategyName, enabled })\r\n  }\r\n\r\n  /**\r\n   * 更新配置\r\n   * \r\n   * @param newConfig - 新配置\r\n   */\r\n  updateConfig(newConfig: Partial<CoordinatorConfig>): void {\r\n    Object.assign(this.config, newConfig)\r\n    \r\n    // 重启定时器\r\n    if (this.isRunning) {\r\n      this.stop().then(() => this.start())\r\n    }\r\n    \r\n    console.log('Coordinator configuration updated')\r\n    this.emit('config-updated', this.config)\r\n  }\r\n\r\n  /**\r\n   * 手动触发健康检查\r\n   */\r\n  async triggerHealthCheck(): Promise<void> {\r\n    await this.performHealthCheck()\r\n  }\r\n\r\n  /**\r\n   * 手动触发优化评估\r\n   */\r\n  async triggerOptimizationEvaluation(): Promise<void> {\r\n    await this.evaluateOptimizationNeeds()\r\n  }\r\n\r\n  /**\r\n   * 手动执行指定策略\r\n   * \r\n   * @param strategyName - 策略名称\r\n   */\r\n  async executeStrategy(strategyName: string): Promise<void> {\r\n    await this.triggerStrategy(strategyName)\r\n  }\r\n}\r\n\r\n// 创建全局实例\r\nexport const performanceOptimizationCoordinator = new PerformanceOptimizationCoordinator()\r\n\r\n// 导出类型\r\nexport type {\r\n  ComponentStatus,\r\n  OptimizationStrategy,\r\n  CoordinatorConfig,\r\n  OptimizationResult\r\n}\r\n"],"mappings":"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","ignoreList":[]}