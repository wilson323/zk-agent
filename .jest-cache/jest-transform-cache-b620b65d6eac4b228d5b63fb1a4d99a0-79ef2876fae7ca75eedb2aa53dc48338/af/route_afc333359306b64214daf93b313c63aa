27414a4e793019ba1f3854312c35dc18
"use strict";

/**
 * @file likes\batch-status\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_14t5070kpm() {
  var path = "E:\\zk-agent\\app\\api\\likes\\batch-status\\route.ts";
  var hash = "b72711e039b322c12853231c59c1fb0cdd83ef6c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\likes\\batch-status\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "9": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 85
        }
      },
      "10": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "11": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 24,
          column: 37
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "15": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "16": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "17": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 33,
          column: 14
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 93
          },
          end: {
            line: 13,
            column: 94
          }
        },
        loc: {
          start: {
            line: 13,
            column: 128
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 33
          }
        }, {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 16,
            column: 55
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 36
          }
        }, {
          start: {
            line: 20,
            column: 40
          },
          end: {
            line: 20,
            column: 51
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 21
          }
        }, {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 28
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\likes\\batch-status\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,0DAA4D;AAC5D,uDAA4D;AAC5D,kEAA8D;AAEjD,QAAA,IAAI,GAAG,IAAA,0BAAc,EAChC,4BAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE,EAAE;IAChC,IAAI,CAAC;QACH,MAAM,EAAE,KAAK,EAAE,GAAG,cAAc,CAAC;QAEjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAChD,OAAO,+BAAkB,CAAC,KAAK,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;QAC9D,CAAC;QAED,SAAS;QACT,MAAM,MAAM,GAAG,KAAK,EAAE,MAAM,IAAI,WAAW,CAAC;QAE5C,MAAM,MAAM,GAAwD,EAAE,CAAC;QAEvE,eAAe;QACf,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;gBACjB,SAAS;YACX,CAAC;YAED,MAAM,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,EAAE,CAAC;YAE5B,UAAU;YACV,MAAM,CAAC,GAAG,CAAC,GAAG;gBACZ,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,WAAW;gBACzC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,WAAW;aACnD,CAAC;QACJ,CAAC;QAED,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;IAChE,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\likes\\batch-status\\route.ts"],
      sourcesContent: ["/**\n * @file likes\\batch-status\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async ({ validatedBody, user }) => {\n    try {\n      const { items } = _validatedBody;\n      \n      if (!Array.isArray(items) || items.length === 0) {\n        return ApiResponseWrapper.error('Invalid items array', 400);\n      }\n      \n      // \u83B7\u53D6\u5F53\u524D\u7528\u6237\n      const userId = _user?.userId || \"anonymous\";\n      \n      const result: Record<string, { isLiked: boolean; count: number }> = {};\n      \n      // \u6A21\u62DF\u6279\u91CF\u67E5\u8BE2\u7528\u6237\u70B9\u8D5E\u72B6\u6001\n      for (const item of items) {\n        const { type, id } = item;\n        if (!type || !id) {\n          continue;\n        }\n        \n        const key = `${type}:${id}`;\n        \n        // \u6A21\u62DF\u6570\u636E\u5E93\u67E5\u8BE2\n        result[key] = {\n          isLiked: Math.random() > 0.5, // \u968F\u673A\u6A21\u62DF\u70B9\u8D5E\u72B6\u6001\n          count: Math.floor(Math.random() * 100) // \u968F\u673A\u6A21\u62DF\u70B9\u8D5E\u6570\u91CF\n        };\n      }\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b72711e039b322c12853231c59c1fb0cdd83ef6c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14t5070kpm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14t5070kpm();
cov_14t5070kpm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14t5070kpm().s[1]++;
exports.POST = void 0;
const api_route_1 =
/* istanbul ignore next */
(cov_14t5070kpm().s[2]++, require("@/lib/middleware/api-route"));
const api_helper_1 =
/* istanbul ignore next */
(cov_14t5070kpm().s[3]++, require("@/lib/utils/api-helper"));
const route_configs_1 =
/* istanbul ignore next */
(cov_14t5070kpm().s[4]++, require("@/lib/middleware/route-configs"));
/* istanbul ignore next */
cov_14t5070kpm().s[5]++;
exports.POST = (0, api_route_1.createApiRoute)(route_configs_1.RouteConfigs.protectedPost(), async ({
  validatedBody,
  user
}) => {
  /* istanbul ignore next */
  cov_14t5070kpm().f[0]++;
  cov_14t5070kpm().s[6]++;
  try {
    const {
      items
    } =
    /* istanbul ignore next */
    (cov_14t5070kpm().s[7]++, _validatedBody);
    /* istanbul ignore next */
    cov_14t5070kpm().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_14t5070kpm().b[1][0]++, !Array.isArray(items)) ||
    /* istanbul ignore next */
    (cov_14t5070kpm().b[1][1]++, items.length === 0)) {
      /* istanbul ignore next */
      cov_14t5070kpm().b[0][0]++;
      cov_14t5070kpm().s[9]++;
      return api_helper_1.ApiResponseWrapper.error('Invalid items array', 400);
    } else
    /* istanbul ignore next */
    {
      cov_14t5070kpm().b[0][1]++;
    }
    // 获取当前用户
    const userId =
    /* istanbul ignore next */
    (cov_14t5070kpm().s[10]++,
    /* istanbul ignore next */
    (cov_14t5070kpm().b[2][0]++, _user?.userId) ||
    /* istanbul ignore next */
    (cov_14t5070kpm().b[2][1]++, "anonymous"));
    const result =
    /* istanbul ignore next */
    (cov_14t5070kpm().s[11]++, {});
    // 模拟批量查询用户点赞状态
    /* istanbul ignore next */
    cov_14t5070kpm().s[12]++;
    for (const item of items) {
      const {
        type,
        id
      } =
      /* istanbul ignore next */
      (cov_14t5070kpm().s[13]++, item);
      /* istanbul ignore next */
      cov_14t5070kpm().s[14]++;
      if (
      /* istanbul ignore next */
      (cov_14t5070kpm().b[4][0]++, !type) ||
      /* istanbul ignore next */
      (cov_14t5070kpm().b[4][1]++, !id)) {
        /* istanbul ignore next */
        cov_14t5070kpm().b[3][0]++;
        cov_14t5070kpm().s[15]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_14t5070kpm().b[3][1]++;
      }
      const key =
      /* istanbul ignore next */
      (cov_14t5070kpm().s[16]++, `${type}:${id}`);
      // 模拟数据库查询
      /* istanbul ignore next */
      cov_14t5070kpm().s[17]++;
      result[key] = {
        isLiked: Math.random() > 0.5,
        // 随机模拟点赞状态
        count: Math.floor(Math.random() * 100) // 随机模拟点赞数量
      };
    }
    /* istanbul ignore next */
    cov_14t5070kpm().s[18]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_14t5070kpm().s[19]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTR0NTA3MGtwbSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImFwaV9yb3V0ZV8xIiwicmVxdWlyZSIsImFwaV9oZWxwZXJfMSIsInJvdXRlX2NvbmZpZ3NfMSIsImV4cG9ydHMiLCJQT1NUIiwiY3JlYXRlQXBpUm91dGUiLCJSb3V0ZUNvbmZpZ3MiLCJwcm90ZWN0ZWRQb3N0IiwidmFsaWRhdGVkQm9keSIsInVzZXIiLCJpdGVtcyIsIl92YWxpZGF0ZWRCb2R5IiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwiQXBpUmVzcG9uc2VXcmFwcGVyIiwiZXJyb3IiLCJ1c2VySWQiLCJfdXNlciIsInJlc3VsdCIsIml0ZW0iLCJpZCIsImtleSIsImlzTGlrZWQiLCJNYXRoIiwicmFuZG9tIiwiY291bnQiLCJmbG9vciIsInN1Y2Nlc3MiLCJkYXRhIl0sInNvdXJjZXMiOlsiRTpcXHprLWFnZW50XFxhcHBcXGFwaVxcbGlrZXNcXGJhdGNoLXN0YXR1c1xccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBsaWtlc1xcYmF0Y2gtc3RhdHVzXFxyb3V0ZS50c1xuICogQGRlc2NyaXB0aW9uIE1pZ3JhdGVkIEFQSSByb3V0ZSB3aXRoIGdsb2JhbCBlcnJvciBoYW5kbGluZ1xuICogQGF1dGhvciBaSy1BZ2VudCBUZWFtXG4gKiBAZGF0ZSAyMDI1LTA2LTI1XG4gKi9cblxuaW1wb3J0IHsgY3JlYXRlQXBpUm91dGUgfSBmcm9tICdAL2xpYi9taWRkbGV3YXJlL2FwaS1yb3V0ZSc7XG5pbXBvcnQgeyBBcGlSZXNwb25zZVdyYXBwZXIgfSBmcm9tICdAL2xpYi91dGlscy9hcGktaGVscGVyJztcbmltcG9ydCB7IFJvdXRlQ29uZmlncyB9IGZyb20gJ0AvbGliL21pZGRsZXdhcmUvcm91dGUtY29uZmlncyc7XG5cbmV4cG9ydCBjb25zdCBQT1NUID0gY3JlYXRlQXBpUm91dGUoXG4gIFJvdXRlQ29uZmlncy5wcm90ZWN0ZWRQb3N0KCksXG4gIGFzeW5jICh7IHZhbGlkYXRlZEJvZHksIHVzZXIgfSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGl0ZW1zIH0gPSBfdmFsaWRhdGVkQm9keTtcbiAgICAgIFxuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGl0ZW1zKSB8fCBpdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5lcnJvcignSW52YWxpZCBpdGVtcyBhcnJheScsIDQwMCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIOiOt+WPluW9k+WJjeeUqOaIt1xuICAgICAgY29uc3QgdXNlcklkID0gX3VzZXI/LnVzZXJJZCB8fCBcImFub255bW91c1wiO1xuICAgICAgXG4gICAgICBjb25zdCByZXN1bHQ6IFJlY29yZDxzdHJpbmcsIHsgaXNMaWtlZDogYm9vbGVhbjsgY291bnQ6IG51bWJlciB9PiA9IHt9O1xuICAgICAgXG4gICAgICAvLyDmqKHmi5/mibnph4/mn6Xor6LnlKjmiLfngrnotZ7nirbmgIFcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykge1xuICAgICAgICBjb25zdCB7IHR5cGUsIGlkIH0gPSBpdGVtO1xuICAgICAgICBpZiAoIXR5cGUgfHwgIWlkKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGtleSA9IGAke3R5cGV9OiR7aWR9YDtcbiAgICAgICAgXG4gICAgICAgIC8vIOaooeaLn+aVsOaNruW6k+afpeivolxuICAgICAgICByZXN1bHRba2V5XSA9IHtcbiAgICAgICAgICBpc0xpa2VkOiBNYXRoLnJhbmRvbSgpID4gMC41LCAvLyDpmo/mnLrmqKHmi5/ngrnotZ7nirbmgIFcbiAgICAgICAgICBjb3VudDogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwKSAvLyDpmo/mnLrmqKHmi5/ngrnotZ7mlbDph49cbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5zdWNjZXNzKHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgZGF0YTogcmVzdWx0LFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBBcGlSZXNwb25zZVdyYXBwZXIuZXJyb3IoJ0ludGVybmFsIHNlcnZlciBlcnJvcicsIDUwMCk7XG4gICAgfVxuICB9XG4pO1xuXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsY0FBQTtNQUFBQyxJQUFBO01BQUFDLFFBQUE7TUFBQUMsS0FBQTtNQUFBQyxPQUFBO01BQUFDLGNBQUE7TUFBQUMsT0FBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQTVCLElBQUE7RUFBQTtFQUFBLElBQUE2QixRQUFBLEdBQUE1QixNQUFBLENB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