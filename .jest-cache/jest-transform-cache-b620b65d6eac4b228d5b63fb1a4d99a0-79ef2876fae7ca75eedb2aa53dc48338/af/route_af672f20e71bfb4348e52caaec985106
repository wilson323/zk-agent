4e97251608b3843361b9c98ec2785991
"use strict";

/**
 * @file auth\refresh\route.ts
 * @description Token refresh API route
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_27z27hid64() {
  var path = "E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts";
  var hash = "c4c4aa7ce5c496c81065e77820dc9000ec318253";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "6": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "7": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "9": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "11": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 118
        }
      },
      "12": {
        start: {
          line: 31,
          column: 31
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "13": {
        start: {
          line: 32,
          column: 32
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "14": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 63
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 129
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 3
          },
          end: {
            line: 23,
            column: 4
          }
        },
        loc: {
          start: {
            line: 23,
            column: 78
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 25
          }
        }, {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 53
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AACzC,6BAAwB;AAExB,MAAM,aAAa,GAAG,OAAC,CAAC,MAAM,CAAC;IAC7B,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;CAC5C,CAAC,CAAC;AAEU,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC;IACE,MAAM,EAAE,MAAM;IACd,WAAW,EAAE,KAAK;IAClB,SAAS,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,UAAU;IACzD,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;IACnC,OAAO,EAAE,KAAK;CACf,EACD,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,EAAE,YAAY,EAAE,GAAG,aAAa,CAAC;QAEvC,WAAW;QACX,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YAC9C,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,oBAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACxF,CAAC;QAED,aAAa;QACb,MAAM,cAAc,GAAG,oBAAoB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;QACxD,MAAM,eAAe,GAAG,qBAAqB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;QAE1D,MAAM,MAAM,GAAG;YACb,WAAW,EAAE,cAAc;YAC3B,YAAY,EAAE,eAAe;YAC7B,SAAS,EAAE,IAAI,EAAE,MAAM;YACvB,SAAS,EAAE,QAAQ;SACpB,CAAC;QAEF,OAAO,+BAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC7C,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,qBAAqB,EAAE,uBAAuB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACvG,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\refresh\\route.ts\n * @description Token refresh API route\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { z } from 'zod';\n\nconst refreshSchema = z.object({\n  refreshToken: z.string().min(1, \"\u5237\u65B0\u4EE4\u724C\u4E0D\u80FD\u4E3A\u7A7A\")\n});\n\nexport const POST = createApiRoute(\n  {\n    method: 'POST',\n    requireAuth: false,\n    rateLimit: { requests: 100, windowMs: 60000 }, // \u6BCF\u5206\u949F100\u6B21\n    validation: { body: refreshSchema },\n    timeout: 60000\n  },\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { refreshToken } = validatedBody;\n      \n      // \u6A21\u62DF\u5237\u65B0\u4EE4\u724C\u9A8C\u8BC1\n      if (!refreshToken || refreshToken.length < 10) {\n        return ApiResponseWrapper.error(ErrorCode.AUTHENTICATION_ERROR, '\u65E0\u6548\u7684\u5237\u65B0\u4EE4\u724C', null, 401);\n      }\n      \n      // \u6A21\u62DF\u751F\u6210\u65B0\u7684\u8BBF\u95EE\u4EE4\u724C\n      const newAccessToken = `new_access_token_${Date.now()}`;\n      const newRefreshToken = `new_refresh_token_${Date.now()}`;\n      \n      const result = {\n        accessToken: newAccessToken,\n        refreshToken: newRefreshToken,\n        expiresIn: 3600, // 1\u5C0F\u65F6\n        tokenType: 'Bearer'\n      };\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Token refresh error:', error);\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null, 500);\n    }\n  }\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c4c4aa7ce5c496c81065e77820dc9000ec318253"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27z27hid64 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27z27hid64();
cov_27z27hid64().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27z27hid64().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[4]++, require("@/types/core"));
const zod_1 =
/* istanbul ignore next */
(cov_27z27hid64().s[5]++, require("zod"));
const refreshSchema =
/* istanbul ignore next */
(cov_27z27hid64().s[6]++, zod_1.z.object({
  refreshToken: zod_1.z.string().min(1, "刷新令牌不能为空")
}));
/* istanbul ignore next */
cov_27z27hid64().s[7]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)({
  method: 'POST',
  requireAuth: false,
  rateLimit: {
    requests: 100,
    windowMs: 60000
  },
  // 每分钟100次
  validation: {
    body: refreshSchema
  },
  timeout: 60000
}, async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_27z27hid64().f[0]++;
  cov_27z27hid64().s[8]++;
  try {
    const {
      refreshToken
    } =
    /* istanbul ignore next */
    (cov_27z27hid64().s[9]++, validatedBody);
    // 模拟刷新令牌验证
    /* istanbul ignore next */
    cov_27z27hid64().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_27z27hid64().b[1][0]++, !refreshToken) ||
    /* istanbul ignore next */
    (cov_27z27hid64().b[1][1]++, refreshToken.length < 10)) {
      /* istanbul ignore next */
      cov_27z27hid64().b[0][0]++;
      cov_27z27hid64().s[11]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.AUTHENTICATION_ERROR, '无效的刷新令牌', null, 401);
    } else
    /* istanbul ignore next */
    {
      cov_27z27hid64().b[0][1]++;
    }
    // 模拟生成新的访问令牌
    const newAccessToken =
    /* istanbul ignore next */
    (cov_27z27hid64().s[12]++, `new_access_token_${Date.now()}`);
    const newRefreshToken =
    /* istanbul ignore next */
    (cov_27z27hid64().s[13]++, `new_refresh_token_${Date.now()}`);
    const result =
    /* istanbul ignore next */
    (cov_27z27hid64().s[14]++, {
      accessToken: newAccessToken,
      refreshToken: newRefreshToken,
      expiresIn: 3600,
      // 1小时
      tokenType: 'Bearer'
    });
    /* istanbul ignore next */
    cov_27z27hid64().s[15]++;
    return api_helper_1.ApiResponseWrapper.success(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_27z27hid64().s[16]++;
    console.error('Token refresh error:', error);
    /* istanbul ignore next */
    cov_27z27hid64().s[17]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null, 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,