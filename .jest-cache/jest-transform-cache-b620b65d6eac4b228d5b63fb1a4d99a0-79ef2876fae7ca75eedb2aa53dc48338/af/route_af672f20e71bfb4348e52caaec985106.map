{"version":3,"names":["cov_27z27hid64","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","zod_1","refreshSchema","z","object","refreshToken","string","min","exports","POST","createApiRoute","method","requireAuth","rateLimit","requests","windowMs","validation","body","timeout","req","params","validatedBody","validatedQuery","user","requestId","length","ApiResponseWrapper","error","ErrorCode","AUTHENTICATION_ERROR","newAccessToken","Date","now","newRefreshToken","result","accessToken","expiresIn","tokenType","success","console","INTERNAL_SERVER_ERROR"],"sources":["E:\\zk-agent\\app\\api\\auth\\refresh\\route.ts"],"sourcesContent":["/**\n * @file auth\\refresh\\route.ts\n * @description Token refresh API route\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { z } from 'zod';\n\nconst refreshSchema = z.object({\n  refreshToken: z.string().min(1, \"刷新令牌不能为空\")\n});\n\nexport const POST = createApiRoute(\n  {\n    method: 'POST',\n    requireAuth: false,\n    rateLimit: { requests: 100, windowMs: 60000 }, // 每分钟100次\n    validation: { body: refreshSchema },\n    timeout: 60000\n  },\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { refreshToken } = validatedBody;\n      \n      // 模拟刷新令牌验证\n      if (!refreshToken || refreshToken.length < 10) {\n        return ApiResponseWrapper.error(ErrorCode.AUTHENTICATION_ERROR, '无效的刷新令牌', null, 401);\n      }\n      \n      // 模拟生成新的访问令牌\n      const newAccessToken = `new_access_token_${Date.now()}`;\n      const newRefreshToken = `new_refresh_token_${Date.now()}`;\n      \n      const result = {\n        accessToken: newAccessToken,\n        refreshToken: newRefreshToken,\n        expiresIn: 3600, // 1小时\n        tokenType: 'Bearer'\n      };\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Token refresh error:', error);\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null, 500);\n    }\n  }\n);\n"],"mappings":"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","ignoreList":[]}