{"version":3,"names":["cov_14t5070kpm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_1","require","api_helper_1","route_configs_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","validatedBody","user","items","_validatedBody","Array","isArray","length","ApiResponseWrapper","error","userId","_user","result","item","id","key","isLiked","Math","random","count","floor","success","data"],"sources":["E:\\zk-agent\\app\\api\\likes\\batch-status\\route.ts"],"sourcesContent":["/**\n * @file likes\\batch-status\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async ({ validatedBody, user }) => {\n    try {\n      const { items } = _validatedBody;\n      \n      if (!Array.isArray(items) || items.length === 0) {\n        return ApiResponseWrapper.error('Invalid items array', 400);\n      }\n      \n      // 获取当前用户\n      const userId = _user?.userId || \"anonymous\";\n      \n      const result: Record<string, { isLiked: boolean; count: number }> = {};\n      \n      // 模拟批量查询用户点赞状态\n      for (const item of items) {\n        const { type, id } = item;\n        if (!type || !id) {\n          continue;\n        }\n        \n        const key = `${type}:${id}`;\n        \n        // 模拟数据库查询\n        result[key] = {\n          isLiked: Math.random() > 0.5, // 随机模拟点赞状态\n          count: Math.floor(Math.random() * 100) // 随机模拟点赞数量\n        };\n      }\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500);\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}