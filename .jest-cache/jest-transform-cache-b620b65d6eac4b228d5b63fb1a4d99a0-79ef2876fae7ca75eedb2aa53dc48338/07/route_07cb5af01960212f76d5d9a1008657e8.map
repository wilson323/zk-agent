{"version":3,"names":["cov_6h46r9urt","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","exports","GET","createApiRoute","RouteConfigs","publicGet","req","params","validatedBody","validatedQuery","user","requestId","startTime","Date","now","apiUrl","process","env","FASTGPT_API_URL","apiKey","FASTGPT_API_KEY","ApiResponseWrapper","error","response","fetch","method","headers","signal","AbortSignal","timeout","latency","ok","success","status","timestamp","toISOString","statusText","console"],"sources":["E:\\zk-agent\\app\\api\\fastgpt\\health\\route.ts"],"sourcesContent":["/**\n * @file fastgpt\\health\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const startTime = Date.now();\n      \n      // 检查FastGPT API连接\n      const apiUrl = process.env.FASTGPT_API_URL || 'https://zktecoaihub.com';\n      const apiKey = process.env.FASTGPT_API_KEY;\n  \n      if (!apiKey) {\n        return ApiResponseWrapper.error(\n          'API key not configured',\n          500\n        );\n      }\n  \n      // 简单的健康检查请求\n      const response = await fetch(`${apiUrl}/api/v1/models`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n        },\n        signal: AbortSignal.timeout(5000), // 5秒超时\n      });\n  \n      const latency = Date.now() - startTime;\n  \n      if (response.ok) {\n        return ApiResponseWrapper.success({\n          status: 'healthy',\n          latency,\n          timestamp: new Date().toISOString(),\n          apiUrl,\n          version: '1.0.0',\n        });\n      } else {\n        return ApiResponseWrapper.error(\n          `API returned ${response.status}: ${response.statusText}`,\n          503,\n          {\n            status: 'unhealthy',\n            latency,\n            timestamp: new Date().toISOString(),\n          }\n        );\n      }\n    } catch (error) {\n      console.error('FastGPT health check error:', error);\n      return ApiResponseWrapper.error(\n        'Health check failed',\n        500,\n        {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n        }\n      );\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}