{"version":3,"names":["getCurrentConfig","validateDatabaseConfig","require","describe","test","process","env","NODE_ENV","config","getDatabaseConfig","expect","toBeDefined","database","toBe","port","password","connectionString","toMatch"],"sources":["database.test.js"],"sourcesContent":["/**\n * @file database.test.js\n * @description 数据库配置测试\n * @author ZK-Agent Team\n * @date 2025-05-25\n */\n\nconst { getCurrentConfig, validateDatabaseConfig } = require('../../lib/database/database.config');\n\ndescribe('数据库配置测试', () => {\n  test('应该能够获取测试数据库配置', () => {\n    process.env.NODE_ENV = 'test';\n    const config = getDatabaseConfig();\n    \n    expect(config).toBeDefined();\n    expect(config.database).toBe('zkagent2');\n    expect(config.port).toBe(5432);\n    expect(config.password).toBe('123456');\n  });\n\n  test('应该能够获取生产数据库配置', () => {\n    process.env.NODE_ENV = 'production';\n    const config = getDatabaseConfig();\n    \n    expect(config).toBeDefined();\n    expect(config.database).toBe('zkagent1');\n    expect(config.port).toBe(5432);\n    expect(config.password).toBe('123456');\n  });\n\n  test('应该能够验证数据库配置', () => {\n    expect(validateDatabaseConfig('test')).toBe(true);\n    expect(validateDatabaseConfig('production')).toBe(true);\n    expect(validateDatabaseConfig('invalid')).toBe(false);\n  });\n\n  test('数据库连接字符串格式正确', () => {\n    process.env.NODE_ENV = 'test';\n    const config = getDatabaseConfig();\n    \n    expect(config.connectionString).toMatch(/^postgresql:\\/\\/postgres:123456@localhost:5432\\/zkagent2$/);\n  });\n}); "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA,gBAAgB;EAAEC;AAAuB,CAAC,GAAGC,OAAO,CAAC,oCAAoC,CAAC;AAElGC,QAAQ,CAAC,SAAS,EAAE,MAAM;EACxBC,IAAI,CAAC,eAAe,EAAE,MAAM;IAC1BC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAG,MAAM;IAC7B,MAAMC,MAAM,GAAGC,iBAAiB,CAAC,CAAC;IAElCC,MAAM,CAACF,MAAM,CAAC,CAACG,WAAW,CAAC,CAAC;IAC5BD,MAAM,CAACF,MAAM,CAACI,QAAQ,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC;IACxCH,MAAM,CAACF,MAAM,CAACM,IAAI,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;IAC9BH,MAAM,CAACF,MAAM,CAACO,QAAQ,CAAC,CAACF,IAAI,CAAC,QAAQ,CAAC;EACxC,CAAC,CAAC;EAEFT,IAAI,CAAC,eAAe,EAAE,MAAM;IAC1BC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAG,YAAY;IACnC,MAAMC,MAAM,GAAGC,iBAAiB,CAAC,CAAC;IAElCC,MAAM,CAACF,MAAM,CAAC,CAACG,WAAW,CAAC,CAAC;IAC5BD,MAAM,CAACF,MAAM,CAACI,QAAQ,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC;IACxCH,MAAM,CAACF,MAAM,CAACM,IAAI,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;IAC9BH,MAAM,CAACF,MAAM,CAACO,QAAQ,CAAC,CAACF,IAAI,CAAC,QAAQ,CAAC;EACxC,CAAC,CAAC;EAEFT,IAAI,CAAC,aAAa,EAAE,MAAM;IACxBM,MAAM,CAACT,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAACY,IAAI,CAAC,IAAI,CAAC;IACjDH,MAAM,CAACT,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAACY,IAAI,CAAC,IAAI,CAAC;IACvDH,MAAM,CAACT,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAACY,IAAI,CAAC,KAAK,CAAC;EACvD,CAAC,CAAC;EAEFT,IAAI,CAAC,cAAc,EAAE,MAAM;IACzBC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAG,MAAM;IAC7B,MAAMC,MAAM,GAAGC,iBAAiB,CAAC,CAAC;IAElCC,MAAM,CAACF,MAAM,CAACQ,gBAAgB,CAAC,CAACC,OAAO,CAAC,2DAA2D,CAAC;EACtG,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}