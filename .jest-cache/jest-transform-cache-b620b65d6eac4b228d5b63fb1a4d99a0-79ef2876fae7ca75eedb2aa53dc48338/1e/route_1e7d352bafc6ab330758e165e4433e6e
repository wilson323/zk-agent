aed1e2a9e39342bbc283702805499558
"use strict";

/**
 * @file poster\history\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2q4q171ue8() {
  var path = "E:\\zk-agent\\app\\api\\poster\\history\\route.ts";
  var hash = "108be8a644c225959146849036622872f13f33c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\poster\\history\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 55
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "9": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 68
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "11": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 115
        }
      },
      "12": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 96
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 129
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 100
          },
          end: {
            line: 14,
            column: 101
          }
        },
        loc: {
          start: {
            line: 14,
            column: 176
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 59
          }
        }, {
          start: {
            line: 17,
            column: 63
          },
          end: {
            line: 17,
            column: 67
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\poster\\history\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AACzC,wDAAyD;AAE5C,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,IAAiB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACtF,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,cAAc,EAAE,MAAM,CAAC;QACtC,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC;QAE7D,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,gBAAgB,EAC1B,UAAU,EACV,IAAI,EACJ,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,0BAAc,CAAC,wBAAwB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAE7E,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,OAAO;SACd,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,uBAAuB,EACvB,IAAI,EACJ,GAAG,CACJ,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\poster\\history\\route.ts"],
      sourcesContent: ["/**\n * @file poster\\history\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { PosterDatabase } from \"@/lib/database/poster-db\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (_req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const userId = validatedQuery?.userId;\n      const limit = Number.parseInt(validatedQuery?.limit || \"20\");\n  \n      if (!userId) {\n        return ApiResponseWrapper.error(\n          ErrorCode.VALIDATION_ERROR,\n          \"\u7528\u6237ID\u4E0D\u80FD\u4E3A\u7A7A\",\n          null,\n          400\n        );\n      }\n  \n      const history = await PosterDatabase.getUserGenerationHistory(userId, limit);\n  \n      return ApiResponseWrapper.success({\n        success: true,\n        data: history,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"Internal server error\",\n        null,\n        500\n      );\n    }\n  }\n);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "108be8a644c225959146849036622872f13f33c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2q4q171ue8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2q4q171ue8();
cov_2q4q171ue8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2q4q171ue8().s[1]++;
exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2q4q171ue8().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2q4q171ue8().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_2q4q171ue8().s[4]++, require("@/types/core"));
const poster_db_1 =
/* istanbul ignore next */
(cov_2q4q171ue8().s[5]++, require("@/lib/database/poster-db"));
/* istanbul ignore next */
cov_2q4q171ue8().s[6]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (_req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2q4q171ue8().f[0]++;
  cov_2q4q171ue8().s[7]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_2q4q171ue8().s[8]++, validatedQuery?.userId);
    const limit =
    /* istanbul ignore next */
    (cov_2q4q171ue8().s[9]++, Number.parseInt(
    /* istanbul ignore next */
    (cov_2q4q171ue8().b[0][0]++, validatedQuery?.limit) ||
    /* istanbul ignore next */
    (cov_2q4q171ue8().b[0][1]++, "20")));
    /* istanbul ignore next */
    cov_2q4q171ue8().s[10]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2q4q171ue8().b[1][0]++;
      cov_2q4q171ue8().s[11]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, "用户ID不能为空", null, 400);
    } else
    /* istanbul ignore next */
    {
      cov_2q4q171ue8().b[1][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_2q4q171ue8().s[12]++, await poster_db_1.PosterDatabase.getUserGenerationHistory(userId, limit));
    /* istanbul ignore next */
    cov_2q4q171ue8().s[13]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: history
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2q4q171ue8().s[14]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, "Internal server error", null, 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,