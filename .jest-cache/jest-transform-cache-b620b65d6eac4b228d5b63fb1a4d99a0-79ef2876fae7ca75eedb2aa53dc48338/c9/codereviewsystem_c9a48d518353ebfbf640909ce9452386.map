{"version":3,"names":["cov_1fwgcuilzr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","logger_1","require","enhanced_cache_manager_1","security_audit_system_1","error_handler_1","logger","Logger","SecurityRuleCategory","exports","SecurityRuleSeverity","CodeReviewSystem","constructor","securityRules","Map","reviewResults","activeReviews","initializeSecurityRules","getInstance","instance","submitForReview","request","reviewId","generateReviewId","reviewRequest","id","submittedAt","Date","status","set","securityAuditSystem","recordEvent","SecurityEventType","SECURITY_SCAN","severity","SecuritySeverity","LOW","ip","details","fileCount","files","length","submittedBy","priority","riskScore","processReview","catch","error","getErrorMessage","info","getReviewResults","get","results","Array","from","values","filter","result","fileId","startsWith","totalViolations","reduce","sum","violations","criticalViolations","v","CRITICAL","highViolations","HIGH","summary","scanFile","filePath","content","options","startTime","now","generateFileId","linesScanned","split","scanDuration","reviewedAt","reviewedBy","applicableRules","getApplicableRules","rule","scanForRule","push","calculateRiskScore","enhancedCacheManager","ttl","tags","some","violationCount","ruleId","ruleName","category","ERROR_HANDLING","code","message","remediation","references","confidence","getSecurityRules","rules","enabled","updateSecurityRule","updates","updatedRule","Object","keys","generateSecurityReport","timeRange","filePattern","pattern","RegExp","test","totalScans","averageRiskScore","violationCounts","forEach","violation","key","current","count","topViolations","entries","map","data","sort","a","slice","recommendations","generateRecommendations","trends","INPUT_VALIDATION","description","fileExtensions","INJECTION_PREVENTION","DATA_PROTECTION","OUTPUT_ENCODING","CRYPTOGRAPHY","MEDIUM","LOGGING_AUDITING","SESSION_MANAGEMENT","fileExtension","getFileExtension","includes","excludeRules","lines","lineIndex","matches","matchAll","match","index","trim","calculateConfidence","score","INFO","Math","min","criticalCount","highCount","evalUsage","random","toString","substr","Buffer","pop","toLowerCase","codeReviewSystem","bind"],"sources":["E:\\zk-agent\\lib\\security\\code-review-system.ts"],"sourcesContent":["/**\n * @file lib/security/code-review-system.ts\n * @description Secure Code Review System - Enterprise-grade automated security code analysis\n * @author Security Team\n * @lastUpdate 2024-12-19\n * @security Production-level security code review implementation\n */\n\nimport { Logger } from '@/lib/utils/logger';\nimport { enhancedCacheManager } from '@/lib/cache/enhanced-cache-manager';\nimport { securityAuditSystem, SecurityEventType, SecuritySeverity } from './security-audit-system';\nimport { getErrorMessage } from '@/lib/utils/error-handler';\n\nconst logger = new Logger('CodeReviewSystem');\n\n// Security Rule Categories\nexport enum SecurityRuleCategory {\n  INPUT_VALIDATION = 'input_validation',\n  OUTPUT_ENCODING = 'output_encoding',\n  ACCESS_CONTROL = 'access_control',\n  CRYPTOGRAPHY = 'cryptography',\n  ERROR_HANDLING = 'error_handling',\n  LOGGING_AUDITING = 'logging_auditing',\n  DATA_PROTECTION = 'data_protection',\n  SESSION_MANAGEMENT = 'session_management',\n  INJECTION_PREVENTION = 'injection_prevention',\n  CONFIGURATION = 'configuration',\n}\n\n// Security Rule Severity\nexport enum SecurityRuleSeverity {\n  INFO = 'info',\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical',\n}\n\n// Security Rule Interface\nexport interface SecurityRule {\n  id: string;\n  name: string;\n  category: SecurityRuleCategory;\n  severity: SecurityRuleSeverity;\n  description: string;\n  pattern: RegExp;\n  fileExtensions: string[];\n  enabled: boolean;\n  remediation: string;\n  references: string[];\n}\n\n// Code Review Result\nexport interface CodeReviewResult {\n  fileId: string;\n  filePath: string;\n  violations: SecurityViolation[];\n  riskScore: number;\n  linesScanned: number;\n  scanDuration: number;\n  reviewedAt: Date;\n  reviewedBy: 'automated' | string;\n}\n\n// Security Violation\nexport interface SecurityViolation {\n  ruleId: string;\n  ruleName: string;\n  category: SecurityRuleCategory;\n  severity: SecurityRuleSeverity;\n  line: number;\n  column: number;\n  code: string;\n  message: string;\n  remediation: string;\n  references: string[];\n  confidence: 'low' | 'medium' | 'high';\n}\n\n// Review Request\nexport interface ReviewRequest {\n  id: string;\n  files: Array<{\n    path: string;\n    content: string;\n  }>;\n  submittedBy: string;\n  submittedAt: Date;\n  status: 'pending' | 'in_progress' | 'completed' | 'failed';\n  priority: 'low' | 'medium' | 'high' | 'critical';\n}\n\nexport class CodeReviewSystem {\n  private static instance: CodeReviewSystem;\n  private securityRules: Map<string, SecurityRule> = new Map();\n  private reviewResults: Map<string, CodeReviewResult> = new Map();\n  private activeReviews: Map<string, ReviewRequest> = new Map();\n\n  private constructor() {\n    this.initializeSecurityRules();\n  }\n\n  public static getInstance(): CodeReviewSystem {\n    if (!CodeReviewSystem.instance) {\n      CodeReviewSystem.instance = new CodeReviewSystem();\n    }\n    return CodeReviewSystem.instance;\n  }\n\n  /**\n   * Submit code for security review\n   */\n  async submitForReview(request: Omit<ReviewRequest, 'id' | 'submittedAt' | 'status'>): Promise<string> {\n    const reviewId = this.generateReviewId();\n    \n    const reviewRequest: ReviewRequest = {\n      id: reviewId,\n      submittedAt: new Date(),\n      status: 'pending',\n      ...request,\n    };\n\n    this.activeReviews.set(reviewId, reviewRequest);\n\n    // Log security event\n    await securityAuditSystem.recordEvent({\n      type: SecurityEventType.SECURITY_SCAN,\n      severity: SecuritySeverity.LOW,\n      ip: '127.0.0.1',\n      details: {\n        reviewId,\n        fileCount: request.files.length,\n        submittedBy: request.submittedBy,\n        priority: request.priority,\n      },\n      riskScore: 1,\n    });\n\n    // Start review process asynchronously\n    this.processReview(reviewId).catch(error => {\n      logger.error('Failed to process code review', {\n        reviewId,\n        error: getErrorMessage(error),\n      });\n    });\n\n    logger.info('Code review submitted', {\n      reviewId,\n      fileCount: request.files.length,\n      submittedBy: request.submittedBy,\n    });\n\n    return reviewId;\n  }\n\n  /**\n   * Get review status and results\n   */\n  async getReviewResults(reviewId: string): Promise<{\n    request: ReviewRequest;\n    results: CodeReviewResult[];\n    summary: {\n      totalViolations: number;\n      criticalViolations: number;\n      highViolations: number;\n      riskScore: number;\n      status: string;\n    };\n  } | null> {\n    const request = this.activeReviews.get(reviewId);\n    if (!request) {\n      return null;\n    }\n\n    const results = Array.from(this.reviewResults.values())\n      .filter(result => result.fileId.startsWith(reviewId));\n\n    const totalViolations = results.reduce((sum, result) => sum + result.violations.length, 0);\n    const criticalViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length, 0);\n    const highViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.HIGH).length, 0);\n    const riskScore = results.reduce((sum, result) => sum + result.riskScore, 0) / results.length || 0;\n\n    return {\n      request,\n      results,\n      summary: {\n        totalViolations,\n        criticalViolations,\n        highViolations,\n        riskScore,\n        status: request.status,\n      },\n    };\n  }\n\n  /**\n   * Scan single file for security issues\n   */\n  async scanFile(filePath: string, content: string, options: {\n    rules?: string[];\n    excludeRules?: string[];\n  } = {}): Promise<CodeReviewResult> {\n    const startTime = Date.now();\n    const fileId = this.generateFileId(filePath);\n    \n    const result: CodeReviewResult = {\n      fileId,\n      filePath,\n      violations: [],\n      riskScore: 0,\n      linesScanned: content.split('\\n').length,\n      scanDuration: 0,\n      reviewedAt: new Date(),\n      reviewedBy: 'automated',\n    };\n\n    try {\n      // Get applicable rules\n      const applicableRules = this.getApplicableRules(filePath, options);\n      \n      // Scan for violations\n      for (const rule of applicableRules) {\n        const violations = this.scanForRule(content, rule);\n        result.violations.push(...violations);\n      }\n\n      // Calculate risk score\n      result.riskScore = this.calculateRiskScore(result.violations);\n      result.scanDuration = Date.now() - startTime;\n\n      // Store result\n      this.reviewResults.set(fileId, result);\n\n      // Cache high-risk results\n      if (result.riskScore >= 7) {\n        await enhancedCacheManager.set(\n          `security:code-review:high-risk:${fileId}`,\n          result,\n          { ttl: 86400000, tags: ['security', 'code-review', 'high-risk'] }\n        );\n      }\n\n      // Log security event for high-risk findings\n      if (result.violations.some(v => v.severity === SecurityRuleSeverity.CRITICAL)) {\n        await securityAuditSystem.recordEvent({\n          type: SecurityEventType.SECURITY_SCAN,\n          severity: SecuritySeverity.HIGH,\n          ip: '127.0.0.1',\n          details: {\n            fileId,\n            filePath,\n            violationCount: result.violations.length,\n            criticalViolations: result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length,\n            riskScore: result.riskScore,\n          },\n          riskScore: result.riskScore,\n        });\n      }\n\n      logger.info('File security scan completed', {\n        fileId,\n        filePath,\n        violations: result.violations.length,\n        riskScore: result.riskScore,\n        scanDuration: result.scanDuration,\n      });\n\n      return result;\n\n    } catch (error) {\n      logger.error('File security scan failed', {\n        fileId,\n        filePath,\n        error: getErrorMessage(error),\n      });\n\n      result.violations.push({\n        ruleId: 'scan-error',\n        ruleName: 'Scan Error',\n        category: SecurityRuleCategory.ERROR_HANDLING,\n        severity: SecurityRuleSeverity.HIGH,\n        line: 1,\n        column: 1,\n        code: '',\n        message: 'Security scan failed: ' + getErrorMessage(error),\n        remediation: 'Review file manually for security issues',\n        references: [],\n        confidence: 'high',\n      });\n\n      result.riskScore = 8;\n      result.scanDuration = Date.now() - startTime;\n\n      return result;\n    }\n  }\n\n  /**\n   * Get security rules\n   */\n  getSecurityRules(options: {\n    category?: SecurityRuleCategory;\n    severity?: SecurityRuleSeverity;\n    enabled?: boolean;\n  } = {}): SecurityRule[] {\n    let rules = Array.from(this.securityRules.values());\n\n    if (options.category) {\n      rules = rules.filter(rule => rule.category === options.category);\n    }\n\n    if (options.severity) {\n      rules = rules.filter(rule => rule.severity === options.severity);\n    }\n\n    if (options.enabled !== undefined) {\n      rules = rules.filter(rule => rule.enabled === options.enabled);\n    }\n\n    return rules;\n  }\n\n  /**\n   * Update security rule\n   */\n  async updateSecurityRule(ruleId: string, updates: Partial<SecurityRule>): Promise<boolean> {\n    const rule = this.securityRules.get(ruleId);\n    if (!rule) {\n      return false;\n    }\n\n    const updatedRule = { ...rule, ...updates };\n    this.securityRules.set(ruleId, updatedRule);\n\n    // Cache updated rules\n    await enhancedCacheManager.set(\n      'security:rules:updated',\n      Array.from(this.securityRules.values()),\n      { ttl: 3600000, tags: ['security', 'rules'] }\n    );\n\n    logger.info('Security rule updated', {\n      ruleId,\n      updates: Object.keys(updates),\n    });\n\n    return true;\n  }\n\n  /**\n   * Generate security report\n   */\n  async generateSecurityReport(options: {\n    timeRange?: { start: Date; end: Date };\n    filePattern?: string;\n    severity?: SecurityRuleSeverity;\n  } = {}): Promise<{\n    summary: {\n      totalScans: number;\n      totalViolations: number;\n      criticalViolations: number;\n      highViolations: number;\n      averageRiskScore: number;\n    };\n    topViolations: Array<{\n      ruleId: string;\n      ruleName: string;\n      count: number;\n      severity: SecurityRuleSeverity;\n    }>;\n    trends: Array<{\n      date: string;\n      scans: number;\n      violations: number;\n      riskScore: number;\n    }>;\n    recommendations: string[];\n  }> {\n    let results = Array.from(this.reviewResults.values());\n\n    // Apply filters\n    if (options.timeRange) {\n      results = results.filter(result => \n        result.reviewedAt >= options.timeRange!.start && \n        result.reviewedAt <= options.timeRange!.end\n      );\n    }\n\n    if (options.filePattern) {\n      const pattern = new RegExp(options.filePattern, 'i');\n      results = results.filter(result => pattern.test(result.filePath));\n    }\n\n    // Calculate summary\n    const totalScans = results.length;\n    const totalViolations = results.reduce((sum, result) => sum + result.violations.length, 0);\n    const criticalViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length, 0);\n    const highViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.HIGH).length, 0);\n    const averageRiskScore = results.reduce((sum, result) => sum + result.riskScore, 0) / totalScans || 0;\n\n    // Top violations\n    const violationCounts = new Map<string, { count: number; rule: SecurityViolation }>();\n    results.forEach(result => {\n      result.violations.forEach(violation => {\n        const key = violation.ruleId;\n        const current = violationCounts.get(key);\n        if (current) {\n          current.count++;\n        } else {\n          violationCounts.set(key, { count: 1, rule: violation });\n        }\n      });\n    });\n\n    const topViolations = Array.from(violationCounts.entries())\n      .map(([ruleId, data]) => ({\n        ruleId,\n        ruleName: data.rule.ruleName,\n        count: data.count,\n        severity: data.rule.severity,\n      }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n\n    // Generate recommendations\n    const recommendations = this.generateRecommendations(results);\n\n    return {\n      summary: {\n        totalScans,\n        totalViolations,\n        criticalViolations,\n        highViolations,\n        averageRiskScore,\n      },\n      topViolations,\n      trends: [], // Implement trend analysis if needed\n      recommendations,\n    };\n  }\n\n  /**\n   * Private: Process review request\n   */\n  private async processReview(reviewId: string): Promise<void> {\n    const request = this.activeReviews.get(reviewId);\n    if (!request) {\n      return;\n    }\n\n    try {\n      // Update status\n      request.status = 'in_progress';\n      this.activeReviews.set(reviewId, request);\n\n      // Scan all files\n      for (const file of request.files) {\n        await this.scanFile(file.path, file.content);\n      }\n\n      // Update status\n      request.status = 'completed';\n      this.activeReviews.set(reviewId, request);\n\n      logger.info('Code review completed', {\n        reviewId,\n        fileCount: request.files.length,\n      });\n\n    } catch (error) {\n      request.status = 'failed';\n      this.activeReviews.set(reviewId, request);\n\n      logger.error('Code review failed', {\n        reviewId,\n        error: getErrorMessage(error),\n      });\n    }\n  }\n\n  /**\n   * Private: Initialize security rules\n   */\n  private initializeSecurityRules(): void {\n    const rules: SecurityRule[] = [\n      // Input Validation Rules\n      {\n        id: 'no-eval',\n        name: 'Dangerous eval() Usage',\n        category: SecurityRuleCategory.INPUT_VALIDATION,\n        severity: SecurityRuleSeverity.CRITICAL,\n        description: 'Using eval() can lead to code injection vulnerabilities',\n        pattern: /\\beval\\s*\\(/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Replace eval() with safer alternatives like JSON.parse() or Function constructor',\n        references: ['https://owasp.org/www-community/attacks/Code_Injection'],\n      },\n      {\n        id: 'sql-injection-risk',\n        name: 'SQL Injection Risk',\n        category: SecurityRuleCategory.INJECTION_PREVENTION,\n        severity: SecurityRuleSeverity.HIGH,\n        description: 'Dynamic SQL construction may lead to SQL injection',\n        pattern: /['\"]\\s*\\+\\s*.*\\s*\\+\\s*['\"].*(?:SELECT|INSERT|UPDATE|DELETE|DROP)/gi,\n        fileExtensions: ['.js', '.ts', '.py', '.php', '.java'],\n        enabled: true,\n        remediation: 'Use parameterized queries or prepared statements',\n        references: ['https://owasp.org/www-community/attacks/SQL_Injection'],\n      },\n      {\n        id: 'hardcoded-secrets',\n        name: 'Hardcoded Secrets',\n        category: SecurityRuleCategory.DATA_PROTECTION,\n        severity: SecurityRuleSeverity.CRITICAL,\n        description: 'Hardcoded secrets in source code',\n        pattern: /(password|secret|key|token)\\s*[=:]\\s*['\"][^'\"]{8,}['\"]/gi,\n        fileExtensions: ['.js', '.ts', '.py', '.java', '.php', '.cs'],\n        enabled: true,\n        remediation: 'Use environment variables or secure key management systems',\n        references: ['https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure'],\n      },\n      {\n        id: 'xss-innerHTML',\n        name: 'XSS via innerHTML',\n        category: SecurityRuleCategory.OUTPUT_ENCODING,\n        severity: SecurityRuleSeverity.HIGH,\n        description: 'Using innerHTML with user input can lead to XSS',\n        pattern: /\\.innerHTML\\s*=\\s*(?!['\"]\\s*['\"])/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Use textContent or sanitize input before setting innerHTML',\n        references: ['https://owasp.org/www-community/attacks/xss/'],\n      },\n      {\n        id: 'crypto-weak-random',\n        name: 'Weak Random Number Generation',\n        category: SecurityRuleCategory.CRYPTOGRAPHY,\n        severity: SecurityRuleSeverity.MEDIUM,\n        description: 'Math.random() is not cryptographically secure',\n        pattern: /Math\\.random\\(\\)/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Use crypto.getRandomValues() for cryptographic purposes',\n        references: ['https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues'],\n      },\n      {\n        id: 'console-log-production',\n        name: 'Console Logging in Production',\n        category: SecurityRuleCategory.LOGGING_AUDITING,\n        severity: SecurityRuleSeverity.LOW,\n        description: 'Console logs may expose sensitive information',\n        pattern: /console\\.(log|debug|info|warn|error)/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Use proper logging framework and remove console logs in production',\n        references: ['https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring'],\n      },\n      {\n        id: 'unsafe-file-upload',\n        name: 'Unsafe File Upload',\n        category: SecurityRuleCategory.INPUT_VALIDATION,\n        severity: SecurityRuleSeverity.HIGH,\n        description: 'File upload without proper validation',\n        pattern: /\\.upload\\(|multer\\(|formidable\\(/gi,\n        fileExtensions: ['.js', '.ts'],\n        enabled: true,\n        remediation: 'Implement file type validation, size limits, and virus scanning',\n        references: ['https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload'],\n      },\n      {\n        id: 'jwt-no-verify',\n        name: 'JWT Without Verification',\n        category: SecurityRuleCategory.SESSION_MANAGEMENT,\n        severity: SecurityRuleSeverity.CRITICAL,\n        description: 'JWT token used without proper verification',\n        pattern: /jwt\\.decode\\s*\\([^,)]*\\)/gi,\n        fileExtensions: ['.js', '.ts'],\n        enabled: true,\n        remediation: 'Always verify JWT tokens using jwt.verify() with secret',\n        references: ['https://auth0.com/blog/a-look-at-the-latest-draft-for-oauth-token-exchange/'],\n      },\n    ];\n\n    rules.forEach(rule => {\n      this.securityRules.set(rule.id, rule);\n    });\n\n    logger.info('Security rules initialized', { count: rules.length });\n  }\n\n  /**\n   * Private: Get applicable rules for file\n   */\n  private getApplicableRules(filePath: string, options: {\n    rules?: string[];\n    excludeRules?: string[];\n  }): SecurityRule[] {\n    const fileExtension = this.getFileExtension(filePath);\n    let rules = Array.from(this.securityRules.values());\n\n    // Filter by file extension\n    rules = rules.filter(rule => \n      rule.fileExtensions.includes(fileExtension) && rule.enabled\n    );\n\n    // Include only specific rules if provided\n    if (options.rules && options.rules.length > 0) {\n      rules = rules.filter(rule => options.rules!.includes(rule.id));\n    }\n\n    // Exclude specific rules if provided\n    if (options.excludeRules && options.excludeRules.length > 0) {\n      rules = rules.filter(rule => !options.excludeRules!.includes(rule.id));\n    }\n\n    return rules;\n  }\n\n  /**\n   * Private: Scan content for specific rule\n   */\n  private scanForRule(content: string, rule: SecurityRule): SecurityViolation[] {\n    const violations: SecurityViolation[] = [];\n    const lines = content.split('\\n');\n\n    lines.forEach((line, lineIndex) => {\n      const matches = line.matchAll(rule.pattern);\n      \n      for (const match of matches) {\n        violations.push({\n          ruleId: rule.id,\n          ruleName: rule.name,\n          category: rule.category,\n          severity: rule.severity,\n          line: lineIndex + 1,\n          column: match.index! + 1,\n          code: line.trim(),\n          message: rule.description,\n          remediation: rule.remediation,\n          references: rule.references,\n          confidence: this.calculateConfidence(rule, match[0]),\n        });\n      }\n    });\n\n    return violations;\n  }\n\n  /**\n   * Private: Calculate risk score based on violations\n   */\n  private calculateRiskScore(violations: SecurityViolation[]): number {\n    let score = 0;\n\n    violations.forEach(violation => {\n      switch (violation.severity) {\n        case SecurityRuleSeverity.CRITICAL:\n          score += 10;\n          break;\n        case SecurityRuleSeverity.HIGH:\n          score += 6;\n          break;\n        case SecurityRuleSeverity.MEDIUM:\n          score += 3;\n          break;\n        case SecurityRuleSeverity.LOW:\n          score += 1;\n          break;\n        case SecurityRuleSeverity.INFO:\n          score += 0.5;\n          break;\n      }\n\n      // Adjust based on confidence\n      if (violation.confidence === 'high') {\n        score *= 1.2;\n      } else if (violation.confidence === 'low') {\n        score *= 0.8;\n      }\n    });\n\n    return Math.min(score / violations.length || 0, 10);\n  }\n\n  /**\n   * Private: Calculate confidence level\n   */\n  private calculateConfidence(rule: SecurityRule, match: string): 'low' | 'medium' | 'high' {\n    // Simple heuristic for confidence calculation\n    if (rule.severity === SecurityRuleSeverity.CRITICAL) {\n      return 'high';\n    }\n    \n    if (match.length > 20 || rule.severity === SecurityRuleSeverity.HIGH) {\n      return 'medium';\n    }\n    \n    return 'low';\n  }\n\n  /**\n   * Private: Generate recommendations\n   */\n  private generateRecommendations(results: CodeReviewResult[]): string[] {\n    const recommendations: string[] = [];\n    \n    const criticalCount = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length, 0);\n    \n    if (criticalCount > 0) {\n      recommendations.push(`Address ${criticalCount} critical security vulnerabilities immediately`);\n    }\n\n    const highCount = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.HIGH).length, 0);\n    \n    if (highCount > 5) {\n      recommendations.push('Implement comprehensive input validation across the application');\n    }\n\n    const evalUsage = results.some(result => \n      result.violations.some(v => v.ruleId === 'no-eval'));\n    \n    if (evalUsage) {\n      recommendations.push('Eliminate all eval() usage and implement safer alternatives');\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Private: Utility methods\n   */\n  private generateReviewId(): string {\n    return `review_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateFileId(filePath: string): string {\n    return `file_${Date.now()}_${Buffer.from(filePath).toString('base64').substr(0, 8)}`;\n  }\n\n  private getFileExtension(filePath: string): string {\n    return '.' + filePath.split('.').pop()?.toLowerCase() || '';\n  }\n}\n\n// Export singleton instance\nexport const codeReviewSystem = CodeReviewSystem.getInstance();\n\n// Export convenience methods\nexport const submitForReview = codeReviewSystem.submitForReview.bind(codeReviewSystem);\nexport const getReviewResults = codeReviewSystem.getReviewResults.bind(codeReviewSystem);\nexport const scanFile = codeReviewSystem.scanFile.bind(codeReviewSystem);\nexport const getSecurityRules = codeReviewSystem.getSecurityRules.bind(codeReviewSystem);\nexport const generateSecurityReport = codeReviewSystem.generateSecurityReport.bind(codeReviewSystem);"],"mappings":"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","ignoreList":[]}