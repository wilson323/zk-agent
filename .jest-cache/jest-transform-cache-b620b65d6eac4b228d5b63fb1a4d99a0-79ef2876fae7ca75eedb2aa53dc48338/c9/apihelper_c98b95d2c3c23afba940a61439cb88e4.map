{"version":3,"names":["cov_2j2zpr11bg","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","withApiHandler","validateRequestBody","validateSearchParams","getPaginationParams","getSearchParams","withPerformanceMonitoring","server_1","require","zod_1","core_1","ApiResponseWrapper","success","data","pagination","NextResponse","json","timestamp","Date","toISOString","error","code","message","details","status","validationError","errors","ErrorCode","VALIDATION_ERROR","notFound","resource","NOT_FOUND","unauthorized","AUTHENTICATION_ERROR","forbidden","AUTHORIZATION_ERROR","internalError","console","INTERNAL_SERVER_ERROR","process","env","NODE_ENV","methodNotAllowed","errorMessage","Array","isArray","join","allowedMethods","rateLimitExceeded","resetTime","RATE_LIMIT_EXCEEDED","handler","req","context","ZodError","schema","body","parse","Error","searchParams","params","Object","fromEntries","entries","page","parseInt","get","limit","sortBy","sortOrder","Math","max","min","skip","take","query","filters","key","value","includes","ApiLogger","logRequest","userId","log","method","url","userAgent","headers","ip","JSON","stringify","logResponse","response","duration","logError","stack","startTime","now","set"],"sources":["E:\\zk-agent\\lib\\utils\\api-helper.ts"],"sourcesContent":["// @ts-nocheck\n/**\n * @file lib/utils/api-helper.ts\n * @description APIÁªü‰∏ÄÂ§ÑÁêÜÂ∑•ÂÖ∑ÔºåÂåÖÂê´ÈîôËØØÂ§ÑÁêÜ„ÄÅÂìçÂ∫îÊ†ºÂºèÂåñ„ÄÅÂèÇÊï∞È™åËØÅÁ≠â\n * @author zk-agentÂºÄÂèëÂõ¢Èòü\n * @lastUpdate 2024-12-19\n * @updateLog\n *   - 2024-12-19 ÂàùÂßãÂàõÂª∫APIÂ§ÑÁêÜÂ∑•ÂÖ∑\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { ZodSchema, ZodError } from 'zod';\nimport { ApiResponse, ErrorCode } from '@/types/core';\n\n// APIÂìçÂ∫îÂåÖË£ÖÂô®\nexport class ApiResponseWrapper {\n  static success<T>(data: T, pagination?: any): NextResponse<ApiResponse<T>> {\n    return NextResponse.json({\n      success: true,\n      data,\n      pagination,\n      timestamp: new Date().toISOString(),\n    });\n  }\n\n  static error(\n    code: ErrorCode,\n    message: string,\n    details?: any,\n    status: number = 500\n  ): NextResponse<ApiResponse> {\n    return NextResponse.json(\n      {\n        success: false,\n        error: {\n          code,\n          message,\n          details,\n        },\n        timestamp: new Date().toISOString(),\n      },\n      { status }\n    );\n  }\n\n  static validationError(errors: any): NextResponse<ApiResponse> {\n    return this.error(\n      ErrorCode.VALIDATION_ERROR,\n      'Validation failed',\n      errors,\n      400\n    );\n  }\n\n  static notFound(resource: string = 'Resource'): NextResponse<ApiResponse> {\n    return this.error(\n      ErrorCode.NOT_FOUND,\n      `${resource} not found`,\n      null,\n      404\n    );\n  }\n\n  static unauthorized(message: string = 'Unauthorized'): NextResponse<ApiResponse> {\n    return this.error(\n      ErrorCode.AUTHENTICATION_ERROR,\n      message,\n      null,\n      401\n    );\n  }\n\n  static forbidden(message: string = 'Forbidden'): NextResponse<ApiResponse> {\n    return this.error(\n      ErrorCode.AUTHORIZATION_ERROR,\n      message,\n      null,\n      403\n    );\n  }\n\n  static internalError(error: any): NextResponse<ApiResponse> {\n    console.error('Internal Server Error:', error);\n    return this.error(\n      ErrorCode.INTERNAL_SERVER_ERROR,\n      'Internal server error',\n      process.env.NODE_ENV === 'development' ? error : null,\n      500\n    );\n  }\n\n  static methodNotAllowed(message?: string | string[]): NextResponse<ApiResponse> {\n    let errorMessage: string;\n    let details: any = null;\n    \n    if (typeof message === 'string') {\n      errorMessage = message;\n    } else if (Array.isArray(message)) {\n      errorMessage = `Method not allowed. Allowed methods: ${message.join(', ')}`;\n      details = { allowedMethods: message };\n    } else {\n      errorMessage = 'Method not allowed';\n    }\n    \n    return this.error(\n      ErrorCode.VALIDATION_ERROR,\n      errorMessage,\n      details,\n      405\n    );\n  }\n\n  static rateLimitExceeded(message: string = 'Rate limit exceeded', resetTime?: number): NextResponse<ApiResponse> {\n    return this.error(\n      ErrorCode.RATE_LIMIT_EXCEEDED,\n      message,\n      resetTime ? { resetTime } : null,\n      429\n    );\n  }\n}\n\n// APIË∑ØÁî±Â§ÑÁêÜÂô®ÂåÖË£ÖÂô®\nexport function withApiHandler(\n  handler: (req: NextRequest, context?: any) => Promise<NextResponse>\n) {\n  return async (req: NextRequest, context?: any): Promise<NextResponse> => {\n    try {\n      return await handler(req, context);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        return ApiResponseWrapper.validationError(error.errors);\n      }\n      \n      return ApiResponseWrapper.internalError(error);\n    }\n  };\n}\n\n// ËØ∑Ê±Ç‰ΩìÈ™åËØÅ\nexport async function validateRequestBody<T>(\n  req: NextRequest,\n  schema: ZodSchema<T>\n): Promise<T> {\n  try {\n    const body = await req.json();\n    return schema.parse(body);\n  } catch (error) {\n    if (error instanceof ZodError) {\n      throw error;\n    }\n    throw new Error('Invalid JSON body');\n  }\n}\n\n// Êü•ËØ¢ÂèÇÊï∞È™åËØÅ\nexport function validateSearchParams<T>(\n  searchParams: URLSearchParams,\n  schema: ZodSchema<T>\n): T {\n  const params = Object.fromEntries(searchParams.entries());\n  return schema.parse(params);\n}\n\n// ÂàÜÈ°µÂèÇÊï∞Â§ÑÁêÜ\nexport function getPaginationParams(searchParams: URLSearchParams) {\n  const page = parseInt(searchParams.get('page') || '1', 10);\n  const limit = parseInt(searchParams.get('limit') || '10', 10);\n  const sortBy = searchParams.get('sortBy') || 'createdAt';\n  const sortOrder = searchParams.get('sortOrder') as 'asc' | 'desc' || 'desc';\n\n  return {\n    page: Math.max(1, page),\n    limit: Math.min(100, Math.max(1, limit)), // ÈôêÂà∂ÊúÄÂ§ß100Êù°\n    sortBy,\n    sortOrder,\n    skip: (Math.max(1, page) - 1) * Math.min(100, Math.max(1, limit)),\n    take: Math.min(100, Math.max(1, limit)),\n  };\n}\n\n// ÊêúÁ¥¢ÂèÇÊï∞Â§ÑÁêÜ\nexport function getSearchParams(searchParams: URLSearchParams) {\n  const query = searchParams.get('query') || '';\n  const filters: Record<string, any> = {};\n\n  // ÊèêÂèñÊâÄÊúâÈùûÊ†áÂáÜÂèÇÊï∞‰Ωú‰∏∫ËøáÊª§Âô®\n  for (const [key, value] of searchParams.entries()) {\n    if (!['page', 'limit', 'sortBy', 'sortOrder', 'query'].includes(key)) {\n      filters[key] = value;\n    }\n  }\n\n  return { query, filters };\n}\n\n// Êó•ÂøóËÆ∞ÂΩïÂ∑•ÂÖ∑\nexport class ApiLogger {\n  static logRequest(req: NextRequest, userId?: string) {\n    const log = {\n      method: req.method,\n      url: req.url,\n      userAgent: req.headers.get('user-agent'),\n      ip: req.headers.get('x-forwarded-for') || req.headers.get('x-real-ip'),\n      userId,\n      timestamp: new Date().toISOString(),\n    };\n    \n    console.log('üì• API Request:', JSON.stringify(log, null, 2));\n  }\n\n  static logResponse(response: NextResponse, duration: number) {\n    const log = {\n      status: response.status,\n      duration: `${duration}ms`,\n      timestamp: new Date().toISOString(),\n    };\n    \n    console.log('üì§ API Response:', JSON.stringify(log, null, 2));\n  }\n\n  static logError(error: any, context?: any) {\n    const log = {\n      error: error.message || error,\n      stack: error.stack,\n      context,\n      timestamp: new Date().toISOString(),\n    };\n    \n    console.error('üö® API Error:', JSON.stringify(log, null, 2));\n  }\n}\n\n// ÊÄßËÉΩÁõëÊéßË£ÖÈ•∞Âô®\nexport function withPerformanceMonitoring(\n  handler: (req: NextRequest, context?: any) => Promise<NextResponse>\n) {\n  return async (req: NextRequest, context?: any): Promise<NextResponse> => {\n    const startTime = Date.now();\n    \n    ApiLogger.logRequest(req);\n    \n    try {\n      const response = await handler(req, context);\n      const duration = Date.now() - startTime;\n      \n      ApiLogger.logResponse(response, duration);\n      \n      // Ê∑ªÂä†ÊÄßËÉΩÂ§¥ÈÉ®\n      response.headers.set('X-Response-Time', `${duration}ms`);\n      \n      return response;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      ApiLogger.logError(error, { url: req.url, method: req.method, duration });\n      throw error;\n    }\n  };\n}"],"mappings":";;AAAA;AACA;;;;;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAoKA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;;;AA1CAa,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAcC;AAAAlC,cAAA,GAAAoB,CAAA;AAGDa,OAAA,CAAAE,mBAAA,GAAAA,mBAAA;AAaC;AAAAnC,cAAA,GAAAoB,CAAA;AAGDa,OAAA,CAAAG,oBAAA,GAAAA,oBAAA;AAMC;AAAApC,cAAA,GAAAoB,CAAA;AAGDa,OAAA,CAAAI,mBAAA,GAAAA,mBAAA;AAcC;AAAArC,cAAA,GAAAoB,CAAA;AAGDa,OAAA,CAAAK,eAAA,GAAAA,eAAA;AAYC;AAAAtC,cAAA,GAAAoB,CAAA;AAwCDa,OAAA,CAAAM,yBAAA,GAAAA,yBAAA;AAhOA,MAAAC,QAAA;AAAA;AAAA,CAAAxC,cAAA,GAAAoB,CAAA,OAAAqB,OAAA;AACA,MAAAC,KAAA;AAAA;AAAA,CAAA1C,cAAA,GAAAoB,CAAA,OAAAqB,OAAA;AACA,MAAAE,MAAA;AAAA;AAAA,CAAA3C,cAAA,GAAAoB,CAAA,QAAAqB,OAAA;AAEA;AACA,MAAaG,kBAAkB;EAC7B,OAAOC,OAAOA,CAAIC,IAAO,EAAEC,UAAgB;IAAA;IAAA/C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACzC,OAAOoB,QAAA,CAAAQ,YAAY,CAACC,IAAI,CAAC;MACvBJ,OAAO,EAAE,IAAI;MACbC,IAAI;MACJC,UAAU;MACVG,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;KAClC,CAAC;EACJ;EAEA,OAAOC,KAAKA,CACVC,IAAe,EACfC,OAAe,EACfC,OAAa,EACbC,MAAA;EAAA;EAAA,CAAAzD,cAAA,GAAAsB,CAAA,UAAiB,GAAG;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAEpB,OAAOoB,QAAA,CAAAQ,YAAY,CAACC,IAAI,CACtB;MACEJ,OAAO,EAAE,KAAK;MACdQ,KAAK,EAAE;QACLC,IAAI;QACJC,OAAO;QACPC;OACD;MACDN,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;KAClC,EACD;MAAEK;IAAM,CAAE,CACX;EACH;EAEA,OAAOC,eAAeA,CAACC,MAAW;IAAA;IAAA3D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAChC,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACC,gBAAgB,EAC1B,mBAAmB,EACnBF,MAAM,EACN,GAAG,CACJ;EACH;EAEA,OAAOG,QAAQA,CAACC,QAAA;EAAA;EAAA,CAAA/D,cAAA,GAAAsB,CAAA,UAAmB,UAAU;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC3C,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACI,SAAS,EACnB,GAAGD,QAAQ,YAAY,EACvB,IAAI,EACJ,GAAG,CACJ;EACH;EAEA,OAAOE,YAAYA,CAACV,OAAA;EAAA;EAAA,CAAAvD,cAAA,GAAAsB,CAAA,UAAkB,cAAc;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClD,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACM,oBAAoB,EAC9BX,OAAO,EACP,IAAI,EACJ,GAAG,CACJ;EACH;EAEA,OAAOY,SAASA,CAACZ,OAAA;EAAA;EAAA,CAAAvD,cAAA,GAAAsB,CAAA,UAAkB,WAAW;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC5C,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACQ,mBAAmB,EAC7Bb,OAAO,EACP,IAAI,EACJ,GAAG,CACJ;EACH;EAEA,OAAOc,aAAaA,CAAChB,KAAU;IAAA;IAAArD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7BkD,OAAO,CAACjB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAAC;IAAArD,cAAA,GAAAoB,CAAA;IAC/C,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACW,qBAAqB,EAC/B,uBAAuB,EACvBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;IAAA;IAAA,CAAA1E,cAAA,GAAAsB,CAAA,UAAG+B,KAAK;IAAA;IAAA,CAAArD,cAAA,GAAAsB,CAAA,UAAG,IAAI,GACrD,GAAG,CACJ;EACH;EAEA,OAAOqD,gBAAgBA,CAACpB,OAA2B;IAAA;IAAAvD,cAAA,GAAAqB,CAAA;IACjD,IAAIuD,YAAoB;IACxB,IAAIpB,OAAO;IAAA;IAAA,CAAAxD,cAAA,GAAAoB,CAAA,QAAQ,IAAI;IAAC;IAAApB,cAAA,GAAAoB,CAAA;IAExB,IAAI,OAAOmC,OAAO,KAAK,QAAQ,EAAE;MAAA;MAAAvD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC/BwD,YAAY,GAAGrB,OAAO;IACxB,CAAC,MAAM;MAAA;MAAAvD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,IAAIyD,KAAK,CAACC,OAAO,CAACvB,OAAO,CAAC,EAAE;QAAA;QAAAvD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjCwD,YAAY,GAAG,wCAAwCrB,OAAO,CAACwB,IAAI,CAAC,IAAI,CAAC,EAAE;QAAC;QAAA/E,cAAA,GAAAoB,CAAA;QAC5EoC,OAAO,GAAG;UAAEwB,cAAc,EAAEzB;QAAO,CAAE;MACvC,CAAC,MAAM;QAAA;QAAAvD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACLwD,YAAY,GAAG,oBAAoB;MACrC;IAAA;IAAC;IAAA5E,cAAA,GAAAoB,CAAA;IAED,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACC,gBAAgB,EAC1Be,YAAY,EACZpB,OAAO,EACP,GAAG,CACJ;EACH;EAEA,OAAOyB,iBAAiBA,CAAC1B,OAAA;EAAA;EAAA,CAAAvD,cAAA,GAAAsB,CAAA,UAAkB,qBAAqB,GAAE4D,SAAkB;IAAA;IAAAlF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClF,OAAO,IAAI,CAACiC,KAAK,CACfV,MAAA,CAAAiB,SAAS,CAACuB,mBAAmB,EAC7B5B,OAAO,EACP2B,SAAS;IAAA;IAAA,CAAAlF,cAAA,GAAAsB,CAAA,UAAG;MAAE4D;IAAS,CAAE;IAAA;IAAA,CAAAlF,cAAA,GAAAsB,CAAA,UAAG,IAAI,GAChC,GAAG,CACJ;EACH;;AACD;AAAAtB,cAAA,GAAAoB,CAAA;AAzGDa,OAAA,CAAAW,kBAAA,GAAAA,kBAAA;AA2GA;AACA,SAAgBV,cAAcA,CAC5BkD,OAAmE;EAAA;EAAApF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAEnE,OAAO,OAAOiE,GAAgB,EAAEC,OAAa,KAA2B;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtE,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF,OAAO,MAAMgE,OAAO,CAACC,GAAG,EAAEC,OAAO,CAAC;IACpC,CAAC,CAAC,OAAOjC,KAAK,EAAE;MAAA;MAAArD,cAAA,GAAAoB,CAAA;MACd,IAAIiC,KAAK,YAAYX,KAAA,CAAA6C,QAAQ,EAAE;QAAA;QAAAvF,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAC7B,OAAOwB,kBAAkB,CAACc,eAAe,CAACL,KAAK,CAACM,MAAM,CAAC;MACzD,CAAC;MAAA;MAAA;QAAA3D,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,OAAOwB,kBAAkB,CAACyB,aAAa,CAAChB,KAAK,CAAC;IAChD;EACF,CAAC;AACH;AAEA;AACO,eAAelB,mBAAmBA,CACvCkD,GAAgB,EAChBG,MAAoB;EAAA;EAAAxF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAEpB,IAAI;IACF,MAAMqE,IAAI;IAAA;IAAA,CAAAzF,cAAA,GAAAoB,CAAA,QAAG,MAAMiE,GAAG,CAACpC,IAAI,EAAE;IAAC;IAAAjD,cAAA,GAAAoB,CAAA;IAC9B,OAAOoE,MAAM,CAACE,KAAK,CAACD,IAAI,CAAC;EAC3B,CAAC,CAAC,OAAOpC,KAAK,EAAE;IAAA;IAAArD,cAAA,GAAAoB,CAAA;IACd,IAAIiC,KAAK,YAAYX,KAAA,CAAA6C,QAAQ,EAAE;MAAA;MAAAvF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC7B,MAAMiC,KAAK;IACb,CAAC;IAAA;IAAA;MAAArD,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACD,MAAM,IAAIuE,KAAK,CAAC,mBAAmB,CAAC;EACtC;AACF;AAEA;AACA,SAAgBvD,oBAAoBA,CAClCwD,YAA6B,EAC7BJ,MAAoB;EAAA;EAAAxF,cAAA,GAAAqB,CAAA;EAEpB,MAAMwE,MAAM;EAAA;EAAA,CAAA7F,cAAA,GAAAoB,CAAA,QAAG0E,MAAM,CAACC,WAAW,CAACH,YAAY,CAACI,OAAO,EAAE,CAAC;EAAC;EAAAhG,cAAA,GAAAoB,CAAA;EAC1D,OAAOoE,MAAM,CAACE,KAAK,CAACG,MAAM,CAAC;AAC7B;AAEA;AACA,SAAgBxD,mBAAmBA,CAACuD,YAA6B;EAAA;EAAA5F,cAAA,GAAAqB,CAAA;EAC/D,MAAM4E,IAAI;EAAA;EAAA,CAAAjG,cAAA,GAAAoB,CAAA,QAAG8E,QAAQ;EAAC;EAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAAAsE,YAAY,CAACO,GAAG,CAAC,MAAM,CAAC;EAAA;EAAA,CAAAnG,cAAA,GAAAsB,CAAA,WAAI,GAAG,GAAE,EAAE,CAAC;EAC1D,MAAM8E,KAAK;EAAA;EAAA,CAAApG,cAAA,GAAAoB,CAAA,QAAG8E,QAAQ;EAAC;EAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAAAsE,YAAY,CAACO,GAAG,CAAC,OAAO,CAAC;EAAA;EAAA,CAAAnG,cAAA,GAAAsB,CAAA,WAAI,IAAI,GAAE,EAAE,CAAC;EAC7D,MAAM+E,MAAM;EAAA;EAAA,CAAArG,cAAA,GAAAoB,CAAA;EAAG;EAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAsE,YAAY,CAACO,GAAG,CAAC,QAAQ,CAAC;EAAA;EAAA,CAAAnG,cAAA,GAAAsB,CAAA,WAAI,WAAW;EACxD,MAAMgF,SAAS;EAAA;EAAA,CAAAtG,cAAA,GAAAoB,CAAA;EAAG;EAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAsE,YAAY,CAACO,GAAG,CAAC,WAAW,CAAmB;EAAA;EAAA,CAAAnG,cAAA,GAAAsB,CAAA,WAAI,MAAM;EAAC;EAAAtB,cAAA,GAAAoB,CAAA;EAE5E,OAAO;IACL6E,IAAI,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,IAAI,CAAC;IACvBG,KAAK,EAAEG,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC;IAAE;IAC1CC,MAAM;IACNC,SAAS;IACTI,IAAI,EAAE,CAACH,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,IAAI,CAAC,GAAG,CAAC,IAAIM,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC;IACjEO,IAAI,EAAEJ,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,KAAK,CAAC;GACvC;AACH;AAEA;AACA,SAAgB9D,eAAeA,CAACsD,YAA6B;EAAA;EAAA5F,cAAA,GAAAqB,CAAA;EAC3D,MAAMuF,KAAK;EAAA;EAAA,CAAA5G,cAAA,GAAAoB,CAAA;EAAG;EAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAsE,YAAY,CAACO,GAAG,CAAC,OAAO,CAAC;EAAA;EAAA,CAAAnG,cAAA,GAAAsB,CAAA,WAAI,EAAE;EAC7C,MAAMuF,OAAO;EAAA;EAAA,CAAA7G,cAAA,GAAAoB,CAAA,QAAwB,EAAE;EAEvC;EAAA;EAAApB,cAAA,GAAAoB,CAAA;EACA,KAAK,MAAM,CAAC0F,GAAG,EAAEC,KAAK,CAAC,IAAInB,YAAY,CAACI,OAAO,EAAE,EAAE;IAAA;IAAAhG,cAAA,GAAAoB,CAAA;IACjD,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC4F,QAAQ,CAACF,GAAG,CAAC,EAAE;MAAA;MAAA9G,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACpEyF,OAAO,CAACC,GAAG,CAAC,GAAGC,KAAK;IACtB,CAAC;IAAA;IAAA;MAAA/G,cAAA,GAAAsB,CAAA;IAAA;EACH;EAAC;EAAAtB,cAAA,GAAAoB,CAAA;EAED,OAAO;IAAEwF,KAAK;IAAEC;EAAO,CAAE;AAC3B;AAEA;AACA,MAAaI,SAAS;EACpB,OAAOC,UAAUA,CAAC7B,GAAgB,EAAE8B,MAAe;IAAA;IAAAnH,cAAA,GAAAqB,CAAA;IACjD,MAAM+F,GAAG;IAAA;IAAA,CAAApH,cAAA,GAAAoB,CAAA,QAAG;MACViG,MAAM,EAAEhC,GAAG,CAACgC,MAAM;MAClBC,GAAG,EAAEjC,GAAG,CAACiC,GAAG;MACZC,SAAS,EAAElC,GAAG,CAACmC,OAAO,CAACrB,GAAG,CAAC,YAAY,CAAC;MACxCsB,EAAE;MAAE;MAAA,CAAAzH,cAAA,GAAAsB,CAAA,WAAA+D,GAAG,CAACmC,OAAO,CAACrB,GAAG,CAAC,iBAAiB,CAAC;MAAA;MAAA,CAAAnG,cAAA,GAAAsB,CAAA,WAAI+D,GAAG,CAACmC,OAAO,CAACrB,GAAG,CAAC,WAAW,CAAC;MACtEgB,MAAM;MACNjE,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;KAClC;IAAC;IAAApD,cAAA,GAAAoB,CAAA;IAEFkD,OAAO,CAAC8C,GAAG,CAAC,iBAAiB,EAAEM,IAAI,CAACC,SAAS,CAACP,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAC9D;EAEA,OAAOQ,WAAWA,CAACC,QAAsB,EAAEC,QAAgB;IAAA;IAAA9H,cAAA,GAAAqB,CAAA;IACzD,MAAM+F,GAAG;IAAA;IAAA,CAAApH,cAAA,GAAAoB,CAAA,QAAG;MACVqC,MAAM,EAAEoE,QAAQ,CAACpE,MAAM;MACvBqE,QAAQ,EAAE,GAAGA,QAAQ,IAAI;MACzB5E,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;KAClC;IAAC;IAAApD,cAAA,GAAAoB,CAAA;IAEFkD,OAAO,CAAC8C,GAAG,CAAC,kBAAkB,EAAEM,IAAI,CAACC,SAAS,CAACP,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAC/D;EAEA,OAAOW,QAAQA,CAAC1E,KAAU,EAAEiC,OAAa;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IACvC,MAAM+F,GAAG;IAAA;IAAA,CAAApH,cAAA,GAAAoB,CAAA,QAAG;MACViC,KAAK;MAAE;MAAA,CAAArD,cAAA,GAAAsB,CAAA,WAAA+B,KAAK,CAACE,OAAO;MAAA;MAAA,CAAAvD,cAAA,GAAAsB,CAAA,WAAI+B,KAAK;MAC7B2E,KAAK,EAAE3E,KAAK,CAAC2E,KAAK;MAClB1C,OAAO;MACPpC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;KAClC;IAAC;IAAApD,cAAA,GAAAoB,CAAA;IAEFkD,OAAO,CAACjB,KAAK,CAAC,eAAe,EAAEqE,IAAI,CAACC,SAAS,CAACP,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAC9D;;AACD;AAAApH,cAAA,GAAAoB,CAAA;AAlCDa,OAAA,CAAAgF,SAAA,GAAAA,SAAA;AAoCA;AACA,SAAgB1E,yBAAyBA,CACvC6C,OAAmE;EAAA;EAAApF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAEnE,OAAO,OAAOiE,GAAgB,EAAEC,OAAa,KAA2B;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IACtE,MAAM4G,SAAS;IAAA;IAAA,CAAAjI,cAAA,GAAAoB,CAAA,QAAG+B,IAAI,CAAC+E,GAAG,EAAE;IAAC;IAAAlI,cAAA,GAAAoB,CAAA;IAE7B6F,SAAS,CAACC,UAAU,CAAC7B,GAAG,CAAC;IAAC;IAAArF,cAAA,GAAAoB,CAAA;IAE1B,IAAI;MACF,MAAMyG,QAAQ;MAAA;MAAA,CAAA7H,cAAA,GAAAoB,CAAA,QAAG,MAAMgE,OAAO,CAACC,GAAG,EAAEC,OAAO,CAAC;MAC5C,MAAMwC,QAAQ;MAAA;MAAA,CAAA9H,cAAA,GAAAoB,CAAA,QAAG+B,IAAI,CAAC+E,GAAG,EAAE,GAAGD,SAAS;MAAC;MAAAjI,cAAA,GAAAoB,CAAA;MAExC6F,SAAS,CAACW,WAAW,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MAEzC;MAAA;MAAA9H,cAAA,GAAAoB,CAAA;MACAyG,QAAQ,CAACL,OAAO,CAACW,GAAG,CAAC,iBAAiB,EAAE,GAAGL,QAAQ,IAAI,CAAC;MAAC;MAAA9H,cAAA,GAAAoB,CAAA;MAEzD,OAAOyG,QAAQ;IACjB,CAAC,CAAC,OAAOxE,KAAK,EAAE;MACd,MAAMyE,QAAQ;MAAA;MAAA,CAAA9H,cAAA,GAAAoB,CAAA,QAAG+B,IAAI,CAAC+E,GAAG,EAAE,GAAGD,SAAS;MAAC;MAAAjI,cAAA,GAAAoB,CAAA;MACxC6F,SAAS,CAACc,QAAQ,CAAC1E,KAAK,EAAE;QAAEiE,GAAG,EAAEjC,GAAG,CAACiC,GAAG;QAAED,MAAM,EAAEhC,GAAG,CAACgC,MAAM;QAAES;MAAQ,CAAE,CAAC;MAAC;MAAA9H,cAAA,GAAAoB,CAAA;MAC1E,MAAMiC,KAAK;IACb;EACF,CAAC;AACH","ignoreList":[]}