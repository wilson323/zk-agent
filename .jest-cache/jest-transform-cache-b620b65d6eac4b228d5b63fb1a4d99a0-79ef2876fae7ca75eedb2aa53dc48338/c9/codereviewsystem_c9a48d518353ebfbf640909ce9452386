32d22736c22eb14e30538ea0f01dfbf5
"use strict";

/**
 * @file lib/security/code-review-system.ts
 * @description Secure Code Review System - Enterprise-grade automated security code analysis
 * @author Security Team
 * @lastUpdate 2024-12-19
 * @security Production-level security code review implementation
 */
/* istanbul ignore next */
function cov_1fwgcuilzr() {
  var path = "E:\\zk-agent\\lib\\security\\code-review-system.ts";
  var hash = "5ed3b60f0a46fc732872cc317b5163471437ac29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\security\\code-review-system.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 255
        }
      },
      "2": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "3": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "4": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 66
        }
      },
      "5": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "7": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 29,
          column: 87
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "12": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 62
        }
      },
      "13": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "14": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "15": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "16": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 74
        }
      },
      "17": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "18": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 38,
          column: 87
        }
      },
      "19": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "20": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "21": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "22": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 42
        }
      },
      "23": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "24": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 39
        }
      },
      "25": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "26": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "27": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "28": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "29": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 63
        }
      },
      "30": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "31": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "32": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "33": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 56
        }
      },
      "34": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "36": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "37": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "38": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "39": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "40": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "41": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 24
        }
      },
      "42": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 100,
          column: 65
        }
      },
      "43": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 64
        }
      },
      "44": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 101,
          column: 98
        }
      },
      "45": {
        start: {
          line: 101,
          column: 64
        },
        end: {
          line: 101,
          column: 94
        }
      },
      "46": {
        start: {
          line: 102,
          column: 35
        },
        end: {
          line: 102,
          column: 159
        }
      },
      "47": {
        start: {
          line: 102,
          column: 67
        },
        end: {
          line: 102,
          column: 155
        }
      },
      "48": {
        start: {
          line: 102,
          column: 103
        },
        end: {
          line: 102,
          column: 147
        }
      },
      "49": {
        start: {
          line: 103,
          column: 31
        },
        end: {
          line: 103,
          column: 151
        }
      },
      "50": {
        start: {
          line: 103,
          column: 63
        },
        end: {
          line: 103,
          column: 147
        }
      },
      "51": {
        start: {
          line: 103,
          column: 99
        },
        end: {
          line: 103,
          column: 139
        }
      },
      "52": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 104,
          column: 106
        }
      },
      "53": {
        start: {
          line: 104,
          column: 58
        },
        end: {
          line: 104,
          column: 80
        }
      },
      "54": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "55": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 36
        }
      },
      "56": {
        start: {
          line: 122,
          column: 23
        },
        end: {
          line: 122,
          column: 52
        }
      },
      "57": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "58": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "59": {
        start: {
          line: 135,
          column: 36
        },
        end: {
          line: 135,
          column: 78
        }
      },
      "60": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "61": {
        start: {
          line: 138,
          column: 35
        },
        end: {
          line: 138,
          column: 66
        }
      },
      "62": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 54
        }
      },
      "63": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 74
        }
      },
      "64": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 57
        }
      },
      "65": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 51
        }
      },
      "66": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "67": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 191
        }
      },
      "68": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "69": {
        start: {
          line: 151,
          column: 44
        },
        end: {
          line: 151,
          column: 88
        }
      },
      "70": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "71": {
        start: {
          line: 160,
          column: 74
        },
        end: {
          line: 160,
          column: 118
        }
      },
      "72": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "73": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 26
        }
      },
      "74": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "75": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 193,
          column: 15
        }
      },
      "76": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "77": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 57
        }
      },
      "78": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 26
        }
      },
      "79": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 59
        }
      },
      "80": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "81": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 77
        }
      },
      "82": {
        start: {
          line: 205,
          column: 41
        },
        end: {
          line: 205,
          column: 75
        }
      },
      "83": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "84": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 77
        }
      },
      "85": {
        start: {
          line: 208,
          column: 41
        },
        end: {
          line: 208,
          column: 75
        }
      },
      "86": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "87": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "88": {
        start: {
          line: 211,
          column: 41
        },
        end: {
          line: 211,
          column: 73
        }
      },
      "89": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 21
        }
      },
      "90": {
        start: {
          line: 219,
          column: 21
        },
        end: {
          line: 219,
          column: 51
        }
      },
      "91": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "92": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 25
        }
      },
      "93": {
        start: {
          line: 223,
          column: 28
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "94": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 52
        }
      },
      "95": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 178
        }
      },
      "96": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "97": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 20
        }
      },
      "98": {
        start: {
          line: 237,
          column: 22
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "99": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "100": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 241,
          column: 60
        }
      },
      "101": {
        start: {
          line: 240,
          column: 47
        },
        end: {
          line: 241,
          column: 58
        }
      },
      "102": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "103": {
        start: {
          line: 244,
          column: 28
        },
        end: {
          line: 244,
          column: 64
        }
      },
      "104": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 78
        }
      },
      "105": {
        start: {
          line: 245,
          column: 47
        },
        end: {
          line: 245,
          column: 76
        }
      },
      "106": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 248,
          column: 41
        }
      },
      "107": {
        start: {
          line: 249,
          column: 32
        },
        end: {
          line: 249,
          column: 98
        }
      },
      "108": {
        start: {
          line: 249,
          column: 64
        },
        end: {
          line: 249,
          column: 94
        }
      },
      "109": {
        start: {
          line: 250,
          column: 35
        },
        end: {
          line: 250,
          column: 159
        }
      },
      "110": {
        start: {
          line: 250,
          column: 67
        },
        end: {
          line: 250,
          column: 155
        }
      },
      "111": {
        start: {
          line: 250,
          column: 103
        },
        end: {
          line: 250,
          column: 147
        }
      },
      "112": {
        start: {
          line: 251,
          column: 31
        },
        end: {
          line: 251,
          column: 151
        }
      },
      "113": {
        start: {
          line: 251,
          column: 63
        },
        end: {
          line: 251,
          column: 147
        }
      },
      "114": {
        start: {
          line: 251,
          column: 99
        },
        end: {
          line: 251,
          column: 139
        }
      },
      "115": {
        start: {
          line: 252,
          column: 33
        },
        end: {
          line: 252,
          column: 109
        }
      },
      "116": {
        start: {
          line: 252,
          column: 65
        },
        end: {
          line: 252,
          column: 87
        }
      },
      "117": {
        start: {
          line: 254,
          column: 32
        },
        end: {
          line: 254,
          column: 41
        }
      },
      "118": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "119": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 265,
          column: 15
        }
      },
      "120": {
        start: {
          line: 257,
          column: 28
        },
        end: {
          line: 257,
          column: 44
        }
      },
      "121": {
        start: {
          line: 258,
          column: 32
        },
        end: {
          line: 258,
          column: 56
        }
      },
      "122": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 264,
          column: 17
        }
      },
      "123": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 36
        }
      },
      "124": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 263,
          column: 76
        }
      },
      "125": {
        start: {
          line: 267,
          column: 30
        },
        end: {
          line: 275,
          column: 25
        }
      },
      "126": {
        start: {
          line: 268,
          column: 38
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "127": {
        start: {
          line: 274,
          column: 28
        },
        end: {
          line: 274,
          column: 45
        }
      },
      "128": {
        start: {
          line: 277,
          column: 32
        },
        end: {
          line: 277,
          column: 69
        }
      },
      "129": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 289,
          column: 10
        }
      },
      "130": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 295,
          column: 56
        }
      },
      "131": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "132": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "133": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "134": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 43
        }
      },
      "135": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 54
        }
      },
      "136": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "137": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 61
        }
      },
      "138": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 41
        }
      },
      "139": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 54
        }
      },
      "140": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 313,
          column: 15
        }
      },
      "141": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 38
        }
      },
      "142": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 54
        }
      },
      "143": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 321,
          column: 15
        }
      },
      "144": {
        start: {
          line: 328,
          column: 22
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "145": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 429,
          column: 11
        }
      },
      "146": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 50
        }
      },
      "147": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 75
        }
      },
      "148": {
        start: {
          line: 436,
          column: 30
        },
        end: {
          line: 436,
          column: 61
        }
      },
      "149": {
        start: {
          line: 437,
          column: 20
        },
        end: {
          line: 437,
          column: 59
        }
      },
      "150": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 98
        }
      },
      "151": {
        start: {
          line: 439,
          column: 37
        },
        end: {
          line: 439,
          column: 96
        }
      },
      "152": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "153": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 74
        }
      },
      "154": {
        start: {
          line: 442,
          column: 41
        },
        end: {
          line: 442,
          column: 72
        }
      },
      "155": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "156": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 82
        }
      },
      "157": {
        start: {
          line: 446,
          column: 41
        },
        end: {
          line: 446,
          column: 80
        }
      },
      "158": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 21
        }
      },
      "159": {
        start: {
          line: 454,
          column: 27
        },
        end: {
          line: 454,
          column: 29
        }
      },
      "160": {
        start: {
          line: 455,
          column: 22
        },
        end: {
          line: 455,
          column: 41
        }
      },
      "161": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 473,
          column: 11
        }
      },
      "162": {
        start: {
          line: 457,
          column: 28
        },
        end: {
          line: 457,
          column: 55
        }
      },
      "163": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "164": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 471,
          column: 19
        }
      },
      "165": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 26
        }
      },
      "166": {
        start: {
          line: 480,
          column: 20
        },
        end: {
          line: 480,
          column: 21
        }
      },
      "167": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 506,
          column: 11
        }
      },
      "168": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 498,
          column: 13
        }
      },
      "169": {
        start: {
          line: 484,
          column: 20
        },
        end: {
          line: 484,
          column: 32
        }
      },
      "170": {
        start: {
          line: 485,
          column: 20
        },
        end: {
          line: 485,
          column: 26
        }
      },
      "171": {
        start: {
          line: 487,
          column: 20
        },
        end: {
          line: 487,
          column: 31
        }
      },
      "172": {
        start: {
          line: 488,
          column: 20
        },
        end: {
          line: 488,
          column: 26
        }
      },
      "173": {
        start: {
          line: 490,
          column: 20
        },
        end: {
          line: 490,
          column: 31
        }
      },
      "174": {
        start: {
          line: 491,
          column: 20
        },
        end: {
          line: 491,
          column: 26
        }
      },
      "175": {
        start: {
          line: 493,
          column: 20
        },
        end: {
          line: 493,
          column: 31
        }
      },
      "176": {
        start: {
          line: 494,
          column: 20
        },
        end: {
          line: 494,
          column: 26
        }
      },
      "177": {
        start: {
          line: 496,
          column: 20
        },
        end: {
          line: 496,
          column: 33
        }
      },
      "178": {
        start: {
          line: 497,
          column: 20
        },
        end: {
          line: 497,
          column: 26
        }
      },
      "179": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 505,
          column: 13
        }
      },
      "180": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 29
        }
      },
      "181": {
        start: {
          line: 503,
          column: 17
        },
        end: {
          line: 505,
          column: 13
        }
      },
      "182": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 504,
          column: 29
        }
      },
      "183": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 507,
          column: 60
        }
      },
      "184": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 516,
          column: 9
        }
      },
      "185": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 26
        }
      },
      "186": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "187": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 28
        }
      },
      "188": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 21
        }
      },
      "189": {
        start: {
          line: 526,
          column: 32
        },
        end: {
          line: 526,
          column: 34
        }
      },
      "190": {
        start: {
          line: 527,
          column: 30
        },
        end: {
          line: 527,
          column: 154
        }
      },
      "191": {
        start: {
          line: 527,
          column: 62
        },
        end: {
          line: 527,
          column: 150
        }
      },
      "192": {
        start: {
          line: 527,
          column: 98
        },
        end: {
          line: 527,
          column: 142
        }
      },
      "193": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "194": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 107
        }
      },
      "195": {
        start: {
          line: 531,
          column: 26
        },
        end: {
          line: 531,
          column: 146
        }
      },
      "196": {
        start: {
          line: 531,
          column: 58
        },
        end: {
          line: 531,
          column: 142
        }
      },
      "197": {
        start: {
          line: 531,
          column: 94
        },
        end: {
          line: 531,
          column: 134
        }
      },
      "198": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 534,
          column: 9
        }
      },
      "199": {
        start: {
          line: 533,
          column: 12
        },
        end: {
          line: 533,
          column: 100
        }
      },
      "200": {
        start: {
          line: 535,
          column: 26
        },
        end: {
          line: 535,
          column: 101
        }
      },
      "201": {
        start: {
          line: 535,
          column: 49
        },
        end: {
          line: 535,
          column: 100
        }
      },
      "202": {
        start: {
          line: 535,
          column: 77
        },
        end: {
          line: 535,
          column: 99
        }
      },
      "203": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "204": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 96
        }
      },
      "205": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 31
        }
      },
      "206": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 81
        }
      },
      "207": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 93
        }
      },
      "208": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 68
        }
      },
      "209": {
        start: {
          line: 554,
          column: 0
        },
        end: {
          line: 554,
          column: 44
        }
      },
      "210": {
        start: {
          line: 556,
          column: 0
        },
        end: {
          line: 556,
          column: 58
        }
      },
      "211": {
        start: {
          line: 558,
          column: 0
        },
        end: {
          line: 558,
          column: 98
        }
      },
      "212": {
        start: {
          line: 559,
          column: 0
        },
        end: {
          line: 559,
          column: 100
        }
      },
      "213": {
        start: {
          line: 560,
          column: 0
        },
        end: {
          line: 560,
          column: 84
        }
      },
      "214": {
        start: {
          line: 561,
          column: 0
        },
        end: {
          line: 561,
          column: 100
        }
      },
      "215": {
        start: {
          line: 562,
          column: 0
        },
        end: {
          line: 562,
          column: 112
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 1
          },
          end: {
            line: 18,
            column: 2
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 1
          },
          end: {
            line: 32,
            column: 2
          }
        },
        loc: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 78,
            column: 44
          }
        },
        loc: {
          start: {
            line: 78,
            column: 52
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 21
          }
        },
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 100,
            column: 64
          }
        },
        line: 100
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 101,
            column: 47
          },
          end: {
            line: 101,
            column: 48
          }
        },
        loc: {
          start: {
            line: 101,
            column: 64
          },
          end: {
            line: 101,
            column: 94
          }
        },
        line: 101
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 102,
            column: 50
          },
          end: {
            line: 102,
            column: 51
          }
        },
        loc: {
          start: {
            line: 102,
            column: 67
          },
          end: {
            line: 102,
            column: 155
          }
        },
        line: 102
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 102,
            column: 98
          },
          end: {
            line: 102,
            column: 99
          }
        },
        loc: {
          start: {
            line: 102,
            column: 103
          },
          end: {
            line: 102,
            column: 147
          }
        },
        line: 102
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 47
          }
        },
        loc: {
          start: {
            line: 103,
            column: 63
          },
          end: {
            line: 103,
            column: 147
          }
        },
        line: 103
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 103,
            column: 94
          },
          end: {
            line: 103,
            column: 95
          }
        },
        loc: {
          start: {
            line: 103,
            column: 99
          },
          end: {
            line: 103,
            column: 139
          }
        },
        line: 103
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 104,
            column: 42
          }
        },
        loc: {
          start: {
            line: 104,
            column: 58
          },
          end: {
            line: 104,
            column: 80
          }
        },
        line: 104
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 52
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 120
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 40
          }
        },
        loc: {
          start: {
            line: 151,
            column: 44
          },
          end: {
            line: 151,
            column: 88
          }
        },
        line: 151
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 160,
            column: 69
          },
          end: {
            line: 160,
            column: 70
          }
        },
        loc: {
          start: {
            line: 160,
            column: 74
          },
          end: {
            line: 160,
            column: 118
          }
        },
        line: 160
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 202
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 205,
            column: 33
          },
          end: {
            line: 205,
            column: 34
          }
        },
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 75
          }
        },
        line: 205
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 208,
            column: 34
          }
        },
        loc: {
          start: {
            line: 208,
            column: 41
          },
          end: {
            line: 208,
            column: 75
          }
        },
        line: 208
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 34
          }
        },
        loc: {
          start: {
            line: 211,
            column: 41
          },
          end: {
            line: 211,
            column: 73
          }
        },
        line: 211
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 46
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 218
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 47
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 236
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 240,
            column: 37
          },
          end: {
            line: 240,
            column: 38
          }
        },
        loc: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 241,
            column: 58
          }
        },
        line: 240
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 245,
            column: 37
          },
          end: {
            line: 245,
            column: 38
          }
        },
        loc: {
          start: {
            line: 245,
            column: 47
          },
          end: {
            line: 245,
            column: 76
          }
        },
        line: 245
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 249,
            column: 47
          },
          end: {
            line: 249,
            column: 48
          }
        },
        loc: {
          start: {
            line: 249,
            column: 64
          },
          end: {
            line: 249,
            column: 94
          }
        },
        line: 249
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 250,
            column: 50
          },
          end: {
            line: 250,
            column: 51
          }
        },
        loc: {
          start: {
            line: 250,
            column: 67
          },
          end: {
            line: 250,
            column: 155
          }
        },
        line: 250
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 250,
            column: 98
          },
          end: {
            line: 250,
            column: 99
          }
        },
        loc: {
          start: {
            line: 250,
            column: 103
          },
          end: {
            line: 250,
            column: 147
          }
        },
        line: 250
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 251,
            column: 46
          },
          end: {
            line: 251,
            column: 47
          }
        },
        loc: {
          start: {
            line: 251,
            column: 63
          },
          end: {
            line: 251,
            column: 147
          }
        },
        line: 251
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 251,
            column: 94
          },
          end: {
            line: 251,
            column: 95
          }
        },
        loc: {
          start: {
            line: 251,
            column: 99
          },
          end: {
            line: 251,
            column: 139
          }
        },
        line: 251
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 252,
            column: 48
          },
          end: {
            line: 252,
            column: 49
          }
        },
        loc: {
          start: {
            line: 252,
            column: 65
          },
          end: {
            line: 252,
            column: 87
          }
        },
        line: 252
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 255,
            column: 24
          },
          end: {
            line: 255,
            column: 25
          }
        },
        loc: {
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 255
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 256,
            column: 38
          },
          end: {
            line: 256,
            column: 39
          }
        },
        loc: {
          start: {
            line: 256,
            column: 51
          },
          end: {
            line: 265,
            column: 13
          }
        },
        line: 256
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 268,
            column: 17
          },
          end: {
            line: 268,
            column: 18
          }
        },
        loc: {
          start: {
            line: 268,
            column: 38
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 268
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 274,
            column: 18
          },
          end: {
            line: 274,
            column: 19
          }
        },
        loc: {
          start: {
            line: 274,
            column: 28
          },
          end: {
            line: 274,
            column: 45
          }
        },
        line: 274
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 34
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 294
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        loc: {
          start: {
            line: 327,
            column: 30
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 327
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 427,
            column: 22
          },
          end: {
            line: 427,
            column: 23
          }
        },
        loc: {
          start: {
            line: 427,
            column: 30
          },
          end: {
            line: 429,
            column: 9
          }
        },
        line: 427
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 42
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 435
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 439,
            column: 29
          },
          end: {
            line: 439,
            column: 30
          }
        },
        loc: {
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 439,
            column: 96
          }
        },
        line: 439
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 442,
            column: 33
          },
          end: {
            line: 442,
            column: 34
          }
        },
        loc: {
          start: {
            line: 442,
            column: 41
          },
          end: {
            line: 442,
            column: 72
          }
        },
        line: 442
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 446,
            column: 33
          },
          end: {
            line: 446,
            column: 34
          }
        },
        loc: {
          start: {
            line: 446,
            column: 41
          },
          end: {
            line: 446,
            column: 80
          }
        },
        line: 446
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 453,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        loc: {
          start: {
            line: 453,
            column: 31
          },
          end: {
            line: 475,
            column: 5
          }
        },
        line: 453
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 456,
            column: 22
          },
          end: {
            line: 456,
            column: 23
          }
        },
        loc: {
          start: {
            line: 456,
            column: 43
          },
          end: {
            line: 473,
            column: 9
          }
        },
        line: 456
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 479,
            column: 4
          },
          end: {
            line: 479,
            column: 5
          }
        },
        loc: {
          start: {
            line: 479,
            column: 35
          },
          end: {
            line: 508,
            column: 5
          }
        },
        line: 479
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 481,
            column: 27
          },
          end: {
            line: 481,
            column: 28
          }
        },
        loc: {
          start: {
            line: 481,
            column: 40
          },
          end: {
            line: 506,
            column: 9
          }
        },
        line: 481
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 37
          },
          end: {
            line: 521,
            column: 5
          }
        },
        line: 512
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 37
          },
          end: {
            line: 540,
            column: 5
          }
        },
        line: 525
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 527,
            column: 45
          },
          end: {
            line: 527,
            column: 46
          }
        },
        loc: {
          start: {
            line: 527,
            column: 62
          },
          end: {
            line: 527,
            column: 150
          }
        },
        line: 527
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 527,
            column: 93
          },
          end: {
            line: 527,
            column: 94
          }
        },
        loc: {
          start: {
            line: 527,
            column: 98
          },
          end: {
            line: 527,
            column: 142
          }
        },
        line: 527
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 531,
            column: 41
          },
          end: {
            line: 531,
            column: 42
          }
        },
        loc: {
          start: {
            line: 531,
            column: 58
          },
          end: {
            line: 531,
            column: 142
          }
        },
        line: 531
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 531,
            column: 89
          },
          end: {
            line: 531,
            column: 90
          }
        },
        loc: {
          start: {
            line: 531,
            column: 94
          },
          end: {
            line: 531,
            column: 134
          }
        },
        line: 531
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 535,
            column: 39
          },
          end: {
            line: 535,
            column: 40
          }
        },
        loc: {
          start: {
            line: 535,
            column: 49
          },
          end: {
            line: 535,
            column: 100
          }
        },
        line: 535
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 535,
            column: 72
          },
          end: {
            line: 535,
            column: 73
          }
        },
        loc: {
          start: {
            line: 535,
            column: 77
          },
          end: {
            line: 535,
            column: 99
          }
        },
        line: 535
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 544,
            column: 4
          },
          end: {
            line: 544,
            column: 5
          }
        },
        loc: {
          start: {
            line: 544,
            column: 23
          },
          end: {
            line: 546,
            column: 5
          }
        },
        line: 544
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 547,
            column: 4
          },
          end: {
            line: 547,
            column: 5
          }
        },
        loc: {
          start: {
            line: 547,
            column: 29
          },
          end: {
            line: 549,
            column: 5
          }
        },
        line: 547
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 550,
            column: 5
          }
        },
        loc: {
          start: {
            line: 550,
            column: 31
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 550
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 3
          },
          end: {
            line: 29,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 3
          },
          end: {
            line: 29,
            column: 23
          }
        }, {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 84
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 3
          },
          end: {
            line: 38,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 3
          },
          end: {
            line: 38,
            column: 23
          }
        }, {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 84
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 104,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 104,
            column: 101
          }
        }, {
          start: {
            line: 104,
            column: 105
          },
          end: {
            line: 104,
            column: 106
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 120,
            column: 48
          },
          end: {
            line: 120,
            column: 50
          }
        }],
        line: 120
      },
      "6": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "7": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "8": {
        loc: {
          start: {
            line: 202,
            column: 21
          },
          end: {
            line: 202,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 31
          },
          end: {
            line: 202,
            column: 33
          }
        }],
        line: 202
      },
      "9": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "10": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "11": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "12": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "13": {
        loc: {
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 236,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 236,
            column: 43
          },
          end: {
            line: 236,
            column: 45
          }
        }],
        line: 236
      },
      "14": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "15": {
        loc: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 241,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 91
          }
        }, {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 241,
            column: 58
          }
        }],
        line: 240
      },
      "16": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "17": {
        loc: {
          start: {
            line: 252,
            column: 33
          },
          end: {
            line: 252,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 33
          },
          end: {
            line: 252,
            column: 104
          }
        }, {
          start: {
            line: 252,
            column: 108
          },
          end: {
            line: 252,
            column: 109
          }
        }],
        line: 252
      },
      "18": {
        loc: {
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        }, {
          start: {
            line: 262,
            column: 21
          },
          end: {
            line: 264,
            column: 17
          }
        }],
        line: 259
      },
      "19": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "20": {
        loc: {
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 439,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 439,
            column: 80
          }
        }, {
          start: {
            line: 439,
            column: 84
          },
          end: {
            line: 439,
            column: 96
          }
        }],
        line: 439
      },
      "21": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "22": {
        loc: {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 441,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 441,
            column: 25
          }
        }, {
          start: {
            line: 441,
            column: 29
          },
          end: {
            line: 441,
            column: 53
          }
        }],
        line: 441
      },
      "23": {
        loc: {
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "24": {
        loc: {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 32
          }
        }, {
          start: {
            line: 445,
            column: 36
          },
          end: {
            line: 445,
            column: 67
          }
        }],
        line: 445
      },
      "25": {
        loc: {
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 498,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 483,
            column: 16
          },
          end: {
            line: 485,
            column: 26
          }
        }, {
          start: {
            line: 486,
            column: 16
          },
          end: {
            line: 488,
            column: 26
          }
        }, {
          start: {
            line: 489,
            column: 16
          },
          end: {
            line: 491,
            column: 26
          }
        }, {
          start: {
            line: 492,
            column: 16
          },
          end: {
            line: 494,
            column: 26
          }
        }, {
          start: {
            line: 495,
            column: 16
          },
          end: {
            line: 497,
            column: 26
          }
        }],
        line: 482
      },
      "26": {
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 505,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 505,
            column: 13
          }
        }, {
          start: {
            line: 503,
            column: 17
          },
          end: {
            line: 505,
            column: 13
          }
        }],
        line: 500
      },
      "27": {
        loc: {
          start: {
            line: 503,
            column: 17
          },
          end: {
            line: 505,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 17
          },
          end: {
            line: 505,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "28": {
        loc: {
          start: {
            line: 507,
            column: 24
          },
          end: {
            line: 507,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 507,
            column: 24
          },
          end: {
            line: 507,
            column: 49
          }
        }, {
          start: {
            line: 507,
            column: 53
          },
          end: {
            line: 507,
            column: 54
          }
        }],
        line: 507
      },
      "29": {
        loc: {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 516,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 516,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "30": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "31": {
        loc: {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 517,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 517,
            column: 29
          }
        }, {
          start: {
            line: 517,
            column: 33
          },
          end: {
            line: 517,
            column: 76
          }
        }],
        line: 517
      },
      "32": {
        loc: {
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 528
      },
      "33": {
        loc: {
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 534,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 534,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "34": {
        loc: {
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "35": {
        loc: {
          start: {
            line: 551,
            column: 15
          },
          end: {
            line: 551,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 551,
            column: 15
          },
          end: {
            line: 551,
            column: 61
          }
        }, {
          start: {
            line: 551,
            column: 65
          },
          end: {
            line: 551,
            column: 67
          }
        }],
        line: 551
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\security\\code-review-system.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\security\\code-review-system.ts"],
      sourcesContent: ["/**\n * @file lib/security/code-review-system.ts\n * @description Secure Code Review System - Enterprise-grade automated security code analysis\n * @author Security Team\n * @lastUpdate 2024-12-19\n * @security Production-level security code review implementation\n */\n\nimport { Logger } from '@/lib/utils/logger';\nimport { enhancedCacheManager } from '@/lib/cache/enhanced-cache-manager';\nimport { securityAuditSystem, SecurityEventType, SecuritySeverity } from './security-audit-system';\nimport { getErrorMessage } from '@/lib/utils/error-handler';\n\nconst logger = new Logger('CodeReviewSystem');\n\n// Security Rule Categories\nexport enum SecurityRuleCategory {\n  INPUT_VALIDATION = 'input_validation',\n  OUTPUT_ENCODING = 'output_encoding',\n  ACCESS_CONTROL = 'access_control',\n  CRYPTOGRAPHY = 'cryptography',\n  ERROR_HANDLING = 'error_handling',\n  LOGGING_AUDITING = 'logging_auditing',\n  DATA_PROTECTION = 'data_protection',\n  SESSION_MANAGEMENT = 'session_management',\n  INJECTION_PREVENTION = 'injection_prevention',\n  CONFIGURATION = 'configuration',\n}\n\n// Security Rule Severity\nexport enum SecurityRuleSeverity {\n  INFO = 'info',\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical',\n}\n\n// Security Rule Interface\nexport interface SecurityRule {\n  id: string;\n  name: string;\n  category: SecurityRuleCategory;\n  severity: SecurityRuleSeverity;\n  description: string;\n  pattern: RegExp;\n  fileExtensions: string[];\n  enabled: boolean;\n  remediation: string;\n  references: string[];\n}\n\n// Code Review Result\nexport interface CodeReviewResult {\n  fileId: string;\n  filePath: string;\n  violations: SecurityViolation[];\n  riskScore: number;\n  linesScanned: number;\n  scanDuration: number;\n  reviewedAt: Date;\n  reviewedBy: 'automated' | string;\n}\n\n// Security Violation\nexport interface SecurityViolation {\n  ruleId: string;\n  ruleName: string;\n  category: SecurityRuleCategory;\n  severity: SecurityRuleSeverity;\n  line: number;\n  column: number;\n  code: string;\n  message: string;\n  remediation: string;\n  references: string[];\n  confidence: 'low' | 'medium' | 'high';\n}\n\n// Review Request\nexport interface ReviewRequest {\n  id: string;\n  files: Array<{\n    path: string;\n    content: string;\n  }>;\n  submittedBy: string;\n  submittedAt: Date;\n  status: 'pending' | 'in_progress' | 'completed' | 'failed';\n  priority: 'low' | 'medium' | 'high' | 'critical';\n}\n\nexport class CodeReviewSystem {\n  private static instance: CodeReviewSystem;\n  private securityRules: Map<string, SecurityRule> = new Map();\n  private reviewResults: Map<string, CodeReviewResult> = new Map();\n  private activeReviews: Map<string, ReviewRequest> = new Map();\n\n  private constructor() {\n    this.initializeSecurityRules();\n  }\n\n  public static getInstance(): CodeReviewSystem {\n    if (!CodeReviewSystem.instance) {\n      CodeReviewSystem.instance = new CodeReviewSystem();\n    }\n    return CodeReviewSystem.instance;\n  }\n\n  /**\n   * Submit code for security review\n   */\n  async submitForReview(request: Omit<ReviewRequest, 'id' | 'submittedAt' | 'status'>): Promise<string> {\n    const reviewId = this.generateReviewId();\n    \n    const reviewRequest: ReviewRequest = {\n      id: reviewId,\n      submittedAt: new Date(),\n      status: 'pending',\n      ...request,\n    };\n\n    this.activeReviews.set(reviewId, reviewRequest);\n\n    // Log security event\n    await securityAuditSystem.recordEvent({\n      type: SecurityEventType.SECURITY_SCAN,\n      severity: SecuritySeverity.LOW,\n      ip: '127.0.0.1',\n      details: {\n        reviewId,\n        fileCount: request.files.length,\n        submittedBy: request.submittedBy,\n        priority: request.priority,\n      },\n      riskScore: 1,\n    });\n\n    // Start review process asynchronously\n    this.processReview(reviewId).catch(error => {\n      logger.error('Failed to process code review', {\n        reviewId,\n        error: getErrorMessage(error),\n      });\n    });\n\n    logger.info('Code review submitted', {\n      reviewId,\n      fileCount: request.files.length,\n      submittedBy: request.submittedBy,\n    });\n\n    return reviewId;\n  }\n\n  /**\n   * Get review status and results\n   */\n  async getReviewResults(reviewId: string): Promise<{\n    request: ReviewRequest;\n    results: CodeReviewResult[];\n    summary: {\n      totalViolations: number;\n      criticalViolations: number;\n      highViolations: number;\n      riskScore: number;\n      status: string;\n    };\n  } | null> {\n    const request = this.activeReviews.get(reviewId);\n    if (!request) {\n      return null;\n    }\n\n    const results = Array.from(this.reviewResults.values())\n      .filter(result => result.fileId.startsWith(reviewId));\n\n    const totalViolations = results.reduce((sum, result) => sum + result.violations.length, 0);\n    const criticalViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length, 0);\n    const highViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.HIGH).length, 0);\n    const riskScore = results.reduce((sum, result) => sum + result.riskScore, 0) / results.length || 0;\n\n    return {\n      request,\n      results,\n      summary: {\n        totalViolations,\n        criticalViolations,\n        highViolations,\n        riskScore,\n        status: request.status,\n      },\n    };\n  }\n\n  /**\n   * Scan single file for security issues\n   */\n  async scanFile(filePath: string, content: string, options: {\n    rules?: string[];\n    excludeRules?: string[];\n  } = {}): Promise<CodeReviewResult> {\n    const startTime = Date.now();\n    const fileId = this.generateFileId(filePath);\n    \n    const result: CodeReviewResult = {\n      fileId,\n      filePath,\n      violations: [],\n      riskScore: 0,\n      linesScanned: content.split('\\n').length,\n      scanDuration: 0,\n      reviewedAt: new Date(),\n      reviewedBy: 'automated',\n    };\n\n    try {\n      // Get applicable rules\n      const applicableRules = this.getApplicableRules(filePath, options);\n      \n      // Scan for violations\n      for (const rule of applicableRules) {\n        const violations = this.scanForRule(content, rule);\n        result.violations.push(...violations);\n      }\n\n      // Calculate risk score\n      result.riskScore = this.calculateRiskScore(result.violations);\n      result.scanDuration = Date.now() - startTime;\n\n      // Store result\n      this.reviewResults.set(fileId, result);\n\n      // Cache high-risk results\n      if (result.riskScore >= 7) {\n        await enhancedCacheManager.set(\n          `security:code-review:high-risk:${fileId}`,\n          result,\n          { ttl: 86400000, tags: ['security', 'code-review', 'high-risk'] }\n        );\n      }\n\n      // Log security event for high-risk findings\n      if (result.violations.some(v => v.severity === SecurityRuleSeverity.CRITICAL)) {\n        await securityAuditSystem.recordEvent({\n          type: SecurityEventType.SECURITY_SCAN,\n          severity: SecuritySeverity.HIGH,\n          ip: '127.0.0.1',\n          details: {\n            fileId,\n            filePath,\n            violationCount: result.violations.length,\n            criticalViolations: result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length,\n            riskScore: result.riskScore,\n          },\n          riskScore: result.riskScore,\n        });\n      }\n\n      logger.info('File security scan completed', {\n        fileId,\n        filePath,\n        violations: result.violations.length,\n        riskScore: result.riskScore,\n        scanDuration: result.scanDuration,\n      });\n\n      return result;\n\n    } catch (error) {\n      logger.error('File security scan failed', {\n        fileId,\n        filePath,\n        error: getErrorMessage(error),\n      });\n\n      result.violations.push({\n        ruleId: 'scan-error',\n        ruleName: 'Scan Error',\n        category: SecurityRuleCategory.ERROR_HANDLING,\n        severity: SecurityRuleSeverity.HIGH,\n        line: 1,\n        column: 1,\n        code: '',\n        message: 'Security scan failed: ' + getErrorMessage(error),\n        remediation: 'Review file manually for security issues',\n        references: [],\n        confidence: 'high',\n      });\n\n      result.riskScore = 8;\n      result.scanDuration = Date.now() - startTime;\n\n      return result;\n    }\n  }\n\n  /**\n   * Get security rules\n   */\n  getSecurityRules(options: {\n    category?: SecurityRuleCategory;\n    severity?: SecurityRuleSeverity;\n    enabled?: boolean;\n  } = {}): SecurityRule[] {\n    let rules = Array.from(this.securityRules.values());\n\n    if (options.category) {\n      rules = rules.filter(rule => rule.category === options.category);\n    }\n\n    if (options.severity) {\n      rules = rules.filter(rule => rule.severity === options.severity);\n    }\n\n    if (options.enabled !== undefined) {\n      rules = rules.filter(rule => rule.enabled === options.enabled);\n    }\n\n    return rules;\n  }\n\n  /**\n   * Update security rule\n   */\n  async updateSecurityRule(ruleId: string, updates: Partial<SecurityRule>): Promise<boolean> {\n    const rule = this.securityRules.get(ruleId);\n    if (!rule) {\n      return false;\n    }\n\n    const updatedRule = { ...rule, ...updates };\n    this.securityRules.set(ruleId, updatedRule);\n\n    // Cache updated rules\n    await enhancedCacheManager.set(\n      'security:rules:updated',\n      Array.from(this.securityRules.values()),\n      { ttl: 3600000, tags: ['security', 'rules'] }\n    );\n\n    logger.info('Security rule updated', {\n      ruleId,\n      updates: Object.keys(updates),\n    });\n\n    return true;\n  }\n\n  /**\n   * Generate security report\n   */\n  async generateSecurityReport(options: {\n    timeRange?: { start: Date; end: Date };\n    filePattern?: string;\n    severity?: SecurityRuleSeverity;\n  } = {}): Promise<{\n    summary: {\n      totalScans: number;\n      totalViolations: number;\n      criticalViolations: number;\n      highViolations: number;\n      averageRiskScore: number;\n    };\n    topViolations: Array<{\n      ruleId: string;\n      ruleName: string;\n      count: number;\n      severity: SecurityRuleSeverity;\n    }>;\n    trends: Array<{\n      date: string;\n      scans: number;\n      violations: number;\n      riskScore: number;\n    }>;\n    recommendations: string[];\n  }> {\n    let results = Array.from(this.reviewResults.values());\n\n    // Apply filters\n    if (options.timeRange) {\n      results = results.filter(result => \n        result.reviewedAt >= options.timeRange!.start && \n        result.reviewedAt <= options.timeRange!.end\n      );\n    }\n\n    if (options.filePattern) {\n      const pattern = new RegExp(options.filePattern, 'i');\n      results = results.filter(result => pattern.test(result.filePath));\n    }\n\n    // Calculate summary\n    const totalScans = results.length;\n    const totalViolations = results.reduce((sum, result) => sum + result.violations.length, 0);\n    const criticalViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length, 0);\n    const highViolations = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.HIGH).length, 0);\n    const averageRiskScore = results.reduce((sum, result) => sum + result.riskScore, 0) / totalScans || 0;\n\n    // Top violations\n    const violationCounts = new Map<string, { count: number; rule: SecurityViolation }>();\n    results.forEach(result => {\n      result.violations.forEach(violation => {\n        const key = violation.ruleId;\n        const current = violationCounts.get(key);\n        if (current) {\n          current.count++;\n        } else {\n          violationCounts.set(key, { count: 1, rule: violation });\n        }\n      });\n    });\n\n    const topViolations = Array.from(violationCounts.entries())\n      .map(([ruleId, data]) => ({\n        ruleId,\n        ruleName: data.rule.ruleName,\n        count: data.count,\n        severity: data.rule.severity,\n      }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10);\n\n    // Generate recommendations\n    const recommendations = this.generateRecommendations(results);\n\n    return {\n      summary: {\n        totalScans,\n        totalViolations,\n        criticalViolations,\n        highViolations,\n        averageRiskScore,\n      },\n      topViolations,\n      trends: [], // Implement trend analysis if needed\n      recommendations,\n    };\n  }\n\n  /**\n   * Private: Process review request\n   */\n  private async processReview(reviewId: string): Promise<void> {\n    const request = this.activeReviews.get(reviewId);\n    if (!request) {\n      return;\n    }\n\n    try {\n      // Update status\n      request.status = 'in_progress';\n      this.activeReviews.set(reviewId, request);\n\n      // Scan all files\n      for (const file of request.files) {\n        await this.scanFile(file.path, file.content);\n      }\n\n      // Update status\n      request.status = 'completed';\n      this.activeReviews.set(reviewId, request);\n\n      logger.info('Code review completed', {\n        reviewId,\n        fileCount: request.files.length,\n      });\n\n    } catch (error) {\n      request.status = 'failed';\n      this.activeReviews.set(reviewId, request);\n\n      logger.error('Code review failed', {\n        reviewId,\n        error: getErrorMessage(error),\n      });\n    }\n  }\n\n  /**\n   * Private: Initialize security rules\n   */\n  private initializeSecurityRules(): void {\n    const rules: SecurityRule[] = [\n      // Input Validation Rules\n      {\n        id: 'no-eval',\n        name: 'Dangerous eval() Usage',\n        category: SecurityRuleCategory.INPUT_VALIDATION,\n        severity: SecurityRuleSeverity.CRITICAL,\n        description: 'Using eval() can lead to code injection vulnerabilities',\n        pattern: /\\beval\\s*\\(/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Replace eval() with safer alternatives like JSON.parse() or Function constructor',\n        references: ['https://owasp.org/www-community/attacks/Code_Injection'],\n      },\n      {\n        id: 'sql-injection-risk',\n        name: 'SQL Injection Risk',\n        category: SecurityRuleCategory.INJECTION_PREVENTION,\n        severity: SecurityRuleSeverity.HIGH,\n        description: 'Dynamic SQL construction may lead to SQL injection',\n        pattern: /['\"]\\s*\\+\\s*.*\\s*\\+\\s*['\"].*(?:SELECT|INSERT|UPDATE|DELETE|DROP)/gi,\n        fileExtensions: ['.js', '.ts', '.py', '.php', '.java'],\n        enabled: true,\n        remediation: 'Use parameterized queries or prepared statements',\n        references: ['https://owasp.org/www-community/attacks/SQL_Injection'],\n      },\n      {\n        id: 'hardcoded-secrets',\n        name: 'Hardcoded Secrets',\n        category: SecurityRuleCategory.DATA_PROTECTION,\n        severity: SecurityRuleSeverity.CRITICAL,\n        description: 'Hardcoded secrets in source code',\n        pattern: /(password|secret|key|token)\\s*[=:]\\s*['\"][^'\"]{8,}['\"]/gi,\n        fileExtensions: ['.js', '.ts', '.py', '.java', '.php', '.cs'],\n        enabled: true,\n        remediation: 'Use environment variables or secure key management systems',\n        references: ['https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure'],\n      },\n      {\n        id: 'xss-innerHTML',\n        name: 'XSS via innerHTML',\n        category: SecurityRuleCategory.OUTPUT_ENCODING,\n        severity: SecurityRuleSeverity.HIGH,\n        description: 'Using innerHTML with user input can lead to XSS',\n        pattern: /\\.innerHTML\\s*=\\s*(?!['\"]\\s*['\"])/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Use textContent or sanitize input before setting innerHTML',\n        references: ['https://owasp.org/www-community/attacks/xss/'],\n      },\n      {\n        id: 'crypto-weak-random',\n        name: 'Weak Random Number Generation',\n        category: SecurityRuleCategory.CRYPTOGRAPHY,\n        severity: SecurityRuleSeverity.MEDIUM,\n        description: 'Math.random() is not cryptographically secure',\n        pattern: /Math\\.random\\(\\)/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Use crypto.getRandomValues() for cryptographic purposes',\n        references: ['https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues'],\n      },\n      {\n        id: 'console-log-production',\n        name: 'Console Logging in Production',\n        category: SecurityRuleCategory.LOGGING_AUDITING,\n        severity: SecurityRuleSeverity.LOW,\n        description: 'Console logs may expose sensitive information',\n        pattern: /console\\.(log|debug|info|warn|error)/gi,\n        fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],\n        enabled: true,\n        remediation: 'Use proper logging framework and remove console logs in production',\n        references: ['https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring'],\n      },\n      {\n        id: 'unsafe-file-upload',\n        name: 'Unsafe File Upload',\n        category: SecurityRuleCategory.INPUT_VALIDATION,\n        severity: SecurityRuleSeverity.HIGH,\n        description: 'File upload without proper validation',\n        pattern: /\\.upload\\(|multer\\(|formidable\\(/gi,\n        fileExtensions: ['.js', '.ts'],\n        enabled: true,\n        remediation: 'Implement file type validation, size limits, and virus scanning',\n        references: ['https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload'],\n      },\n      {\n        id: 'jwt-no-verify',\n        name: 'JWT Without Verification',\n        category: SecurityRuleCategory.SESSION_MANAGEMENT,\n        severity: SecurityRuleSeverity.CRITICAL,\n        description: 'JWT token used without proper verification',\n        pattern: /jwt\\.decode\\s*\\([^,)]*\\)/gi,\n        fileExtensions: ['.js', '.ts'],\n        enabled: true,\n        remediation: 'Always verify JWT tokens using jwt.verify() with secret',\n        references: ['https://auth0.com/blog/a-look-at-the-latest-draft-for-oauth-token-exchange/'],\n      },\n    ];\n\n    rules.forEach(rule => {\n      this.securityRules.set(rule.id, rule);\n    });\n\n    logger.info('Security rules initialized', { count: rules.length });\n  }\n\n  /**\n   * Private: Get applicable rules for file\n   */\n  private getApplicableRules(filePath: string, options: {\n    rules?: string[];\n    excludeRules?: string[];\n  }): SecurityRule[] {\n    const fileExtension = this.getFileExtension(filePath);\n    let rules = Array.from(this.securityRules.values());\n\n    // Filter by file extension\n    rules = rules.filter(rule => \n      rule.fileExtensions.includes(fileExtension) && rule.enabled\n    );\n\n    // Include only specific rules if provided\n    if (options.rules && options.rules.length > 0) {\n      rules = rules.filter(rule => options.rules!.includes(rule.id));\n    }\n\n    // Exclude specific rules if provided\n    if (options.excludeRules && options.excludeRules.length > 0) {\n      rules = rules.filter(rule => !options.excludeRules!.includes(rule.id));\n    }\n\n    return rules;\n  }\n\n  /**\n   * Private: Scan content for specific rule\n   */\n  private scanForRule(content: string, rule: SecurityRule): SecurityViolation[] {\n    const violations: SecurityViolation[] = [];\n    const lines = content.split('\\n');\n\n    lines.forEach((line, lineIndex) => {\n      const matches = line.matchAll(rule.pattern);\n      \n      for (const match of matches) {\n        violations.push({\n          ruleId: rule.id,\n          ruleName: rule.name,\n          category: rule.category,\n          severity: rule.severity,\n          line: lineIndex + 1,\n          column: match.index! + 1,\n          code: line.trim(),\n          message: rule.description,\n          remediation: rule.remediation,\n          references: rule.references,\n          confidence: this.calculateConfidence(rule, match[0]),\n        });\n      }\n    });\n\n    return violations;\n  }\n\n  /**\n   * Private: Calculate risk score based on violations\n   */\n  private calculateRiskScore(violations: SecurityViolation[]): number {\n    let score = 0;\n\n    violations.forEach(violation => {\n      switch (violation.severity) {\n        case SecurityRuleSeverity.CRITICAL:\n          score += 10;\n          break;\n        case SecurityRuleSeverity.HIGH:\n          score += 6;\n          break;\n        case SecurityRuleSeverity.MEDIUM:\n          score += 3;\n          break;\n        case SecurityRuleSeverity.LOW:\n          score += 1;\n          break;\n        case SecurityRuleSeverity.INFO:\n          score += 0.5;\n          break;\n      }\n\n      // Adjust based on confidence\n      if (violation.confidence === 'high') {\n        score *= 1.2;\n      } else if (violation.confidence === 'low') {\n        score *= 0.8;\n      }\n    });\n\n    return Math.min(score / violations.length || 0, 10);\n  }\n\n  /**\n   * Private: Calculate confidence level\n   */\n  private calculateConfidence(rule: SecurityRule, match: string): 'low' | 'medium' | 'high' {\n    // Simple heuristic for confidence calculation\n    if (rule.severity === SecurityRuleSeverity.CRITICAL) {\n      return 'high';\n    }\n    \n    if (match.length > 20 || rule.severity === SecurityRuleSeverity.HIGH) {\n      return 'medium';\n    }\n    \n    return 'low';\n  }\n\n  /**\n   * Private: Generate recommendations\n   */\n  private generateRecommendations(results: CodeReviewResult[]): string[] {\n    const recommendations: string[] = [];\n    \n    const criticalCount = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.CRITICAL).length, 0);\n    \n    if (criticalCount > 0) {\n      recommendations.push(`Address ${criticalCount} critical security vulnerabilities immediately`);\n    }\n\n    const highCount = results.reduce((sum, result) => \n      sum + result.violations.filter(v => v.severity === SecurityRuleSeverity.HIGH).length, 0);\n    \n    if (highCount > 5) {\n      recommendations.push('Implement comprehensive input validation across the application');\n    }\n\n    const evalUsage = results.some(result => \n      result.violations.some(v => v.ruleId === 'no-eval'));\n    \n    if (evalUsage) {\n      recommendations.push('Eliminate all eval() usage and implement safer alternatives');\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Private: Utility methods\n   */\n  private generateReviewId(): string {\n    return `review_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateFileId(filePath: string): string {\n    return `file_${Date.now()}_${Buffer.from(filePath).toString('base64').substr(0, 8)}`;\n  }\n\n  private getFileExtension(filePath: string): string {\n    return '.' + filePath.split('.').pop()?.toLowerCase() || '';\n  }\n}\n\n// Export singleton instance\nexport const codeReviewSystem = CodeReviewSystem.getInstance();\n\n// Export convenience methods\nexport const submitForReview = codeReviewSystem.submitForReview.bind(codeReviewSystem);\nexport const getReviewResults = codeReviewSystem.getReviewResults.bind(codeReviewSystem);\nexport const scanFile = codeReviewSystem.scanFile.bind(codeReviewSystem);\nexport const getSecurityRules = codeReviewSystem.getSecurityRules.bind(codeReviewSystem);\nexport const generateSecurityReport = codeReviewSystem.generateSecurityReport.bind(codeReviewSystem);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ed3b60f0a46fc732872cc317b5163471437ac29"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fwgcuilzr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fwgcuilzr();
cov_1fwgcuilzr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fwgcuilzr().s[1]++;
exports.generateSecurityReport = exports.getSecurityRules = exports.scanFile = exports.getReviewResults = exports.submitForReview = exports.codeReviewSystem = exports.CodeReviewSystem = exports.SecurityRuleSeverity = exports.SecurityRuleCategory = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1fwgcuilzr().s[2]++, require("@/lib/utils/logger"));
const enhanced_cache_manager_1 =
/* istanbul ignore next */
(cov_1fwgcuilzr().s[3]++, require("@/lib/cache/enhanced-cache-manager"));
const security_audit_system_1 =
/* istanbul ignore next */
(cov_1fwgcuilzr().s[4]++, require("./security-audit-system"));
const error_handler_1 =
/* istanbul ignore next */
(cov_1fwgcuilzr().s[5]++, require("@/lib/utils/error-handler"));
const logger =
/* istanbul ignore next */
(cov_1fwgcuilzr().s[6]++, new logger_1.Logger('CodeReviewSystem'));
// Security Rule Categories
var SecurityRuleCategory;
/* istanbul ignore next */
cov_1fwgcuilzr().s[7]++;
(function (SecurityRuleCategory) {
  /* istanbul ignore next */
  cov_1fwgcuilzr().f[0]++;
  cov_1fwgcuilzr().s[8]++;
  SecurityRuleCategory["INPUT_VALIDATION"] = "input_validation";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[9]++;
  SecurityRuleCategory["OUTPUT_ENCODING"] = "output_encoding";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[10]++;
  SecurityRuleCategory["ACCESS_CONTROL"] = "access_control";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[11]++;
  SecurityRuleCategory["CRYPTOGRAPHY"] = "cryptography";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[12]++;
  SecurityRuleCategory["ERROR_HANDLING"] = "error_handling";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[13]++;
  SecurityRuleCategory["LOGGING_AUDITING"] = "logging_auditing";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[14]++;
  SecurityRuleCategory["DATA_PROTECTION"] = "data_protection";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[15]++;
  SecurityRuleCategory["SESSION_MANAGEMENT"] = "session_management";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[16]++;
  SecurityRuleCategory["INJECTION_PREVENTION"] = "injection_prevention";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[17]++;
  SecurityRuleCategory["CONFIGURATION"] = "configuration";
})(
/* istanbul ignore next */
(cov_1fwgcuilzr().b[0][0]++, SecurityRuleCategory) ||
/* istanbul ignore next */
(cov_1fwgcuilzr().b[0][1]++, exports.SecurityRuleCategory = SecurityRuleCategory = {}));
// Security Rule Severity
var SecurityRuleSeverity;
/* istanbul ignore next */
cov_1fwgcuilzr().s[18]++;
(function (SecurityRuleSeverity) {
  /* istanbul ignore next */
  cov_1fwgcuilzr().f[1]++;
  cov_1fwgcuilzr().s[19]++;
  SecurityRuleSeverity["INFO"] = "info";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[20]++;
  SecurityRuleSeverity["LOW"] = "low";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[21]++;
  SecurityRuleSeverity["MEDIUM"] = "medium";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[22]++;
  SecurityRuleSeverity["HIGH"] = "high";
  /* istanbul ignore next */
  cov_1fwgcuilzr().s[23]++;
  SecurityRuleSeverity["CRITICAL"] = "critical";
})(
/* istanbul ignore next */
(cov_1fwgcuilzr().b[1][0]++, SecurityRuleSeverity) ||
/* istanbul ignore next */
(cov_1fwgcuilzr().b[1][1]++, exports.SecurityRuleSeverity = SecurityRuleSeverity = {}));
class CodeReviewSystem {
  constructor() {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[2]++;
    cov_1fwgcuilzr().s[24]++;
    this.securityRules = new Map();
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[25]++;
    this.reviewResults = new Map();
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[26]++;
    this.activeReviews = new Map();
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[27]++;
    this.initializeSecurityRules();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[3]++;
    cov_1fwgcuilzr().s[28]++;
    if (!CodeReviewSystem.instance) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[2][0]++;
      cov_1fwgcuilzr().s[29]++;
      CodeReviewSystem.instance = new CodeReviewSystem();
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[2][1]++;
    }
    cov_1fwgcuilzr().s[30]++;
    return CodeReviewSystem.instance;
  }
  /**
   * Submit code for security review
   */
  async submitForReview(request) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[4]++;
    const reviewId =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[31]++, this.generateReviewId());
    const reviewRequest =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[32]++, {
      id: reviewId,
      submittedAt: new Date(),
      status: 'pending',
      ...request
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[33]++;
    this.activeReviews.set(reviewId, reviewRequest);
    // Log security event
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[34]++;
    await security_audit_system_1.securityAuditSystem.recordEvent({
      type: security_audit_system_1.SecurityEventType.SECURITY_SCAN,
      severity: security_audit_system_1.SecuritySeverity.LOW,
      ip: '127.0.0.1',
      details: {
        reviewId,
        fileCount: request.files.length,
        submittedBy: request.submittedBy,
        priority: request.priority
      },
      riskScore: 1
    });
    // Start review process asynchronously
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[35]++;
    this.processReview(reviewId).catch(error => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[5]++;
      cov_1fwgcuilzr().s[36]++;
      logger.error('Failed to process code review', {
        reviewId,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[37]++;
    logger.info('Code review submitted', {
      reviewId,
      fileCount: request.files.length,
      submittedBy: request.submittedBy
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[38]++;
    return reviewId;
  }
  /**
   * Get review status and results
   */
  async getReviewResults(reviewId) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[6]++;
    const request =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[39]++, this.activeReviews.get(reviewId));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[40]++;
    if (!request) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[3][0]++;
      cov_1fwgcuilzr().s[41]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[3][1]++;
    }
    const results =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[42]++, Array.from(this.reviewResults.values()).filter(result => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[7]++;
      cov_1fwgcuilzr().s[43]++;
      return result.fileId.startsWith(reviewId);
    }));
    const totalViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[44]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[8]++;
      cov_1fwgcuilzr().s[45]++;
      return sum + result.violations.length;
    }, 0));
    const criticalViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[46]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[9]++;
      cov_1fwgcuilzr().s[47]++;
      return sum + result.violations.filter(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[10]++;
        cov_1fwgcuilzr().s[48]++;
        return v.severity === SecurityRuleSeverity.CRITICAL;
      }).length;
    }, 0));
    const highViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[49]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[11]++;
      cov_1fwgcuilzr().s[50]++;
      return sum + result.violations.filter(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[12]++;
        cov_1fwgcuilzr().s[51]++;
        return v.severity === SecurityRuleSeverity.HIGH;
      }).length;
    }, 0));
    const riskScore =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[52]++,
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[4][0]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[13]++;
      cov_1fwgcuilzr().s[53]++;
      return sum + result.riskScore;
    }, 0) / results.length) ||
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[4][1]++, 0));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[54]++;
    return {
      request,
      results,
      summary: {
        totalViolations,
        criticalViolations,
        highViolations,
        riskScore,
        status: request.status
      }
    };
  }
  /**
   * Scan single file for security issues
   */
  async scanFile(filePath, content, options =
  /* istanbul ignore next */
  (cov_1fwgcuilzr().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[14]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[55]++, Date.now());
    const fileId =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[56]++, this.generateFileId(filePath));
    const result =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[57]++, {
      fileId,
      filePath,
      violations: [],
      riskScore: 0,
      linesScanned: content.split('\n').length,
      scanDuration: 0,
      reviewedAt: new Date(),
      reviewedBy: 'automated'
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[58]++;
    try {
      // Get applicable rules
      const applicableRules =
      /* istanbul ignore next */
      (cov_1fwgcuilzr().s[59]++, this.getApplicableRules(filePath, options));
      // Scan for violations
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[60]++;
      for (const rule of applicableRules) {
        const violations =
        /* istanbul ignore next */
        (cov_1fwgcuilzr().s[61]++, this.scanForRule(content, rule));
        /* istanbul ignore next */
        cov_1fwgcuilzr().s[62]++;
        result.violations.push(...violations);
      }
      // Calculate risk score
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[63]++;
      result.riskScore = this.calculateRiskScore(result.violations);
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[64]++;
      result.scanDuration = Date.now() - startTime;
      // Store result
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[65]++;
      this.reviewResults.set(fileId, result);
      // Cache high-risk results
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[66]++;
      if (result.riskScore >= 7) {
        /* istanbul ignore next */
        cov_1fwgcuilzr().b[6][0]++;
        cov_1fwgcuilzr().s[67]++;
        await enhanced_cache_manager_1.enhancedCacheManager.set(`security:code-review:high-risk:${fileId}`, result, {
          ttl: 86400000,
          tags: ['security', 'code-review', 'high-risk']
        });
      } else
      /* istanbul ignore next */
      {
        cov_1fwgcuilzr().b[6][1]++;
      }
      // Log security event for high-risk findings
      cov_1fwgcuilzr().s[68]++;
      if (result.violations.some(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[15]++;
        cov_1fwgcuilzr().s[69]++;
        return v.severity === SecurityRuleSeverity.CRITICAL;
      })) {
        /* istanbul ignore next */
        cov_1fwgcuilzr().b[7][0]++;
        cov_1fwgcuilzr().s[70]++;
        await security_audit_system_1.securityAuditSystem.recordEvent({
          type: security_audit_system_1.SecurityEventType.SECURITY_SCAN,
          severity: security_audit_system_1.SecuritySeverity.HIGH,
          ip: '127.0.0.1',
          details: {
            fileId,
            filePath,
            violationCount: result.violations.length,
            criticalViolations: result.violations.filter(v => {
              /* istanbul ignore next */
              cov_1fwgcuilzr().f[16]++;
              cov_1fwgcuilzr().s[71]++;
              return v.severity === SecurityRuleSeverity.CRITICAL;
            }).length,
            riskScore: result.riskScore
          },
          riskScore: result.riskScore
        });
      } else
      /* istanbul ignore next */
      {
        cov_1fwgcuilzr().b[7][1]++;
      }
      cov_1fwgcuilzr().s[72]++;
      logger.info('File security scan completed', {
        fileId,
        filePath,
        violations: result.violations.length,
        riskScore: result.riskScore,
        scanDuration: result.scanDuration
      });
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[73]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[74]++;
      logger.error('File security scan failed', {
        fileId,
        filePath,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[75]++;
      result.violations.push({
        ruleId: 'scan-error',
        ruleName: 'Scan Error',
        category: SecurityRuleCategory.ERROR_HANDLING,
        severity: SecurityRuleSeverity.HIGH,
        line: 1,
        column: 1,
        code: '',
        message: 'Security scan failed: ' + (0, error_handler_1.getErrorMessage)(error),
        remediation: 'Review file manually for security issues',
        references: [],
        confidence: 'high'
      });
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[76]++;
      result.riskScore = 8;
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[77]++;
      result.scanDuration = Date.now() - startTime;
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[78]++;
      return result;
    }
  }
  /**
   * Get security rules
   */
  getSecurityRules(options =
  /* istanbul ignore next */
  (cov_1fwgcuilzr().b[8][0]++, {})) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[17]++;
    let rules =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[79]++, Array.from(this.securityRules.values()));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[80]++;
    if (options.category) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[9][0]++;
      cov_1fwgcuilzr().s[81]++;
      rules = rules.filter(rule => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[18]++;
        cov_1fwgcuilzr().s[82]++;
        return rule.category === options.category;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[9][1]++;
    }
    cov_1fwgcuilzr().s[83]++;
    if (options.severity) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[10][0]++;
      cov_1fwgcuilzr().s[84]++;
      rules = rules.filter(rule => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[19]++;
        cov_1fwgcuilzr().s[85]++;
        return rule.severity === options.severity;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[10][1]++;
    }
    cov_1fwgcuilzr().s[86]++;
    if (options.enabled !== undefined) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[11][0]++;
      cov_1fwgcuilzr().s[87]++;
      rules = rules.filter(rule => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[20]++;
        cov_1fwgcuilzr().s[88]++;
        return rule.enabled === options.enabled;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[11][1]++;
    }
    cov_1fwgcuilzr().s[89]++;
    return rules;
  }
  /**
   * Update security rule
   */
  async updateSecurityRule(ruleId, updates) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[21]++;
    const rule =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[90]++, this.securityRules.get(ruleId));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[91]++;
    if (!rule) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[12][0]++;
      cov_1fwgcuilzr().s[92]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[12][1]++;
    }
    const updatedRule =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[93]++, {
      ...rule,
      ...updates
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[94]++;
    this.securityRules.set(ruleId, updatedRule);
    // Cache updated rules
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[95]++;
    await enhanced_cache_manager_1.enhancedCacheManager.set('security:rules:updated', Array.from(this.securityRules.values()), {
      ttl: 3600000,
      tags: ['security', 'rules']
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[96]++;
    logger.info('Security rule updated', {
      ruleId,
      updates: Object.keys(updates)
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[97]++;
    return true;
  }
  /**
   * Generate security report
   */
  async generateSecurityReport(options =
  /* istanbul ignore next */
  (cov_1fwgcuilzr().b[13][0]++, {})) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[22]++;
    let results =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[98]++, Array.from(this.reviewResults.values()));
    // Apply filters
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[99]++;
    if (options.timeRange) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[14][0]++;
      cov_1fwgcuilzr().s[100]++;
      results = results.filter(result => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[23]++;
        cov_1fwgcuilzr().s[101]++;
        return /* istanbul ignore next */(cov_1fwgcuilzr().b[15][0]++, result.reviewedAt >= options.timeRange.start) &&
        /* istanbul ignore next */
        (cov_1fwgcuilzr().b[15][1]++, result.reviewedAt <= options.timeRange.end);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[14][1]++;
    }
    cov_1fwgcuilzr().s[102]++;
    if (options.filePattern) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[16][0]++;
      const pattern =
      /* istanbul ignore next */
      (cov_1fwgcuilzr().s[103]++, new RegExp(options.filePattern, 'i'));
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[104]++;
      results = results.filter(result => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[24]++;
        cov_1fwgcuilzr().s[105]++;
        return pattern.test(result.filePath);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[16][1]++;
    }
    // Calculate summary
    const totalScans =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[106]++, results.length);
    const totalViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[107]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[25]++;
      cov_1fwgcuilzr().s[108]++;
      return sum + result.violations.length;
    }, 0));
    const criticalViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[109]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[26]++;
      cov_1fwgcuilzr().s[110]++;
      return sum + result.violations.filter(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[27]++;
        cov_1fwgcuilzr().s[111]++;
        return v.severity === SecurityRuleSeverity.CRITICAL;
      }).length;
    }, 0));
    const highViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[112]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[28]++;
      cov_1fwgcuilzr().s[113]++;
      return sum + result.violations.filter(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[29]++;
        cov_1fwgcuilzr().s[114]++;
        return v.severity === SecurityRuleSeverity.HIGH;
      }).length;
    }, 0));
    const averageRiskScore =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[115]++,
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[17][0]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[30]++;
      cov_1fwgcuilzr().s[116]++;
      return sum + result.riskScore;
    }, 0) / totalScans) ||
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[17][1]++, 0));
    // Top violations
    const violationCounts =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[117]++, new Map());
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[118]++;
    results.forEach(result => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[31]++;
      cov_1fwgcuilzr().s[119]++;
      result.violations.forEach(violation => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[32]++;
        const key =
        /* istanbul ignore next */
        (cov_1fwgcuilzr().s[120]++, violation.ruleId);
        const current =
        /* istanbul ignore next */
        (cov_1fwgcuilzr().s[121]++, violationCounts.get(key));
        /* istanbul ignore next */
        cov_1fwgcuilzr().s[122]++;
        if (current) {
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[18][0]++;
          cov_1fwgcuilzr().s[123]++;
          current.count++;
        } else {
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[18][1]++;
          cov_1fwgcuilzr().s[124]++;
          violationCounts.set(key, {
            count: 1,
            rule: violation
          });
        }
      });
    });
    const topViolations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[125]++, Array.from(violationCounts.entries()).map(([ruleId, data]) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[33]++;
      cov_1fwgcuilzr().s[126]++;
      return {
        ruleId,
        ruleName: data.rule.ruleName,
        count: data.count,
        severity: data.rule.severity
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[34]++;
      cov_1fwgcuilzr().s[127]++;
      return b.count - a.count;
    }).slice(0, 10));
    // Generate recommendations
    const recommendations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[128]++, this.generateRecommendations(results));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[129]++;
    return {
      summary: {
        totalScans,
        totalViolations,
        criticalViolations,
        highViolations,
        averageRiskScore
      },
      topViolations,
      trends: [],
      // Implement trend analysis if needed
      recommendations
    };
  }
  /**
   * Private: Process review request
   */
  async processReview(reviewId) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[35]++;
    const request =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[130]++, this.activeReviews.get(reviewId));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[131]++;
    if (!request) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[19][0]++;
      cov_1fwgcuilzr().s[132]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[19][1]++;
    }
    cov_1fwgcuilzr().s[133]++;
    try {
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[134]++;
      // Update status
      request.status = 'in_progress';
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[135]++;
      this.activeReviews.set(reviewId, request);
      // Scan all files
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[136]++;
      for (const file of request.files) {
        /* istanbul ignore next */
        cov_1fwgcuilzr().s[137]++;
        await this.scanFile(file.path, file.content);
      }
      // Update status
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[138]++;
      request.status = 'completed';
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[139]++;
      this.activeReviews.set(reviewId, request);
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[140]++;
      logger.info('Code review completed', {
        reviewId,
        fileCount: request.files.length
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[141]++;
      request.status = 'failed';
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[142]++;
      this.activeReviews.set(reviewId, request);
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[143]++;
      logger.error('Code review failed', {
        reviewId,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
    }
  }
  /**
   * Private: Initialize security rules
   */
  initializeSecurityRules() {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[36]++;
    const rules =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[144]++, [
    // Input Validation Rules
    {
      id: 'no-eval',
      name: 'Dangerous eval() Usage',
      category: SecurityRuleCategory.INPUT_VALIDATION,
      severity: SecurityRuleSeverity.CRITICAL,
      description: 'Using eval() can lead to code injection vulnerabilities',
      pattern: /\beval\s*\(/gi,
      fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],
      enabled: true,
      remediation: 'Replace eval() with safer alternatives like JSON.parse() or Function constructor',
      references: ['https://owasp.org/www-community/attacks/Code_Injection']
    }, {
      id: 'sql-injection-risk',
      name: 'SQL Injection Risk',
      category: SecurityRuleCategory.INJECTION_PREVENTION,
      severity: SecurityRuleSeverity.HIGH,
      description: 'Dynamic SQL construction may lead to SQL injection',
      pattern: /['"]\s*\+\s*.*\s*\+\s*['"].*(?:SELECT|INSERT|UPDATE|DELETE|DROP)/gi,
      fileExtensions: ['.js', '.ts', '.py', '.php', '.java'],
      enabled: true,
      remediation: 'Use parameterized queries or prepared statements',
      references: ['https://owasp.org/www-community/attacks/SQL_Injection']
    }, {
      id: 'hardcoded-secrets',
      name: 'Hardcoded Secrets',
      category: SecurityRuleCategory.DATA_PROTECTION,
      severity: SecurityRuleSeverity.CRITICAL,
      description: 'Hardcoded secrets in source code',
      pattern: /(password|secret|key|token)\s*[=:]\s*['"][^'"]{8,}['"]/gi,
      fileExtensions: ['.js', '.ts', '.py', '.java', '.php', '.cs'],
      enabled: true,
      remediation: 'Use environment variables or secure key management systems',
      references: ['https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure']
    }, {
      id: 'xss-innerHTML',
      name: 'XSS via innerHTML',
      category: SecurityRuleCategory.OUTPUT_ENCODING,
      severity: SecurityRuleSeverity.HIGH,
      description: 'Using innerHTML with user input can lead to XSS',
      pattern: /\.innerHTML\s*=\s*(?!['"]\s*['"])/gi,
      fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],
      enabled: true,
      remediation: 'Use textContent or sanitize input before setting innerHTML',
      references: ['https://owasp.org/www-community/attacks/xss/']
    }, {
      id: 'crypto-weak-random',
      name: 'Weak Random Number Generation',
      category: SecurityRuleCategory.CRYPTOGRAPHY,
      severity: SecurityRuleSeverity.MEDIUM,
      description: 'Math.random() is not cryptographically secure',
      pattern: /Math\.random\(\)/gi,
      fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],
      enabled: true,
      remediation: 'Use crypto.getRandomValues() for cryptographic purposes',
      references: ['https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues']
    }, {
      id: 'console-log-production',
      name: 'Console Logging in Production',
      category: SecurityRuleCategory.LOGGING_AUDITING,
      severity: SecurityRuleSeverity.LOW,
      description: 'Console logs may expose sensitive information',
      pattern: /console\.(log|debug|info|warn|error)/gi,
      fileExtensions: ['.js', '.ts', '.jsx', '.tsx'],
      enabled: true,
      remediation: 'Use proper logging framework and remove console logs in production',
      references: ['https://owasp.org/www-project-top-ten/2017/A10_2017-Insufficient_Logging%2526Monitoring']
    }, {
      id: 'unsafe-file-upload',
      name: 'Unsafe File Upload',
      category: SecurityRuleCategory.INPUT_VALIDATION,
      severity: SecurityRuleSeverity.HIGH,
      description: 'File upload without proper validation',
      pattern: /\.upload\(|multer\(|formidable\(/gi,
      fileExtensions: ['.js', '.ts'],
      enabled: true,
      remediation: 'Implement file type validation, size limits, and virus scanning',
      references: ['https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload']
    }, {
      id: 'jwt-no-verify',
      name: 'JWT Without Verification',
      category: SecurityRuleCategory.SESSION_MANAGEMENT,
      severity: SecurityRuleSeverity.CRITICAL,
      description: 'JWT token used without proper verification',
      pattern: /jwt\.decode\s*\([^,)]*\)/gi,
      fileExtensions: ['.js', '.ts'],
      enabled: true,
      remediation: 'Always verify JWT tokens using jwt.verify() with secret',
      references: ['https://auth0.com/blog/a-look-at-the-latest-draft-for-oauth-token-exchange/']
    }]);
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[145]++;
    rules.forEach(rule => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[37]++;
      cov_1fwgcuilzr().s[146]++;
      this.securityRules.set(rule.id, rule);
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[147]++;
    logger.info('Security rules initialized', {
      count: rules.length
    });
  }
  /**
   * Private: Get applicable rules for file
   */
  getApplicableRules(filePath, options) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[38]++;
    const fileExtension =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[148]++, this.getFileExtension(filePath));
    let rules =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[149]++, Array.from(this.securityRules.values()));
    // Filter by file extension
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[150]++;
    rules = rules.filter(rule => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[39]++;
      cov_1fwgcuilzr().s[151]++;
      return /* istanbul ignore next */(cov_1fwgcuilzr().b[20][0]++, rule.fileExtensions.includes(fileExtension)) &&
      /* istanbul ignore next */
      (cov_1fwgcuilzr().b[20][1]++, rule.enabled);
    });
    // Include only specific rules if provided
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[22][0]++, options.rules) &&
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[22][1]++, options.rules.length > 0)) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[21][0]++;
      cov_1fwgcuilzr().s[153]++;
      rules = rules.filter(rule => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[40]++;
        cov_1fwgcuilzr().s[154]++;
        return options.rules.includes(rule.id);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[21][1]++;
    }
    // Exclude specific rules if provided
    cov_1fwgcuilzr().s[155]++;
    if (
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[24][0]++, options.excludeRules) &&
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[24][1]++, options.excludeRules.length > 0)) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[23][0]++;
      cov_1fwgcuilzr().s[156]++;
      rules = rules.filter(rule => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[41]++;
        cov_1fwgcuilzr().s[157]++;
        return !options.excludeRules.includes(rule.id);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[23][1]++;
    }
    cov_1fwgcuilzr().s[158]++;
    return rules;
  }
  /**
   * Private: Scan content for specific rule
   */
  scanForRule(content, rule) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[42]++;
    const violations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[159]++, []);
    const lines =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[160]++, content.split('\n'));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[161]++;
    lines.forEach((line, lineIndex) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[43]++;
      const matches =
      /* istanbul ignore next */
      (cov_1fwgcuilzr().s[162]++, line.matchAll(rule.pattern));
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[163]++;
      for (const match of matches) {
        /* istanbul ignore next */
        cov_1fwgcuilzr().s[164]++;
        violations.push({
          ruleId: rule.id,
          ruleName: rule.name,
          category: rule.category,
          severity: rule.severity,
          line: lineIndex + 1,
          column: match.index + 1,
          code: line.trim(),
          message: rule.description,
          remediation: rule.remediation,
          references: rule.references,
          confidence: this.calculateConfidence(rule, match[0])
        });
      }
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[165]++;
    return violations;
  }
  /**
   * Private: Calculate risk score based on violations
   */
  calculateRiskScore(violations) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[44]++;
    let score =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[166]++, 0);
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[167]++;
    violations.forEach(violation => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[45]++;
      cov_1fwgcuilzr().s[168]++;
      switch (violation.severity) {
        case SecurityRuleSeverity.CRITICAL:
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[25][0]++;
          cov_1fwgcuilzr().s[169]++;
          score += 10;
          /* istanbul ignore next */
          cov_1fwgcuilzr().s[170]++;
          break;
        case SecurityRuleSeverity.HIGH:
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[25][1]++;
          cov_1fwgcuilzr().s[171]++;
          score += 6;
          /* istanbul ignore next */
          cov_1fwgcuilzr().s[172]++;
          break;
        case SecurityRuleSeverity.MEDIUM:
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[25][2]++;
          cov_1fwgcuilzr().s[173]++;
          score += 3;
          /* istanbul ignore next */
          cov_1fwgcuilzr().s[174]++;
          break;
        case SecurityRuleSeverity.LOW:
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[25][3]++;
          cov_1fwgcuilzr().s[175]++;
          score += 1;
          /* istanbul ignore next */
          cov_1fwgcuilzr().s[176]++;
          break;
        case SecurityRuleSeverity.INFO:
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[25][4]++;
          cov_1fwgcuilzr().s[177]++;
          score += 0.5;
          /* istanbul ignore next */
          cov_1fwgcuilzr().s[178]++;
          break;
      }
      // Adjust based on confidence
      /* istanbul ignore next */
      cov_1fwgcuilzr().s[179]++;
      if (violation.confidence === 'high') {
        /* istanbul ignore next */
        cov_1fwgcuilzr().b[26][0]++;
        cov_1fwgcuilzr().s[180]++;
        score *= 1.2;
      } else {
        /* istanbul ignore next */
        cov_1fwgcuilzr().b[26][1]++;
        cov_1fwgcuilzr().s[181]++;
        if (violation.confidence === 'low') {
          /* istanbul ignore next */
          cov_1fwgcuilzr().b[27][0]++;
          cov_1fwgcuilzr().s[182]++;
          score *= 0.8;
        } else
        /* istanbul ignore next */
        {
          cov_1fwgcuilzr().b[27][1]++;
        }
      }
    });
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[183]++;
    return Math.min(
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[28][0]++, score / violations.length) ||
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[28][1]++, 0), 10);
  }
  /**
   * Private: Calculate confidence level
   */
  calculateConfidence(rule, match) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[46]++;
    cov_1fwgcuilzr().s[184]++;
    // Simple heuristic for confidence calculation
    if (rule.severity === SecurityRuleSeverity.CRITICAL) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[29][0]++;
      cov_1fwgcuilzr().s[185]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[29][1]++;
    }
    cov_1fwgcuilzr().s[186]++;
    if (
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[31][0]++, match.length > 20) ||
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[31][1]++, rule.severity === SecurityRuleSeverity.HIGH)) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[30][0]++;
      cov_1fwgcuilzr().s[187]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[30][1]++;
    }
    cov_1fwgcuilzr().s[188]++;
    return 'low';
  }
  /**
   * Private: Generate recommendations
   */
  generateRecommendations(results) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[47]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[189]++, []);
    const criticalCount =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[190]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[48]++;
      cov_1fwgcuilzr().s[191]++;
      return sum + result.violations.filter(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[49]++;
        cov_1fwgcuilzr().s[192]++;
        return v.severity === SecurityRuleSeverity.CRITICAL;
      }).length;
    }, 0));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[193]++;
    if (criticalCount > 0) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[32][0]++;
      cov_1fwgcuilzr().s[194]++;
      recommendations.push(`Address ${criticalCount} critical security vulnerabilities immediately`);
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[32][1]++;
    }
    const highCount =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[195]++, results.reduce((sum, result) => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[50]++;
      cov_1fwgcuilzr().s[196]++;
      return sum + result.violations.filter(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[51]++;
        cov_1fwgcuilzr().s[197]++;
        return v.severity === SecurityRuleSeverity.HIGH;
      }).length;
    }, 0));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[198]++;
    if (highCount > 5) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[33][0]++;
      cov_1fwgcuilzr().s[199]++;
      recommendations.push('Implement comprehensive input validation across the application');
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[33][1]++;
    }
    const evalUsage =
    /* istanbul ignore next */
    (cov_1fwgcuilzr().s[200]++, results.some(result => {
      /* istanbul ignore next */
      cov_1fwgcuilzr().f[52]++;
      cov_1fwgcuilzr().s[201]++;
      return result.violations.some(v => {
        /* istanbul ignore next */
        cov_1fwgcuilzr().f[53]++;
        cov_1fwgcuilzr().s[202]++;
        return v.ruleId === 'no-eval';
      });
    }));
    /* istanbul ignore next */
    cov_1fwgcuilzr().s[203]++;
    if (evalUsage) {
      /* istanbul ignore next */
      cov_1fwgcuilzr().b[34][0]++;
      cov_1fwgcuilzr().s[204]++;
      recommendations.push('Eliminate all eval() usage and implement safer alternatives');
    } else
    /* istanbul ignore next */
    {
      cov_1fwgcuilzr().b[34][1]++;
    }
    cov_1fwgcuilzr().s[205]++;
    return recommendations;
  }
  /**
   * Private: Utility methods
   */
  generateReviewId() {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[54]++;
    cov_1fwgcuilzr().s[206]++;
    return `review_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateFileId(filePath) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[55]++;
    cov_1fwgcuilzr().s[207]++;
    return `file_${Date.now()}_${Buffer.from(filePath).toString('base64').substr(0, 8)}`;
  }
  getFileExtension(filePath) {
    /* istanbul ignore next */
    cov_1fwgcuilzr().f[56]++;
    cov_1fwgcuilzr().s[208]++;
    return /* istanbul ignore next */(cov_1fwgcuilzr().b[35][0]++, '.' + filePath.split('.').pop()?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_1fwgcuilzr().b[35][1]++, '');
  }
}
/* istanbul ignore next */
cov_1fwgcuilzr().s[209]++;
exports.CodeReviewSystem = CodeReviewSystem;
// Export singleton instance
/* istanbul ignore next */
cov_1fwgcuilzr().s[210]++;
exports.codeReviewSystem = CodeReviewSystem.getInstance();
// Export convenience methods
/* istanbul ignore next */
cov_1fwgcuilzr().s[211]++;
exports.submitForReview = exports.codeReviewSystem.submitForReview.bind(exports.codeReviewSystem);
/* istanbul ignore next */
cov_1fwgcuilzr().s[212]++;
exports.getReviewResults = exports.codeReviewSystem.getReviewResults.bind(exports.codeReviewSystem);
/* istanbul ignore next */
cov_1fwgcuilzr().s[213]++;
exports.scanFile = exports.codeReviewSystem.scanFile.bind(exports.codeReviewSystem);
/* istanbul ignore next */
cov_1fwgcuilzr().s[214]++;
exports.getSecurityRules = exports.codeReviewSystem.getSecurityRules.bind(exports.codeReviewSystem);
/* istanbul ignore next */
cov_1fwgcuilzr().s[215]++;
exports.generateSecurityReport = exports.codeReviewSystem.generateSecurityReport.bind(exports.codeReviewSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,