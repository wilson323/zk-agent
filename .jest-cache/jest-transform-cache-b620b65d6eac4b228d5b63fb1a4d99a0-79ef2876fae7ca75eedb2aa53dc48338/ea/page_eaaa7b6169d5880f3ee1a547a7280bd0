5f315d9e2e2fd741ab4e682d44bfff71
"use strict";

/* istanbul ignore next */
function cov_uuhr2zrmd() {
  var path = "E:\\zk-agent\\app\\diagnostics\\page.tsx";
  var hash = "90f855ae852aa987dc7c06ec12e842357e333def";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\diagnostics\\page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 77
        }
      },
      "6": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 152
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "DiagnosticsPage",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 24
          }
        },
        loc: {
          start: {
            line: 10,
            column: 27
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\diagnostics\\page.tsx",
      mappings: ";;;;;AAGA,kCAMC;;AATD,cAAc;AACd,8EAAwD;AAExD,SAAwB,eAAe;IACrC,OAAO,CACL,gCAAK,SAAS,EAAC,wBAAwB,YACrC,uBAAC,4BAAqB,KAAG,GACrB,CACP,CAAA;AACH,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\diagnostics\\page.tsx"],
      sourcesContent: ["// @ts-nocheck\nimport FastGPTConnectionTest from \"./fastgpt-connection\"\n\nexport default function DiagnosticsPage() {\n  return (\n    <div className=\"container mx-auto py-8\">\n      <FastGPTConnectionTest />\n    </div>\n  )\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90f855ae852aa987dc7c06ec12e842357e333def"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uuhr2zrmd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uuhr2zrmd();
var __importDefault =
/* istanbul ignore next */
(cov_uuhr2zrmd().s[0]++,
/* istanbul ignore next */
(cov_uuhr2zrmd().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_uuhr2zrmd().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_uuhr2zrmd().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_uuhr2zrmd().f[0]++;
  cov_uuhr2zrmd().s[1]++;
  return /* istanbul ignore next */(cov_uuhr2zrmd().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_uuhr2zrmd().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_uuhr2zrmd().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_uuhr2zrmd().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_uuhr2zrmd().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uuhr2zrmd().s[3]++;
exports.default = DiagnosticsPage;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_uuhr2zrmd().s[4]++, require("react/jsx-runtime"));
// @ts-nocheck
const fastgpt_connection_1 =
/* istanbul ignore next */
(cov_uuhr2zrmd().s[5]++, __importDefault(require("./fastgpt-connection")));
function DiagnosticsPage() {
  /* istanbul ignore next */
  cov_uuhr2zrmd().f[1]++;
  cov_uuhr2zrmd().s[6]++;
  return (0, jsx_runtime_1.jsx)("div", {
    className: "container mx-auto py-8",
    children: (0, jsx_runtime_1.jsx)(fastgpt_connection_1.default, {})
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiZGVmYXVsdCIsIkRpYWdub3N0aWNzUGFnZSIsImZhc3RncHRfY29ubmVjdGlvbl8xIiwiY292X3V1aHIyenJtZCIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwiZiIsImpzeF9ydW50aW1lXzEiLCJqc3giLCJjbGFzc05hbWUiLCJjaGlsZHJlbiJdLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcYXBwXFxkaWFnbm9zdGljc1xccGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCBGYXN0R1BUQ29ubmVjdGlvblRlc3QgZnJvbSBcIi4vZmFzdGdwdC1jb25uZWN0aW9uXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGlhZ25vc3RpY3NQYWdlKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIG14LWF1dG8gcHktOFwiPlxuICAgICAgPEZhc3RHUFRDb25uZWN0aW9uVGVzdCAvPlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0FBLE9BQUEsQ0FBQUMsT0FBQSxHQUFBQyxlQUFBOzs7O0FBSEE7QUFDQSxNQUFBQyxvQkFBQTtBQUFBO0FBQUEsQ0FBQUMsYUFBQSxHQUFBQyxDQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUVBLFNBQXdCTCxlQUFlQSxDQUFBO0VBQUE7RUFBQUUsYUFBQSxHQUFBSSxDQUFBO0VBQUFKLGFBQUEsR0FBQUMsQ0FBQTtFQUNyQyxPQUNFLElBQUFJLGFBQUEsQ0FBQUMsR0FBQTtJQUFLQyxTQUFTLEVBQUMsd0JBQXdCO0lBQUFDLFFBQUEsRUFDckMsSUFBQUgsYUFBQSxDQUFBQyxHQUFBLEVBQUNQLG9CQUFBLENBQUFGLE9BQXFCO0VBQUcsRUFDckI7QUFFViIsImlnbm9yZUxpc3QiOltdfQ==