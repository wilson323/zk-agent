{"version":3,"names":["cov_d7csu2stq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createSecureFileUploadMiddleware","createFileUploadHandler","secureFileUpload","multer_1","__importDefault","require","zod_1","file_upload_validator_1","api_helper_1","logger_1","constants_1","logger","Logger","UploadConfigSchema","z","object","maxFiles","number","min","max","default","maxTotalSize","allowedTypes","array","string","optional","category","enum","requireAuth","boolean","virusScanEnabled","contentScanEnabled","config","validConfig","parse","storage","memoryStorage","upload","limits","fileSize","files","fileFilter","req","cb","length","isAllowed","some","mimetype","includes","originalname","toLowerCase","Error","middleware","validator","result","success","totalSize","warnings","errors","push","info","reduce","sum","size","toFixed","context","buffer","originalName","metadata","fieldname","uploadCategory","timestamp","Date","toISOString","validationResult","fileUploadValidator","validateFile","fileResult","filename","now","isSecure","isValid","securityScore","score","threats","map","threat","ruleId","ruleName","severity","message","criticalThreats","filter","t","error","warn","recommendations","String","totalFiles","formData","key","value","entries","File","ApiResponseWrapper","ERROR_CODES","VALIDATION_REQUIRED_FIELD","multerFiles","Buffer","from","arrayBuffer","encoding","destination","stream","extendedReq","VALIDATION_FILE_TOO_LARGE","threatCount","INTERNAL_SERVER_ERROR","target","propertyName","descriptor","method","uploadHandler","args","contentType","headers","get","ok","uploadValidation","json","apply"],"sources":["E:\\zk-agent\\lib\\middleware\\file-upload-security.ts"],"sourcesContent":["/**\n * @file 文件上传安全中间件\n * @description 集成文件上传安全验证的Express/Next.js中间件\n * @author ZK-Agent Team\n * @date 2024-12-27\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport multer from 'multer';\nimport { z } from 'zod';\n\nimport { fileUploadValidator, type FileUploadContext } from '@/lib/security/file-upload-validator';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { Logger } from '@/lib/utils/logger';\nimport { ERROR_CODES } from '@/config/constants';\n\nconst logger = new Logger('FileUploadSecurity');\n\n// 文件上传配置验证模式\nconst UploadConfigSchema = z.object({\n  maxFiles: z.number().min(1).max(10).default(1),\n  maxTotalSize: z.number().min(1024).max(500 * 1024 * 1024).default(100 * 1024 * 1024), // 默认100MB\n  allowedTypes: z.array(z.string()).optional(),\n  category: z.enum(['user-uploads', 'profile-pictures', 'content-images', 'documents', 'cad-files', 'bulk-uploads']).default('user-uploads'),\n  requireAuth: z.boolean().default(true),\n  virusScanEnabled: z.boolean().default(true),\n  contentScanEnabled: z.boolean().default(true)\n});\n\ntype UploadConfig = z.infer<typeof UploadConfigSchema>;\n\n// 上传结果接口\ninterface UploadResult {\n  success: boolean;\n  files: Array<{\n    fieldname: string;\n    originalname: string;\n    filename: string;\n    mimetype: string;\n    size: number;\n    path: string;\n    isSecure: boolean;\n    securityScore: number;\n    threats: Array<{\n      ruleId: string;\n      ruleName: string;\n      severity: string;\n      message: string;\n    }>;\n  }>;\n  totalSize: number;\n  warnings: string[];\n  errors: string[];\n}\n\nimport type { NextApiRequest } from 'next';\n\ninterface ExpressMulterFile {\n  fieldname: string;\n  originalname: string;\n  encoding: string;\n  mimetype: string;\n  size: number;\n  buffer: Buffer;\n  destination: string;\n  filename: string;\n  path: string;\n  stream: any;\n}\n\ndeclare global {\n  namespace Express {\n    namespace Multer {\n      interface File extends ExpressMulterFile {}\n    }\n  }\n}\n\n/**\n * 创建安全文件上传中间件\n */\nexport function createSecureFileUploadMiddleware(config: Partial<UploadConfig> = {}) {\n  const validConfig = UploadConfigSchema.parse(config);\n  \n  // 配置Multer存储\n  const storage = multer.memoryStorage();\n  \n  const upload = multer({\n    storage,\n    limits: {\n      fileSize: validConfig.maxTotalSize,\n      files: validConfig.maxFiles\n    },\n    fileFilter: (req: any, file: any, cb: any) => {\n      // 基础文件过滤\n      if (validConfig.allowedTypes && validConfig.allowedTypes.length > 0) {\n        const isAllowed = validConfig.allowedTypes.some(type => \n          file.mimetype.includes(type) || file.originalname.toLowerCase().includes(type)\n        );\n        if (!isAllowed) {\n          return cb(new Error(`不支持的文件类型: ${file.mimetype}`));\n        }\n      }\n      cb(null, true);\n    }\n  });\n\n  return {\n    middleware: upload.array('files', validConfig.maxFiles),\n    validator: async (req: NextRequest & { files?: (Express.Multer.File | File)[] }): Promise<UploadResult> => {\n      const result: UploadResult = {\n        success: true,\n        files: [],\n        totalSize: 0,\n        warnings: [],\n        errors: []\n      };\n\n      if (!req.files || req.files.length === 0) {\n        result.success = false;\n        result.errors.push('未检测到上传文件');\n        return result;\n      }\n\n      logger.info(`开始处理 ${req.files.length} 个上传文件`);\n\n      // 验证总文件大小\n      const totalSize = req.files.reduce((sum, file) => sum + file.size, 0);\n      result.totalSize = totalSize;\n\n      if (totalSize > validConfig.maxTotalSize) {\n        result.success = false;\n        result.errors.push(`总文件大小超过限制: ${(totalSize / 1024 / 1024).toFixed(2)}MB > ${(validConfig.maxTotalSize / 1024 / 1024).toFixed(2)}MB`);\n        return result;\n      }\n\n      // 验证每个文件\n      for (const file of req.files) {\n        try {\n          const context: FileUploadContext = {\n            buffer: (file as Express.Multer.File).buffer,\n            originalName: (file as Express.Multer.File).originalname,\n            mimetype: (file as Express.Multer.File).mimetype,\n            size: file.size,\n            metadata: {\n              fieldname: (file as Express.Multer.File).fieldname,\n              uploadCategory: validConfig.category,\n              timestamp: new Date().toISOString()\n            }\n          };\n\n          // 执行安全验证\n          const validationResult = await fileUploadValidator.validateFile(context);\n          \n          const fileResult = {\n            fieldname: (file as Express.Multer.File).fieldname,\n            originalname: (file as Express.Multer.File).originalname,\n            filename: `${Date.now()}_${(file as Express.Multer.File).originalname}`,\n            mimetype: (file as Express.Multer.File).mimetype,\n            size: file.size,\n            path: '', // 将在实际保存时填充\n            isSecure: validationResult.isValid,\n            securityScore: validationResult.score,\n            threats: validationResult.threats.map(threat => ({\n              ruleId: threat.ruleId,\n              ruleName: threat.ruleName,\n              severity: threat.severity,\n              message: threat.message\n            }))\n          };\n\n          result.files.push(fileResult);\n\n          // 处理验证结果\n          if (!validationResult.isValid) {\n            const criticalThreats = validationResult.threats.filter(t => \n              ['CRITICAL', 'HIGH'].includes(t.severity)\n            );\n            \n            if (criticalThreats.length > 0) {\n              result.success = false;\n              result.errors.push(`文件 ${(file as Express.Multer.File).originalname} 包含严重安全威胁`);\n              \n              // 记录安全事件\n              logger.error(`文件上传安全威胁检测`, {\n                filename: (file as Express.Multer.File).originalname,\n                threats: criticalThreats.map(t => t.message),\n                score: validationResult.score\n              });\n            } else {\n              result.warnings.push(`文件 ${(file as Express.Multer.File).originalname} 存在潜在安全问题 (评分: ${validationResult.score})`);\n              \n              logger.warn(`文件上传安全警告`, {\n                filename: (file as Express.Multer.File).originalname,\n                score: validationResult.score,\n                threats: validationResult.threats.length\n              });\n            }\n          }\n\n          // 添加建议\n          if (validationResult.recommendations.length > 0) {\n            result.warnings.push(...validationResult.recommendations);\n          }\n\n        } catch (error) {\n          result.success = false;\n          result.errors.push(`文件 ${(file as Express.Multer.File).originalname} 验证失败: ${error instanceof Error ? error.message : String(error)}`);\n          \n          logger.error(`文件验证异常`, {\n            filename: file.originalname,\n            error: error instanceof Error ? error.message : String(error)\n          });\n        }\n      }\n\n      // 如果有任何错误，标记整体失败\n      if (result.errors.length > 0) {\n        result.success = false;\n      }\n\n      logger.info(`文件上传验证完成`, {\n        totalFiles: req.files.length,\n        success: result.success,\n        errors: result.errors.length,\n        warnings: result.warnings.length\n      });\n\n      return result;\n    }\n  };\n}\n\n/**\n * Next.js API路由文件上传处理器\n */\nexport function createFileUploadHandler(config: Partial<UploadConfig> = {}) {\n  const { middleware, validator } = createSecureFileUploadMiddleware(config);\n  \n  return async (req: NextRequest) => {\n    try {\n      // 这里需要适配Next.js 13+ App Router的FormData处理\n      const formData = await req.formData();\n      const files: File[] = [];\n      \n      // 提取文件\n      for (const [key, value] of formData.entries()) {\n        if (value instanceof File) {\n          files.push(value);\n        }\n      }\n\n      if (files.length === 0) {\n        return ApiResponseWrapper.error(\n          ERROR_CODES.VALIDATION_REQUIRED_FIELD as ErrorCode,\n          '未检测到上传文件'\n        );\n      }\n\n      // 转换为Multer格式以供验证器使用\n      const multerFiles: Array<Express.Multer.File & { buffer: Buffer }> = [];\n      \n      for (const file of files) {\n        const buffer = Buffer.from(await file.arrayBuffer());\n        multerFiles.push({\n          fieldname: 'files',\n          originalname: file.name,\n          encoding: '',\n          mimetype: file.type,\n          size: file.size,\n          buffer,\n          destination: '',\n          filename: '',\n          path: '',\n          stream: null as never\n        });\n      }\n\n      // 执行安全验证\n      const extendedReq = { files: multerFiles } as NextRequest & { files: Express.Multer.File[] };\n      const result = await validator(extendedReq);\n\n      if (!result.success) {\n        return ApiResponseWrapper.error(\n          ERROR_CODES.VALIDATION_FILE_TOO_LARGE as ErrorCode,\n          '文件上传安全验证失败',\n          {\n            errors: result.errors,\n            warnings: result.warnings,\n            files: result.files.map(f => ({\n              name: f.originalname,\n              isSecure: f.isSecure,\n              score: f.securityScore,\n              threatCount: f.threats.length\n            }))\n          }\n        );\n      }\n\n      // 返回验证成功的结果\n      return ApiResponseWrapper.success({\n        message: '文件上传验证通过',\n        files: result.files,\n        totalSize: result.totalSize,\n        warnings: result.warnings\n      });\n\n    } catch (error) {\n      logger.error('文件上传处理异常', {\n        error: error instanceof Error ? error.message : String(error)\n      });\n\n      return ApiResponseWrapper.error(\n        ERROR_CODES.INTERNAL_SERVER_ERROR as ErrorCode,\n        '文件上传处理失败',\n        { error: error instanceof Error ? error.message : String(error) }\n      );\n    }\n  };\n}\n\n/**\n * 文件上传安全检查装饰器\n */\nexport function secureFileUpload(config: Partial<UploadConfig> = {}) {\n  return function (target: any, propertyName: string, descriptor: PropertyDescriptor) {\n    const method = descriptor.value;\n    const uploadHandler = createFileUploadHandler(config);\n\n    descriptor.value = async function (...args: any[]) {\n      const req = args[0] as NextRequest;\n      \n      // 检查是否为文件上传请求\n      const contentType = req.headers.get('content-type');\n      if (contentType?.includes('multipart/form-data')) {\n        const validationResult = await uploadHandler(req);\n        \n        // 如果验证失败，直接返回错误\n        if (!validationResult.ok) {\n          return validationResult;\n        }\n        \n        // 将验证结果附加到请求对象\n        (req as any).uploadValidation = await validationResult.json();\n      }\n      \n      return await method.apply(this, args);\n    };\n  };\n}\n\n// 导出类型\nexport type { UploadConfig, UploadResult };"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAA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","ignoreList":[]}