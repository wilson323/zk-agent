{"version":3,"names":["cov_1jdqxzkxc7","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","body","json","messages","stream","detail","chatId","responseChatItemId","variables","baseUrl","useProxy","apiKey","process","env","FASTGPT_API_KEY","apiUrl","FASTGPT_API_URL","endpoint","encodeURIComponent","replace","fastGPTRequest","response","fetch","method","headers","Authorization","JSON","stringify","readableStream","ReadableStream","controller","reader","getReader","close","done","value","read","enqueue","Response","Connection","ok","errorData","catch","error","message","statusText","ApiResponseWrapper","success","status","data","console"],"sources":["E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts"],"sourcesContent":["/**\n * @file fastgpt\\chat\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json();\n      const { messages, stream, detail, chatId, responseChatItemId, variables, baseUrl, useProxy } = body;\n    \n        // Use server-side environment variable for API key\n        const apiKey = process.env.FASTGPT_API_KEY\n    \n        // Use server-side or provided API URL\n        const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\"\n    \n        // Determine the actual API endpoint\n        const endpoint = useProxy\n          ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/chat/completions`\n          : `${apiUrl}/api/v1/chat/completions`\n    \n        // Prepare the request to the FastGPT API\n        const fastGPTRequest = {\n          messages,\n          stream: stream || false,\n          detail: detail || false,\n          ...(chatId && { chatId }),\n          ...(responseChatItemId && { responseChatItemId }),\n          ...(variables && { variables }),\n        }\n    \n        // Make the request to the FastGPT API\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${apiKey}`,\n          },\n          body: JSON.stringify(fastGPTRequest),\n        })\n    \n        // Handle streaming response\n        if (stream) {\n          // Return the stream directly\n          const readableStream = new ReadableStream({\n            async start(controller) {\n              const reader = response.body?.getReader()\n              if (!reader) {\n                controller.close()\n                return\n              }\n    \n              \n                while (true) {\n                  const { done, value } = await reader.read()\n                  if (done) {\n                    controller.close()\n                    break\n                  }\n                  controller.enqueue(value)\n                }\n              \n            },\n          })\n    \n          return new Response(readableStream, {\n            headers: {\n              \"Content-Type\": \"text/event-stream\",\n              \"Cache-Control\": \"no-cache\",\n              Connection: \"keep-alive\",\n            },\n          })\n        }\n    \n        // Handle non-streaming response\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }))\n          return ApiResponseWrapper.success(errorData, { status: response.status })\n        }\n    \n        const data = await response.json();\n        return ApiResponseWrapper.success(data);\n    } catch (error) {\n      console.error('FastGPT chat error:', error);\n      return ApiResponseWrapper.error(\n        'Internal server error',\n        500\n      );\n    }\n  }\n);\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}