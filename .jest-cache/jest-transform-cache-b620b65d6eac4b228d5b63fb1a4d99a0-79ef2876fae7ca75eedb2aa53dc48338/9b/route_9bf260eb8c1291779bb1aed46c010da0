0e08180716ce5a958eaced68adcb644c
"use strict";

/**
 * @file fastgpt\chat\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1jdqxzkxc7() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts";
  var hash = "b434ab91f36e091628c64c4c4e2085050a405d07";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "7": {
        start: {
          line: 15,
          column: 103
        },
        end: {
          line: 15,
          column: 107
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "9": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 90
        }
      },
      "10": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 23,
          column: 49
        }
      },
      "11": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "14": {
        start: {
          line: 45,
          column: 35
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "15": {
        start: {
          line: 47,
          column: 35
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "16": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "17": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 43
        }
      },
      "18": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "19": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "20": {
        start: {
          line: 53,
          column: 48
        },
        end: {
          line: 53,
          column: 67
        }
      },
      "21": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "22": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 47
        }
      },
      "23": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "24": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 50
        }
      },
      "25": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "27": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 110
        }
      },
      "28": {
        start: {
          line: 72,
          column: 65
        },
        end: {
          line: 72,
          column: 108
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 99
        }
      },
      "30": {
        start: {
          line: 75,
          column: 21
        },
        end: {
          line: 75,
          column: 42
        }
      },
      "31": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 52
        }
      },
      "33": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 105
          },
          end: {
            line: 12,
            column: 106
          }
        },
        loc: {
          start: {
            line: 12,
            column: 180
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        },
        loc: {
          start: {
            line: 46,
            column: 40
          },
          end: {
            line: 60,
            column: 17
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 72,
            column: 58
          },
          end: {
            line: 72,
            column: 59
          }
        },
        loc: {
          start: {
            line: 72,
            column: 65
          },
          end: {
            line: 72,
            column: 108
          }
        },
        line: 72
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 50
          }
        }, {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 61
          }
        }, {
          start: {
            line: 19,
            column: 65
          },
          end: {
            line: 19,
            column: 90
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 23,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 14
          },
          end: {
            line: 22,
            column: 112
          }
        }, {
          start: {
            line: 23,
            column: 14
          },
          end: {
            line: 23,
            column: 49
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 26
          }
        }, {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 27,
            column: 35
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 26
          }
        }, {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 35
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 22
          }
        }, {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 36
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 34
          }
        }, {
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 30,
            column: 60
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 31,
            column: 25
          }
        }, {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 42
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 51,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 57,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 57,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\chat\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json();\n      const { messages, stream, detail, chatId, responseChatItemId, variables, baseUrl, useProxy } = body;\n    \n        // Use server-side environment variable for API key\n        const apiKey = process.env.FASTGPT_API_KEY\n    \n        // Use server-side or provided API URL\n        const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\"\n    \n        // Determine the actual API endpoint\n        const endpoint = useProxy\n          ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/chat/completions`\n          : `${apiUrl}/api/v1/chat/completions`\n    \n        // Prepare the request to the FastGPT API\n        const fastGPTRequest = {\n          messages,\n          stream: stream || false,\n          detail: detail || false,\n          ...(chatId && { chatId }),\n          ...(responseChatItemId && { responseChatItemId }),\n          ...(variables && { variables }),\n        }\n    \n        // Make the request to the FastGPT API\n        const response = await fetch(endpoint, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${apiKey}`,\n          },\n          body: JSON.stringify(fastGPTRequest),\n        })\n    \n        // Handle streaming response\n        if (stream) {\n          // Return the stream directly\n          const readableStream = new ReadableStream({\n            async start(controller) {\n              const reader = response.body?.getReader()\n              if (!reader) {\n                controller.close()\n                return\n              }\n    \n              \n                while (true) {\n                  const { done, value } = await reader.read()\n                  if (done) {\n                    controller.close()\n                    break\n                  }\n                  controller.enqueue(value)\n                }\n              \n            },\n          })\n    \n          return new Response(readableStream, {\n            headers: {\n              \"Content-Type\": \"text/event-stream\",\n              \"Cache-Control\": \"no-cache\",\n              Connection: \"keep-alive\",\n            },\n          })\n        }\n    \n        // Handle non-streaming response\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }))\n          return ApiResponseWrapper.success(errorData, { status: response.status })\n        }\n    \n        const data = await response.json();\n        return ApiResponseWrapper.success(data);\n    } catch (error) {\n      console.error('FastGPT chat error:', error);\n      return ApiResponseWrapper.error(\n        'Internal server error',\n        500\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b434ab91f36e091628c64c4c4e2085050a405d07"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jdqxzkxc7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jdqxzkxc7();
cov_1jdqxzkxc7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jdqxzkxc7().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1jdqxzkxc7().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1jdqxzkxc7().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_1jdqxzkxc7().s[4]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1jdqxzkxc7().f[0]++;
  cov_1jdqxzkxc7().s[5]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[6]++, await req.json());
    const {
      messages,
      stream,
      detail,
      chatId,
      responseChatItemId,
      variables,
      baseUrl,
      useProxy
    } =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[7]++, body);
    // Use server-side environment variable for API key
    const apiKey =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[8]++, process.env.FASTGPT_API_KEY);
    // Use server-side or provided API URL
    const apiUrl =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[9]++,
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[0][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[0][1]++, baseUrl) ||
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[0][2]++, "https://zktecoaihub.com"));
    // Determine the actual API endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[10]++, useProxy ?
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[1][0]++, `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\/\//, ""))}/api/v1/chat/completions`) :
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[1][1]++, `${apiUrl}/api/v1/chat/completions`));
    // Prepare the request to the FastGPT API
    const fastGPTRequest =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[11]++, {
      messages,
      stream:
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[2][0]++, stream) ||
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[2][1]++, false),
      detail:
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[3][0]++, detail) ||
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[3][1]++, false),
      ...(
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[4][0]++, chatId) &&
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[4][1]++, {
        chatId
      })),
      ...(
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[5][0]++, responseChatItemId) &&
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[5][1]++, {
        responseChatItemId
      })),
      ...(
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[6][0]++, variables) &&
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[6][1]++, {
        variables
      }))
    });
    // Make the request to the FastGPT API
    const response =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[12]++, await fetch(endpoint, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify(fastGPTRequest)
    }));
    // Handle streaming response
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[13]++;
    if (stream) {
      /* istanbul ignore next */
      cov_1jdqxzkxc7().b[7][0]++;
      // Return the stream directly
      const readableStream =
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().s[14]++, new ReadableStream({
        async start(controller) {
          /* istanbul ignore next */
          cov_1jdqxzkxc7().f[1]++;
          const reader =
          /* istanbul ignore next */
          (cov_1jdqxzkxc7().s[15]++, response.body?.getReader());
          /* istanbul ignore next */
          cov_1jdqxzkxc7().s[16]++;
          if (!reader) {
            /* istanbul ignore next */
            cov_1jdqxzkxc7().b[8][0]++;
            cov_1jdqxzkxc7().s[17]++;
            controller.close();
            /* istanbul ignore next */
            cov_1jdqxzkxc7().s[18]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1jdqxzkxc7().b[8][1]++;
          }
          cov_1jdqxzkxc7().s[19]++;
          while (true) {
            const {
              done,
              value
            } =
            /* istanbul ignore next */
            (cov_1jdqxzkxc7().s[20]++, await reader.read());
            /* istanbul ignore next */
            cov_1jdqxzkxc7().s[21]++;
            if (done) {
              /* istanbul ignore next */
              cov_1jdqxzkxc7().b[9][0]++;
              cov_1jdqxzkxc7().s[22]++;
              controller.close();
              /* istanbul ignore next */
              cov_1jdqxzkxc7().s[23]++;
              break;
            } else
            /* istanbul ignore next */
            {
              cov_1jdqxzkxc7().b[9][1]++;
            }
            cov_1jdqxzkxc7().s[24]++;
            controller.enqueue(value);
          }
        }
      }));
      /* istanbul ignore next */
      cov_1jdqxzkxc7().s[25]++;
      return new Response(readableStream, {
        headers: {
          "Content-Type": "text/event-stream",
          "Cache-Control": "no-cache",
          Connection: "keep-alive"
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jdqxzkxc7().b[7][1]++;
    }
    // Handle non-streaming response
    cov_1jdqxzkxc7().s[26]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1jdqxzkxc7().b[10][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().s[27]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1jdqxzkxc7().f[2]++;
        cov_1jdqxzkxc7().s[28]++;
        return {
          error: {
            message: response.statusText
          }
        };
      }));
      /* istanbul ignore next */
      cov_1jdqxzkxc7().s[29]++;
      return api_helper_1.ApiResponseWrapper.success(errorData, {
        status: response.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jdqxzkxc7().b[10][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[30]++, await response.json());
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[31]++;
    return api_helper_1.ApiResponseWrapper.success(data);
  } catch (error) {
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[32]++;
    console.error('FastGPT chat error:', error);
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[33]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,