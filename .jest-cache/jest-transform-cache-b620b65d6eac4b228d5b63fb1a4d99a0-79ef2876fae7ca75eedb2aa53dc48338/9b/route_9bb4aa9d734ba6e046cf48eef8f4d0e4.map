{"version":3,"names":["cov_22eukd3mh3","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","server_1","require","api_route_wrapper_1","api_helper_1","core_1","cad_file_processor_1","device_recognition_engine_1","cad_analyzer_1","report_generator_1","error_retry_manager_1","advanced_cache_manager_1","fileProcessor","CADFileProcessor","deviceEngine","DeviceRecognitionEngine","retryManager","ErrorRetryManager","cacheManager","AdvancedCacheManager","_reportGenerator","ReportGenerator","format","includeImages","includeRecommendations","includeAppendix","language","recordPerformanceMetrics","metrics","console","log","requestId","processingTime","fileSize","success","error","processSingleFile","config","analyzer","CADAnalyzer","fileInfo","id","Date","now","size","split","pop","toLowerCase","userId","fileBuffer","Buffer","from","arrayBuffer","analysisResult","analyze","progress","stage","message","analysis","timestamp","toISOString","exports","GET","createApiRoute","RouteConfigs","publicGet","req","params","validatedBody","validatedQuery","user","searchParams","_searchParams","URL","url","action","retryStats","getAllStats","cacheStats","getStats","ApiResponseWrapper","ErrorCode","VALIDATION_ERROR","INTERNAL_SERVER_ERROR","POST","protectedPost","startTime","currentRequestId","Math","random","toString","substr","formData","get","configStr","JSON","parse","enableStructureAnalysis","enableDeviceDetection","enableRiskAssessment","enableComplianceCheck","detectionSensitivity","riskThreshold","complianceStandards","generateReport","reportFormat","cacheKey","stringify","cachedResult","has","files","getAll","batchConfig","batchId","results","Map","headers","Headers","Connection","stream","ReadableStream","controller","processFiles","i","length","enqueue","fileIndex","fileName","fileResult","set","result","Object","fromEntries","close","catch","NextResponse","executeWithRetry","Error","validation","validateFile","valid","metadata","parseFile","devices","recognizeDevices","reportGenerator","report","generatedAt","sections","data","strategy","maxRetries","baseDelay","maxDelay","backoffMultiplier","jitter","onRetry","attempt","onFailure","attempts","ttl","tags"],"sources":["E:\\zk-agent\\app\\api\\cad\\analyze\\route.ts"],"sourcesContent":["/**\n * @file cad\\analyze\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { CADFileProcessor } from \"../../../../lib/cad/cad-file-processor\"\nimport { DeviceRecognitionEngine } from \"../../../../lib/cad/device-recognition-engine\"\nimport { CADAnalyzer } from \"../../../../lib/cad/cad-analyzer\"\nimport { ReportGenerator } from \"../../../../lib/cad/report-generator\"\nimport { ErrorRetryManager } from \"../../../../lib/chat/error-retry-manager\"\nimport { AdvancedCacheManager } from \"../../../../lib/cache/advanced-cache-manager\"\n\n// 初始化实例\nconst fileProcessor = new CADFileProcessor()\nconst deviceEngine = new DeviceRecognitionEngine()\nconst retryManager = new ErrorRetryManager()\nconst cacheManager = new AdvancedCacheManager()\nconst _reportGenerator = new ReportGenerator({\n  format: \"pdf\",\n  includeImages: true,\n  includeRecommendations: true,\n  includeAppendix: true,\n  language: \"zh-CN\"\n})\n\n// 性能指标记录函数\nasync function recordPerformanceMetrics(metrics: {\n  requestId: string\n  processingTime: number\n  fileSize: number\n  success: boolean\n  error?: any\n}) {\n  console.log(`[Performance] ${metrics.requestId}: ${metrics.processingTime}ms, ${metrics.fileSize} bytes, success: ${metrics.success}`)\n  if (metrics.error) {\n    console.error(`[Performance Error] ${metrics.requestId}: ${metrics.error}`)\n  }\n}\n\n// 单文件处理函数\nasync function processSingleFile(file: File, config: any) {\n  const analyzer = new CADAnalyzer(config)\n  \n  const fileInfo = {\n    id: `file_${Date.now()}`,\n    name: file.name,\n    size: file.size,\n    type: file.name.split(\".\").pop()?.toLowerCase() || \"unknown\",\n    userId: \"current_user\",\n  }\n  const fileBuffer = Buffer.from(await file.arrayBuffer())\n  const analysisResult = await analyzer.analyze(fileBuffer, file.name, (progress) => {\n      // 进度回调处理\n      console.log(`分析进度: ${progress.stage} - ${progress.progress}% - ${progress.message}`)\n    })\n  \n  return {\n    fileInfo,\n    analysis: analysisResult,\n    timestamp: new Date().toISOString(),\n  }\n}\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { searchParams: _searchParams } = new URL(req.url)\n      const action = validatedQuery?.action\n    \n      switch (action) {\n        case \"stats\":\n          // 返回分析统计信息\n          const retryStats = retryManager.getAllStats()\n          const cacheStats = cacheManager.getStats()\n          \n          return ApiResponseWrapper.success({\n            retryStats,\n            cacheStats\n          })\n        default:\n          return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, \"Invalid action\", null)\n      }\n    } catch (error) {\n      console.error(\"CAD analyze GET error:\", error)\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"获取分析信息失败\",\n        null,\n        500\n      )\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const startTime = Date.now()\n    const currentRequestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    let file: File | null = null\n    let fileBuffer: Buffer | null = null;\n    \n    try {\n      console.log(`[${currentRequestId}] CAD分析请求开始`)\n  \n      const formData = await req.formData()\n      file = formData.get(\"file\") as File\n      const configStr = formData.get(\"config\") as string\n  \n      if (!file) {\n        return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, \"缺少文件\", null)\n      }\n    \n        // 解析配置\n        const config = configStr\n          ? JSON.parse(configStr)\n          : {\n              enableStructureAnalysis: true,\n              enableDeviceDetection: true,\n              enableRiskAssessment: true,\n              enableComplianceCheck: true,\n              detectionSensitivity: \"medium\",\n              riskThreshold: \"balanced\",\n              complianceStandards: [\"GB50348-2018\", \"GA/T75-1994\"],\n              generateReport: true,\n              reportFormat: \"pdf\",\n              includeImages: true,\n              includeRecommendations: true,\n            }\n    \n        // 生成缓存键\n        const cacheKey = `cad_analysis_${file.name}_${file.size}_${JSON.stringify(config)}`\n    \n        // 检查缓存\n        const cachedResult = await cacheManager.get(cacheKey)\n        if (cachedResult) {\n          console.log(\"返回缓存的分析结果\")\n          return ApiResponseWrapper.success(cachedResult)\n        }\n    \n        // 在POST方法中添加批量处理支持\n        if (formData.has(\"files\")) {\n          // 批量文件处理\n          const files = formData.getAll(\"files\") as File[]\n          const batchConfig = JSON.parse((formData.get(\"batchConfig\") as string) || \"{}\")\n    \n          // 创建批量分析任务\n          const batchId = `batch_${Date.now()}`\n          const results = new Map<string, any>()\n    \n          // 设置Server-Sent Events for real-time progress\n          const headers = new Headers({\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            Connection: \"keep-alive\",\n          })\n    \n          const stream = new ReadableStream({\n            start(controller) {\n              const processFiles = async () => {\n                for (let i = 0; i < files.length; i++) {\n                  const file = files[i]\n                  try {\n                    // 发送进度更新\n                    controller.enqueue(\n                      `data: ${JSON.stringify({\n                        type: \"progress\",\n                        batchId,\n                        fileIndex: i,\n                        fileName: file.name,\n                        progress: (i / files.length) * 100,\n                        stage: \"processing\",\n                      })}\n\n`,\n                    )\n    \n                    // 处理单个文件\n                    const fileResult = await processSingleFile(file, config)\n                    results.set(file.name, fileResult)\n    \n                    // 发送文件完成通知\n                    controller.enqueue(\n                      `data: ${JSON.stringify({\n                        type: \"file_complete\",\n                        batchId,\n                        fileIndex: i,\n                        fileName: file.name,\n                        result: fileResult,\n                      })}\n\n`,\n                    )\n                  } catch (error: any) {\n                    // 发送文件错误通知\n                    controller.enqueue(\n                      `data: ${JSON.stringify({\n                        type: \"file_error\",\n                        batchId,\n                        fileIndex: i,\n                        fileName: file.name,\n                        error: error.message,\n                      })}\n\n`,\n                    )\n                  }\n                }\n    \n                // 发送批量完成通知\n                controller.enqueue(\n                  `data: ${JSON.stringify({\n                    type: \"batch_complete\",\n                    batchId,\n                    results: Object.fromEntries(results),\n                  })}\n\n`,\n                )\n    \n                controller.close()\n              }\n    \n              processFiles().catch((error: any) => {\n                controller.enqueue(\n                  `data: ${JSON.stringify({\n                    type: \"batch_error\",\n                    batchId,\n                    error: error.message,\n                  })}\n\n`,\n                )\n                controller.close()\n              })\n            },\n          })\n    \n          return new NextResponse(stream, { headers })\n        }\n    \n        // 使用重试机制执行分析\n        const result = await retryManager.executeWithRetry(async () => {\n          // 1. 验证文件\n          if (!file) {\n            throw new Error(\"File is null after initial check.\");\n          }\n          const validation = await fileProcessor.validateFile(file)\n          if (!validation.valid) {\n            throw new Error(validation.error)\n          }\n    \n          // 2. 解析文件\n          const metadata = await fileProcessor.parseFile(file, config)\n    \n          // 3. 设备识别\n          const devices = await deviceEngine.recognizeDevices(metadata)\n    \n          // 4. 创建分析器并执行分析\n          const analyzer = new CADAnalyzer(config)\n    \n          const fileInfo = {\n            id: `file_${Date.now()}`,\n            name: file.name,\n            size: file.size,\n            type: file.name.split(\".\").pop()?.toLowerCase() || \"unknown\",\n            userId: \"current_user\", // 实际应用中从认证信息获取\n          }\n          fileBuffer = Buffer.from(await file.arrayBuffer());\n          const analysisResult = await analyzer.analyze(fileBuffer, file.name, (progress) => {\n      // 进度回调处理\n      console.log(`分析进度: ${progress.stage} - ${progress.progress}% - ${progress.message}`)\n    })\n    \n          // 5. 生成报告\n          if (config.generateReport) {\n            const reportGenerator = new ReportGenerator({\n              format: config.reportFormat,\n              includeImages: config.includeImages,\n              includeRecommendations: config.includeRecommendations,\n              includeAppendix: true,\n              language: \"zh-CN\"\n            })\n    \n            analysisResult.report = {\n              url: await _reportGenerator.generateReport(analysisResult),\n              format: config.reportFormat,\n              size: 0, // Placeholder, actual size would be determined after generation\n              generatedAt: new Date(),\n              id: `report_${Date.now()}`,\n              sections: [], // Placeholder\n              metadata: {} // Placeholder\n            };\n          }\n    \n          return {\n            success: true,\n            data: analysisResult,\n            metadata: {\n              processingTime: Date.now() - startTime,\n              cacheKey,\n              version: \"2.1.0\",\n            },\n          }\n        }, {\n          strategy: {\n            maxRetries: 3,\n            baseDelay: 1000,\n            maxDelay: 10000,\n            backoffMultiplier: 2,\n            jitter: true\n          },\n          onRetry: (error, attempt) => {\n            console.log(`CAD分析重试 ${attempt}: ${error.message}`)\n          },\n          onFailure: (error, attempts) => {\n            console.error(`CAD分析失败，已重试${attempts}次: ${error.message}`)\n          }\n        })\n    \n        // 缓存结果\n        await cacheManager.set(cacheKey, result, {\n          ttl: 3600000, // 1小时\n          tags: [\"cad_analysis\", \"user_data\"],\n        })\n    \n        const processingTime = Date.now() - startTime\n        console.log(`[${currentRequestId}] CAD分析完成，耗时: ${processingTime}ms`)\n    \n        // 记录性能指标\n        await recordPerformanceMetrics({\n          requestId: currentRequestId,\n          processingTime,\n          fileSize: file.size,\n          success: true,\n        })\n    \n        return ApiResponseWrapper.success(result)\n    } catch (error: any) {\n      const processingTime = Date.now() - startTime\n      console.error(`[${currentRequestId}] CAD分析失败，耗时: ${processingTime}ms`, error)\n    \n      // 记录错误指标\n      await recordPerformanceMetrics({\n        requestId: currentRequestId,\n        processingTime,\n        fileSize: file?.size || 0,\n        success: false,\n        error: error.message,\n      })\n    \n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        error.message || \"分析过程中发生未知错误\",\n        null,\n        500\n      )\n    }\n  }\n);"],"mappings":"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","ignoreList":[]}