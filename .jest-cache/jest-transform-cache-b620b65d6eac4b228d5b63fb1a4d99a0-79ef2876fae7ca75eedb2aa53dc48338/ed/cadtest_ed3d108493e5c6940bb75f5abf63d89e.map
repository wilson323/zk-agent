{"file":"E:\\zk-agent\\tests\\api\\routes\\cad.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\tests\\api\\routes\\cad.test.ts"],"sourcesContent":["/**\n * @file cad.test.ts\n * @description CAD分析相关API路由错误处理测试\n * @author ZK-Agent Team\n * @date 2025-01-27\n */\n\nimport { describe, it, expect, beforeEach, afterEach, jest } from '@jest/globals';\nimport { NextRequest } from 'next/server';\nimport { POST as uploadHandler } from '@/app/api/cad/upload/route';\nimport { POST as analyzeHandler } from '@/app/api/cad/analyze/route';\nimport { GET as historyHandler } from '@/app/api/cad/history/route';\nimport { GET as statisticsHandler } from '@/app/api/cad/statistics/route';\nimport { POST as exportHandler } from '@/app/api/cad/export/route';\nimport { GlobalErrorHandler } from '@/lib/middleware/global-error-handler';\n\n// Mock CAD analyzer\njest.mock('@/lib/cad/analyzer', () => ({\n  analyzeCADFile: jest.fn()\n}));\n\n// Mock storage service\njest.mock('@/lib/storage/file-storage', () => ({\n  uploadFile: jest.fn()\n}));\n\n// Mock upload-enhanced handler since it doesn't exist\nconst uploadEnhancedHandler = jest.fn();\n\ndescribe('CAD API Routes Error Handling', () => {\n  let errorHandler: GlobalErrorHandler;\n\n  beforeEach(() => {\n    errorHandler = GlobalErrorHandler.getInstance();\n    jest.clearAllMocks();\n  });\n\n  afterEach(() => {\n    // 清理测试状态\n    jest.clearAllMocks();\n  });\n\n  describe('Upload Route (/api/cad/upload)', () => {\n    it('should handle missing file error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/upload', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({})\n      });\n\n      const response = await uploadHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n      expect(data.error).toContain('file');\n    });\n\n    it('should handle unsupported file format error', async () => {\n      const formData = new FormData();\n      const file = new File(['test content'], 'test.txt', { type: 'text/plain' });\n      formData.append('file', file);\n\n      const request = new NextRequest('http://localhost:3000/api/cad/upload', {\n        method: 'POST',\n        body: formData\n      });\n\n      const response = await uploadHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n      expect(data.error).toContain('format');\n    });\n\n    it('should handle file size limit exceeded error', async () => {\n      const formData = new FormData();\n      // Create a large file (simulate > 100MB)\n      const largeContent = 'x'.repeat(100 * 1024 * 1024 + 1);\n      const file = new File([largeContent], 'large.dwg', { type: 'application/dwg' });\n      formData.append('file', file);\n\n      const request = new NextRequest('http://localhost:3000/api/cad/upload', {\n        method: 'POST',\n        body: formData\n      });\n\n      const response = await uploadHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(413);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('FILE_TOO_LARGE');\n    });\n\n    it('should handle corrupted file error', async () => {\n      const formData = new FormData();\n      const file = new File(['corrupted data'], 'corrupted.dwg', { type: 'application/dwg' });\n      formData.append('file', file);\n\n      const request = new NextRequest('http://localhost:3000/api/cad/upload', {\n        method: 'POST',\n        body: formData\n      });\n\n      const response = await uploadHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('FILE_CORRUPTED');\n    });\n\n    it('should handle storage quota exceeded error', async () => {\n      // Mock storage service to simulate quota exceeded\n      const { uploadFile } = require('@/lib/storage/file-storage');\n      (uploadFile as jest.Mock).mockRejectedValue(new Error('Storage quota exceeded'));\n\n      const formData = new FormData();\n      const file = new File(['test content'], 'test.dwg', { type: 'application/dwg' });\n      formData.append('file', file);\n\n      const request = new NextRequest('http://localhost:3000/api/cad/upload', {\n        method: 'POST',\n        body: formData\n      });\n\n      const response = await uploadHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(507);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('STORAGE_QUOTA_EXCEEDED');\n    });\n  });\n\n  describe('Analyze Route (/api/cad/analyze)', () => {\n    it('should handle missing file ID error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({})\n      });\n\n      const response = await analyzeHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n    });\n\n    it('should handle file not found error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fileId: 'non-existent-file-id'\n        })\n      });\n\n      const response = await analyzeHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('FILE_NOT_FOUND');\n    });\n\n    it('should handle analysis timeout error', async () => {\n      // Mock analysis service to simulate timeout\n      const { analyzeCADFile } = require('@/lib/cad/analyzer');\n      (analyzeCADFile as jest.Mock).mockImplementation(() => \n        new Promise((_, reject) => \n          setTimeout(() => reject(new Error('Analysis timeout')), 100)\n        )\n      );\n\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fileId: 'valid-file-id'\n        })\n      });\n\n      const response = await analyzeHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('ANALYSIS_TIMEOUT');\n    });\n\n    it('should handle insufficient memory error', async () => {\n      // Mock analysis service to simulate memory error\n      const { analyzeCADFile } = require('@/lib/cad/analyzer');\n      (analyzeCADFile as jest.Mock).mockRejectedValue(new Error('Insufficient memory'));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fileId: 'large-file-id'\n        })\n      });\n\n      const response = await analyzeHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(507);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('INSUFFICIENT_MEMORY');\n    });\n\n    it('should handle concurrent analysis limit error', async () => {\n      // Mock analysis service to simulate concurrent limit\n      const { analyzeCADFile } = require('@/lib/cad/analyzer');\n      (analyzeCADFile as jest.Mock).mockRejectedValue(new Error('Too many concurrent analyses'));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fileId: 'valid-file-id'\n        })\n      });\n\n      const response = await analyzeHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('TOO_MANY_REQUESTS');\n    });\n  });\n\n  describe('History Route (/api/cad/history)', () => {\n    it('should handle unauthorized access error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/history', {\n        method: 'GET'\n      });\n\n      const response = await historyHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('AUTHENTICATION_ERROR');\n    });\n\n    it('should handle invalid pagination parameters error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/history?page=-1&limit=0', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer valid_token'\n        }\n      });\n\n      const response = await historyHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n    });\n\n    it('should handle database query timeout error', async () => {\n      // Mock database to simulate timeout\n      const db = require('@/lib/database/connection').default;\n      (db.cadAnalysis.findMany as jest.Mock).mockRejectedValue(new Error('Query timeout'));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/history', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer valid_token'\n        }\n      });\n\n      const response = await historyHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('DATABASE_TIMEOUT');\n    });\n  });\n\n  describe('Statistics Route (/api/cad/statistics)', () => {\n    it('should handle invalid date range error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/statistics?startDate=invalid&endDate=invalid', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer valid_token'\n        }\n      });\n\n      const response = await statisticsHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n    });\n\n    it('should handle date range too large error', async () => {\n      const startDate = '2020-01-01';\n      const endDate = '2025-12-31';\n      const request = new NextRequest(`http://localhost:3000/api/cad/statistics?startDate=${startDate}&endDate=${endDate}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer valid_token'\n        }\n      });\n\n      const response = await statisticsHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('DATE_RANGE_TOO_LARGE');\n    });\n  });\n\n  describe('Export Route (/api/cad/export)', () => {\n    it('should handle missing analysis ID error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/export', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({})\n      });\n\n      const response = await exportHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n    });\n\n    it('should handle unsupported export format error', async () => {\n      const request = new NextRequest('http://localhost:3000/api/cad/export', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          analysisId: 'valid-analysis-id',\n          format: 'unsupported-format'\n        })\n      });\n\n      const response = await exportHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('UNSUPPORTED_FORMAT');\n    });\n\n    it('should handle export generation failure error', async () => {\n      // Mock export service to simulate failure\n      jest.mock('@/lib/cad/exporter', () => ({\n        generateExport: jest.fn().mockRejectedValue(new Error('Export generation failed'))\n      }));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/export', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          analysisId: 'valid-analysis-id',\n          format: 'pdf'\n        })\n      });\n\n      const response = await exportHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('EXPORT_GENERATION_FAILED');\n    });\n  });\n\n  describe('Upload Enhanced Route (/api/cad/upload-enhanced)', () => {\n    it('should handle missing preprocessing options error', async () => {\n      const formData = new FormData();\n      const file = new File(['test content'], 'test.dwg', { type: 'application/dwg' });\n      formData.append('file', file);\n\n      const request = new NextRequest('http://localhost:3000/api/cad/upload-enhanced', {\n        method: 'POST',\n        body: formData\n      });\n\n      const response = await uploadEnhancedHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('VALIDATION_ERROR');\n    });\n\n    it('should handle preprocessing failure error', async () => {\n      // Mock preprocessing service to simulate failure\n      const { preprocessCADFile } = require('@/lib/cad/preprocessor');\n      (preprocessCADFile as jest.Mock).mockRejectedValue(new Error('Preprocessing failed'));\n\n      const formData = new FormData();\n      const file = new File(['test content'], 'test.dwg', { type: 'application/dwg' });\n      formData.append('file', file);\n      formData.append('options', JSON.stringify({ autoFix: true, optimize: true }));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/upload-enhanced', {\n        method: 'POST',\n        body: formData\n      });\n\n      const response = await uploadEnhancedHandler(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error).toBeDefined();\n      expect(data.code).toBe('PREPROCESSING_FAILED');\n    });\n  });\n\n  describe('Error Recovery and Resilience', () => {\n    it('should implement retry logic for transient failures', async () => {\n      let callCount = 0;\n      jest.mock('@/lib/cad/analyzer', () => ({\n        analyzeCADFile: jest.fn().mockImplementation(() => {\n          callCount++;\n          if (callCount < 3) {\n            return Promise.reject(new Error('Transient failure'));\n          }\n          return Promise.resolve({ success: true, results: {} });\n        })\n      }));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fileId: 'valid-file-id'\n        })\n      });\n\n      const response = await analyzeHandler(request);\n      \n      expect(callCount).toBe(3);\n      expect(response.status).toBe(200);\n    });\n\n    it('should gracefully degrade when analysis service is unavailable', async () => {\n      // Mock persistent service failure\n      const { analyzeCADFile } = require('@/lib/cad/analyzer');\n      (analyzeCADFile as jest.Mock).mockRejectedValue(new Error('Service unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/cad/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fileId: 'valid-file-id'\n        })\n      });\n\n      const response = await analyzeHandler(request);\n      const data = await response.json();\n\n      // Should return basic analysis instead of complete failure\n      expect(response.status).toBe(200);\n      expect(data.degraded).toBe(true);\n    });\n  });\n\n  describe('Circuit Breaker Integration', () => {\n    it('should track CAD analysis errors in global error handler', async () => {\n      // Mock analysis failures\n      const { analyzeCADFile } = require('@/lib/cad/analyzer');\n      (analyzeCADFile as jest.Mock).mockRejectedValue(new Error('Analysis failed'));\n\n      const requests = Array(5).fill(null).map(() => \n        new NextRequest('http://localhost:3000/api/cad/analyze', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ fileId: 'test-file-id' })\n        })\n      );\n\n      for (const request of requests) {\n        await analyzeHandler(request).catch(() => {});\n      }\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.errorCount).toBeGreaterThan(0);\n    });\n  });\n});"],"version":3}