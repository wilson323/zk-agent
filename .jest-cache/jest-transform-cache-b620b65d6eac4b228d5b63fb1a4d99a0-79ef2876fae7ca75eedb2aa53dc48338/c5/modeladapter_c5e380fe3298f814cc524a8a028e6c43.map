{"version":3,"names":["cov_29w1qk3jpd","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","AIModelAdapter","constructor","config","agUiAdapter","call","appId","chatId","params","startTime","Date","now","resultObservable","handleChatCompletion","messages","systemPrompt","variables","result","Promise","resolve","reject","fullContent","finalUsage","finalError","success","subscribe","next","event","delta","usage","message","error","err","complete","data","latency","modelId","provider","Error","exports"],"sources":["E:\\zk-agent\\lib\\ai-models\\model-adapter.ts"],"sourcesContent":["// @ts-nocheck\n/**\n * AI模型适配器\n * 统一不同厂商的API调用接口\n */\n\nimport { ModelProvider, ModelType, type AIModelConfig, type ModelCallResult } from \"@/types/ai-models\"\nimport { AgUICoreAdapter } from \"@/lib/ag-ui/core-adapter\"\n\nexport class AIModelAdapter {\n  private config: AIModelConfig\n  private agUiAdapter: AgUICoreAdapter\n\n  constructor(config: AIModelConfig, agUiAdapter: AgUICoreAdapter) {\n    this.config = config\n    this.agUiAdapter = agUiAdapter\n  }\n\n  /**\n   * 统一的模型调用接口\n   */\n  async call(appId: string, chatId: string, params: {\n    messages?: any[]\n    prompt?: string\n    image?: string\n    audio?: ArrayBuffer\n    temperature?: number\n    maxTokens?: number\n    stream?: boolean\n    [key: string]: any\n  }): Promise<ModelCallResult> {\n    const startTime = Date.now()\n\n    try {\n      // Use AgUICoreAdapter to handle the chat completion\n      const resultObservable = await this.agUiAdapter.handleChatCompletion(\n        appId,\n        chatId,\n        params.messages,\n        params.systemPrompt,\n        params.variables\n      )\n\n      // Convert Observable to a Promise for ModelCallResult\n      const result = await new Promise<ModelCallResult>((resolve, reject) => {\n        let fullContent = \"\"\n        let finalUsage: any = {}\n        let finalError: string | undefined\n        let success = true\n\n        resultObservable.subscribe({\n          next: (event) => {\n            if (event.type === \"TEXT_MESSAGE_CONTENT\") {\n              fullContent += event.delta\n            } else if (event.type === \"RUN_FINISHED\") {\n              finalUsage = event.usage || {};\n            } else if (event.type === \"RUN_ERROR\") {\n              success = false;\n              finalError = event.message;\n            }\n          },\n          error: (err) => {\n            success = false\n            finalError = err.message\n            reject(err)\n          },\n          complete: () => {\n            resolve({\n              success: success,\n              data: fullContent,\n              usage: finalUsage, // Placeholder for now\n              latency: Date.now() - startTime,\n              modelId: this.config.modelId,\n              provider: this.config.provider,\n              error: finalError,\n            })\n          },\n        })\n      })\n\n      return result\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        latency: Date.now() - startTime,\n        modelId: this.config.modelId,\n        provider: this.config.provider,\n      }\n    }\n  }\n\n  \n\n  \n}\n"],"mappings":"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","ignoreList":[]}