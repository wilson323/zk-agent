acaa3205d9ae56669e390cc54617a027
"use strict";

// @ts-nocheck
/**
 * AI模型适配器
 * 统一不同厂商的API调用接口
 */
/* istanbul ignore next */
function cov_29w1qk3jpd() {
  var path = "E:\\zk-agent\\lib\\ai-models\\model-adapter.ts";
  var hash = "d4ac033679a86d04ec1b2cd81d98fb02d0240cea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\ai-models\\model-adapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "4": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "6": {
        start: {
          line: 21,
          column: 37
        },
        end: {
          line: 21,
          column: 151
        }
      },
      "7": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "8": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "9": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "10": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "11": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "13": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 55
        }
      },
      "14": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "15": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 59
        }
      },
      "16": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "17": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 44
        }
      },
      "18": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 55
        }
      },
      "19": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "20": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "21": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 36
        }
      },
      "22": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "23": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 26
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "25": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 72,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 37
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 45
          },
          end: {
            line: 23,
            column: 46
          }
        },
        loc: {
          start: {
            line: 23,
            column: 66
          },
          end: {
            line: 58,
            column: 13
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 27
          }
        },
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 40,
            column: 21
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 28
          }
        },
        loc: {
          start: {
            line: 41,
            column: 36
          },
          end: {
            line: 45,
            column: 21
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 46,
            column: 31
          }
        },
        loc: {
          start: {
            line: 46,
            column: 36
          },
          end: {
            line: 56,
            column: 21
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 39,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 39,
            column: 25
          }
        }, {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 39,
            column: 25
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 39,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 39,
            column: 25
          }
        }, {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 39,
            column: 25
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 34,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 34,
            column: 52
          }
        }, {
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 34,
            column: 58
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 39,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 39,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 64,
            column: 61
          }
        }, {
          start: {
            line: 64,
            column: 64
          },
          end: {
            line: 64,
            column: 79
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\ai-models\\model-adapter.ts",
      mappings: ";AAAA,cAAc;AACd;;;GAGG;;;AAKH,MAAa,cAAc;IAIzB,YAAY,MAAqB,EAAE,WAA4B;QAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;IAChC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,KAAa,EAAE,MAAc,EAAE,MASzC;QACC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAE5B,IAAI,CAAC;YACH,oDAAoD;YACpD,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAClE,KAAK,EACL,MAAM,EACN,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,YAAY,EACnB,MAAM,CAAC,SAAS,CACjB,CAAA;YAED,sDAAsD;YACtD,MAAM,MAAM,GAAG,MAAM,IAAI,OAAO,CAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACpE,IAAI,WAAW,GAAG,EAAE,CAAA;gBACpB,IAAI,UAAU,GAAQ,EAAE,CAAA;gBACxB,IAAI,UAA8B,CAAA;gBAClC,IAAI,OAAO,GAAG,IAAI,CAAA;gBAElB,gBAAgB,CAAC,SAAS,CAAC;oBACzB,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;wBACd,IAAI,KAAK,CAAC,IAAI,KAAK,sBAAsB,EAAE,CAAC;4BAC1C,WAAW,IAAI,KAAK,CAAC,KAAK,CAAA;wBAC5B,CAAC;6BAAM,IAAI,KAAK,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;4BACzC,UAAU,GAAG,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC;wBACjC,CAAC;6BAAM,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;4BACtC,OAAO,GAAG,KAAK,CAAC;4BAChB,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC;wBAC7B,CAAC;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,OAAO,GAAG,KAAK,CAAA;wBACf,UAAU,GAAG,GAAG,CAAC,OAAO,CAAA;wBACxB,MAAM,CAAC,GAAG,CAAC,CAAA;oBACb,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,OAAO,CAAC;4BACN,OAAO,EAAE,OAAO;4BAChB,IAAI,EAAE,WAAW;4BACjB,KAAK,EAAE,UAAU,EAAE,sBAAsB;4BACzC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;4BAC/B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;4BAC5B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;4BAC9B,KAAK,EAAE,UAAU;yBAClB,CAAC,CAAA;oBACJ,CAAC;iBACF,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YAEF,OAAO,MAAM,CAAA;QACf,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;gBAC/D,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;gBAC/B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;gBAC5B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;aAC/B,CAAA;QACH,CAAC;IACH,CAAC;CAKF;AAtFD,wCAsFC",
      names: [],
      sources: ["E:\\zk-agent\\lib\\ai-models\\model-adapter.ts"],
      sourcesContent: ["// @ts-nocheck\n/**\n * AI\u6A21\u578B\u9002\u914D\u5668\n * \u7EDF\u4E00\u4E0D\u540C\u5382\u5546\u7684API\u8C03\u7528\u63A5\u53E3\n */\n\nimport { ModelProvider, ModelType, type AIModelConfig, type ModelCallResult } from \"@/types/ai-models\"\nimport { AgUICoreAdapter } from \"@/lib/ag-ui/core-adapter\"\n\nexport class AIModelAdapter {\n  private config: AIModelConfig\n  private agUiAdapter: AgUICoreAdapter\n\n  constructor(config: AIModelConfig, agUiAdapter: AgUICoreAdapter) {\n    this.config = config\n    this.agUiAdapter = agUiAdapter\n  }\n\n  /**\n   * \u7EDF\u4E00\u7684\u6A21\u578B\u8C03\u7528\u63A5\u53E3\n   */\n  async call(appId: string, chatId: string, params: {\n    messages?: any[]\n    prompt?: string\n    image?: string\n    audio?: ArrayBuffer\n    temperature?: number\n    maxTokens?: number\n    stream?: boolean\n    [key: string]: any\n  }): Promise<ModelCallResult> {\n    const startTime = Date.now()\n\n    try {\n      // Use AgUICoreAdapter to handle the chat completion\n      const resultObservable = await this.agUiAdapter.handleChatCompletion(\n        appId,\n        chatId,\n        params.messages,\n        params.systemPrompt,\n        params.variables\n      )\n\n      // Convert Observable to a Promise for ModelCallResult\n      const result = await new Promise<ModelCallResult>((resolve, reject) => {\n        let fullContent = \"\"\n        let finalUsage: any = {}\n        let finalError: string | undefined\n        let success = true\n\n        resultObservable.subscribe({\n          next: (event) => {\n            if (event.type === \"TEXT_MESSAGE_CONTENT\") {\n              fullContent += event.delta\n            } else if (event.type === \"RUN_FINISHED\") {\n              finalUsage = event.usage || {};\n            } else if (event.type === \"RUN_ERROR\") {\n              success = false;\n              finalError = event.message;\n            }\n          },\n          error: (err) => {\n            success = false\n            finalError = err.message\n            reject(err)\n          },\n          complete: () => {\n            resolve({\n              success: success,\n              data: fullContent,\n              usage: finalUsage, // Placeholder for now\n              latency: Date.now() - startTime,\n              modelId: this.config.modelId,\n              provider: this.config.provider,\n              error: finalError,\n            })\n          },\n        })\n      })\n\n      return result\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        latency: Date.now() - startTime,\n        modelId: this.config.modelId,\n        provider: this.config.provider,\n      }\n    }\n  }\n\n  \n\n  \n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4ac033679a86d04ec1b2cd81d98fb02d0240cea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29w1qk3jpd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29w1qk3jpd();
cov_29w1qk3jpd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29w1qk3jpd().s[1]++;
exports.AIModelAdapter = void 0;
class AIModelAdapter {
  constructor(config, agUiAdapter) {
    /* istanbul ignore next */
    cov_29w1qk3jpd().f[0]++;
    cov_29w1qk3jpd().s[2]++;
    this.config = config;
    /* istanbul ignore next */
    cov_29w1qk3jpd().s[3]++;
    this.agUiAdapter = agUiAdapter;
  }
  /**
   * 统一的模型调用接口
   */
  async call(appId, chatId, params) {
    /* istanbul ignore next */
    cov_29w1qk3jpd().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_29w1qk3jpd().s[4]++, Date.now());
    /* istanbul ignore next */
    cov_29w1qk3jpd().s[5]++;
    try {
      // Use AgUICoreAdapter to handle the chat completion
      const resultObservable =
      /* istanbul ignore next */
      (cov_29w1qk3jpd().s[6]++, await this.agUiAdapter.handleChatCompletion(appId, chatId, params.messages, params.systemPrompt, params.variables));
      // Convert Observable to a Promise for ModelCallResult
      const result =
      /* istanbul ignore next */
      (cov_29w1qk3jpd().s[7]++, await new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_29w1qk3jpd().f[2]++;
        let fullContent =
        /* istanbul ignore next */
        (cov_29w1qk3jpd().s[8]++, "");
        let finalUsage =
        /* istanbul ignore next */
        (cov_29w1qk3jpd().s[9]++, {});
        let finalError;
        let success =
        /* istanbul ignore next */
        (cov_29w1qk3jpd().s[10]++, true);
        /* istanbul ignore next */
        cov_29w1qk3jpd().s[11]++;
        resultObservable.subscribe({
          next: event => {
            /* istanbul ignore next */
            cov_29w1qk3jpd().f[3]++;
            cov_29w1qk3jpd().s[12]++;
            if (event.type === "TEXT_MESSAGE_CONTENT") {
              /* istanbul ignore next */
              cov_29w1qk3jpd().b[0][0]++;
              cov_29w1qk3jpd().s[13]++;
              fullContent += event.delta;
            } else {
              /* istanbul ignore next */
              cov_29w1qk3jpd().b[0][1]++;
              cov_29w1qk3jpd().s[14]++;
              if (event.type === "RUN_FINISHED") {
                /* istanbul ignore next */
                cov_29w1qk3jpd().b[1][0]++;
                cov_29w1qk3jpd().s[15]++;
                finalUsage =
                /* istanbul ignore next */
                (cov_29w1qk3jpd().b[2][0]++, event.usage) ||
                /* istanbul ignore next */
                (cov_29w1qk3jpd().b[2][1]++, {});
              } else {
                /* istanbul ignore next */
                cov_29w1qk3jpd().b[1][1]++;
                cov_29w1qk3jpd().s[16]++;
                if (event.type === "RUN_ERROR") {
                  /* istanbul ignore next */
                  cov_29w1qk3jpd().b[3][0]++;
                  cov_29w1qk3jpd().s[17]++;
                  success = false;
                  /* istanbul ignore next */
                  cov_29w1qk3jpd().s[18]++;
                  finalError = event.message;
                } else
                /* istanbul ignore next */
                {
                  cov_29w1qk3jpd().b[3][1]++;
                }
              }
            }
          },
          error: err => {
            /* istanbul ignore next */
            cov_29w1qk3jpd().f[4]++;
            cov_29w1qk3jpd().s[19]++;
            success = false;
            /* istanbul ignore next */
            cov_29w1qk3jpd().s[20]++;
            finalError = err.message;
            /* istanbul ignore next */
            cov_29w1qk3jpd().s[21]++;
            reject(err);
          },
          complete: () => {
            /* istanbul ignore next */
            cov_29w1qk3jpd().f[5]++;
            cov_29w1qk3jpd().s[22]++;
            resolve({
              success: success,
              data: fullContent,
              usage: finalUsage,
              // Placeholder for now
              latency: Date.now() - startTime,
              modelId: this.config.modelId,
              provider: this.config.provider,
              error: finalError
            });
          }
        });
      }));
      /* istanbul ignore next */
      cov_29w1qk3jpd().s[23]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_29w1qk3jpd().s[24]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_29w1qk3jpd().b[4][0]++, error.message) :
        /* istanbul ignore next */
        (cov_29w1qk3jpd().b[4][1]++, "Unknown error"),
        latency: Date.now() - startTime,
        modelId: this.config.modelId,
        provider: this.config.provider
      };
    }
  }
}
/* istanbul ignore next */
cov_29w1qk3jpd().s[25]++;
exports.AIModelAdapter = AIModelAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,