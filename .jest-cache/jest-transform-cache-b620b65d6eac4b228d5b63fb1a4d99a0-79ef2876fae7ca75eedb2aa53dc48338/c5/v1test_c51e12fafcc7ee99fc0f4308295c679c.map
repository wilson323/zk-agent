{"file":"E:\\zk-agent\\tests\\api\\routes\\v1.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\tests\\api\\routes\\v1.test.ts"],"sourcesContent":["/**\n * V1 API路由错误处理测试\n * 测试V1版本API的各种错误场景\n */\n\nimport { NextRequest } from 'next/server';\nimport { GET, POST, PUT, DELETE } from '../../../app/api/v1/route';\n// import { GlobalErrorHandler } from '../../../lib/middleware/global-error-handler';\n// import { AgentError, AgentErrorType, ErrorSeverity } from '../../../lib/errors/agent-errors';\n\n// Mock dependencies\njest.mock('../../../lib/services/v1-api-service', () => ({\n  handleV1Request: jest.fn(),\n  validateV1ApiKey: jest.fn(),\n  processV1Data: jest.fn(),\n  transformV1Response: jest.fn(),\n  checkV1RateLimit: jest.fn(),\n  getV1ApiMetrics: jest.fn(),\n  validateV1Endpoint: jest.fn(),\n  migrateV1ToV2: jest.fn()\n}));\n\njest.mock('../../../lib/services/legacy-support', () => ({\n  handleLegacyRequest: jest.fn(),\n  convertLegacyFormat: jest.fn(),\n  validateLegacyData: jest.fn(),\n  mapLegacyEndpoints: jest.fn(),\n  getLegacyCompatibility: jest.fn()\n}));\n\njest.mock('../../../lib/services/version-manager', () => ({\n  getApiVersion: jest.fn(),\n  checkVersionCompatibility: jest.fn(),\n  getVersionMetadata: jest.fn(),\n  validateVersionAccess: jest.fn(),\n  getDeprecationInfo: jest.fn()\n}));\n\njest.mock('../../../lib/auth/api-key-validator', () => ({\n  validateApiKey: jest.fn(),\n  checkApiKeyPermissions: jest.fn(),\n  getApiKeyMetadata: jest.fn(),\n  trackApiKeyUsage: jest.fn()\n}));\n\njest.mock('../../../lib/middleware/rate-limiter', () => ({\n  checkRateLimit: jest.fn(),\n  updateRateLimit: jest.fn(),\n  getRateLimitInfo: jest.fn()\n}));\n\njest.mock('../../../lib/storage/v1-data-store', () => ({\n  storeV1Data: jest.fn(),\n  getV1Data: jest.fn(),\n  updateV1Data: jest.fn(),\n  deleteV1Data: jest.fn(),\n  queryV1Data: jest.fn()\n}));\n\ndescribe('V1 API Error Handling', () => {\n  let errorHandler: any;\n\n  beforeEach(() => {\n    // errorHandler = GlobalErrorHandler.getInstance();\n    errorHandler = { errorCount: 0, circuitBreakerOpen: false };\n    jest.clearAllMocks();\n  });\n\n  describe('GET /api/v1 - V1 API Requests', () => {\n    it('should handle invalid V1 API key', async () => {\n      const { validateV1ApiKey } = require('../../../lib/services/v1-api-service');\n      validateV1ApiKey.mockRejectedValue(new Error('Invalid or expired V1 API key'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'invalid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('Invalid or expired V1 API key');\n    });\n\n    it('should handle missing V1 API key', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/users');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('API key required for V1 endpoints');\n    });\n\n    it('should handle V1 endpoint not found', async () => {\n      const { validateV1Endpoint } = require('../../../lib/services/v1-api-service');\n      validateV1Endpoint.mockRejectedValue(new Error('V1 endpoint not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/nonexistent', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('V1 endpoint not found');\n    });\n\n    it('should handle V1 API deprecation warning', async () => {\n      const { getDeprecationInfo } = require('../../../lib/services/version-manager');\n      getDeprecationInfo.mockResolvedValue({\n        deprecated: true,\n        deprecationDate: '2024-12-31',\n        migrationGuide: 'https://docs.example.com/v2-migration'\n      });\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.headers.get('X-API-Deprecated')).toBe('true');\n      expect(response.headers.get('X-Deprecation-Date')).toBe('2024-12-31');\n      expect(data.deprecation).toBeDefined();\n    });\n\n    it('should handle V1 rate limit exceeded', async () => {\n      const { checkV1RateLimit } = require('../../../lib/services/v1-api-service');\n      checkV1RateLimit.mockRejectedValue(new Error('V1 API rate limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\n      expect(data.error.message).toContain('V1 API rate limit exceeded');\n    });\n\n    it('should handle V1 service unavailable', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('V1 API service temporarily unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('V1 API service temporarily unavailable');\n    });\n\n    it('should handle V1 data format incompatibility', async () => {\n      const { processV1Data } = require('../../../lib/services/v1-api-service');\n      processV1Data.mockRejectedValue(new Error('V1 data format no longer supported'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/data?format=legacy', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(415);\n      expect(data.error.message).toContain('V1 data format no longer supported');\n    });\n\n    it('should handle V1 query parameter validation errors', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/users?limit=-1&offset=invalid', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid query parameters');\n    });\n\n    it('should handle V1 response transformation failure', async () => {\n      const { transformV1Response } = require('../../../lib/services/v1-api-service');\n      transformV1Response.mockRejectedValue(new Error('Failed to transform V1 response format'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to transform V1 response format');\n    });\n\n    it('should handle V1 API version mismatch', async () => {\n      const { checkVersionCompatibility } = require('../../../lib/services/version-manager');\n      checkVersionCompatibility.mockRejectedValue(new Error('V1 API version mismatch'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { \n          'X-API-Key': 'valid-key',\n          'X-API-Version': '1.5' // Unsupported sub-version\n        }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('V1 API version mismatch');\n    });\n  });\n\n  describe('POST /api/v1 - V1 API Data Creation', () => {\n    let validV1Data: any;\n\n    beforeEach(() => {\n      validV1Data = {\n        name: 'Test Item',\n        type: 'document',\n        data: {\n          content: 'Test content',\n          metadata: {\n            version: '1.0',\n            format: 'text'\n          }\n        }\n      };\n    });\n\n    it('should handle V1 data validation errors', async () => {\n      const { processV1Data } = require('../../../lib/services/v1-api-service');\n      processV1Data.mockRejectedValue(new Error('V1 data validation failed: missing required fields'));\n\n      const invalidData = { ...validV1Data };\n      delete invalidData.name;\n      delete invalidData.type;\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(invalidData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('V1 data validation failed');\n    });\n\n    it('should handle V1 legacy format conversion errors', async () => {\n      const { convertLegacyFormat } = require('../../../lib/services/legacy-support');\n      convertLegacyFormat.mockRejectedValue(new Error('Failed to convert legacy V1 format'));\n\n      const legacyData = {\n        ...validV1Data,\n        format: 'legacy-v1',\n        encoding: 'deprecated'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(legacyData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('Failed to convert legacy V1 format');\n    });\n\n    it('should handle V1 data size limit exceeded', async () => {\n      const largeData = {\n        ...validV1Data,\n        data: {\n          content: 'x'.repeat(10 * 1024 * 1024) // 10MB content\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(largeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(413);\n      expect(data.error.code).toBe('PAYLOAD_TOO_LARGE');\n      expect(data.error.message).toContain('V1 data size limit exceeded');\n    });\n\n    it('should handle V1 storage quota exceeded', async () => {\n      const { storeV1Data } = require('../../../lib/storage/v1-data-store');\n      storeV1Data.mockRejectedValue(new Error('V1 storage quota exceeded for API key'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(validV1Data),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'quota-exceeded-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(507);\n      expect(data.error.message).toContain('V1 storage quota exceeded');\n    });\n\n    it('should handle V1 duplicate resource creation', async () => {\n      const { storeV1Data } = require('../../../lib/storage/v1-data-store');\n      storeV1Data.mockRejectedValue(new Error('V1 resource with this identifier already exists'));\n\n      const duplicateData = {\n        ...validV1Data,\n        id: 'existing-item-id'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(duplicateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('V1 resource with this identifier already exists');\n    });\n\n    it('should handle V1 API permission denied', async () => {\n      const { checkApiKeyPermissions } = require('../../../lib/auth/api-key-validator');\n      checkApiKeyPermissions.mockRejectedValue(new Error('API key does not have V1 write permissions'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: JSON.stringify(validV1Data),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'read-only-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('API key does not have V1 write permissions');\n    });\n\n    it('should handle V1 malformed JSON', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: '{invalid json}',\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid JSON in V1 request body');\n    });\n\n    it('should handle V1 unsupported content type', async () => {\n      const request = new NextRequest('http://localhost:3000/api/v1/items', {\n        method: 'POST',\n        body: 'xml-data',\n        headers: { \n          'Content-Type': 'application/xml',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(415);\n      expect(data.error.message).toContain('Unsupported content type for V1 API');\n    });\n  });\n\n  describe('PUT /api/v1 - V1 API Data Updates', () => {\n    it('should handle V1 resource not found for update', async () => {\n      const { getV1Data } = require('../../../lib/storage/v1-data-store');\n      getV1Data.mockRejectedValue(new Error('V1 resource not found'));\n\n      const updateData = {\n        id: 'nonexistent-item',\n        name: 'Updated Item'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/nonexistent-item', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('V1 resource not found');\n    });\n\n    it('should handle V1 concurrent update conflict', async () => {\n      const { updateV1Data } = require('../../../lib/storage/v1-data-store');\n      updateV1Data.mockRejectedValue(new Error('V1 resource modified by another request'));\n\n      const updateData = {\n        id: 'item-123',\n        name: 'Updated Item',\n        version: 1\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'PUT',\n        body: JSON.stringify(updateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('V1 resource modified by another request');\n    });\n\n    it('should handle V1 update validation errors', async () => {\n      const { processV1Data } = require('../../../lib/services/v1-api-service');\n      processV1Data.mockRejectedValue(new Error('V1 update validation failed: invalid field values'));\n\n      const invalidUpdateData = {\n        id: 'item-123',\n        name: '', // Empty name\n        type: 'invalid-type'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'PUT',\n        body: JSON.stringify(invalidUpdateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('V1 update validation failed');\n    });\n\n    it('should handle V1 partial update not supported', async () => {\n      const { updateV1Data } = require('../../../lib/storage/v1-data-store');\n      updateV1Data.mockRejectedValue(new Error('V1 API does not support partial updates'));\n\n      const partialUpdateData = {\n        name: 'Updated Name' // Missing other required fields\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'PUT',\n        body: JSON.stringify(partialUpdateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('V1 API does not support partial updates');\n    });\n  });\n\n  describe('DELETE /api/v1 - V1 API Data Deletion', () => {\n    it('should handle V1 resource not found for deletion', async () => {\n      const { getV1Data } = require('../../../lib/storage/v1-data-store');\n      getV1Data.mockRejectedValue(new Error('V1 resource not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/nonexistent-item', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('V1 resource not found');\n    });\n\n    it('should handle V1 resource with dependencies', async () => {\n      const { deleteV1Data } = require('../../../lib/storage/v1-data-store');\n      deleteV1Data.mockRejectedValue(new Error('Cannot delete V1 resource: has active dependencies'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-with-deps', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Cannot delete V1 resource: has active dependencies');\n    });\n\n    it('should handle V1 deletion permission denied', async () => {\n      const { checkApiKeyPermissions } = require('../../../lib/auth/api-key-validator');\n      checkApiKeyPermissions.mockRejectedValue(new Error('API key does not have V1 delete permissions'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'no-delete-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('API key does not have V1 delete permissions');\n    });\n\n    it('should handle V1 deletion storage failure', async () => {\n      const { deleteV1Data } = require('../../../lib/storage/v1-data-store');\n      deleteV1Data.mockRejectedValue(new Error('Failed to delete V1 resource: storage error'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/items/item-123', {\n        method: 'DELETE',\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to delete V1 resource');\n    });\n  });\n\n  describe('Legacy Support and Migration', () => {\n    it('should handle legacy endpoint mapping failure', async () => {\n      const { mapLegacyEndpoints } = require('../../../lib/services/legacy-support');\n      mapLegacyEndpoints.mockRejectedValue(new Error('Legacy endpoint mapping failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/legacy/old-endpoint', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.message).toContain('Legacy endpoint mapping failed');\n    });\n\n    it('should handle V1 to V2 migration errors', async () => {\n      const { migrateV1ToV2 } = require('../../../lib/services/v1-api-service');\n      migrateV1ToV2.mockRejectedValue(new Error('V1 to V2 migration failed: incompatible data format'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/migrate', {\n        method: 'POST',\n        body: JSON.stringify({ resourceId: 'item-123' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('V1 to V2 migration failed');\n    });\n\n    it('should handle legacy data validation errors', async () => {\n      const { validateLegacyData } = require('../../../lib/services/legacy-support');\n      validateLegacyData.mockRejectedValue(new Error('Legacy data format validation failed'));\n\n      const legacyRequest = {\n        format: 'legacy-xml',\n        data: '<invalid>xml</data>'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/v1/legacy/import', {\n        method: 'POST',\n        body: JSON.stringify(legacyRequest),\n        headers: { \n          'Content-Type': 'application/json',\n          'X-API-Key': 'valid-key'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Legacy data format validation failed');\n    });\n\n    it('should handle legacy compatibility check failure', async () => {\n      const { getLegacyCompatibility } = require('../../../lib/services/legacy-support');\n      getLegacyCompatibility.mockRejectedValue(new Error('Legacy compatibility check failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/compatibility', {\n        headers: { \n          'X-API-Key': 'valid-key',\n          'X-Legacy-Version': '0.9'\n        }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(422);\n      expect(data.error.message).toContain('Legacy compatibility check failed');\n    });\n  });\n\n  describe('V1 API Metrics and Monitoring', () => {\n    it('should handle V1 metrics collection failure', async () => {\n      const { getV1ApiMetrics } = require('../../../lib/services/v1-api-service');\n      getV1ApiMetrics.mockRejectedValue(new Error('Failed to collect V1 API metrics'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/metrics', {\n        headers: { 'X-API-Key': 'admin-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to collect V1 API metrics');\n    });\n\n    it('should handle V1 API usage tracking failure', async () => {\n      const { trackApiKeyUsage } = require('../../../lib/auth/api-key-validator');\n      trackApiKeyUsage.mockRejectedValue(new Error('Failed to track V1 API usage'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      // Should not fail the main request, but log the tracking error\n      expect(response.status).not.toBe(500);\n      expect(data).toBeDefined();\n    });\n\n    it('should handle V1 rate limit info retrieval failure', async () => {\n      const { getRateLimitInfo } = require('../../../lib/middleware/rate-limiter');\n      getRateLimitInfo.mockRejectedValue(new Error('Failed to get V1 rate limit info'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/rate-limit', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to get V1 rate limit info');\n    });\n  });\n\n  describe('Error Recovery and Monitoring', () => {\n    it('should provide V1 API operation recovery suggestions', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('Temporary V1 API service outage'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.recovery).toBeDefined();\n      expect(data.error.recovery.suggestions).toContain('Consider migrating to V2 API');\n      expect(data.error.recovery.suggestions).toContain('Retry V1 request');\n    });\n\n    it('should track V1 API operation performance', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('Test error'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      await GET(request);\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.errorCount).toBeGreaterThan(0);\n    });\n\n    it('should include V1 API context in error responses', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('Test error'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/users', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.context).toBeDefined();\n      expect(data.error.context.apiVersion).toBe('v1');\n      expect(data.error.context.endpoint).toBe('/api/v1/users');\n      expect(data.error.context.deprecationWarning).toBeDefined();\n    });\n\n    it('should provide migration guidance in error responses', async () => {\n      const { handleV1Request } = require('../../../lib/services/v1-api-service');\n      handleV1Request.mockRejectedValue(new Error('V1 endpoint deprecated'));\n\n      const request = new NextRequest('http://localhost:3000/api/v1/deprecated-endpoint', {\n        headers: { 'X-API-Key': 'valid-key' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.migration).toBeDefined();\n      expect(data.error.migration.v2Endpoint).toBeDefined();\n      expect(data.error.migration.migrationGuide).toBeDefined();\n    });\n  });\n});"],"version":3}