{"version":3,"names":["cov_23yiaks0w0","actualCoverage","s","ToolRegistry","constructor","f","tools","Map","toolDefinitions","register","executor","has","name","b","Error","set","toolDefinition","type","function","description","parameters","properties","required","Object","keys","filter","key","unregister","removed","delete","execute","args","context","get","error","message","String","getToolDefinition","getAllToolDefinitions","Array","from","values","getToolNames","exports","WeatherTool","location","unit","enum","default","Promise","resolve","setTimeout","temperature","condition","humidity","windSpeed","forecast","day","high","low","WebSearchTool","query","limit","minimum","maximum","results","i","push","title","url","snippet","publishedDate","Date","now","toISOString","totalResults","length","searchTime","CADAnalysisTool","fileId","analysisType","result","timestamp","structure","totalElements","walls","doors","windows","rooms","area","devices","count","locations","risks","level","recommendation","PosterGeneratorTool","style","size","colors","items","imageUrl","thumbnailUrl","downloadUrl","metadata","generatedAt","processingTime","resolution"],"sources":["E:\\zk-agent\\lib\\ag-ui\\protocol\\tool-registry.ts"],"sourcesContent":["// @ts-nocheck\nimport type { Tool } from \"./types\"\n\n/**\n * 工具执行器接口\n */\nexport interface ToolExecutor {\n  name: string\n  description: string\n  parameters: Record<string, any>\n  execute(args: any, context?: any): Promise<any>\n}\n\n/**\n * 工具注册表\n * 管理所有可用的工具\n */\nexport class ToolRegistry {\n  private tools: Map<string, ToolExecutor> = new Map()\n  private toolDefinitions: Map<string, Tool> = new Map()\n\n  /**\n   * 注册工具\n   */\n  register(executor: ToolExecutor): void {\n    if (this.tools.has(executor.name)) {\n      throw new Error(`Tool ${executor.name} already registered`)\n    }\n\n    this.tools.set(executor.name, executor)\n\n    // 创建工具定义\n    const toolDefinition: Tool = {\n      type: \"function\",\n      function: {\n        name: executor.name,\n        description: executor.description,\n        parameters: {\n          type: \"object\",\n          properties: executor.parameters,\n          required: Object.keys(executor.parameters).filter((key) => executor.parameters[key].required === true),\n        },\n      },\n    }\n\n    this.toolDefinitions.set(executor.name, toolDefinition)\n  }\n\n  /**\n   * 注销工具\n   */\n  unregister(name: string): boolean {\n    const removed = this.tools.delete(name)\n    this.toolDefinitions.delete(name)\n    return removed\n  }\n\n  /**\n   * 执行工具\n   */\n  async execute(name: string, args: any, context?: any): Promise<any> {\n    const executor = this.tools.get(name)\n    if (!executor) {\n      throw new Error(`Tool not found: ${name}`)\n    }\n\n    try {\n      return await executor.execute(args, context)\n    } catch (error) {\n      throw new Error(`Tool execution failed for ${name}: ${error instanceof Error ? error.message : String(error)}`)\n    }\n  }\n\n  /**\n   * 获取工具定义\n   */\n  getToolDefinition(name: string): Tool | undefined {\n    return this.toolDefinitions.get(name)\n  }\n\n  /**\n   * 获取所有工具定义\n   */\n  getAllToolDefinitions(): Tool[] {\n    return Array.from(this.toolDefinitions.values())\n  }\n\n  /**\n   * 获取工具列表\n   */\n  getToolNames(): string[] {\n    return Array.from(this.tools.keys())\n  }\n\n  /**\n   * 检查工具是否存在\n   */\n  has(name: string): boolean {\n    return this.tools.has(name)\n  }\n}\n\n/**\n * 内置工具：天气查询\n */\nexport class WeatherTool implements ToolExecutor {\n  name = \"get_weather\"\n  description = \"获取指定城市的天气信息\"\n  parameters = {\n    location: {\n      type: \"string\",\n      description: \"城市名称\",\n      required: true,\n    },\n    unit: {\n      type: \"string\",\n      description: \"温度单位\",\n      enum: [\"celsius\", \"fahrenheit\"],\n      default: \"celsius\",\n    },\n  }\n\n  async execute(args: { location: string; unit?: string }): Promise<any> {\n    // 模拟天气API调用\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    return {\n      location: args.location,\n      temperature: args.unit === \"fahrenheit\" ? \"72°F\" : \"22°C\",\n      condition: \"晴天\",\n      humidity: \"65%\",\n      windSpeed: \"5 km/h\",\n      forecast: [\n        { day: \"今天\", high: \"25°C\", low: \"18°C\", condition: \"晴天\" },\n        { day: \"明天\", high: \"23°C\", low: \"16°C\", condition: \"多云\" },\n      ],\n    }\n  }\n}\n\n/**\n * 内置工具：网络搜索\n */\nexport class WebSearchTool implements ToolExecutor {\n  name = \"search_web\"\n  description = \"在网络上搜索信息\"\n  parameters = {\n    query: {\n      type: \"string\",\n      description: \"搜索关键词\",\n      required: true,\n    },\n    limit: {\n      type: \"number\",\n      description: \"返回结果数量\",\n      default: 5,\n      minimum: 1,\n      maximum: 20,\n    },\n  }\n\n  async execute(args: { query: string; limit?: number }): Promise<any> {\n    // 模拟搜索API调用\n    await new Promise((resolve) => setTimeout(resolve, 800))\n\n    const results = []\n    const limit = args.limit || 5\n\n    for (let i = 1; i <= limit; i++) {\n      results.push({\n        title: `搜索结果 ${i} - ${args.query}`,\n        url: `https://example.com/result-${i}`,\n        snippet: `这是关于 \"${args.query}\" 的搜索结果摘要 ${i}...`,\n        publishedDate: new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString(),\n      })\n    }\n\n    return {\n      query: args.query,\n      totalResults: results.length,\n      results,\n      searchTime: \"0.8s\",\n    }\n  }\n}\n\n/**\n * 内置工具：CAD分析\n */\nexport class CADAnalysisTool implements ToolExecutor {\n  name = \"analyze_cad\"\n  description = \"分析CAD文件并生成报告\"\n  parameters = {\n    fileId: {\n      type: \"string\",\n      description: \"CAD文件ID\",\n      required: true,\n    },\n    analysisType: {\n      type: \"string\",\n      description: \"分析类型\",\n      enum: [\"structure\", \"devices\", \"risks\", \"full\"],\n      default: \"full\",\n    },\n  }\n\n  async execute(args: { fileId: string; analysisType?: string }): Promise<any> {\n    // 模拟CAD分析\n    await new Promise((resolve) => setTimeout(resolve, 2000))\n\n    const analysisType = args.analysisType || \"full\"\n\n    const result: any = {\n      fileId: args.fileId,\n      analysisType,\n      timestamp: new Date().toISOString(),\n    }\n\n    if (analysisType === \"structure\" || analysisType === \"full\") {\n      result.structure = {\n        totalElements: 156,\n        walls: 24,\n        doors: 8,\n        windows: 12,\n        rooms: 6,\n        area: \"120.5 m²\",\n      }\n    }\n\n    if (analysisType === \"devices\" || analysisType === \"full\") {\n      result.devices = [\n        { type: \"门禁设备\", count: 3, locations: [\"主入口\", \"侧门\", \"后门\"] },\n        { type: \"摄像头\", count: 8, locations: [\"各楼层走廊\", \"出入口\"] },\n        { type: \"传感器\", count: 15, locations: [\"各房间\", \"走廊\"] },\n      ]\n    }\n\n    if (analysisType === \"risks\" || analysisType === \"full\") {\n      result.risks = [\n        { level: \"高\", description: \"主入口缺少备用电源\", recommendation: \"安装UPS电源\" },\n        { level: \"中\", description: \"部分区域监控盲区\", recommendation: \"增加摄像头覆盖\" },\n        { level: \"低\", description: \"设备维护周期较长\", recommendation: \"缩短维护间隔\" },\n      ]\n    }\n\n    return result\n  }\n}\n\n/**\n * 内置工具：海报生成\n */\nexport class PosterGeneratorTool implements ToolExecutor {\n  name = \"generate_poster\"\n  description = \"根据描述生成海报\"\n  parameters = {\n    description: {\n      type: \"string\",\n      description: \"海报内容描述\",\n      required: true,\n    },\n    style: {\n      type: \"string\",\n      description: \"海报风格\",\n      enum: [\"modern\", \"classic\", \"minimalist\", \"colorful\"],\n      default: \"modern\",\n    },\n    size: {\n      type: \"string\",\n      description: \"海报尺寸\",\n      enum: [\"A4\", \"A3\", \"1080x1920\", \"1920x1080\"],\n      default: \"A4\",\n    },\n    colors: {\n      type: \"array\",\n      description: \"主要颜色\",\n      items: { type: \"string\" },\n    },\n  }\n\n  async execute(args: {\n    description: string\n    style?: string\n    size?: string\n    colors?: string[]\n  }): Promise<any> {\n    // 模拟海报生成\n    await new Promise((resolve) => setTimeout(resolve, 3000))\n\n    return {\n      description: args.description,\n      style: args.style || \"modern\",\n      size: args.size || \"A4\",\n      colors: args.colors || [\"#6cb33f\", \"#ffffff\", \"#333333\"],\n      imageUrl: `/api/poster/generated/${Date.now()}.jpg`,\n      thumbnailUrl: `/api/poster/thumbnail/${Date.now()}.jpg`,\n      downloadUrl: `/api/poster/download/${Date.now()}.pdf`,\n      metadata: {\n        generatedAt: new Date().toISOString(),\n        processingTime: \"3.2s\",\n        resolution: \"300dpi\",\n      },\n    }\n  }\n}\n"],"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","ignoreList":[]}