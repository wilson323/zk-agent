{"version":3,"names":["cov_1r3g5v0w9s","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","withUnifiedErrorHandling","createUnifiedApiRoute","wrapAsyncOperation","handleBatchOperation","zod_1","require","error_handler_1","api_helper_1","unified_error_codes_1","logger_1","DEFAULT_CONFIG","enableLogging","enableMetrics","enableRetry","sensitiveFields","handler","config","finalConfig","args","startTime","Date","now","requestId","generateRequestId","result","recordSuccessMetrics","error","handleUnifiedException","processingTime","normalizedError","ErrorHandler","normalizeError","errorResponse","mapErrorToResponse","logError","recordErrorMetrics","sanitizedResponse","sanitizeErrorResponse","ZodError","code","UnifiedErrorCode","VALIDATION_ERROR","ApiResponseWrapper","getMessageForErrorCode","validationErrors","errors","map","err","field","join","message","getHttpStatusForErrorCode","handleDatabaseError","isNetworkError","ErrorCode","SERVICE_UNAVAILABLE","retryAfter","isTimeoutError","REQUEST_TIMEOUT","timeout","isAuthError","AUTH_INVALID_CREDENTIALS","isBusinessError","BUSINESS_LOGIC_ERROR","businessCode","INTERNAL_SERVER_ERROR","process","env","NODE_ENV","stack","DUPLICATE_RESOURCE","meta","target","NOT_FOUND","field_name","DATABASE_ERROR","includes","status","logger","Logger","logData","errorType","constructor","errorMessage","errorStack","timestamp","toISOString","severity","warn","info","console","log","response","Math","random","toString","substr","operation","errorContext","catch","context","items","options","continueOnError","maxConcurrency","results","i","length","batch","slice","batchPromises","item","index","success","batchResults","Promise","all","batchResult","push"],"sources":["E:\\zk-agent\\lib\\middleware\\unified-error-handler.ts"],"sourcesContent":["/**\n * @file Unified Error Handler\n * @description 统一异常处理系统，解决API路由中异常处理不一致的问题\n * @author ZK-Agent Team\n * @date 2025-01-27\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { ZodError } from 'zod';\nimport { ErrorHandler } from '../utils/error-handler';\nimport { ApiResponseWrapper } from '../utils/api-helper';\nimport { \n  UnifiedErrorCode, \n  ErrorSeverity,\n  getHttpStatusForErrorCode,\n  getMessageForErrorCode,\n  getSeverityForErrorCode,\n  isRetryableError,\n  shouldAlertError\n} from '../../types/core/unified-error-codes';\nimport { Logger } from '../utils/logger';\n\n// 统一错误处理配置\ninterface ErrorHandlingConfig {\n  enableLogging?: boolean;\n  enableMetrics?: boolean;\n  enableRetry?: boolean;\n  retryConfig?: {\n    maxRetries: number;\n    baseDelay: number;\n    maxDelay: number;\n  };\n  sensitiveFields?: string[];\n}\n\n// 默认配置\nconst DEFAULT_CONFIG: ErrorHandlingConfig = {\n  enableLogging: true,\n  enableMetrics: true,\n  enableRetry: false,\n  sensitiveFields: ['password', 'token', 'secret', 'key']\n};\n\n/**\n * 统一异常处理装饰器\n * 用于包装API路由处理函数，提供统一的异常处理\n */\nexport function withUnifiedErrorHandling<T extends any[], R>(\n  handler: (...args: T) => Promise<NextResponse<R>>,\n  config: ErrorHandlingConfig = {}\n) {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config };\n  \n  return async (...args: T): Promise<NextResponse<R>> => {\n    const startTime = Date.now();\n    const requestId = generateRequestId();\n    \n    try {\n      // 执行原始处理函数\n      const result = await handler(...args);\n      \n      // 记录成功指标\n      if (finalConfig.enableMetrics) {\n        recordSuccessMetrics(requestId, Date.now() - startTime);\n      }\n      \n      return result;\n    } catch (error) {\n      // 统一异常处理\n      return await handleUnifiedException(\n        error,\n        requestId,\n        finalConfig,\n        Date.now() - startTime\n      ) as NextResponse<R>;\n    }\n  };\n}\n\n/**\n * 统一异常处理核心函数\n */\nasync function handleUnifiedException(\n  error: any,\n  requestId: string,\n  config: ErrorHandlingConfig,\n  processingTime: number\n): Promise<NextResponse> {\n  // 1. 错误标准化\n  const normalizedError = ErrorHandler.normalizeError(error);\n  \n  // 2. 错误分类和映射\n  const errorResponse = mapErrorToResponse(normalizedError);\n  \n  // 3. 记录错误日志\n  if (config.enableLogging) {\n    await logError(normalizedError, requestId, processingTime);\n  }\n  \n  // 4. 记录错误指标\n  if (config.enableMetrics) {\n    recordErrorMetrics(normalizedError, requestId, processingTime);\n  }\n  \n  // 5. 敏感信息过滤\n  const sanitizedResponse = sanitizeErrorResponse(errorResponse, config.sensitiveFields);\n  \n  return sanitizedResponse;\n}\n\n/**\n * 错误到响应的映射\n */\nfunction mapErrorToResponse(error: any): NextResponse {\n  // Zod验证错误\n  if (error instanceof ZodError) {\n    const code = UnifiedErrorCode.VALIDATION_ERROR;\n    return ApiResponseWrapper.error(\n      code as ErrorCode,\n      getMessageForErrorCode(code),\n      {\n        validationErrors: error.errors.map(err => ({\n          field: err.path.join('.'),\n          message: err.message,\n          code: err.code\n        }))\n      },\n      getHttpStatusForErrorCode(code)\n    );\n  }\n  \n  // 数据库错误\n  if (error.name === 'PrismaClientKnownRequestError') {\n    return handleDatabaseError(error);\n  }\n  \n  // 网络错误\n  if (isNetworkError(error)) {\n    return ApiResponseWrapper.error(\n      ErrorCode.SERVICE_UNAVAILABLE as ErrorCode,\n      'External service unavailable',\n      { retryAfter: 30 },\n      503\n    );\n  }\n  \n  // 超时错误\n  if (isTimeoutError(error)) {\n    return ApiResponseWrapper.error(\n      ErrorCode.REQUEST_TIMEOUT as ErrorCode,\n      'Request timeout',\n      { timeout: true },\n      408\n    );\n  }\n  \n  // 权限错误\n  if (isAuthError(error)) {\n    const code = UnifiedErrorCode.AUTH_INVALID_CREDENTIALS;\n    return ApiResponseWrapper.error(\n      code as ErrorCode,\n      getMessageForErrorCode(code),\n      null,\n      getHttpStatusForErrorCode(code)\n    );\n  }\n  \n  // 业务逻辑错误\n  if (isBusinessError(error)) {\n    const code = UnifiedErrorCode.BUSINESS_LOGIC_ERROR;\n    return ApiResponseWrapper.error(\n      code as ErrorCode,\n      error.message || getMessageForErrorCode(code),\n      { businessCode: error.code },\n      getHttpStatusForErrorCode(code)\n    );\n  }\n  \n  // 默认内部服务器错误\n  const code = UnifiedErrorCode.INTERNAL_SERVER_ERROR;\n  return ApiResponseWrapper.error(\n    code,\n    getMessageForErrorCode(code),\n    process.env.NODE_ENV === 'development' ? {\n      stack: error.stack,\n      message: error.message\n    } : null,\n    getHttpStatusForErrorCode(code)\n  );\n}\n\n/**\n * 数据库错误处理\n */\nfunction handleDatabaseError(error: any): NextResponse {\n  switch (error.code) {\n    case 'P2002': // Unique constraint violation\n      return ApiResponseWrapper.error(\n        ErrorCode.DUPLICATE_RESOURCE as ErrorCode,\n        'Resource already exists',\n        { field: error.meta?.target },\n        409\n      );\n    case 'P2025': // Record not found\n      return ApiResponseWrapper.error(\n        ErrorCode.NOT_FOUND as ErrorCode,\n        'Resource not found',\n        null,\n        404\n      );\n    case 'P2003': // Foreign key constraint violation\n      return ApiResponseWrapper.error(\n        ErrorCode.VALIDATION_ERROR as ErrorCode,\n        'Invalid reference',\n        { field: error.meta?.field_name },\n        400\n      );\n    default:\n      return ApiResponseWrapper.error(\n        ErrorCode.DATABASE_ERROR as ErrorCode,\n        'Database operation failed',\n        null,\n        500\n      );\n  }\n}\n\n/**\n * 错误类型判断函数\n */\nfunction isNetworkError(error: any): boolean {\n  return error.code === 'ECONNREFUSED' || \n         error.code === 'ENOTFOUND' || \n         error.code === 'ECONNRESET';\n}\n\nfunction isTimeoutError(error: any): boolean {\n  return error.code === 'ETIMEDOUT' || \n         error.message?.includes('timeout') ||\n         error.name === 'TimeoutError';\n}\n\nfunction isAuthError(error: any): boolean {\n  return error.message?.includes('unauthorized') ||\n         error.message?.includes('forbidden') ||\n         error.status === 401 ||\n         error.status === 403;\n}\n\nfunction isBusinessError(error: any): boolean {\n  return error.type === 'BusinessError' ||\n         error.name === 'BusinessError' ||\n         error.isBusinessError === true;\n}\n\n/**\n * 错误日志记录\n */\nasync function logError(\n  error: any,\n  requestId: string,\n  processingTime: number\n): Promise<void> {\n  const logger = new Logger('UnifiedErrorHandler');\n  \n  const logData = {\n    requestId,\n    processingTime,\n    errorType: error.constructor.name,\n    errorMessage: error.message,\n    errorStack: error.stack,\n    timestamp: new Date().toISOString()\n  };\n  \n  // 根据错误严重程度选择日志级别\n  if (error.severity === 'critical') {\n    logger.error('Critical error occurred', logData);\n  } else if (error.severity === 'high') {\n    logger.warn('High severity error occurred', logData);\n  } else {\n    logger.info('Error occurred', logData);\n  }\n}\n\n/**\n * 错误指标记录\n */\nfunction recordErrorMetrics(\n  error: any,\n  requestId: string,\n  processingTime: number\n): void {\n  // 这里可以集成监控系统，如 Prometheus、DataDog 等\n  console.log(`[ERROR_METRICS] ${requestId}: ${error.constructor.name} - ${processingTime}ms`);\n}\n\n/**\n * 成功指标记录\n */\nfunction recordSuccessMetrics(\n  requestId: string,\n  processingTime: number\n): void {\n  console.log(`[SUCCESS_METRICS] ${requestId}: Success - ${processingTime}ms`);\n}\n\n/**\n * 敏感信息过滤\n */\nfunction sanitizeErrorResponse(\n  response: NextResponse,\n  sensitiveFields: string[] = []\n): NextResponse {\n  // 在生产环境中过滤敏感信息\n  if (process.env.NODE_ENV === 'production') {\n    // 实现敏感信息过滤逻辑\n    // 这里可以根据需要实现具体的过滤逻辑\n  }\n  \n  return response;\n}\n\n/**\n * 生成请求ID\n */\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * 创建统一的API路由处理器\n */\nexport function createUnifiedApiRoute<T = any>(\n  handler: (req: NextRequest, context?: any) => Promise<NextResponse<T>>,\n  config?: ErrorHandlingConfig\n) {\n  return withUnifiedErrorHandling(handler, config);\n}\n\n/**\n * 异步操作包装器\n */\nexport function wrapAsyncOperation<T>(\n  operation: () => Promise<T>,\n  errorContext?: string\n): Promise<T> {\n  return operation().catch(error => {\n    if (errorContext) {\n      error.context = errorContext;\n    }\n    throw error;\n  });\n}\n\n/**\n * 批量操作错误处理\n */\nexport async function handleBatchOperation<T, R>(\n  items: T[],\n  operation: (item: T) => Promise<R>,\n  options: {\n    continueOnError?: boolean;\n    maxConcurrency?: number;\n  } = {}\n): Promise<{ results: R[]; errors: any[] }> {\n  const { continueOnError = true, maxConcurrency = 5 } = options;\n  const results: R[] = [];\n  const errors: any[] = [];\n  \n  // 分批处理以控制并发\n  for (let i = 0; i < items.length; i += maxConcurrency) {\n    const batch = items.slice(i, i + maxConcurrency);\n    const batchPromises = batch.map(async (item, index) => {\n      try {\n        const result = await operation(item);\n        return { success: true, result, index: i + index };\n      } catch (error) {\n        return { success: false, error, index: i + index };\n      }\n    });\n    \n    const batchResults = await Promise.all(batchPromises);\n    \n    for (const batchResult of batchResults) {\n      if (batchResult.success) {\n        results[batchResult.index] = batchResult.result as R;\n      } else {\n        errors.push({\n          index: batchResult.index,\n          item: items[batchResult.index],\n          error: batchResult.error\n        });\n        \n        if (!continueOnError) {\n          throw batchResult.error;\n        }\n      }\n    }\n  }\n  \n  return { results, errors };\n}"],"mappings":"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","ignoreList":[]}