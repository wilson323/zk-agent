{"version":3,"names":["cov_lpyp41do4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_helper_1","require","core_1","api_route_wrapper_1","middleware_1","exports","GET","createApiRoute","RouteConfigs","protectedGet","req","params","validatedBody","validatedQuery","user","requestId","authResult","verifyAdminAuth","success","ApiResponseWrapper","error","ErrorCode","AUTHORIZATION_ERROR","_url","URL","url","_timeRange","range","province","mockLocations","city","count","percentage","coordinates","trend","filteredLocations","filter","totalIPs","reduce","sum","uniqueIPs","Math","floor","ipStats","topLocations","lastUpdate","Date","toISOString","INTERNAL_SERVER_ERROR"],"sources":["E:\\zk-agent\\app\\api\\admin\\ip-stats\\route.ts"],"sourcesContent":["/**\n * @file admin\\ip-stats\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse as _NextResponse } from 'next/server';\n\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { verifyAdminAuth } from \"@/lib/auth/middleware\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      // 验证管理员权限\n      const authResult = await verifyAdminAuth(req);\n      if (!authResult.success) {\n        return ApiResponseWrapper.error(\n          ErrorCode.AUTHORIZATION_ERROR,\n          '权限不足',\n          null,\n          403\n        );\n      }\n    \n      const _url = new URL(req.url);\n      const _timeRange = validatedQuery?.range || \"24h\";\n      const province = validatedQuery?.province || \"all\";\n    \n        // 模拟IP统计数据\n        const mockLocations = [\n          {\n            province: \"北京\",\n            city: \"北京市\",\n            count: 1250,\n            percentage: 15.2,\n            coordinates: [116.4074, 39.9042],\n            trend: \"up\",\n          },\n          { province: \"上海\", city: \"上海市\", count: 980, percentage: 11.9, coordinates: [121.4737, 31.2304], trend: \"up\" },\n          {\n            province: \"广东\",\n            city: \"深圳市\",\n            count: 856,\n            percentage: 10.4,\n            coordinates: [114.0579, 22.5431],\n            trend: \"stable\",\n          },\n          { province: \"广东\", city: \"广州市\", count: 742, percentage: 9.0, coordinates: [113.2644, 23.1291], trend: \"up\" },\n          {\n            province: \"浙江\",\n            city: \"杭州市\",\n            count: 623,\n            percentage: 7.6,\n            coordinates: [120.1551, 30.2741],\n            trend: \"down\",\n          },\n          {\n            province: \"江苏\",\n            city: \"南京市\",\n            count: 534,\n            percentage: 6.5,\n            coordinates: [118.7969, 32.0603],\n            trend: \"stable\",\n          },\n          { province: \"四川\", city: \"成都市\", count: 445, percentage: 5.4, coordinates: [104.0665, 30.5723], trend: \"up\" },\n          {\n            province: \"湖北\",\n            city: \"武汉市\",\n            count: 387,\n            percentage: 4.7,\n            coordinates: [114.3054, 30.5931],\n            trend: \"stable\",\n          },\n          {\n            province: \"陕西\",\n            city: \"西安市\",\n            count: 298,\n            percentage: 3.6,\n            coordinates: [108.9398, 34.3416],\n            trend: \"down\",\n          },\n          { province: \"山东\", city: \"青岛市\", count: 267, percentage: 3.2, coordinates: [120.3826, 36.0671], trend: \"up\" },\n          {\n            province: \"福建\",\n            city: \"厦门市\",\n            count: 234,\n            percentage: 2.8,\n            coordinates: [118.1689, 24.4797],\n            trend: \"stable\",\n          },\n          { province: \"重庆\", city: \"重庆市\", count: 198, percentage: 2.4, coordinates: [106.5516, 29.563], trend: \"up\" },\n          {\n            province: \"天津\",\n            city: \"天津市\",\n            count: 176,\n            percentage: 2.1,\n            coordinates: [117.1901, 39.1235],\n            trend: \"down\",\n          },\n          {\n            province: \"辽宁\",\n            city: \"大连市\",\n            count: 145,\n            percentage: 1.8,\n            coordinates: [121.6147, 38.914],\n            trend: \"stable\",\n          },\n          { province: \"河南\", city: \"郑州市\", count: 123, percentage: 1.5, coordinates: [113.6254, 34.7466], trend: \"up\" },\n        ]\n    \n        // 根据省份筛选\n        const filteredLocations =\n          province === \"all\" ? mockLocations : mockLocations.filter((loc) => loc.province === province)\n    \n        const totalIPs = filteredLocations.reduce((sum, loc) => sum + (loc.count as number), 0)\n        const uniqueIPs = Math.floor(totalIPs * 0.75) // 假设75%是独立IP\n    \n        const ipStats = {\n          totalIPs,\n          uniqueIPs,\n          topLocations: filteredLocations,\n          lastUpdate: new Date().toISOString(),\n        }\n    \n      return ApiResponseWrapper.success(ipStats);\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        '获取IP统计失败',\n        null,\n        500\n      );\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}