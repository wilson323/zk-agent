50d8240031a86c7578791039d6784694
"use strict";

/**
 * @file ag-ui\compliance\audit\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2gbkynxlrm() {
  var path = "E:\\zk-agent\\app\\api\\ag-ui\\compliance\\audit\\route.ts";
  var hash = "e22f7238a7ab70df49a3cd53763e6ad8958b4ced";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ag-ui\\compliance\\audit\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 33
        },
        end: {
          line: 13,
          column: 89
        }
      },
      "6": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "8": {
        start: {
          line: 20,
          column: 41
        },
        end: {
          line: 20,
          column: 57
        }
      },
      "9": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 73
        }
      },
      "10": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 69
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 137
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 105
          },
          end: {
            line: 18,
            column: 106
          }
        },
        loc: {
          start: {
            line: 18,
            column: 180
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ag-ui\\compliance\\audit\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AACzC,0FAAqF;AAErF;;;GAGG;AACU,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAElD,yCAAyC;QACzC,MAAM,KAAK,GAAG,IAAI,6CAAoB,EAAE,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAE9D,OAAO,+BAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;QAC3D,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,oCAAoC,EACpC,IAAI,CACL,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ag-ui\\compliance\\audit\\route.ts"],
      sourcesContent: ["/**\n * @file ag-ui\\compliance\\audit\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { AgentComplianceAudit } from '@/lib/ag-ui/compliance/agent-compliance-audit';\n\n/**\n * POST /api/ag-ui/compliance/audit\n * \u6267\u884C\u4EE3\u7406\u5408\u89C4\u5BA1\u8BA1\n */\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { agentId, auditConfig } = await req.json();\n      \n      // TODO: Implement compliance audit logic\n      const audit = new AgentComplianceAudit();\n      const result = await audit.performAudit(agentId, auditConfig);\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Error performing compliance audit:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        'Failed to perform compliance audit',\n        null\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e22f7238a7ab70df49a3cd53763e6ad8958b4ced"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gbkynxlrm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gbkynxlrm();
cov_2gbkynxlrm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2gbkynxlrm().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2gbkynxlrm().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2gbkynxlrm().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_2gbkynxlrm().s[4]++, require("@/types/core"));
const agent_compliance_audit_1 =
/* istanbul ignore next */
(cov_2gbkynxlrm().s[5]++, require("@/lib/ag-ui/compliance/agent-compliance-audit"));
/**
 * POST /api/ag-ui/compliance/audit
 * 执行代理合规审计
 */
/* istanbul ignore next */
cov_2gbkynxlrm().s[6]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2gbkynxlrm().f[0]++;
  cov_2gbkynxlrm().s[7]++;
  try {
    const {
      agentId,
      auditConfig
    } =
    /* istanbul ignore next */
    (cov_2gbkynxlrm().s[8]++, await req.json());
    // TODO: Implement compliance audit logic
    const audit =
    /* istanbul ignore next */
    (cov_2gbkynxlrm().s[9]++, new agent_compliance_audit_1.AgentComplianceAudit());
    const result =
    /* istanbul ignore next */
    (cov_2gbkynxlrm().s[10]++, await audit.performAudit(agentId, auditConfig));
    /* istanbul ignore next */
    cov_2gbkynxlrm().s[11]++;
    return api_helper_1.ApiResponseWrapper.success(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_2gbkynxlrm().s[12]++;
    console.error('Error performing compliance audit:', error);
    /* istanbul ignore next */
    cov_2gbkynxlrm().s[13]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to perform compliance audit', null);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmdia3lueGxybSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiYXBpX3JvdXRlX3dyYXBwZXJfMSIsInJlcXVpcmUiLCJhcGlfaGVscGVyXzEiLCJjb3JlXzEiLCJhZ2VudF9jb21wbGlhbmNlX2F1ZGl0XzEiLCJleHBvcnRzIiwiUE9TVCIsImNyZWF0ZUFwaVJvdXRlIiwiUm91dGVDb25maWdzIiwicHJvdGVjdGVkUG9zdCIsInJlcSIsInBhcmFtcyIsInZhbGlkYXRlZEJvZHkiLCJ2YWxpZGF0ZWRRdWVyeSIsInVzZXIiLCJyZXF1ZXN0SWQiLCJhZ2VudElkIiwiYXVkaXRDb25maWciLCJqc29uIiwiYXVkaXQiLCJBZ2VudENvbXBsaWFuY2VBdWRpdCIsInJlc3VsdCIsInBlcmZvcm1BdWRpdCIsIkFwaVJlc3BvbnNlV3JhcHBlciIsInN1Y2Nlc3MiLCJlcnJvciIsImNvbnNvbGUiLCJFcnJvckNvZGUiLCJJTlRFUk5BTF9TRVJWRVJfRVJST1IiXSwic291cmNlcyI6WyJFOlxcemstYWdlbnRcXGFwcFxcYXBpXFxhZy11aVxcY29tcGxpYW5jZVxcYXVkaXRcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgYWctdWlcXGNvbXBsaWFuY2VcXGF1ZGl0XFxyb3V0ZS50c1xuICogQGRlc2NyaXB0aW9uIE1pZ3JhdGVkIEFQSSByb3V0ZSB3aXRoIGdsb2JhbCBlcnJvciBoYW5kbGluZ1xuICogQGF1dGhvciBaSy1BZ2VudCBUZWFtXG4gKiBAZGF0ZSAyMDI1LTA2LTI1XG4gKi9cblxuaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBjcmVhdGVBcGlSb3V0ZSwgUm91dGVDb25maWdzIH0gZnJvbSAnQC9saWIvbWlkZGxld2FyZS9hcGktcm91dGUtd3JhcHBlcic7XG5pbXBvcnQgeyBBcGlSZXNwb25zZVdyYXBwZXIgfSBmcm9tICdAL2xpYi91dGlscy9hcGktaGVscGVyJztcbmltcG9ydCB7IEVycm9yQ29kZSB9IGZyb20gJ0AvdHlwZXMvY29yZSc7XG5pbXBvcnQgeyBBZ2VudENvbXBsaWFuY2VBdWRpdCB9IGZyb20gJ0AvbGliL2FnLXVpL2NvbXBsaWFuY2UvYWdlbnQtY29tcGxpYW5jZS1hdWRpdCc7XG5cbi8qKlxuICogUE9TVCAvYXBpL2FnLXVpL2NvbXBsaWFuY2UvYXVkaXRcbiAqIOaJp+ihjOS7o+eQhuWQiOinhOWuoeiuoVxuICovXG5leHBvcnQgY29uc3QgUE9TVCA9IGNyZWF0ZUFwaVJvdXRlKFxuICBSb3V0ZUNvbmZpZ3MucHJvdGVjdGVkUG9zdCgpLFxuICBhc3luYyAocmVxOiBOZXh0UmVxdWVzdCwgeyBwYXJhbXMsIHZhbGlkYXRlZEJvZHksIHZhbGlkYXRlZFF1ZXJ5LCB1c2VyLCByZXF1ZXN0SWQgfSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGFnZW50SWQsIGF1ZGl0Q29uZmlnIH0gPSBhd2FpdCByZXEuanNvbigpO1xuICAgICAgXG4gICAgICAvLyBUT0RPOiBJbXBsZW1lbnQgY29tcGxpYW5jZSBhdWRpdCBsb2dpY1xuICAgICAgY29uc3QgYXVkaXQgPSBuZXcgQWdlbnRDb21wbGlhbmNlQXVkaXQoKTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGF1ZGl0LnBlcmZvcm1BdWRpdChhZ2VudElkLCBhdWRpdENvbmZpZyk7XG4gICAgICBcbiAgICAgIHJldHVybiBBcGlSZXNwb25zZVdyYXBwZXIuc3VjY2VzcyhyZXN1bHQpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwZXJmb3JtaW5nIGNvbXBsaWFuY2UgYXVkaXQ6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5lcnJvcihcbiAgICAgICAgRXJyb3JDb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUixcbiAgICAgICAgJ0ZhaWxlZCB0byBwZXJmb3JtIGNvbXBsaWFuY2UgYXVkaXQnLFxuICAgICAgICBudWxsXG4gICAgICApO1xuICAgIH1cbiAgfVxuKTtcblxuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZ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