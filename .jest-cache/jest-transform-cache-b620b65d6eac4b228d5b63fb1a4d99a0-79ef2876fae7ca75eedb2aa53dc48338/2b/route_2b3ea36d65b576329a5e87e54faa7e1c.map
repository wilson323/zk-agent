{"version":3,"names":["cov_2gbkynxlrm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","agent_compliance_audit_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","agentId","auditConfig","json","audit","AgentComplianceAudit","result","performAudit","ApiResponseWrapper","success","error","console","ErrorCode","INTERNAL_SERVER_ERROR"],"sources":["E:\\zk-agent\\app\\api\\ag-ui\\compliance\\audit\\route.ts"],"sourcesContent":["/**\n * @file ag-ui\\compliance\\audit\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { AgentComplianceAudit } from '@/lib/ag-ui/compliance/agent-compliance-audit';\n\n/**\n * POST /api/ag-ui/compliance/audit\n * 执行代理合规审计\n */\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { agentId, auditConfig } = await req.json();\n      \n      // TODO: Implement compliance audit logic\n      const audit = new AgentComplianceAudit();\n      const result = await audit.performAudit(agentId, auditConfig);\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Error performing compliance audit:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        'Failed to perform compliance audit',\n        null\n      );\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}