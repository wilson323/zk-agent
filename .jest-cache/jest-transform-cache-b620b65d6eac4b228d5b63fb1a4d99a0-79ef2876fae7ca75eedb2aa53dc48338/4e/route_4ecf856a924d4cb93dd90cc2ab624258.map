{"version":3,"names":["cov_bo9m2mhhn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","image_generation_service_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","validatedBody","validatedQuery","user","requestId","description","style","size","palette","referenceImageUrl","timestamp","ApiResponseWrapper","error","ErrorCode","VALIDATION_ERROR","generationResult","imageGenerationService","generateImage","prompt","quality","negativePrompt","seed","Date","now","steps","guidance","success","INTERNAL_SERVER_ERROR","result","id","imageUrl","thumbnailUrl","metadata","generationTime","createdAt","console"],"sources":["E:\\zk-agent\\app\\api\\poster\\generate\\route.ts"],"sourcesContent":["/**\n * @file poster\\generate\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { imageGenerationService } from \"@/lib/ai/image-generation-service\";\nimport { templateSystem } from \"@/lib/poster/template-system\";\nimport type { PosterGenerationRequest, PosterGenerationResult } from \"@/types/poster\";\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const {\n        description,\n        style,\n        size,\n        palette,\n        referenceImageUrl,\n        timestamp\n      } = validatedBody as PosterGenerationRequest;\n      \n      if (!description) {\n        return ApiResponseWrapper.error(\n          ErrorCode.VALIDATION_ERROR,\n          \"Missing required parameters: description\",\n          null,\n          400\n        );\n      }\n      \n      // Generate poster using AI image generation service\n      const generationResult = await imageGenerationService.generateImage({\n        prompt: description,\n        style: style,\n        size: size,\n        quality: 0.8,\n        negativePrompt: \"\",\n        seed: Date.now(),\n        steps: 30,\n        guidance: 7.5,\n      });\n      \n      if (!generationResult.success) {\n        return ApiResponseWrapper.error(\n          ErrorCode.INTERNAL_SERVER_ERROR,\n          generationResult.error || \"Failed to generate poster\",\n          null,\n          500\n        );\n      }\n      \n      const result: PosterGenerationResult = {\n        id: `poster_${Date.now()}`,\n        imageUrl: generationResult.imageUrl || \"\",\n        thumbnailUrl: generationResult.thumbnailUrl,\n        metadata: {\n          generationTime: generationResult.metadata?.generationTime || 0,\n          style: style || \"\",\n          size: size || \"\",\n          palette: palette || \"\",\n        },\n        createdAt: new Date(),\n      };\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Error generating poster:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"Internal server error\",\n        null,\n        500\n      );\n    }\n  }\n);"],"mappings":"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","ignoreList":[]}