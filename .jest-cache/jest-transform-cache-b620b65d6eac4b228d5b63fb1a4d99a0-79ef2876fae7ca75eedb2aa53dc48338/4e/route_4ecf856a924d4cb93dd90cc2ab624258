4f54dada8fc4072585ea8ff7466b67b0
"use strict";

/**
 * @file poster\generate\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_bo9m2mhhn() {
  var path = "E:\\zk-agent\\app\\api\\poster\\generate\\route.ts";
  var hash = "2040b5ff67a23af9adcb5a72760c543ad7a9db96";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\poster\\generate\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 35
        },
        end: {
          line: 13,
          column: 79
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 84
        },
        end: {
          line: 16,
          column: 97
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 147
        }
      },
      "11": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 163
        }
      },
      "14": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 63
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 129
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 105
          },
          end: {
            line: 14,
            column: 106
          }
        },
        loc: {
          start: {
            line: 14,
            column: 172
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 97
          },
          end: {
            line: 32,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 97
          },
          end: {
            line: 32,
            column: 119
          }
        }, {
          start: {
            line: 32,
            column: 123
          },
          end: {
            line: 32,
            column: 150
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 53
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 73
          }
        }, {
          start: {
            line: 39,
            column: 77
          },
          end: {
            line: 39,
            column: 78
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 28
          }
        }, {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 34
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 22
          },
          end: {
            line: 41,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 22
          },
          end: {
            line: 41,
            column: 26
          }
        }, {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 32
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 32
          }
        }, {
          start: {
            line: 42,
            column: 36
          },
          end: {
            line: 42,
            column: 38
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\poster\\generate\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AACzC,gFAA2E;AAI9D,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IAC7E,IAAI,CAAC;QACH,MAAM,EACJ,WAAW,EACX,KAAK,EACL,IAAI,EACJ,OAAO,EACP,iBAAiB,EACjB,SAAS,EACV,GAAG,aAAwC,CAAC;QAE7C,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,gBAAgB,EAC1B,0CAA0C,EAC1C,IAAI,EACJ,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,oDAAoD;QACpD,MAAM,gBAAgB,GAAG,MAAM,iDAAsB,CAAC,aAAa,CAAC;YAClE,MAAM,EAAE,WAAW;YACnB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,GAAG;YACZ,cAAc,EAAE,EAAE;YAClB,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;YAChB,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,GAAG;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAC9B,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,gBAAgB,CAAC,KAAK,IAAI,2BAA2B,EACrD,IAAI,EACJ,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAA2B;YACrC,EAAE,EAAE,UAAU,IAAI,CAAC,GAAG,EAAE,EAAE;YAC1B,QAAQ,EAAE,gBAAgB,CAAC,QAAQ,IAAI,EAAE;YACzC,YAAY,EAAE,gBAAgB,CAAC,YAAY;YAC3C,QAAQ,EAAE;gBACR,cAAc,EAAE,gBAAgB,CAAC,QAAQ,EAAE,cAAc,IAAI,CAAC;gBAC9D,KAAK,EAAE,KAAK,IAAI,EAAE;gBAClB,IAAI,EAAE,IAAI,IAAI,EAAE;gBAChB,OAAO,EAAE,OAAO,IAAI,EAAE;aACvB;YACD,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC;QAEF,OAAO,+BAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,uBAAuB,EACvB,IAAI,EACJ,GAAG,CACJ,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\poster\\generate\\route.ts"],
      sourcesContent: ["/**\n * @file poster\\generate\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { imageGenerationService } from \"@/lib/ai/image-generation-service\";\nimport { templateSystem } from \"@/lib/poster/template-system\";\nimport type { PosterGenerationRequest, PosterGenerationResult } from \"@/types/poster\";\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const {\n        description,\n        style,\n        size,\n        palette,\n        referenceImageUrl,\n        timestamp\n      } = validatedBody as PosterGenerationRequest;\n      \n      if (!description) {\n        return ApiResponseWrapper.error(\n          ErrorCode.VALIDATION_ERROR,\n          \"Missing required parameters: description\",\n          null,\n          400\n        );\n      }\n      \n      // Generate poster using AI image generation service\n      const generationResult = await imageGenerationService.generateImage({\n        prompt: description,\n        style: style,\n        size: size,\n        quality: 0.8,\n        negativePrompt: \"\",\n        seed: Date.now(),\n        steps: 30,\n        guidance: 7.5,\n      });\n      \n      if (!generationResult.success) {\n        return ApiResponseWrapper.error(\n          ErrorCode.INTERNAL_SERVER_ERROR,\n          generationResult.error || \"Failed to generate poster\",\n          null,\n          500\n        );\n      }\n      \n      const result: PosterGenerationResult = {\n        id: `poster_${Date.now()}`,\n        imageUrl: generationResult.imageUrl || \"\",\n        thumbnailUrl: generationResult.thumbnailUrl,\n        metadata: {\n          generationTime: generationResult.metadata?.generationTime || 0,\n          style: style || \"\",\n          size: size || \"\",\n          palette: palette || \"\",\n        },\n        createdAt: new Date(),\n      };\n      \n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('Error generating poster:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"Internal server error\",\n        null,\n        500\n      );\n    }\n  }\n);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2040b5ff67a23af9adcb5a72760c543ad7a9db96"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bo9m2mhhn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bo9m2mhhn();
cov_bo9m2mhhn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_bo9m2mhhn().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_bo9m2mhhn().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_bo9m2mhhn().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_bo9m2mhhn().s[4]++, require("@/types/core"));
const image_generation_service_1 =
/* istanbul ignore next */
(cov_bo9m2mhhn().s[5]++, require("@/lib/ai/image-generation-service"));
/* istanbul ignore next */
cov_bo9m2mhhn().s[6]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_bo9m2mhhn().f[0]++;
  cov_bo9m2mhhn().s[7]++;
  try {
    const {
      description,
      style,
      size,
      palette,
      referenceImageUrl,
      timestamp
    } =
    /* istanbul ignore next */
    (cov_bo9m2mhhn().s[8]++, validatedBody);
    /* istanbul ignore next */
    cov_bo9m2mhhn().s[9]++;
    if (!description) {
      /* istanbul ignore next */
      cov_bo9m2mhhn().b[0][0]++;
      cov_bo9m2mhhn().s[10]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, "Missing required parameters: description", null, 400);
    } else
    /* istanbul ignore next */
    {
      cov_bo9m2mhhn().b[0][1]++;
    }
    // Generate poster using AI image generation service
    const generationResult =
    /* istanbul ignore next */
    (cov_bo9m2mhhn().s[11]++, await image_generation_service_1.imageGenerationService.generateImage({
      prompt: description,
      style: style,
      size: size,
      quality: 0.8,
      negativePrompt: "",
      seed: Date.now(),
      steps: 30,
      guidance: 7.5
    }));
    /* istanbul ignore next */
    cov_bo9m2mhhn().s[12]++;
    if (!generationResult.success) {
      /* istanbul ignore next */
      cov_bo9m2mhhn().b[1][0]++;
      cov_bo9m2mhhn().s[13]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR,
      /* istanbul ignore next */
      (cov_bo9m2mhhn().b[2][0]++, generationResult.error) ||
      /* istanbul ignore next */
      (cov_bo9m2mhhn().b[2][1]++, "Failed to generate poster"), null, 500);
    } else
    /* istanbul ignore next */
    {
      cov_bo9m2mhhn().b[1][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_bo9m2mhhn().s[14]++, {
      id: `poster_${Date.now()}`,
      imageUrl:
      /* istanbul ignore next */
      (cov_bo9m2mhhn().b[3][0]++, generationResult.imageUrl) ||
      /* istanbul ignore next */
      (cov_bo9m2mhhn().b[3][1]++, ""),
      thumbnailUrl: generationResult.thumbnailUrl,
      metadata: {
        generationTime:
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[4][0]++, generationResult.metadata?.generationTime) ||
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[4][1]++, 0),
        style:
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[5][0]++, style) ||
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[5][1]++, ""),
        size:
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[6][0]++, size) ||
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[6][1]++, ""),
        palette:
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[7][0]++, palette) ||
        /* istanbul ignore next */
        (cov_bo9m2mhhn().b[7][1]++, "")
      },
      createdAt: new Date()
    });
    /* istanbul ignore next */
    cov_bo9m2mhhn().s[15]++;
    return api_helper_1.ApiResponseWrapper.success(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_bo9m2mhhn().s[16]++;
    console.error('Error generating poster:', error);
    /* istanbul ignore next */
    cov_bo9m2mhhn().s[17]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, "Internal server error", null, 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,