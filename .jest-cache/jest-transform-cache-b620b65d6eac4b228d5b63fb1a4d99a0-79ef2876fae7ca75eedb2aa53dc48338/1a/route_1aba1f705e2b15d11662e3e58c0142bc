80e98e9444a5f5a2d9ec945885ab3f73
"use strict";

/**
 * @file auth\register\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_8zqxi6uzw() {
  var path = "E:\\zk-agent\\app\\api\\auth\\register\\route.ts";
  var hash = "050138978388b5ce7785d4525e37e9a2a1d1fe6d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\register\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 74
        }
      },
      "8": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 49
        }
      },
      "9": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "10": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "11": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 117,
          column: 3
        }
      },
      "12": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "13": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 59
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "16": {
        start: {
          line: 35,
          column: 50
        },
        end: {
          line: 35,
          column: 71
        }
      },
      "17": {
        start: {
          line: 37,
          column: 31
        },
        end: {
          line: 37,
          column: 73
        }
      },
      "18": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "20": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "21": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 52,
          column: 28
        }
      },
      "23": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "25": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 71
        }
      },
      "26": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "27": {
        start: {
          line: 81,
          column: 19
        },
        end: {
          line: 85,
          column: 6
        }
      },
      "28": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "29": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 60
        }
      },
      "30": {
        start: {
          line: 103,
          column: 21
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "31": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 105
          },
          end: {
            line: 25,
            column: 106
          }
        },
        loc: {
          start: {
            line: 25,
            column: 180
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 16
          }
        },
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 50
          }
        }, {
          start: {
            line: 55,
            column: 54
          },
          end: {
            line: 55,
            column: 65
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 18
          },
          end: {
            line: 67,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 18
          },
          end: {
            line: 67,
            column: 22
          }
        }, {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 67,
            column: 45
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 54
          }
        }, {
          start: {
            line: 95,
            column: 58
          },
          end: {
            line: 95,
            column: 86
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\register\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\register\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\register\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport prisma from \"@/lib/database/connection\"\nimport { hashPassword, validatePassword } from \"@/lib/auth/password\"\nimport { generateTokenPair } from \"@/lib/auth/jwt\"\nimport type { RegisterRequest, LoginResponse } from \"@/types/auth\"\n\nconst registerSchema = z.object({\n  email: z.string().email(\"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740\"),\n  password: z.string().min(8, \"\u5BC6\u7801\u81F3\u5C11\u9700\u89818\u4E2A\u5B57\u7B26\"),\n  name: z.string().optional(),\n  inviteCode: z.string().optional()\n})\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const body: RegisterRequest = await req.json()\n    \n    // \u9A8C\u8BC1\u8BF7\u6C42\u6570\u636E\n    const validationResult = registerSchema.safeParse(body)\n    if (!validationResult.success) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: validationResult.error.errors[0].message,\n        } as LoginResponse,\n        { status: 400 },\n      )\n    }\n\n    const { email, password, name, inviteCode } = validationResult.data\n\n    // \u9A8C\u8BC1\u5BC6\u7801\u5F3A\u5EA6\n    const passwordValidation = validatePassword(password)\n    if (!passwordValidation.isValid) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: passwordValidation.errors[0],\n        } as LoginResponse,\n        { status: 400 },\n      )\n    }\n\n    // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5DF2\u5B58\u5728\n    const existingUser = await prisma.user.findUnique({\n      where: { email: email.toLowerCase() },\n    })\n\n    if (existingUser) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C\",\n        } as LoginResponse,\n        { status: 409 },\n      )\n    }\n\n    // \u9A8C\u8BC1\u9080\u8BF7\u7801\uFF08\u5982\u679C\u9700\u8981\uFF09\n    if (process.env.REQUIRE_INVITE_CODE === \"true\" && !inviteCode) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u8BF7\u63D0\u4F9B\u6709\u6548\u7684\u9080\u8BF7\u7801\",\n        } as LoginResponse,\n        { status: 400 },\n      )\n    }\n\n    // \u52A0\u5BC6\u5BC6\u7801\n    const hashedPassword = await hashPassword(password)\n\n    // \u521B\u5EFA\u7528\u6237\n    const newUser = await prisma.user.create({\n      data: {\n        email: email.toLowerCase(),\n        name: name || email.split(\"@\")[0],\n        // password: hashedPassword, // \u9700\u8981\u5728schema\u4E2D\u6DFB\u52A0password\u5B57\u6BB5\n        // role: 'user', // \u9700\u8981\u5728schema\u4E2D\u6DFB\u52A0role\u5B57\u6BB5\n      },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        avatar: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    })\n\n    // \u751F\u6210\u4EE4\u724C\n    const tokens = generateTokenPair({\n      id: newUser.id,\n      email: newUser.email,\n      role: \"user\",\n    })\n\n    // \u8BB0\u5F55\u6CE8\u518C\u65E5\u5FD7\n    await prisma.usageStats\n      .create({\n        data: {\n          userId: newUser.id,\n          agentType: \"auth\",\n          action: \"register\",\n          metadata: {\n            userAgent: req.headers.get(\"user-agent\"),\n            ip: req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\"),\n            inviteCode,\n          },\n        },\n      })\n      .catch((error) => {\n        console.error(\"Failed to log registration:\", error)\n      })\n\n    const response: LoginResponse = {\n      success: true,\n      user: {\n        id: newUser.id,\n        email: newUser.email,\n        name: newUser.name,\n        avatar: newUser.avatar,\n        role: \"user\",\n        createdAt: newUser.createdAt,\n        updatedAt: newUser.updatedAt,\n      },\n      tokens,\n    }\n\n    return ApiResponseWrapper.success(response)\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "050138978388b5ce7785d4525e37e9a2a1d1fe6d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8zqxi6uzw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8zqxi6uzw();
var __importDefault =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[0]++,
/* istanbul ignore next */
(cov_8zqxi6uzw().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_8zqxi6uzw().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_8zqxi6uzw().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_8zqxi6uzw().f[0]++;
  cov_8zqxi6uzw().s[1]++;
  return /* istanbul ignore next */(cov_8zqxi6uzw().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_8zqxi6uzw().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_8zqxi6uzw().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_8zqxi6uzw().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_8zqxi6uzw().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_8zqxi6uzw().s[3]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[4]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[5]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[6]++, require("zod"));
const connection_1 =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[7]++, __importDefault(require("@/lib/database/connection")));
const password_1 =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[8]++, require("@/lib/auth/password"));
const jwt_1 =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[9]++, require("@/lib/auth/jwt"));
const registerSchema =
/* istanbul ignore next */
(cov_8zqxi6uzw().s[10]++, zod_1.z.object({
  email: zod_1.z.string().email("请输入有效的邮箱地址"),
  password: zod_1.z.string().min(8, "密码至少需要8个字符"),
  name: zod_1.z.string().optional(),
  inviteCode: zod_1.z.string().optional()
}));
/* istanbul ignore next */
cov_8zqxi6uzw().s[11]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_8zqxi6uzw().f[1]++;
  const body =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[12]++, await req.json());
  // 验证请求数据
  const validationResult =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[13]++, registerSchema.safeParse(body));
  /* istanbul ignore next */
  cov_8zqxi6uzw().s[14]++;
  if (!validationResult.success) {
    /* istanbul ignore next */
    cov_8zqxi6uzw().b[3][0]++;
    cov_8zqxi6uzw().s[15]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: validationResult.error.errors[0].message
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_8zqxi6uzw().b[3][1]++;
  }
  const {
    email,
    password,
    name,
    inviteCode
  } =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[16]++, validationResult.data);
  // 验证密码强度
  const passwordValidation =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[17]++, (0, password_1.validatePassword)(password));
  /* istanbul ignore next */
  cov_8zqxi6uzw().s[18]++;
  if (!passwordValidation.isValid) {
    /* istanbul ignore next */
    cov_8zqxi6uzw().b[4][0]++;
    cov_8zqxi6uzw().s[19]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: passwordValidation.errors[0]
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_8zqxi6uzw().b[4][1]++;
  }
  // 检查邮箱是否已存在
  const existingUser =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[20]++, await connection_1.default.user.findUnique({
    where: {
      email: email.toLowerCase()
    }
  }));
  /* istanbul ignore next */
  cov_8zqxi6uzw().s[21]++;
  if (existingUser) {
    /* istanbul ignore next */
    cov_8zqxi6uzw().b[5][0]++;
    cov_8zqxi6uzw().s[22]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "该邮箱已被注册"
    }, {
      status: 409
    });
  } else
  /* istanbul ignore next */
  {
    cov_8zqxi6uzw().b[5][1]++;
  }
  // 验证邀请码（如果需要）
  cov_8zqxi6uzw().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_8zqxi6uzw().b[7][0]++, process.env.REQUIRE_INVITE_CODE === "true") &&
  /* istanbul ignore next */
  (cov_8zqxi6uzw().b[7][1]++, !inviteCode)) {
    /* istanbul ignore next */
    cov_8zqxi6uzw().b[6][0]++;
    cov_8zqxi6uzw().s[24]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "请提供有效的邀请码"
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_8zqxi6uzw().b[6][1]++;
  }
  // 加密密码
  const hashedPassword =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[25]++, await (0, password_1.hashPassword)(password));
  // 创建用户
  const newUser =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[26]++, await connection_1.default.user.create({
    data: {
      email: email.toLowerCase(),
      name:
      /* istanbul ignore next */
      (cov_8zqxi6uzw().b[8][0]++, name) ||
      /* istanbul ignore next */
      (cov_8zqxi6uzw().b[8][1]++, email.split("@")[0])
      // password: hashedPassword, // 需要在schema中添加password字段
      // role: 'user', // 需要在schema中添加role字段
    },
    select: {
      id: true,
      email: true,
      name: true,
      avatar: true,
      createdAt: true,
      updatedAt: true
    }
  }));
  // 生成令牌
  const tokens =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[27]++, (0, jwt_1.generateTokenPair)({
    id: newUser.id,
    email: newUser.email,
    role: "user"
  }));
  // 记录注册日志
  /* istanbul ignore next */
  cov_8zqxi6uzw().s[28]++;
  await connection_1.default.usageStats.create({
    data: {
      userId: newUser.id,
      agentType: "auth",
      action: "register",
      metadata: {
        userAgent: req.headers.get("user-agent"),
        ip:
        /* istanbul ignore next */
        (cov_8zqxi6uzw().b[9][0]++, req.headers.get("x-forwarded-for")) ||
        /* istanbul ignore next */
        (cov_8zqxi6uzw().b[9][1]++, req.headers.get("x-real-ip")),
        inviteCode
      }
    }
  }).catch(error => {
    /* istanbul ignore next */
    cov_8zqxi6uzw().f[2]++;
    cov_8zqxi6uzw().s[29]++;
    console.error("Failed to log registration:", error);
  });
  const response =
  /* istanbul ignore next */
  (cov_8zqxi6uzw().s[30]++, {
    success: true,
    user: {
      id: newUser.id,
      email: newUser.email,
      name: newUser.name,
      avatar: newUser.avatar,
      role: "user",
      createdAt: newUser.createdAt,
      updatedAt: newUser.updatedAt
    },
    tokens
  });
  /* istanbul ignore next */
  cov_8zqxi6uzw().s[31]++;
  return api_helper_1.ApiResponseWrapper.success(response);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,