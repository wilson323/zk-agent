{"version":3,"names":["cov_2lmwnkj0ig","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","middleware_1","os_1","__importDefault","getCPUUsage","Math","random","getMemoryInfo","total","default","totalmem","free","freemem","used","percentage","getDiskInfo","getNetworkInfo","inbound","outbound","getDatabaseInfo","connections","maxConnections","queryTime","getAgentInfo","active","getUserInfo","online","exports","GET","createApiRoute","RouteConfigs","protectedGet","req","params","validatedBody","validatedQuery","user","requestId","authResult","verifyAdminAuth","success","ApiResponseWrapper","error","cpuUsage","memoryInfo","diskInfo","networkInfo","databaseInfo","agentInfo","userInfo","metrics","cpu","usage","cores","cpus","length","temperature","memory","disk","network","database","agents","users"],"sources":["E:\\zk-agent\\app\\api\\admin\\metrics\\route.ts"],"sourcesContent":["/**\n * @file admin\\metrics\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { verifyAdminAuth } from \"@/lib/auth/middleware\"\nimport os from \"os\"\n\n// 辅助函数\nasync function getCPUUsage() {\n  return Math.random() * 100;\n}\n\nfunction getMemoryInfo() {\n  const total = os.totalmem();\n  const free = os.freemem();\n  const used = total - free;\n  return {\n    used,\n    total,\n    percentage: (used / total) * 100\n  };\n}\n\nasync function getDiskInfo() {\n  return {\n    used: 50 * 1024 * 1024 * 1024,\n    total: 100 * 1024 * 1024 * 1024,\n    percentage: 50\n  };\n}\n\nfunction getNetworkInfo() {\n  return {\n    inbound: Math.random() * 1000,\n    outbound: Math.random() * 1000\n  };\n}\n\nasync function getDatabaseInfo() {\n  return {\n    connections: 10,\n    maxConnections: 100,\n    queryTime: Math.random() * 100\n  };\n}\n\nasync function getAgentInfo() {\n  return {\n    active: 5,\n    total: 10\n  };\n}\n\nasync function getUserInfo() {\n  return {\n    online: 25,\n    total: 100\n  };\n}\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      // 验证管理员权限\n      const authResult = await verifyAdminAuth(req);\n      if (!authResult.success) {\n        return ApiResponseWrapper.error('权限不足', 403);\n      }\n    \n      // 获取系统指标\n      const cpuUsage = await getCPUUsage();\n      const memoryInfo = getMemoryInfo();\n      const diskInfo = await getDiskInfo();\n      const networkInfo = getNetworkInfo();\n      const databaseInfo = await getDatabaseInfo();\n      const agentInfo = await getAgentInfo();\n      const userInfo = await getUserInfo();\n    \n        const metrics = {\n          cpu: {\n            usage: cpuUsage,\n            cores: os.cpus().length,\n            temperature: null, // 需要额外的系统调用获取\n          },\n          memory: {\n            used: memoryInfo.used,\n            total: memoryInfo.total,\n            percentage: memoryInfo.percentage,\n          },\n          disk: {\n            used: diskInfo.used,\n            total: diskInfo.total,\n            percentage: diskInfo.percentage,\n          },\n          network: {\n            inbound: networkInfo.inbound,\n            outbound: networkInfo.outbound,\n          },\n          database: {\n            connections: databaseInfo.connections,\n            maxConnections: databaseInfo.maxConnections,\n            queryTime: databaseInfo.queryTime,\n          },\n          agents: agentInfo,\n          users: userInfo,\n        }\n    \n      return ApiResponseWrapper.success(metrics);\n    } catch (error) {\n      return ApiResponseWrapper.error('获取系统指标失败', 500);\n    }\n  }\n);\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}