{"version":3,"names":["describe","test","expect","toBe","toUpperCase","length","includes","arr","map","x","toEqual","obj","name","value","Object","keys","promise","Promise","resolve","result","mockFn","jest","fn","toHaveBeenCalledWith","toHaveBeenCalledTimes","process","env","NODE_ENV","global","testUtils","toBeDefined","createMockUser","mockUser","id","email","performanceUtils","measureTime","TextEncoder","TextDecoder","encoder","decoder","text","encoded","encode","decoded","decode"],"sources":["simple.test.js"],"sourcesContent":["/**\n * @file __tests__/basic/simple.test.js\n * @description 简单的测试文件，用于验证Jest配置是否正常工作\n * @author 修复团队\n * @lastUpdate 2024-12-19\n */\n\ndescribe('简单测试套件', () => {\n  test('基础数学运算', () => {\n    expect(1 + 1).toBe(2);\n    expect(2 * 3).toBe(6);\n    expect(10 / 2).toBe(5);\n  });\n\n  test('字符串操作', () => {\n    expect('hello'.toUpperCase()).toBe('HELLO');\n    expect('world'.length).toBe(5);\n    expect('test'.includes('es')).toBe(true);\n  });\n\n  test('数组操作', () => {\n    const arr = [1, 2, 3];\n    expect(arr.length).toBe(3);\n    expect(arr.includes(2)).toBe(true);\n    expect(arr.map(x => x * 2)).toEqual([2, 4, 6]);\n  });\n\n  test('对象操作', () => {\n    const obj = { name: 'test', value: 42 };\n    expect(obj.name).toBe('test');\n    expect(obj.value).toBe(42);\n    expect(Object.keys(obj)).toEqual(['name', 'value']);\n  });\n\n  test('异步操作', async () => {\n    const promise = Promise.resolve('success');\n    const result = await promise;\n    expect(result).toBe('success');\n  });\n\n  test('Mock函数', () => {\n    const mockFn = jest.fn();\n    mockFn('test');\n    expect(mockFn).toHaveBeenCalledWith('test');\n    expect(mockFn).toHaveBeenCalledTimes(1);\n  });\n\n  test('环境变量', () => {\n    expect(process.env.NODE_ENV).toBe('test');\n  });\n\n  test('全局工具函数', () => {\n    expect(global.testUtils).toBeDefined();\n    expect(typeof global.testUtils.createMockUser).toBe('function');\n    \n    const mockUser = global.testUtils.createMockUser();\n    expect(mockUser.id).toBe('test-user-id');\n    expect(mockUser.email).toBe('test@example.com');\n  });\n\n  test('性能工具函数', () => {\n    expect(global.performanceUtils).toBeDefined();\n    expect(typeof global.performanceUtils.measureTime).toBe('function');\n  });\n\n  test('TextEncoder/TextDecoder', () => {\n    expect(global.TextEncoder).toBeDefined();\n    expect(global.TextDecoder).toBeDefined();\n    \n    const encoder = new global.TextEncoder();\n    const decoder = new global.TextDecoder();\n    \n    const text = 'Hello, World!';\n    const encoded = encoder.encode(text);\n    const decoded = decoder.decode(encoded);\n    \n    expect(decoded).toBe(text);\n  });\n});"],"mappings":"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","ignoreList":[]}