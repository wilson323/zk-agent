dd27403ec17297c7c50b62dc4a09de1b
/**
 * @file __tests__/basic/simple.test.js
 * @description 简单的测试文件，用于验证Jest配置是否正常工作
 * @author 修复团队
 * @lastUpdate 2024-12-19
 */

describe('简单测试套件', () => {
  test('基础数学运算', () => {
    expect(1 + 1).toBe(2);
    expect(2 * 3).toBe(6);
    expect(10 / 2).toBe(5);
  });
  test('字符串操作', () => {
    expect('hello'.toUpperCase()).toBe('HELLO');
    expect('world'.length).toBe(5);
    expect('test'.includes('es')).toBe(true);
  });
  test('数组操作', () => {
    const arr = [1, 2, 3];
    expect(arr.length).toBe(3);
    expect(arr.includes(2)).toBe(true);
    expect(arr.map(x => x * 2)).toEqual([2, 4, 6]);
  });
  test('对象操作', () => {
    const obj = {
      name: 'test',
      value: 42
    };
    expect(obj.name).toBe('test');
    expect(obj.value).toBe(42);
    expect(Object.keys(obj)).toEqual(['name', 'value']);
  });
  test('异步操作', async () => {
    const promise = Promise.resolve('success');
    const result = await promise;
    expect(result).toBe('success');
  });
  test('Mock函数', () => {
    const mockFn = jest.fn();
    mockFn('test');
    expect(mockFn).toHaveBeenCalledWith('test');
    expect(mockFn).toHaveBeenCalledTimes(1);
  });
  test('环境变量', () => {
    expect(process.env.NODE_ENV).toBe('test');
  });
  test('全局工具函数', () => {
    expect(global.testUtils).toBeDefined();
    expect(typeof global.testUtils.createMockUser).toBe('function');
    const mockUser = global.testUtils.createMockUser();
    expect(mockUser.id).toBe('test-user-id');
    expect(mockUser.email).toBe('test@example.com');
  });
  test('性能工具函数', () => {
    expect(global.performanceUtils).toBeDefined();
    expect(typeof global.performanceUtils.measureTime).toBe('function');
  });
  test('TextEncoder/TextDecoder', () => {
    expect(global.TextEncoder).toBeDefined();
    expect(global.TextDecoder).toBeDefined();
    const encoder = new global.TextEncoder();
    const decoder = new global.TextDecoder();
    const text = 'Hello, World!';
    const encoded = encoder.encode(text);
    const decoded = decoder.decode(encoded);
    expect(decoded).toBe(text);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsInRlc3QiLCJleHBlY3QiLCJ0b0JlIiwidG9VcHBlckNhc2UiLCJsZW5ndGgiLCJpbmNsdWRlcyIsImFyciIsIm1hcCIsIngiLCJ0b0VxdWFsIiwib2JqIiwibmFtZSIsInZhbHVlIiwiT2JqZWN0Iiwia2V5cyIsInByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlc3VsdCIsIm1vY2tGbiIsImplc3QiLCJmbiIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiZ2xvYmFsIiwidGVzdFV0aWxzIiwidG9CZURlZmluZWQiLCJjcmVhdGVNb2NrVXNlciIsIm1vY2tVc2VyIiwiaWQiLCJlbWFpbCIsInBlcmZvcm1hbmNlVXRpbHMiLCJtZWFzdXJlVGltZSIsIlRleHRFbmNvZGVyIiwiVGV4dERlY29kZXIiLCJlbmNvZGVyIiwiZGVjb2RlciIsInRleHQiLCJlbmNvZGVkIiwiZW5jb2RlIiwiZGVjb2RlZCIsImRlY29kZSJdLCJzb3VyY2VzIjpbInNpbXBsZS50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgX190ZXN0c19fL2Jhc2ljL3NpbXBsZS50ZXN0LmpzXG4gKiBAZGVzY3JpcHRpb24g566A5Y2V55qE5rWL6K+V5paH5Lu277yM55So5LqO6aqM6K+BSmVzdOmFjee9ruaYr+WQpuato+W4uOW3peS9nFxuICogQGF1dGhvciDkv67lpI3lm6LpmJ9cbiAqIEBsYXN0VXBkYXRlIDIwMjQtMTItMTlcbiAqL1xuXG5kZXNjcmliZSgn566A5Y2V5rWL6K+V5aWX5Lu2JywgKCkgPT4ge1xuICB0ZXN0KCfln7rnoYDmlbDlrabov5DnrpcnLCAoKSA9PiB7XG4gICAgZXhwZWN0KDEgKyAxKS50b0JlKDIpO1xuICAgIGV4cGVjdCgyICogMykudG9CZSg2KTtcbiAgICBleHBlY3QoMTAgLyAyKS50b0JlKDUpO1xuICB9KTtcblxuICB0ZXN0KCflrZfnrKbkuLLmk43kvZwnLCAoKSA9PiB7XG4gICAgZXhwZWN0KCdoZWxsbycudG9VcHBlckNhc2UoKSkudG9CZSgnSEVMTE8nKTtcbiAgICBleHBlY3QoJ3dvcmxkJy5sZW5ndGgpLnRvQmUoNSk7XG4gICAgZXhwZWN0KCd0ZXN0Jy5pbmNsdWRlcygnZXMnKSkudG9CZSh0cnVlKTtcbiAgfSk7XG5cbiAgdGVzdCgn5pWw57uE5pON5L2cJywgKCkgPT4ge1xuICAgIGNvbnN0IGFyciA9IFsxLCAyLCAzXTtcbiAgICBleHBlY3QoYXJyLmxlbmd0aCkudG9CZSgzKTtcbiAgICBleHBlY3QoYXJyLmluY2x1ZGVzKDIpKS50b0JlKHRydWUpO1xuICAgIGV4cGVjdChhcnIubWFwKHggPT4geCAqIDIpKS50b0VxdWFsKFsyLCA0LCA2XSk7XG4gIH0pO1xuXG4gIHRlc3QoJ+WvueixoeaTjeS9nCcsICgpID0+IHtcbiAgICBjb25zdCBvYmogPSB7IG5hbWU6ICd0ZXN0JywgdmFsdWU6IDQyIH07XG4gICAgZXhwZWN0KG9iai5uYW1lKS50b0JlKCd0ZXN0Jyk7XG4gICAgZXhwZWN0KG9iai52YWx1ZSkudG9CZSg0Mik7XG4gICAgZXhwZWN0KE9iamVjdC5rZXlzKG9iaikpLnRvRXF1YWwoWyduYW1lJywgJ3ZhbHVlJ10pO1xuICB9KTtcblxuICB0ZXN0KCflvILmraXmk43kvZwnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgnc3VjY2VzcycpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHByb21pc2U7XG4gICAgZXhwZWN0KHJlc3VsdCkudG9CZSgnc3VjY2VzcycpO1xuICB9KTtcblxuICB0ZXN0KCdNb2Nr5Ye95pWwJywgKCkgPT4ge1xuICAgIGNvbnN0IG1vY2tGbiA9IGplc3QuZm4oKTtcbiAgICBtb2NrRm4oJ3Rlc3QnKTtcbiAgICBleHBlY3QobW9ja0ZuKS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgndGVzdCcpO1xuICAgIGV4cGVjdChtb2NrRm4pLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgfSk7XG5cbiAgdGVzdCgn546v5aKD5Y+Y6YePJywgKCkgPT4ge1xuICAgIGV4cGVjdChwcm9jZXNzLmVudi5OT0RFX0VOVikudG9CZSgndGVzdCcpO1xuICB9KTtcblxuICB0ZXN0KCflhajlsYDlt6Xlhbflh73mlbAnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGdsb2JhbC50ZXN0VXRpbHMpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHR5cGVvZiBnbG9iYWwudGVzdFV0aWxzLmNyZWF0ZU1vY2tVc2VyKS50b0JlKCdmdW5jdGlvbicpO1xuICAgIFxuICAgIGNvbnN0IG1vY2tVc2VyID0gZ2xvYmFsLnRlc3RVdGlscy5jcmVhdGVNb2NrVXNlcigpO1xuICAgIGV4cGVjdChtb2NrVXNlci5pZCkudG9CZSgndGVzdC11c2VyLWlkJyk7XG4gICAgZXhwZWN0KG1vY2tVc2VyLmVtYWlsKS50b0JlKCd0ZXN0QGV4YW1wbGUuY29tJyk7XG4gIH0pO1xuXG4gIHRlc3QoJ+aAp+iDveW3peWFt+WHveaVsCcsICgpID0+IHtcbiAgICBleHBlY3QoZ2xvYmFsLnBlcmZvcm1hbmNlVXRpbHMpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHR5cGVvZiBnbG9iYWwucGVyZm9ybWFuY2VVdGlscy5tZWFzdXJlVGltZSkudG9CZSgnZnVuY3Rpb24nKTtcbiAgfSk7XG5cbiAgdGVzdCgnVGV4dEVuY29kZXIvVGV4dERlY29kZXInLCAoKSA9PiB7XG4gICAgZXhwZWN0KGdsb2JhbC5UZXh0RW5jb2RlcikudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QoZ2xvYmFsLlRleHREZWNvZGVyKS50b0JlRGVmaW5lZCgpO1xuICAgIFxuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgZ2xvYmFsLlRleHRFbmNvZGVyKCk7XG4gICAgY29uc3QgZGVjb2RlciA9IG5ldyBnbG9iYWwuVGV4dERlY29kZXIoKTtcbiAgICBcbiAgICBjb25zdCB0ZXh0ID0gJ0hlbGxvLCBXb3JsZCEnO1xuICAgIGNvbnN0IGVuY29kZWQgPSBlbmNvZGVyLmVuY29kZSh0ZXh0KTtcbiAgICBjb25zdCBkZWNvZGVkID0gZGVjb2Rlci5kZWNvZGUoZW5jb2RlZCk7XG4gICAgXG4gICAgZXhwZWN0KGRlY29kZWQpLnRvQmUodGV4dCk7XG4gIH0pO1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFBLFFBQVEsQ0FBQyxRQUFRLEVBQUUsTUFBTTtFQUN2QkMsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNO0lBQ25CQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3JCRCxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3JCRCxNQUFNLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0VBQ3hCLENBQUMsQ0FBQztFQUVGRixJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU07SUFDbEJDLE1BQU0sQ0FBQyxPQUFPLENBQUNFLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMzQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQ0csTUFBTSxDQUFDLENBQUNGLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDOUJELE1BQU0sQ0FBQyxNQUFNLENBQUNJLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDO0VBQzFDLENBQUMsQ0FBQztFQUVGRixJQUFJLENBQUMsTUFBTSxFQUFFLE1BQU07SUFDakIsTUFBTU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDckJMLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDRixNQUFNLENBQUMsQ0FBQ0YsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMxQkQsTUFBTSxDQUFDSyxHQUFHLENB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