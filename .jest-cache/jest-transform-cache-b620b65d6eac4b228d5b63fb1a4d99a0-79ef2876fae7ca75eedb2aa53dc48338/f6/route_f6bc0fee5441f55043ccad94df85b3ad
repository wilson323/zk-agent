1d3dd5d0e010dd888b8229d2e4b2c03c
"use strict";

/**
 * @file fastgpt\[...path]\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1fnfz94l62() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\[...path]\\route.ts";
  var hash = "ec49908b7ecb5996864f94e553229ec2f6e7746d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\[...path]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "7": {
        start: {
          line: 15,
          column: 32
        },
        end: {
          line: 15,
          column: 59
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "9": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 95
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "11": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "12": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "13": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "14": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 90
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 83
        }
      },
      "18": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "25": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 37
        }
      },
      "26": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "27": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 42
        }
      },
      "28": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 90
        }
      },
      "29": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "30": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 83
        }
      },
      "31": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "32": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "33": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "34": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 59
        }
      },
      "35": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "36": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 95
        }
      },
      "37": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 69,
          column: 42
        }
      },
      "38": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 36
        }
      },
      "39": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 38
        }
      },
      "40": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "41": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "42": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 90
        }
      },
      "43": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 59
        }
      },
      "44": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 100
          },
          end: {
            line: 12,
            column: 101
          }
        },
        loc: {
          start: {
            line: 12,
            column: 175
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 105
          },
          end: {
            line: 37,
            column: 106
          }
        },
        loc: {
          start: {
            line: 37,
            column: 180
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 109
          },
          end: {
            line: 62,
            column: 110
          }
        },
        loc: {
          start: {
            line: 62,
            column: 184
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 28
          }
        }, {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 16,
            column: 48
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 28
          }
        }, {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 48
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 28
          }
        }, {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 48
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\[...path]\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\[...path]\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\[...path]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const FASTGPT_API_URL = process.env.FASTGPT_API_URL;\n      const FASTGPT_API_KEY = process.env.FASTGPT_API_KEY;\n\n      if (!FASTGPT_API_URL || !FASTGPT_API_KEY) {\n        return ApiResponseWrapper.error('FastGPT configuration missing', 500);\n      }\n\n      const path = params.path.join('/');\n      const url = new URL(req.url);\n      const queryString = url.search;\n\n      const response = await fetch(`${FASTGPT_API_URL}/${path}${queryString}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${FASTGPT_API_KEY}`,\n        },\n      });\n\n      const data = await response.json();\n      return ApiResponseWrapper.success(data, { status: response.status });\n    } catch (error) {\n      console.error('GET /api/fastgpt error:', error);\n      return ApiResponseWrapper.error('Internal server error', 500);\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const FASTGPT_API_URL = process.env.FASTGPT_API_URL;\n      const FASTGPT_API_KEY = process.env.FASTGPT_API_KEY;\n\n      if (!FASTGPT_API_URL || !FASTGPT_API_KEY) {\n        return ApiResponseWrapper.error('FastGPT configuration missing', 500);\n      }\n\n      const path = params.path.join('/');\n      const body = await req.json();\n\n      const response = await fetch(`${FASTGPT_API_URL}/${path}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${FASTGPT_API_KEY}`,\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      return ApiResponseWrapper.success(data, { status: response.status });\n    } catch (error) {\n      console.error('POST /api/fastgpt error:', error);\n      return ApiResponseWrapper.error('Internal server error', 500);\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  RouteConfigs.protectedDelete(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const FASTGPT_API_URL = process.env.FASTGPT_API_URL;\n      const FASTGPT_API_KEY = process.env.FASTGPT_API_KEY;\n\n      if (!FASTGPT_API_URL || !FASTGPT_API_KEY) {\n        return ApiResponseWrapper.error('FastGPT configuration missing', 500);\n      }\n\n      const path = params.path.join('/');\n      const url = new URL(req.url);\n      const queryString = url.search;\n\n      const response = await fetch(`${FASTGPT_API_URL}/${path}${queryString}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${FASTGPT_API_KEY}`,\n        },\n      });\n\n      const data = await response.json();\n      return ApiResponseWrapper.success(data, { status: response.status });\n    } catch (error) {\n      console.error('DELETE /api/fastgpt error:', error);\n      return ApiResponseWrapper.error('Internal server error', 500);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ec49908b7ecb5996864f94e553229ec2f6e7746d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fnfz94l62 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fnfz94l62();
cov_1fnfz94l62().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fnfz94l62().s[1]++;
exports.DELETE = exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1fnfz94l62().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1fnfz94l62().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_1fnfz94l62().s[4]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1fnfz94l62().f[0]++;
  cov_1fnfz94l62().s[5]++;
  try {
    const FASTGPT_API_URL =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[6]++, process.env.FASTGPT_API_URL);
    const FASTGPT_API_KEY =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[7]++, process.env.FASTGPT_API_KEY);
    /* istanbul ignore next */
    cov_1fnfz94l62().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_1fnfz94l62().b[1][0]++, !FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1fnfz94l62().b[1][1]++, !FASTGPT_API_KEY)) {
      /* istanbul ignore next */
      cov_1fnfz94l62().b[0][0]++;
      cov_1fnfz94l62().s[9]++;
      return api_helper_1.ApiResponseWrapper.error('FastGPT configuration missing', 500);
    } else
    /* istanbul ignore next */
    {
      cov_1fnfz94l62().b[0][1]++;
    }
    const path =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[10]++, params.path.join('/'));
    const url =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[11]++, new URL(req.url));
    const queryString =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[12]++, url.search);
    const response =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[13]++, await fetch(`${FASTGPT_API_URL}/${path}${queryString}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${FASTGPT_API_KEY}`
      }
    }));
    const data =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[14]++, await response.json());
    /* istanbul ignore next */
    cov_1fnfz94l62().s[15]++;
    return api_helper_1.ApiResponseWrapper.success(data, {
      status: response.status
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1fnfz94l62().s[16]++;
    console.error('GET /api/fastgpt error:', error);
    /* istanbul ignore next */
    cov_1fnfz94l62().s[17]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
/* istanbul ignore next */
cov_1fnfz94l62().s[18]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1fnfz94l62().f[1]++;
  cov_1fnfz94l62().s[19]++;
  try {
    const FASTGPT_API_URL =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[20]++, process.env.FASTGPT_API_URL);
    const FASTGPT_API_KEY =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[21]++, process.env.FASTGPT_API_KEY);
    /* istanbul ignore next */
    cov_1fnfz94l62().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1fnfz94l62().b[3][0]++, !FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1fnfz94l62().b[3][1]++, !FASTGPT_API_KEY)) {
      /* istanbul ignore next */
      cov_1fnfz94l62().b[2][0]++;
      cov_1fnfz94l62().s[23]++;
      return api_helper_1.ApiResponseWrapper.error('FastGPT configuration missing', 500);
    } else
    /* istanbul ignore next */
    {
      cov_1fnfz94l62().b[2][1]++;
    }
    const path =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[24]++, params.path.join('/'));
    const body =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[25]++, await req.json());
    const response =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[26]++, await fetch(`${FASTGPT_API_URL}/${path}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${FASTGPT_API_KEY}`
      },
      body: JSON.stringify(body)
    }));
    const data =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[27]++, await response.json());
    /* istanbul ignore next */
    cov_1fnfz94l62().s[28]++;
    return api_helper_1.ApiResponseWrapper.success(data, {
      status: response.status
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1fnfz94l62().s[29]++;
    console.error('POST /api/fastgpt error:', error);
    /* istanbul ignore next */
    cov_1fnfz94l62().s[30]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
/* istanbul ignore next */
cov_1fnfz94l62().s[31]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedDelete(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1fnfz94l62().f[2]++;
  cov_1fnfz94l62().s[32]++;
  try {
    const FASTGPT_API_URL =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[33]++, process.env.FASTGPT_API_URL);
    const FASTGPT_API_KEY =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[34]++, process.env.FASTGPT_API_KEY);
    /* istanbul ignore next */
    cov_1fnfz94l62().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_1fnfz94l62().b[5][0]++, !FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1fnfz94l62().b[5][1]++, !FASTGPT_API_KEY)) {
      /* istanbul ignore next */
      cov_1fnfz94l62().b[4][0]++;
      cov_1fnfz94l62().s[36]++;
      return api_helper_1.ApiResponseWrapper.error('FastGPT configuration missing', 500);
    } else
    /* istanbul ignore next */
    {
      cov_1fnfz94l62().b[4][1]++;
    }
    const path =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[37]++, params.path.join('/'));
    const url =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[38]++, new URL(req.url));
    const queryString =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[39]++, url.search);
    const response =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[40]++, await fetch(`${FASTGPT_API_URL}/${path}${queryString}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${FASTGPT_API_KEY}`
      }
    }));
    const data =
    /* istanbul ignore next */
    (cov_1fnfz94l62().s[41]++, await response.json());
    /* istanbul ignore next */
    cov_1fnfz94l62().s[42]++;
    return api_helper_1.ApiResponseWrapper.success(data, {
      status: response.status
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1fnfz94l62().s[43]++;
    console.error('DELETE /api/fastgpt error:', error);
    /* istanbul ignore next */
    cov_1fnfz94l62().s[44]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,