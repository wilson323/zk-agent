{"version":3,"names":["cov_2ehp293rw1","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","PosterGenerator","constructor","apiEndpoint","apiKey","generatePoster","request","validateRequest","optimizedPrompt","optimizePrompt","prompt","style","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","statusText","result","json","error","console","success","message","trim","length","settings","creativity","quality","optimized","styleKeywords","getStyleKeywords","join","styleMap","modern","vintage","artistic","tech","nature","generateBatch","requests","results","Promise","allSettled","map","status","value","getGenerationProgress","taskId","progress","exports","posterGenerator","process","env","NEXT_PUBLIC_POSTER_API_ENDPOINT","POSTER_API_KEY","PosterExporter","exportPoster","imageUrl","format","options","blob","downloadPoster","filename","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL"],"sources":["E:\\zk-agent\\lib\\poster\\poster-generator.ts"],"sourcesContent":["/* eslint-disable */\n// @ts-nocheck\n/**\n * 海报生成核心逻辑\n */\n\nimport type { GeneratePosterRequest, GeneratePosterResponse } from \"@/types/poster\"\n\nexport class PosterGenerator {\n  private apiEndpoint: string\n  private apiKey: string\n\n  constructor(apiEndpoint: string, apiKey: string) {\n    this.apiEndpoint = apiEndpoint\n    this.apiKey = apiKey\n  }\n\n  /**\n   * 生成海报\n   */\n  async generatePoster(request: GeneratePosterRequest): Promise<GeneratePosterResponse> {\n    try {\n      // 验证输入\n      this.validateRequest(request)\n\n      // 优化提示词\n      const optimizedPrompt: any = await this.optimizePrompt(request.prompt, request.style)\n\n      // 调用AI生成API\n      const response: any = await fetch(`${this.apiEndpoint}/generate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.apiKey}`,\n        },\n        body: JSON.stringify({\n          ...request,\n          prompt: optimizedPrompt,\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.statusText}`)\n      }\n\n      const result: any = await response.json()\n      return result\n    } catch (error) {\n      console.error(\"Poster generation failed:\", error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      }\n    }\n  }\n\n  /**\n   * 验证生成请求\n   */\n  private validateRequest(request: GeneratePosterRequest): void {\n    if (!request.prompt || request.prompt.trim().length === 0) {\n      throw new Error(\"Prompt is required\")\n    }\n\n    if (request.prompt.length > 2000) {\n      throw new Error(\"Prompt is too long (max 2000 characters)\")\n    }\n\n    if (request.settings.creativity < 0 || request.settings.creativity > 1) {\n      throw new Error(\"Creativity must be between 0 and 1\")\n    }\n\n    if (request.settings.quality < 0 || request.settings.quality > 1) {\n      throw new Error(\"Quality must be between 0 and 1\")\n    }\n  }\n\n  /**\n   * 优化提示词\n   */\n  private async optimizePrompt(prompt: string, style?: string): Promise<string> {\n    // 基础优化规则\n    let optimized: any = prompt.trim()\n\n    // 添加风格相关的关键词\n    if (style) {\n      const styleKeywords: any = this.getStyleKeywords(style)\n      optimized = `${optimized}, ${styleKeywords.join(\", \")}`\n    }\n\n    // 添加质量提升关键词\n    optimized += \", high quality, professional design, clean composition\"\n\n    // 如果启用AI优化，可以调用AI服务进一步优化\n    // TODO: 实现AI提示词优化\n\n    return optimized\n  }\n\n  /**\n   * 获取风格关键词\n   */\n  private getStyleKeywords(style: string): string[] {\n    const styleMap: Record<string, string[]> = {\n      modern: [\"modern\", \"minimalist\", \"clean lines\", \"geometric\"],\n      vintage: [\"vintage\", \"retro\", \"classic\", \"nostalgic\"],\n      artistic: [\"artistic\", \"creative\", \"abstract\", \"expressive\"],\n      tech: [\"futuristic\", \"digital\", \"gradient\", \"neon\"],\n      nature: [\"natural\", \"organic\", \"green\", \"eco-friendly\"],\n    }\n\n    return styleMap[style] || []\n  }\n\n  /**\n   * 批量生成海报\n   */\n  async generateBatch(requests: GeneratePosterRequest[]): Promise<GeneratePosterResponse[]> {\n    const results: any = await Promise.allSettled(requests.map((request) => this.generatePoster(request)))\n\n    return results.map((result) =>\n      result.status === \"fulfilled\" ? result.value : { success: false, error: \"Generation failed\" },\n    )\n  }\n\n  /**\n   * 获取生成进度\n   */\n  async getGenerationProgress(taskId: string): Promise<{ progress: number; status: string }> {\n    try {\n      const response: any = await fetch(`${this.apiEndpoint}/progress/${taskId}`, {\n        headers: {\n          Authorization: `Bearer ${this.apiKey}`,\n        },\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Failed to get progress\")\n      }\n\n      return await response.json()\n    } catch (error) {\n      console.error(\"Failed to get generation progress:\", error)\n      return { progress: 0, status: \"error\" }\n    }\n  }\n}\n\n// 创建默认实例\nexport const posterGenerator: any = new PosterGenerator(\n  process.env.NEXT_PUBLIC_POSTER_API_ENDPOINT || \"/api/poster\",\n  process.env.POSTER_API_KEY || \"\",\n)\n\n/**\n * 海报导出工具\n */\nexport class PosterExporter {\n  /**\n   * 导出为不同格式\n   */\n  static async exportPoster(\n    imageUrl: string,\n    format: \"jpg\" | \"png\" | \"pdf\" | \"svg\",\n    options: {\n      quality?: number\n      resolution?: \"web\" | \"print\" | \"high\"\n      watermark?: boolean\n    } = {},\n  ): Promise<Blob> {\n    try {\n      const response: any = await fetch(\"/api/poster/export\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          imageUrl,\n          format,\n          options,\n        }),\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Export failed\")\n      }\n\n      return await response.blob()\n    } catch (error) {\n      console.error(\"Export failed:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * 下载海报\n   */\n  static downloadPoster(blob: Blob, filename: string): void {\n    const url: any = URL.createObjectURL(blob)\n    const link: any = document.createElement(\"a\")\n    link.href = url\n    link.download = filename\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    URL.revokeObjectURL(url)\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAiBK;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;AAXL,MAAaa,eAAe;EAI1BC,YAAYC,WAAmB,EAAEC,MAAc;IAAA;IAAApC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7C,IAAI,CAACe,WAAW,GAAGA,WAAW;IAAA;IAAAnC,cAAA,GAAAoB,CAAA;IAC9B,IAAI,CAACgB,MAAM,GAAGA,MAAM;EACtB;EAEA;;;EAGA,MAAMC,cAAcA,CAACC,OAA8B;IAAA;IAAAtC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjD,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF;MACA,IAAI,CAACmB,eAAe,CAACD,OAAO,CAAC;MAE7B;MACA,MAAME,eAAe;MAAA;MAAA,CAAAxC,cAAA,GAAAoB,CAAA,OAAQ,MAAM,IAAI,CAACqB,cAAc,CAACH,OAAO,CAACI,MAAM,EAAEJ,OAAO,CAACK,KAAK,CAAC;MAErF;MACA,MAAMC,QAAQ;MAAA;MAAA,CAAA5C,cAAA,GAAAoB,CAAA,OAAQ,MAAMyB,KAAK,CAAC,GAAG,IAAI,CAACV,WAAW,WAAW,EAAE;QAChEW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAU,IAAI,CAACZ,MAAM;SACrC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,GAAGb,OAAO;UACVI,MAAM,EAAEF;SACT;OACF,CAAC;MAAA;MAAAxC,cAAA,GAAAoB,CAAA;MAEF,IAAI,CAACwB,QAAQ,CAACQ,EAAE,EAAE;QAAA;QAAApD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChB,MAAM,IAAIiC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,UAAU,EAAE,CAAC;MAC/D,CAAC;MAAA;MAAA;QAAAtD,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMiC,MAAM;MAAA;MAAA,CAAAvD,cAAA,GAAAoB,CAAA,QAAQ,MAAMwB,QAAQ,CAACY,IAAI,EAAE;MAAA;MAAAxD,cAAA,GAAAoB,CAAA;MACzC,OAAOmC,MAAM;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MAAA;MAAAzD,cAAA,GAAAoB,CAAA;MACdsC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAAA;MAAAzD,cAAA,GAAAoB,CAAA;MACjD,OAAO;QACLuC,OAAO,EAAE,KAAK;QACdF,KAAK,EAAEA,KAAK,YAAYJ,KAAK;QAAA;QAAA,CAAArD,cAAA,GAAAsB,CAAA,UAAGmC,KAAK,CAACG,OAAO;QAAA;QAAA,CAAA5D,cAAA,GAAAsB,CAAA,UAAG,eAAe;OAChE;IACH;EACF;EAEA;;;EAGQiB,eAAeA,CAACD,OAA8B;IAAA;IAAAtC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACpD;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAACgB,OAAO,CAACI,MAAM;IAAA;IAAA,CAAA1C,cAAA,GAAAsB,CAAA,UAAIgB,OAAO,CAACI,MAAM,CAACmB,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,GAAE;MAAA;MAAA9D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACzD,MAAM,IAAIiC,KAAK,CAAC,oBAAoB,CAAC;IACvC,CAAC;IAAA;IAAA;MAAArD,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAIkB,OAAO,CAACI,MAAM,CAACoB,MAAM,GAAG,IAAI,EAAE;MAAA;MAAA9D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAChC,MAAM,IAAIiC,KAAK,CAAC,0CAA0C,CAAC;IAC7D,CAAC;IAAA;IAAA;MAAArD,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,UAAAgB,OAAO,CAACyB,QAAQ,CAACC,UAAU,GAAG,CAAC;IAAA;IAAA,CAAAhE,cAAA,GAAAsB,CAAA,UAAIgB,OAAO,CAACyB,QAAQ,CAACC,UAAU,GAAG,CAAC,GAAE;MAAA;MAAAhE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACtE,MAAM,IAAIiC,KAAK,CAAC,oCAAoC,CAAC;IACvD,CAAC;IAAA;IAAA;MAAArD,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,UAAAgB,OAAO,CAACyB,QAAQ,CAACE,OAAO,GAAG,CAAC;IAAA;IAAA,CAAAjE,cAAA,GAAAsB,CAAA,UAAIgB,OAAO,CAACyB,QAAQ,CAACE,OAAO,GAAG,CAAC,GAAE;MAAA;MAAAjE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAChE,MAAM,IAAIiC,KAAK,CAAC,iCAAiC,CAAC;IACpD,CAAC;IAAA;IAAA;MAAArD,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGQ,MAAMmB,cAAcA,CAACC,MAAc,EAAEC,KAAc;IAAA;IAAA3C,cAAA,GAAAqB,CAAA;IACzD;IACA,IAAI6C,SAAS;IAAA;IAAA,CAAAlE,cAAA,GAAAoB,CAAA,QAAQsB,MAAM,CAACmB,IAAI,EAAE;IAElC;IAAA;IAAA7D,cAAA,GAAAoB,CAAA;IACA,IAAIuB,KAAK,EAAE;MAAA;MAAA3C,cAAA,GAAAsB,CAAA;MACT,MAAM6C,aAAa;MAAA;MAAA,CAAAnE,cAAA,GAAAoB,CAAA,QAAQ,IAAI,CAACgD,gBAAgB,CAACzB,KAAK,CAAC;MAAA;MAAA3C,cAAA,GAAAoB,CAAA;MACvD8C,SAAS,GAAG,GAAGA,SAAS,KAAKC,aAAa,CAACE,IAAI,CAAC,IAAI,CAAC,EAAE;IACzD,CAAC;IAAA;IAAA;MAAArE,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA8C,SAAS,IAAI,wDAAwD;IAErE;IACA;IAAA;IAAAlE,cAAA,GAAAoB,CAAA;IAEA,OAAO8C,SAAS;EAClB;EAEA;;;EAGQE,gBAAgBA,CAACzB,KAAa;IAAA;IAAA3C,cAAA,GAAAqB,CAAA;IACpC,MAAMiD,QAAQ;IAAA;IAAA,CAAAtE,cAAA,GAAAoB,CAAA,QAA6B;MACzCmD,MAAM,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC;MAC5DC,OAAO,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC;MACrDC,QAAQ,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,CAAC;MAC5DC,IAAI,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC;MACnDC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc;KACvD;IAAA;IAAA3E,cAAA,GAAAoB,CAAA;IAED,OAAO,2BAAApB,cAAA,GAAAsB,CAAA,WAAAgD,QAAQ,CAAC3B,KAAK,CAAC;IAAA;IAAA,CAAA3C,cAAA,GAAAsB,CAAA,WAAI,EAAE;EAC9B;EAEA;;;EAGA,MAAMsD,aAAaA,CAACC,QAAiC;IAAA;IAAA7E,cAAA,GAAAqB,CAAA;IACnD,MAAMyD,OAAO;IAAA;IAAA,CAAA9E,cAAA,GAAAoB,CAAA,QAAQ,MAAM2D,OAAO,CAACC,UAAU,CAACH,QAAQ,CAACI,GAAG,CAAE3C,OAAO,IAAK;MAAA;MAAAtC,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,WAAI,CAACiB,cAAc,CAACC,OAAO,CAAC;IAAD,CAAC,CAAC,CAAC;IAAA;IAAAtC,cAAA,GAAAoB,CAAA;IAEtG,OAAO0D,OAAO,CAACG,GAAG,CAAE1B,MAAM,IACxB;MAAA;MAAAvD,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAAmC,MAAM,CAAC2B,MAAM,KAAK,WAAW;MAAA;MAAA,CAAAlF,cAAA,GAAAsB,CAAA,WAAGiC,MAAM,CAAC4B,KAAK;MAAA;MAAA,CAAAnF,cAAA,GAAAsB,CAAA,WAAG;QAAEqC,OAAO,EAAE,KAAK;QAAEF,KAAK,EAAE;MAAmB,CAAE;IAAF,CAAE,CAC9F;EACH;EAEA;;;EAGA,MAAM2B,qBAAqBA,CAACC,MAAc;IAAA;IAAArF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACxC,IAAI;MACF,MAAMwB,QAAQ;MAAA;MAAA,CAAA5C,cAAA,GAAAoB,CAAA,QAAQ,MAAMyB,KAAK,CAAC,GAAG,IAAI,CAACV,WAAW,aAAakD,MAAM,EAAE,EAAE;QAC1EtC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAU,IAAI,CAACZ,MAAM;;OAEvC,CAAC;MAAA;MAAApC,cAAA,GAAAoB,CAAA;MAEF,IAAI,CAACwB,QAAQ,CAACQ,EAAE,EAAE;QAAA;QAAApD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChB,MAAM,IAAIiC,KAAK,CAAC,wBAAwB,CAAC;MAC3C,CAAC;MAAA;MAAA;QAAArD,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,OAAO,MAAMwB,QAAQ,CAACY,IAAI,EAAE;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA;MAAAzD,cAAA,GAAAoB,CAAA;MACdsC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAAA;MAAAzD,cAAA,GAAAoB,CAAA;MAC1D,OAAO;QAAEkE,QAAQ,EAAE,CAAC;QAAEJ,MAAM,EAAE;MAAO,CAAE;IACzC;EACF;;AACD;AAAAlF,cAAA,GAAAoB,CAAA;AA1IDmE,OAAA,CAAAtD,eAAA,GAAAA,eAAA;AA4IA;AAAA;AAAAjC,cAAA,GAAAoB,CAAA;AACamE,OAAA,CAAAC,eAAe,GAAQ,IAAIvD,eAAe;AACrD;AAAA,CAAAjC,cAAA,GAAAsB,CAAA,WAAAmE,OAAO,CAACC,GAAG,CAACC,+BAA+B;AAAA;AAAA,CAAA3F,cAAA,GAAAsB,CAAA,WAAI,aAAa;AAC5D;AAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAAmE,OAAO,CAACC,GAAG,CAACE,cAAc;AAAA;AAAA,CAAA5F,cAAA,GAAAsB,CAAA,WAAI,EAAE,EACjC;AAED;;;AAGA,MAAauE,cAAc;EACzB;;;EAGA,aAAaC,YAAYA,CACvBC,QAAgB,EAChBC,MAAqC,EACrCC,OAAA;EAAA;EAAA,CAAAjG,cAAA,GAAAsB,CAAA,WAII,EAAE;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAEN,IAAI;MACF,MAAMwB,QAAQ;MAAA;MAAA,CAAA5C,cAAA,GAAAoB,CAAA,QAAQ,MAAMyB,KAAK,CAAC,oBAAoB,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;SACjB;QACDE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB4C,QAAQ;UACRC,MAAM;UACNC;SACD;OACF,CAAC;MAAA;MAAAjG,cAAA,GAAAoB,CAAA;MAEF,IAAI,CAACwB,QAAQ,CAACQ,EAAE,EAAE;QAAA;QAAApD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChB,MAAM,IAAIiC,KAAK,CAAC,eAAe,CAAC;MAClC,CAAC;MAAA;MAAA;QAAArD,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,OAAO,MAAMwB,QAAQ,CAACsD,IAAI,EAAE;IAC9B,CAAC,CAAC,OAAOzC,KAAK,EAAE;MAAA;MAAAzD,cAAA,GAAAoB,CAAA;MACdsC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MAAA;MAAAzD,cAAA,GAAAoB,CAAA;MACtC,MAAMqC,KAAK;IACb;EACF;EAEA;;;EAGA,OAAO0C,cAAcA,CAACD,IAAU,EAAEE,QAAgB;IAAA;IAAApG,cAAA,GAAAqB,CAAA;IAChD,MAAMgF,GAAG;IAAA;IAAA,CAAArG,cAAA,GAAAoB,CAAA,QAAQkF,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAC1C,MAAMM,IAAI;IAAA;IAAA,CAAAxG,cAAA,GAAAoB,CAAA,QAAQqF,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAAA;IAAA1G,cAAA,GAAAoB,CAAA;IAC7CoF,IAAI,CAACG,IAAI,GAAGN,GAAG;IAAA;IAAArG,cAAA,GAAAoB,CAAA;IACfoF,IAAI,CAACI,QAAQ,GAAGR,QAAQ;IAAA;IAAApG,cAAA,GAAAoB,CAAA;IACxBqF,QAAQ,CAACxD,IAAI,CAAC4D,WAAW,CAACL,IAAI,CAAC;IAAA;IAAAxG,cAAA,GAAAoB,CAAA;IAC/BoF,IAAI,CAACM,KAAK,EAAE;IAAA;IAAA9G,cAAA,GAAAoB,CAAA;IACZqF,QAAQ,CAACxD,IAAI,CAAC8D,WAAW,CAACP,IAAI,CAAC;IAAA;IAAAxG,cAAA,GAAAoB,CAAA;IAC/BkF,GAAG,CAACU,eAAe,CAACX,GAAG,CAAC;EAC1B;;AACD;AAAArG,cAAA,GAAAoB,CAAA;AAlDDmE,OAAA,CAAAM,cAAA,GAAAA,cAAA","ignoreList":[]}