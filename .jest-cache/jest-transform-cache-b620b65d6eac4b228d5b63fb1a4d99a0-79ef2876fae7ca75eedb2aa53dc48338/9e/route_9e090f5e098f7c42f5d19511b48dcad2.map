{"version":3,"names":["cov_1mfjt9l0jj","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","agent_service_1","unified_error_codes_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","validatedBody","agentService","AgentService","createRequest","ApiResponseWrapper","error","UnifiedErrorCode","VALIDATION_ERROR","status","newAgent","createAgent","description","success","console","INTERNAL_SERVER_ERROR","details","Error","message"],"sources":["E:\\zk-agent\\app\\api\\v1\\agents\\route.ts"],"sourcesContent":["/**\n * @file v1\\agents\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { AgentService } from '@/lib/services/agent-service';\nimport { CreateAgentRequest, AgentType } from '@/lib/types';\nimport { UnifiedErrorCode } from '@/types/core/unified-error-codes';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { validatedBody }) => {\n    try {\n      const agentService = new AgentService();\n      const createRequest = validatedBody as CreateAgentRequest;\n      \n      // 验证请求数据\n      if (!createRequest.name) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.VALIDATION_ERROR, 'Agent name is required', { status: 400 });\n      }\n      \n      // 创建新的Agent\n      const newAgent = await agentService.createAgent({\n        name: createRequest.name,\n        description: createRequest.description || '',\n      });\n      \n      return ApiResponseWrapper.success(newAgent, 'Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent:', error);\n      return ApiResponseWrapper.error(UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to create agent', {\n        status: 500,\n        details: error instanceof Error ? error.message : 'Unknown error'\n      });\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}