{"version":3,"names":["cov_9c699ksvr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","route_factory_1","require","zod_1","user_service_1","stats_service_1","middleware_1","core_1","exports","GET","createApiRoute","handler","req","params","currentUser","getCurrentUser","ApiResponseWrapper","error","ErrorCode","AUTHORIZATION_ERROR","id","result","getUserById","NOT_FOUND","success","INTERNAL_SERVER_ERROR","PUT","body","json","validationResult","updateUserSchema","safeParse","VALIDATION_ERROR","errors","message","updateData","data","existingUser","updatedUser","updateUser","createUsageStats","userId","agentType","action","metadata","targetUserId","updatedFields","Object","keys","DELETE","deleteUser","targetUserEmail","email","z","object","string","optional","role","enum","status"],"sources":["E:\\zk-agent\\app\\api\\admin\\users\\[id]\\route.ts"],"sourcesContent":["/**\n * @file admin\\users\\[id]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute, ApiResponseWrapper } from '@/lib/api/route-factory';\nimport { z } from \"zod\"\nimport { getUserById, updateUser, deleteUser } from '@/lib/services/user-service';\nimport { createUsageStats } from '@/lib/services/stats-service';\nimport { getCurrentUser } from \"@/lib/auth/middleware\"\nimport { ErrorCode } from '@/types/core';\n\nexport const GET = createApiRoute({\n  handler: async ({ req, params }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser['role'] !== \"admin\") {\n        return ApiResponseWrapper.error(ErrorCode.AUTHORIZATION_ERROR, \"权限不足\", null);\n      }\n    \n      const { id } = await params;\n      \n      const result = await getUserById(id);\n    if (!result) {\n      return ApiResponseWrapper.error(ErrorCode.NOT_FOUND, \"用户不存在\", null);\n    }\n    return ApiResponseWrapper.success(result);\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, \"获取用户信息失败\", null);\n    }\n  }\n});\n\nexport const PUT = createApiRoute({\n  handler: async ({ req, params }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser['role'] !== \"admin\") {\n        return ApiResponseWrapper.error(ErrorCode.AUTHORIZATION_ERROR, \"权限不足\", null);\n      }\n    \n      const body = await req.json();\n      const validationResult = updateUserSchema.safeParse(body);\n    \n      if (!validationResult.success) {\n        return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, validationResult.error.errors[0].message, null);\n      }\n    \n      const updateData = validationResult.data;\n      const { id } = await params;\n    \n      // 检查用户是否存在\n      const existingUser = await getUserById(id);\n    \n      if (!existingUser) {\n        return ApiResponseWrapper.error(ErrorCode.NOT_FOUND, \"用户不存在\", null);\n      }\n    \n      const updatedUser = await updateUser(id, updateData);\n\n    await createUsageStats({\n      userId: currentUser.userId,\n      agentType: 'admin',\n      action: 'update_user',\n      metadata: {\n        targetUserId: id,\n        updatedFields: Object.keys(validationResult.data),\n      },\n    });\n\n    return ApiResponseWrapper.success({\n        success: true,\n        data: updatedUser,\n        message: \"用户信息更新成功\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, \"更新用户信息失败\", null);\n    }\n  }\n});\n\nexport const DELETE = createApiRoute({\n  handler: async ({ req, params }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser['role'] !== \"admin\") {\n        return ApiResponseWrapper.error(ErrorCode.AUTHORIZATION_ERROR, \"权限不足\", null);\n      }\n    \n      const { id } = await params;\n      \n      // 检查用户是否存在\n      const existingUser = await getUserById(id);\n    \n      if (!existingUser) {\n        return ApiResponseWrapper.error(ErrorCode.NOT_FOUND, \"用户不存在\", null);\n      }\n    \n      // 防止删除自己\n      if (id === currentUser.userId) {\n        return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, \"不能删除自己的账户\", null);\n      }\n    \n      await deleteUser(id);\n\n    await createUsageStats({\n      userId: currentUser.userId,\n      agentType: 'admin',\n      action: 'delete_user',\n      metadata: { \n        targetUserId: id,\n        targetUserEmail: existingUser.email,\n      },\n    });\n\n    return ApiResponseWrapper.success({\n        success: true,\n        message: \"用户删除成功\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, \"删除用户失败\", null);\n    }\n  }\n});\n\n// Schema for user updates\nconst updateUserSchema = z.object({\n  name: z.string().optional(),\n  email: z.string().email().optional(),\n  role: z.enum([\"USER\", \"ADMIN\"]).optional(),\n  status: z.enum([\"ACTIVE\", \"INACTIVE\", \"SUSPENDED\"]).optional(),\n});\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}