c9b4673833c82e79499bb16dce64755f
"use strict";

/**
 * @file admin\users\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2kn6i57vld() {
  var path = "E:\\zk-agent\\app\\api\\admin\\users\\route.ts";
  var hash = "a0ba3aebad62306912a3fda94cf90dbf9d5a4ed1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\admin\\users\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 74
        }
      },
      "8": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "13": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 70
        }
      },
      "14": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "15": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 91
        }
      },
      "16": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "17": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 104
        }
      },
      "18": {
        start: {
          line: 29,
          column: 54
        },
        end: {
          line: 29,
          column: 75
        }
      },
      "19": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "20": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "21": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 45
        }
      },
      "22": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "23": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "24": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "25": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "26": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "27": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "28": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 34
        }
      },
      "29": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "30": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "31": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "32": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 154,
          column: 3
        }
      },
      "33": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "34": {
        start: {
          line: 89,
          column: 28
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "35": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "36": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 70
        }
      },
      "37": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 93,
          column: 37
        }
      },
      "38": {
        start: {
          line: 94,
          column: 33
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "39": {
        start: {
          line: 100,
          column: 33
        },
        end: {
          line: 100,
          column: 65
        }
      },
      "40": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "41": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 104
        }
      },
      "42": {
        start: {
          line: 104,
          column: 48
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "43": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "44": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "45": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 73
        }
      },
      "46": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "47": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "48": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 73
        }
      },
      "49": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "50": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 68
        }
      },
      "51": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 162,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 103
          },
          end: {
            line: 18,
            column: 104
          }
        },
        loc: {
          start: {
            line: 18,
            column: 178
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 87,
            column: 105
          },
          end: {
            line: 87,
            column: 106
          }
        },
        loc: {
          start: {
            line: 87,
            column: 180
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 87
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 142,
            column: 20
          }
        },
        loc: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 142
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 24
          }
        }, {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 56
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "10": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 24
          }
        }, {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 56
          }
        }],
        line: 90
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\admin\\users\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;;;;AAGH,0EAAqG;AACrG,uDAA4D;AAC5D,6BAAuB;AACvB,2EAA8C;AAC9C,sDAAsD;AAEzC,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,YAAY,EAAE,EAC3B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,IAAA,2BAAc,EAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YACjD,OAAO,+BAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC/C,CAAC;QAED,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,gBAAgB,GAAG,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAEpF,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAC9B,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACjF,CAAC;QAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,gBAAgB,CAAC,IAAI,CAAC;QACpE,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,IAAI,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;QAEtC,SAAS;QACT,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,KAAK,CAAC,EAAE,GAAG;gBACT,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE;gBACnD,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE;aACrD,CAAC;QACJ,CAAC;QACD,IAAI,IAAI,EAAE,CAAC;YACT,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,CAAC;QACD,IAAI,MAAM,EAAE,CAAC;YACX,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACxB,CAAC;QAED,SAAS;QACT,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YACvC,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACnB,KAAK;gBACL,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,IAAI;oBACZ,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,IAAI;oBACZ,aAAa,EAAE,IAAI;oBACnB,WAAW,EAAE,IAAI;oBACjB,UAAU,EAAE,IAAI;oBAChB,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,IAAI;iBAChB;gBACD,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;gBAC9B,IAAI;gBACJ,IAAI,EAAE,QAAQ;aACf,CAAC;YACF,oBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC;SAC7B,CAAC,CAAC;QAEH,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE;gBACJ,KAAK;gBACL,UAAU,EAAE;oBACV,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ;oBACf,KAAK;oBACL,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;iBACnC;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IACnD,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,IAAA,2BAAc,EAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YACjD,OAAO,+BAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC/C,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAC9B,MAAM,gBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC;YACrC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC;YACjC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;YACvC,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;SAChD,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAC9B,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACjF,CAAC;QAED,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAE9D,YAAY;QACZ,MAAM,YAAY,GAAG,MAAM,oBAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAChD,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,WAAW,EAAE,EAAE;SACtC,CAAC,CAAC;QAEH,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,+BAAkB,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAClD,CAAC;QAED,OAAO;QACP,MAAM,OAAO,GAAG,MAAM,oBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,IAAI,EAAE;gBACJ,KAAK,EAAE,KAAK,CAAC,WAAW,EAAE;gBAC1B,IAAI;gBACJ,IAAI;gBACJ,oEAAoE;aACrE;YACD,MAAM,EAAE;gBACN,EAAE,EAAE,IAAI;gBACR,KAAK,EAAE,IAAI;gBACX,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;aAChB;SACF,CAAC,CAAC;QAEH,SAAS;QACT,MAAM,oBAAM,CAAC,UAAU;aACpB,MAAM,CAAC;YACN,IAAI,EAAE;gBACJ,MAAM,EAAE,WAAW,CAAC,MAAM;gBAC1B,SAAS,EAAE,OAAO;gBAClB,MAAM,EAAE,aAAa;gBACrB,QAAQ,EAAE;oBACR,YAAY,EAAE,OAAO,CAAC,EAAE;oBACxB,eAAe,EAAE,OAAO,CAAC,KAAK;iBAC/B;aACF;SACF,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEL,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC;AACH,CAAC,CACF,CAAC;AAEF,2BAA2B;AAC3B,MAAM,cAAc,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC;IAC7B,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC/B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE;CAC1E,CAAC,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\admin\\users\\route.ts"],
      sourcesContent: ["/**\n * @file admin\\users\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport prisma from \"@/lib/database/connection\"\nimport { getCurrentUser } from \"@/lib/auth/middleware\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser.role !== \"admin\") {\n        return ApiResponseWrapper.error(\"\u6743\u9650\u4E0D\u8DB3\", 403);\n      }\n    \n      const { searchParams } = new URL(req.url);\n      const validationResult = getUsersSchema.safeParse(Object.fromEntries(searchParams));\n    \n      if (!validationResult.success) {\n        return ApiResponseWrapper.error(validationResult.error.errors[0].message, 400);\n      }\n    \n      const { page, limit, search, role, status } = validationResult.data;\n      const pageNum = Number.parseInt(page);\n      const limitNum = Number.parseInt(limit);\n      const skip = (pageNum - 1) * limitNum;\n    \n      // \u6784\u5EFA\u67E5\u8BE2\u6761\u4EF6\n      const where: any = {};\n      if (search) {\n        where.OR = [\n          { name: { contains: search, mode: \"insensitive\" } },\n          { email: { contains: search, mode: \"insensitive\" } },\n        ];\n      }\n      if (role) {\n        where.role = role;\n      }\n      if (status) {\n        where.status = status;\n      }\n    \n      // \u83B7\u53D6\u7528\u6237\u5217\u8868\n      const [users, total] = await Promise.all([\n        prisma.user.findMany({\n          where,\n          select: {\n            id: true,\n            email: true,\n            name: true,\n            avatar: true,\n            role: true,\n            status: true,\n            emailVerified: true,\n            lastLoginAt: true,\n            loginCount: true,\n            createdAt: true,\n            updatedAt: true,\n          },\n          orderBy: { createdAt: \"desc\" },\n          skip,\n          take: limitNum,\n        }),\n        prisma.user.count({ where }),\n      ]);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: {\n          users,\n          pagination: {\n            page: pageNum,\n            limit: limitNum,\n            total,\n            pages: Math.ceil(total / limitNum),\n          },\n        },\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\"\u83B7\u53D6\u7528\u6237\u5217\u8868\u5931\u8D25\", 500);\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser.role !== \"admin\") {\n        return ApiResponseWrapper.error(\"\u6743\u9650\u4E0D\u8DB3\", 403);\n      }\n    \n      const body = await req.json();\n      const createUserSchema = z.object({\n        email: z.string().email(\"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740\"),\n        name: z.string().min(1, \"\u59D3\u540D\u4E0D\u80FD\u4E3A\u7A7A\"),\n        password: z.string().min(8, \"\u5BC6\u7801\u957F\u5EA6\u81F3\u5C118\u4F4D\"),\n        role: z.enum([\"USER\", \"ADMIN\"]).default(\"USER\"),\n      });\n    \n      const validationResult = createUserSchema.safeParse(body);\n      if (!validationResult.success) {\n        return ApiResponseWrapper.error(validationResult.error.errors[0].message, 400);\n      }\n    \n      const { email, name, password, role } = validationResult.data;\n    \n      // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5DF2\u5B58\u5728\n      const existingUser = await prisma.user.findUnique({\n        where: { email: email.toLowerCase() },\n      });\n    \n      if (existingUser) {\n        return ApiResponseWrapper.error(\"\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C\", 409);\n      }\n    \n      // \u521B\u5EFA\u7528\u6237\n      const newUser = await prisma.user.create({\n        data: {\n          email: email.toLowerCase(),\n          name,\n          role,\n          // password: await hashPassword(password), // \u9700\u8981\u5728schema\u4E2D\u6DFB\u52A0password\u5B57\u6BB5\n        },\n        select: {\n          id: true,\n          email: true,\n          name: true,\n          role: true,\n          status: true,\n          createdAt: true,\n        },\n      });\n    \n      // \u8BB0\u5F55\u64CD\u4F5C\u65E5\u5FD7\n      await prisma.usageStats\n        .create({\n          data: {\n            userId: currentUser.userId,\n            agentType: \"admin\",\n            action: \"create_user\",\n            metadata: {\n              targetUserId: newUser.id,\n              targetUserEmail: newUser.email,\n            },\n          },\n        })\n        .catch((error) => {\n          console.error(\"Failed to log create user operation:\", error);\n        });\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: newUser,\n        message: \"\u7528\u6237\u521B\u5EFA\u6210\u529F\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\"\u521B\u5EFA\u7528\u6237\u5931\u8D25\", 500);\n    }\n  }\n);\n\n// Schema for getting users\nconst getUsersSchema = z.object({\n  page: z.string().default(\"1\"),\n  limit: z.string().default(\"10\"),\n  search: z.string().optional(),\n  role: z.enum([\"USER\", \"ADMIN\"]).optional(),\n  status: z.enum([\"ACTIVE\", \"INACTIVE\", \"SUSPENDED\", \"DELETED\"]).optional(),\n});\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0ba3aebad62306912a3fda94cf90dbf9d5a4ed1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2kn6i57vld = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2kn6i57vld();
var __importDefault =
/* istanbul ignore next */
(cov_2kn6i57vld().s[0]++,
/* istanbul ignore next */
(cov_2kn6i57vld().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2kn6i57vld().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2kn6i57vld().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2kn6i57vld().f[0]++;
  cov_2kn6i57vld().s[1]++;
  return /* istanbul ignore next */(cov_2kn6i57vld().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2kn6i57vld().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2kn6i57vld().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2kn6i57vld().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2kn6i57vld().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2kn6i57vld().s[3]++;
exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2kn6i57vld().s[4]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2kn6i57vld().s[5]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_2kn6i57vld().s[6]++, require("zod"));
const connection_1 =
/* istanbul ignore next */
(cov_2kn6i57vld().s[7]++, __importDefault(require("@/lib/database/connection")));
const middleware_1 =
/* istanbul ignore next */
(cov_2kn6i57vld().s[8]++, require("@/lib/auth/middleware"));
/* istanbul ignore next */
cov_2kn6i57vld().s[9]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2kn6i57vld().f[1]++;
  cov_2kn6i57vld().s[10]++;
  try {
    const currentUser =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[11]++, (0, middleware_1.getCurrentUser)(req));
    /* istanbul ignore next */
    cov_2kn6i57vld().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_2kn6i57vld().b[4][0]++, !currentUser) ||
    /* istanbul ignore next */
    (cov_2kn6i57vld().b[4][1]++, currentUser.role !== "admin")) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[3][0]++;
      cov_2kn6i57vld().s[13]++;
      return api_helper_1.ApiResponseWrapper.error("权限不足", 403);
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[3][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[14]++, new URL(req.url));
    const validationResult =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[15]++, getUsersSchema.safeParse(Object.fromEntries(searchParams)));
    /* istanbul ignore next */
    cov_2kn6i57vld().s[16]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[5][0]++;
      cov_2kn6i57vld().s[17]++;
      return api_helper_1.ApiResponseWrapper.error(validationResult.error.errors[0].message, 400);
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[5][1]++;
    }
    const {
      page,
      limit,
      search,
      role,
      status
    } =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[18]++, validationResult.data);
    const pageNum =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[19]++, Number.parseInt(page));
    const limitNum =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[20]++, Number.parseInt(limit));
    const skip =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[21]++, (pageNum - 1) * limitNum);
    // 构建查询条件
    const where =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[22]++, {});
    /* istanbul ignore next */
    cov_2kn6i57vld().s[23]++;
    if (search) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[6][0]++;
      cov_2kn6i57vld().s[24]++;
      where.OR = [{
        name: {
          contains: search,
          mode: "insensitive"
        }
      }, {
        email: {
          contains: search,
          mode: "insensitive"
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[6][1]++;
    }
    cov_2kn6i57vld().s[25]++;
    if (role) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[7][0]++;
      cov_2kn6i57vld().s[26]++;
      where.role = role;
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[7][1]++;
    }
    cov_2kn6i57vld().s[27]++;
    if (status) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[8][0]++;
      cov_2kn6i57vld().s[28]++;
      where.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[8][1]++;
    }
    // 获取用户列表
    const [users, total] =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[29]++, await Promise.all([connection_1.default.user.findMany({
      where,
      select: {
        id: true,
        email: true,
        name: true,
        avatar: true,
        role: true,
        status: true,
        emailVerified: true,
        lastLoginAt: true,
        loginCount: true,
        createdAt: true,
        updatedAt: true
      },
      orderBy: {
        createdAt: "desc"
      },
      skip,
      take: limitNum
    }), connection_1.default.user.count({
      where
    })]));
    /* istanbul ignore next */
    cov_2kn6i57vld().s[30]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: {
        users,
        pagination: {
          page: pageNum,
          limit: limitNum,
          total,
          pages: Math.ceil(total / limitNum)
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2kn6i57vld().s[31]++;
    return api_helper_1.ApiResponseWrapper.error("获取用户列表失败", 500);
  }
});
/* istanbul ignore next */
cov_2kn6i57vld().s[32]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2kn6i57vld().f[2]++;
  cov_2kn6i57vld().s[33]++;
  try {
    const currentUser =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[34]++, (0, middleware_1.getCurrentUser)(req));
    /* istanbul ignore next */
    cov_2kn6i57vld().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_2kn6i57vld().b[10][0]++, !currentUser) ||
    /* istanbul ignore next */
    (cov_2kn6i57vld().b[10][1]++, currentUser.role !== "admin")) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[9][0]++;
      cov_2kn6i57vld().s[36]++;
      return api_helper_1.ApiResponseWrapper.error("权限不足", 403);
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[9][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[37]++, await req.json());
    const createUserSchema =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[38]++, zod_1.z.object({
      email: zod_1.z.string().email("请输入有效的邮箱地址"),
      name: zod_1.z.string().min(1, "姓名不能为空"),
      password: zod_1.z.string().min(8, "密码长度至少8位"),
      role: zod_1.z.enum(["USER", "ADMIN"]).default("USER")
    }));
    const validationResult =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[39]++, createUserSchema.safeParse(body));
    /* istanbul ignore next */
    cov_2kn6i57vld().s[40]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[11][0]++;
      cov_2kn6i57vld().s[41]++;
      return api_helper_1.ApiResponseWrapper.error(validationResult.error.errors[0].message, 400);
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[11][1]++;
    }
    const {
      email,
      name,
      password,
      role
    } =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[42]++, validationResult.data);
    // 检查邮箱是否已存在
    const existingUser =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[43]++, await connection_1.default.user.findUnique({
      where: {
        email: email.toLowerCase()
      }
    }));
    /* istanbul ignore next */
    cov_2kn6i57vld().s[44]++;
    if (existingUser) {
      /* istanbul ignore next */
      cov_2kn6i57vld().b[12][0]++;
      cov_2kn6i57vld().s[45]++;
      return api_helper_1.ApiResponseWrapper.error("该邮箱已被注册", 409);
    } else
    /* istanbul ignore next */
    {
      cov_2kn6i57vld().b[12][1]++;
    }
    // 创建用户
    const newUser =
    /* istanbul ignore next */
    (cov_2kn6i57vld().s[46]++, await connection_1.default.user.create({
      data: {
        email: email.toLowerCase(),
        name,
        role
        // password: await hashPassword(password), // 需要在schema中添加password字段
      },
      select: {
        id: true,
        email: true,
        name: true,
        role: true,
        status: true,
        createdAt: true
      }
    }));
    // 记录操作日志
    /* istanbul ignore next */
    cov_2kn6i57vld().s[47]++;
    await connection_1.default.usageStats.create({
      data: {
        userId: currentUser.userId,
        agentType: "admin",
        action: "create_user",
        metadata: {
          targetUserId: newUser.id,
          targetUserEmail: newUser.email
        }
      }
    }).catch(error => {
      /* istanbul ignore next */
      cov_2kn6i57vld().f[3]++;
      cov_2kn6i57vld().s[48]++;
      console.error("Failed to log create user operation:", error);
    });
    /* istanbul ignore next */
    cov_2kn6i57vld().s[49]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: newUser,
      message: "用户创建成功"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2kn6i57vld().s[50]++;
    return api_helper_1.ApiResponseWrapper.error("创建用户失败", 500);
  }
});
// Schema for getting users
const getUsersSchema =
/* istanbul ignore next */
(cov_2kn6i57vld().s[51]++, zod_1.z.object({
  page: zod_1.z.string().default("1"),
  limit: zod_1.z.string().default("10"),
  search: zod_1.z.string().optional(),
  role: zod_1.z.enum(["USER", "ADMIN"]).optional(),
  status: zod_1.z.enum(["ACTIVE", "INACTIVE", "SUSPENDED", "DELETED"]).optional()
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,