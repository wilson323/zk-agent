{"version":3,"names":["cov_1wnka76x8s","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","imageUrl","width","height","metadata","json","ApiResponseWrapper","error","status","Promise","resolve","setTimeout","pdfUrl","Date","now","fileSize","Math","floor","random","success","title","author","creator","producer","creationDate","toISOString"],"sources":["E:\\zk-agent\\app\\api\\poster\\convert-to-pdf\\route.ts"],"sourcesContent":["/**\n * @file poster\\convert-to-pdf\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { imageUrl, width, height, metadata } = await req.json();\n      \n      if (!imageUrl) {\n        return ApiResponseWrapper.error('Image URL is required', { status: 400 });\n      }\n      \n      // 模拟PDF生成过程\n      // 在实际项目中，这里会调用PDF生成库（如 jsPDF 或服务端PDF生成服务）\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      \n      // 模拟生成的PDF文件\n      const pdfUrl = `/api/files/generated_poster_${Date.now()}.pdf`;\n      const fileSize = Math.floor(Math.random() * 1000000) + 500000; // 0.5-1.5MB\n      \n      // 在实际实现中，这里会：\n      // 1. 下载原始图像\n      // 2. 创建PDF文档\n      // 3. 将图像嵌入PDF\n      // 4. 添加元数据\n      // 5. 保存到存储服务\n      // 6. 返回下载链接\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        pdfUrl,\n        fileSize,\n        metadata: {\n          title: metadata?.title || \"Generated Poster\",\n          author: metadata?.author || \"AI Poster Generator\",\n          creator: \"AI Multi-Agent Platform\",\n          producer: \"AI Multi-Agent Platform\",\n          creationDate: new Date().toISOString(),\n        },\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}