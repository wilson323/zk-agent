{"version":3,"names":["cov_1yyyltx8yo","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","model_adapter_1","require","core_adapter_1","AIModelManager","constructor","agUiAdapter","models","Map","adapters","metrics","loadModelsFromStorage","addModel","config","modelConfig","id","Date","now","Math","random","toString","substring","createdAt","toISOString","updatedAt","validateModelConfig","set","AIModelAdapter","modelId","totalCalls","successRate","averageLatency","totalCost","errorCount","lastUsed","dailyUsage","saveModelsToStorage","updateModel","updates","existingModel","get","Error","updatedModel","deleteModel","has","delete","getModel","getAllModels","Array","from","values","getModelsByType","filter","model","callModel","params","adapter","isActive","result","call","appId","chatId","updateMetrics","testModel","testParams","messages","role","content","maxTokens","temperature","success","error","latency","message","getModelMetrics","getAllMetrics","provider","apiKey","testResult","console","warn","successCount","usage","totalTokens","metadata","pricing","cost","promptTokens","inputTokenPrice","completionTokens","outputTokenPrice","today","split","find","date","calls","push","slice","saveMetricsToStorage","modelsData","localStorage","getItem","JSON","parse","metricsData","metric","setItem","stringify","exports","AgUICoreAdapter","aiModelManager"],"sources":["E:\\zk-agent\\lib\\ai-models\\model-manager.ts"],"sourcesContent":["/**\n * AI模型管理器\n * 负责模型的增删改查和调用\n */\n\nimport { AIModelAdapter } from \"./model-adapter\"\nimport type { AIModelConfig, ModelCallResult, ModelMetrics } from \"@/types/ai-models\"\nimport { AgUICoreAdapter } from \"@/lib/ag-ui/core-adapter\"\n\nexport class AIModelManager {\n  private models: Map<string, AIModelConfig> = new Map()\n  private adapters: Map<string, AIModelAdapter> = new Map()\n  private metrics: Map<string, ModelMetrics> = new Map()\n  private agUiAdapter: AgUICoreAdapter\n\n  constructor(agUiAdapter: AgUICoreAdapter) {\n    this.agUiAdapter = agUiAdapter\n    this.loadModelsFromStorage()\n  }\n\n  /**\n   * 添加模型配置\n   */\n  async addModel(config: Omit<AIModelConfig, \"id\" | \"createdAt\" | \"updatedAt\">): Promise<AIModelConfig> {\n    const modelConfig: AIModelConfig = {\n      ...config,\n      id: `model_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    }\n\n    // 验证模型配置\n    await this.validateModelConfig(modelConfig)\n\n    // 保存模型配置\n    this.models.set(modelConfig.id, modelConfig)\n    this.adapters.set(modelConfig.id, new AIModelAdapter(modelConfig))\n\n    // 初始化指标\n    this.metrics.set(modelConfig.id, {\n      modelId: modelConfig.id,\n      totalCalls: 0,\n      successRate: 0,\n      averageLatency: 0,\n      totalCost: 0,\n      errorCount: 0,\n      lastUsed: \"\",\n      dailyUsage: [],\n    })\n\n    // 保存到存储\n    await this.saveModelsToStorage()\n\n    return modelConfig\n  }\n\n  /**\n   * 更新模型配置\n   */\n  async updateModel(id: string, updates: Partial<AIModelConfig>): Promise<AIModelConfig> {\n    const existingModel = this.models.get(id)\n    if (!existingModel) {\n      throw new Error(`Model not found: ${id}`)\n    }\n\n    const updatedModel: AIModelConfig = {\n      ...existingModel,\n      ...updates,\n      id, // 确保ID不被修改\n      updatedAt: new Date().toISOString(),\n    }\n\n    // 验证更新后的配置\n    await this.validateModelConfig(updatedModel)\n\n    // 更新模型和适配器\n    this.models.set(id, updatedModel)\n    this.adapters.set(id, new AIModelAdapter(updatedModel))\n\n    // 保存到存储\n    await this.saveModelsToStorage()\n\n    return updatedModel\n  }\n\n  /**\n   * 删除模型\n   */\n  async deleteModel(id: string): Promise<void> {\n    if (!this.models.has(id)) {\n      throw new Error(`Model not found: ${id}`)\n    }\n\n    this.models.delete(id)\n    this.adapters.delete(id)\n    this.metrics.delete(id)\n\n    await this.saveModelsToStorage()\n  }\n\n  /**\n   * 获取模型配置\n   */\n  getModel(id: string): AIModelConfig | undefined {\n    return this.models.get(id)\n  }\n\n  /**\n   * 获取所有模型\n   */\n  getAllModels(): AIModelConfig[] {\n    return Array.from(this.models.values())\n  }\n\n  /**\n   * 根据类型获取模型\n   */\n  getModelsByType(type: string): AIModelConfig[] {\n    return Array.from(this.models.values()).filter((model) => model.type === type)\n  }\n\n  /**\n   * 调用模型\n   */\n  async callModel(modelId: string, params: any): Promise<ModelCallResult> {\n    const adapter = this.adapters.get(modelId)\n    if (!adapter) {\n      throw new Error(`Model adapter not found: ${modelId}`)\n    }\n\n    const model = this.models.get(modelId)\n    if (!model || !model.isActive) {\n      throw new Error(`Model not active: ${modelId}`)\n    }\n\n    // 调用模型\n    const result = await adapter.call(appId, chatId, params)\n\n    // 更新指标\n    await this.updateMetrics(modelId, result)\n\n    return result\n  }\n\n  /**\n   * 测试模型连接\n   */\n  async testModel(modelId: string): Promise<{ success: boolean; error?: string; latency?: number }> {\n    try {\n      const testParams = {\n        messages: [{ role: \"user\", content: \"Hello, this is a test message.\" }],\n        maxTokens: 10,\n        temperature: 0.1,\n      }\n\n      const result = await this.callModel(modelId, \"test_app_id\", \"test_chat_id\", testParams)\n\n      return {\n        success: result.success,\n        error: result.error,\n        latency: result.latency,\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      }\n    }\n  }\n\n  /**\n   * 获取模型指标\n   */\n  getModelMetrics(modelId: string): ModelMetrics | undefined {\n    return this.metrics.get(modelId)\n  }\n\n  /**\n   * 获取所有模型指标\n   */\n  getAllMetrics(): ModelMetrics[] {\n    return Array.from(this.metrics.values())\n  }\n\n  /**\n   * 验证模型配置\n   */\n  private async validateModelConfig(config: AIModelConfig): Promise<void> {\n    // 基本验证\n    if (!config.name || !config.provider || !config.type || !config.modelId) {\n      throw new Error(\"Missing required model configuration fields\")\n    }\n\n    if (!config.apiKey && config.provider !== \"local\") {\n      throw new Error(\"API key is required for external providers\")\n    }\n\n    // 可选：测试API连接\n    if (config.isActive) {\n      try {\n        const adapter = new AIModelAdapter(config)\n        const testResult = await adapter.call({\n          messages: [{ role: \"user\", content: \"test\" }],\n          maxTokens: 1,\n        })\n\n        if (!testResult.success) {\n          console.warn(`Model validation warning: ${testResult.error}`)\n        }\n      } catch (error) {\n        console.warn(`Model validation failed: ${error}`)\n        // 不抛出错误，允许保存配置但标记为非活跃\n        config.isActive = false\n      }\n    }\n  }\n\n  /**\n   * 更新模型指标\n   */\n  private async updateMetrics(modelId: string, result: ModelCallResult): Promise<void> {\n    const metrics = this.metrics.get(modelId)\n    if (!metrics) {return}\n\n    // 更新基本指标\n    metrics.totalCalls++\n    metrics.lastUsed = new Date().toISOString()\n\n    if (result.success) {\n      // 更新成功率\n      const successCount = metrics.totalCalls - metrics.errorCount\n      metrics.successRate = successCount / metrics.totalCalls\n\n      // 更新平均延迟\n      if (result.latency) {\n        metrics.averageLatency =\n          (metrics.averageLatency * (metrics.totalCalls - 1) + result.latency) / metrics.totalCalls\n      }\n\n      // 更新成本\n      if (result.usage?.totalTokens) {\n        const model = this.models.get(modelId)\n        if (model?.metadata?.pricing) {\n          const cost =\n            (result.usage.promptTokens || 0) * (model.metadata.pricing.inputTokenPrice || 0) +\n            (result.usage.completionTokens || 0) * (model.metadata.pricing.outputTokenPrice || 0)\n          metrics.totalCost += cost\n        }\n      }\n    } else {\n      metrics.errorCount++\n      metrics.successRate = (metrics.totalCalls - metrics.errorCount) / metrics.totalCalls\n    }\n\n    // 更新每日使用量\n    const today = new Date().toISOString().split(\"T\")[0]\n    let dailyUsage = metrics.dailyUsage.find((usage) => usage.date === today)\n\n    if (!dailyUsage) {\n      dailyUsage = { date: today, calls: 0, cost: 0 }\n      metrics.dailyUsage.push(dailyUsage)\n    }\n\n    dailyUsage.calls++\n    if (result.usage?.totalTokens && result.success) {\n      const model = this.models.get(modelId)\n      if (model?.metadata?.pricing) {\n        const cost =\n          (result.usage.promptTokens || 0) * (model.metadata.pricing.inputTokenPrice || 0) +\n          (result.usage.completionTokens || 0) * (model.metadata.pricing.outputTokenPrice || 0)\n        dailyUsage.cost += cost\n      }\n    }\n\n    // 保持最近30天的数据\n    metrics.dailyUsage = metrics.dailyUsage.slice(-30)\n\n    // 保存指标\n    await this.saveMetricsToStorage()\n  }\n\n  /**\n   * 从存储加载模型配置\n   */\n  private async loadModelsFromStorage(): Promise<void> {\n    try {\n      const modelsData = localStorage.getItem(\"ai_models_config\")\n      if (modelsData) {\n        const models: AIModelConfig[] = JSON.parse(modelsData)\n        for (const model of models) {\n          this.models.set(model.id, model)\n          this.adapters.set(model.id, new AIModelAdapter(model, this.agUiAdapter))\n        }\n      }\n\n      const metricsData = localStorage.getItem(\"ai_models_metrics\")\n      if (metricsData) {\n        const metrics: ModelMetrics[] = JSON.parse(metricsData)\n        for (const metric of metrics) {\n          this.metrics.set(metric.modelId, metric)\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to load models from storage:\", error)\n    }\n  }\n\n  /**\n   * 保存模型配置到存储\n   */\n  private async saveModelsToStorage(): Promise<void> {\n    try {\n      const models = Array.from(this.models.values())\n      localStorage.setItem(\"ai_models_config\", JSON.stringify(models))\n    } catch (error) {\n      console.error(\"Failed to save models to storage:\", error)\n    }\n  }\n\n  /**\n   * 保存指标到存储\n   */\n  private async saveMetricsToStorage(): Promise<void> {\n    try {\n      const metrics = Array.from(this.metrics.values())\n      localStorage.setItem(\"ai_models_metrics\", JSON.stringify(metrics))\n    } catch (error) {\n      console.error(\"Failed to save metrics to storage:\", error)\n    }\n  }\n}\n\nimport { AgUICoreAdapter } from \"@/lib/ag-ui/core-adapter\"\n\n// 创建全局实例\nexport const agUiAdapter = new AgUICoreAdapter()\nexport const aiModelManager = new AIModelManager(agUiAdapter)\n"],"mappings":";;AAAA;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAiBQ;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;AAZR,MAAAa,eAAA;AAAA;AAAA,CAAAjC,cAAA,GAAAoB,CAAA,OAAAc,OAAA;AAEA,MAAAC,cAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAoB,CAAA,OAAAc,OAAA;AAEA,MAAaE,cAAc;EAMzBC,YAAYC,WAA4B;IAAA;IAAAtC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IALhC,KAAAmB,MAAM,GAA+B,IAAIC,GAAG,EAAE;IAAA;IAAAxC,cAAA,GAAAoB,CAAA;IAC9C,KAAAqB,QAAQ,GAAgC,IAAID,GAAG,EAAE;IAAA;IAAAxC,cAAA,GAAAoB,CAAA;IACjD,KAAAsB,OAAO,GAA8B,IAAIF,GAAG,EAAE;IAAA;IAAAxC,cAAA,GAAAoB,CAAA;IAIpD,IAAI,CAACkB,WAAW,GAAGA,WAAW;IAAA;IAAAtC,cAAA,GAAAoB,CAAA;IAC9B,IAAI,CAACuB,qBAAqB,EAAE;EAC9B;EAEA;;;EAGA,MAAMC,QAAQA,CAACC,MAA6D;IAAA;IAAA7C,cAAA,GAAAqB,CAAA;IAC1E,MAAMyB,WAAW;IAAA;IAAA,CAAA9C,cAAA,GAAAoB,CAAA,OAAkB;MACjC,GAAGyB,MAAM;MACTE,EAAE,EAAE,SAASC,IAAI,CAACC,GAAG,EAAE,IAAIC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MACvEC,SAAS,EAAE,IAAIN,IAAI,EAAE,CAACO,WAAW,EAAE;MACnCC,SAAS,EAAE,IAAIR,IAAI,EAAE,CAACO,WAAW;KAClC;IAED;IAAA;IAAAvD,cAAA,GAAAoB,CAAA;IACA,MAAM,IAAI,CAACqC,mBAAmB,CAACX,WAAW,CAAC;IAE3C;IAAA;IAAA9C,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACmB,MAAM,CAACmB,GAAG,CAACZ,WAAW,CAACC,EAAE,EAAED,WAAW,CAAC;IAAA;IAAA9C,cAAA,GAAAoB,CAAA;IAC5C,IAAI,CAACqB,QAAQ,CAACiB,GAAG,CAACZ,WAAW,CAACC,EAAE,EAAE,IAAId,eAAA,CAAA0B,cAAc,CAACb,WAAW,CAAC,CAAC;IAElE;IAAA;IAAA9C,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACsB,OAAO,CAACgB,GAAG,CAACZ,WAAW,CAACC,EAAE,EAAE;MAC/Ba,OAAO,EAAEd,WAAW,CAACC,EAAE;MACvBc,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,CAAC;MACjBC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;KACb,CAAC;IAEF;IAAA;IAAAnE,cAAA,GAAAoB,CAAA;IACA,MAAM,IAAI,CAACgD,mBAAmB,EAAE;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IAEhC,OAAO0B,WAAW;EACpB;EAEA;;;EAGA,MAAMuB,WAAWA,CAACtB,EAAU,EAAEuB,OAA+B;IAAA;IAAAtE,cAAA,GAAAqB,CAAA;IAC3D,MAAMkD,aAAa;IAAA;IAAA,CAAAvE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACmB,MAAM,CAACiC,GAAG,CAACzB,EAAE,CAAC;IAAA;IAAA/C,cAAA,GAAAoB,CAAA;IACzC,IAAI,CAACmD,aAAa,EAAE;MAAA;MAAAvE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAClB,MAAM,IAAIqD,KAAK,CAAC,oBAAoB1B,EAAE,EAAE,CAAC;IAC3C,CAAC;IAAA;IAAA;MAAA/C,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAMoD,YAAY;IAAA;IAAA,CAAA1E,cAAA,GAAAoB,CAAA,QAAkB;MAClC,GAAGmD,aAAa;MAChB,GAAGD,OAAO;MACVvB,EAAE;MAAE;MACJS,SAAS,EAAE,IAAIR,IAAI,EAAE,CAACO,WAAW;KAClC;IAED;IAAA;IAAAvD,cAAA,GAAAoB,CAAA;IACA,MAAM,IAAI,CAACqC,mBAAmB,CAACiB,YAAY,CAAC;IAE5C;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACmB,MAAM,CAACmB,GAAG,CAACX,EAAE,EAAE2B,YAAY,CAAC;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACjC,IAAI,CAACqB,QAAQ,CAACiB,GAAG,CAACX,EAAE,EAAE,IAAId,eAAA,CAAA0B,cAAc,CAACe,YAAY,CAAC,CAAC;IAEvD;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACA,MAAM,IAAI,CAACgD,mBAAmB,EAAE;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IAEhC,OAAOsD,YAAY;EACrB;EAEA;;;EAGA,MAAMC,WAAWA,CAAC5B,EAAU;IAAA;IAAA/C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1B,IAAI,CAAC,IAAI,CAACmB,MAAM,CAACqC,GAAG,CAAC7B,EAAE,CAAC,EAAE;MAAA;MAAA/C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACxB,MAAM,IAAIqD,KAAK,CAAC,oBAAoB1B,EAAE,EAAE,CAAC;IAC3C,CAAC;IAAA;IAAA;MAAA/C,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAI,CAACmB,MAAM,CAACsC,MAAM,CAAC9B,EAAE,CAAC;IAAA;IAAA/C,cAAA,GAAAoB,CAAA;IACtB,IAAI,CAACqB,QAAQ,CAACoC,MAAM,CAAC9B,EAAE,CAAC;IAAA;IAAA/C,cAAA,GAAAoB,CAAA;IACxB,IAAI,CAACsB,OAAO,CAACmC,MAAM,CAAC9B,EAAE,CAAC;IAAA;IAAA/C,cAAA,GAAAoB,CAAA;IAEvB,MAAM,IAAI,CAACgD,mBAAmB,EAAE;EAClC;EAEA;;;EAGAU,QAAQA,CAAC/B,EAAU;IAAA;IAAA/C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjB,OAAO,IAAI,CAACmB,MAAM,CAACiC,GAAG,CAACzB,EAAE,CAAC;EAC5B;EAEA;;;EAGAgC,YAAYA,CAAA;IAAA;IAAA/E,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACV,OAAO4D,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAAC2C,MAAM,EAAE,CAAC;EACzC;EAEA;;;EAGAC,eAAeA,CAAClE,IAAY;IAAA;IAAAjB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1B,OAAO4D,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAAC2C,MAAM,EAAE,CAAC,CAACE,MAAM,CAAEC,KAAK,IAAK;MAAA;MAAArF,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAAiE,KAAK,CAACpE,IAAI,KAAKA,IAAI;IAAJ,CAAI,CAAC;EAChF;EAEA;;;EAGA,MAAMqE,SAASA,CAAC1B,OAAe,EAAE2B,MAAW;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAC1C,MAAMmE,OAAO;IAAA;IAAA,CAAAxF,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACqB,QAAQ,CAAC+B,GAAG,CAACZ,OAAO,CAAC;IAAA;IAAA5D,cAAA,GAAAoB,CAAA;IAC1C,IAAI,CAACoE,OAAO,EAAE;MAAA;MAAAxF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACZ,MAAM,IAAIqD,KAAK,CAAC,4BAA4Bb,OAAO,EAAE,CAAC;IACxD,CAAC;IAAA;IAAA;MAAA5D,cAAA,GAAAsB,CAAA;IAAA;IAED,MAAM+D,KAAK;IAAA;IAAA,CAAArF,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACmB,MAAM,CAACiC,GAAG,CAACZ,OAAO,CAAC;IAAA;IAAA5D,cAAA,GAAAoB,CAAA;IACtC;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAC+D,KAAK;IAAA;IAAA,CAAArF,cAAA,GAAAsB,CAAA,UAAI,CAAC+D,KAAK,CAACI,QAAQ,GAAE;MAAA;MAAAzF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC7B,MAAM,IAAIqD,KAAK,CAAC,qBAAqBb,OAAO,EAAE,CAAC;IACjD,CAAC;IAAA;IAAA;MAAA5D,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAMoE,MAAM;IAAA;IAAA,CAAA1F,cAAA,GAAAoB,CAAA,QAAG,MAAMoE,OAAO,CAACG,IAAI,CAACC,KAAK,EAAEC,MAAM,EAAEN,MAAM,CAAC;IAExD;IAAA;IAAAvF,cAAA,GAAAoB,CAAA;IACA,MAAM,IAAI,CAAC0E,aAAa,CAAClC,OAAO,EAAE8B,MAAM,CAAC;IAAA;IAAA1F,cAAA,GAAAoB,CAAA;IAEzC,OAAOsE,MAAM;EACf;EAEA;;;EAGA,MAAMK,SAASA,CAACnC,OAAe;IAAA;IAAA5D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7B,IAAI;MACF,MAAM4E,UAAU;MAAA;MAAA,CAAAhG,cAAA,GAAAoB,CAAA,QAAG;QACjB6E,QAAQ,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAgC,CAAE,CAAC;QACvEC,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE;OACd;MAED,MAAMX,MAAM;MAAA;MAAA,CAAA1F,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACkE,SAAS,CAAC1B,OAAO,EAAE,aAAa,EAAE,cAAc,EAAEoC,UAAU,CAAC;MAAA;MAAAhG,cAAA,GAAAoB,CAAA;MAEvF,OAAO;QACLkF,OAAO,EAAEZ,MAAM,CAACY,OAAO;QACvBC,KAAK,EAAEb,MAAM,CAACa,KAAK;QACnBC,OAAO,EAAEd,MAAM,CAACc;OACjB;IACH,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA;MAAAvG,cAAA,GAAAoB,CAAA;MACd,OAAO;QACLkF,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEA,KAAK,YAAY9B,KAAK;QAAA;QAAA,CAAAzE,cAAA,GAAAsB,CAAA,UAAGiF,KAAK,CAACE,OAAO;QAAA;QAAA,CAAAzG,cAAA,GAAAsB,CAAA,UAAG,eAAe;OAChE;IACH;EACF;EAEA;;;EAGAoF,eAAeA,CAAC9C,OAAe;IAAA;IAAA5D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7B,OAAO,IAAI,CAACsB,OAAO,CAAC8B,GAAG,CAACZ,OAAO,CAAC;EAClC;EAEA;;;EAGA+C,aAAaA,CAAA;IAAA;IAAA3G,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACX,OAAO4D,KAAK,CAACC,IAAI,CAAC,IAAI,CAACvC,OAAO,CAACwC,MAAM,EAAE,CAAC;EAC1C;EAEA;;;EAGQ,MAAMzB,mBAAmBA,CAACZ,MAAqB;IAAA;IAAA7C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACrD;IACA;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAACuB,MAAM,CAAChC,IAAI;IAAA;IAAA,CAAAb,cAAA,GAAAsB,CAAA,UAAI,CAACuB,MAAM,CAAC+D,QAAQ;IAAA;IAAA,CAAA5G,cAAA,GAAAsB,CAAA,UAAI,CAACuB,MAAM,CAAC5B,IAAI;IAAA;IAAA,CAAAjB,cAAA,GAAAsB,CAAA,UAAI,CAACuB,MAAM,CAACe,OAAO,GAAE;MAAA;MAAA5D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACvE,MAAM,IAAIqD,KAAK,CAAC,6CAA6C,CAAC;IAChE,CAAC;IAAA;IAAA;MAAAzE,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAACuB,MAAM,CAACgE,MAAM;IAAA;IAAA,CAAA7G,cAAA,GAAAsB,CAAA,UAAIuB,MAAM,CAAC+D,QAAQ,KAAK,OAAO,GAAE;MAAA;MAAA5G,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACjD,MAAM,IAAIqD,KAAK,CAAC,4CAA4C,CAAC;IAC/D,CAAC;IAAA;IAAA;MAAAzE,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAIyB,MAAM,CAAC4C,QAAQ,EAAE;MAAA;MAAAzF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACnB,IAAI;QACF,MAAMoE,OAAO;QAAA;QAAA,CAAAxF,cAAA,GAAAoB,CAAA,QAAG,IAAIa,eAAA,CAAA0B,cAAc,CAACd,MAAM,CAAC;QAC1C,MAAMiE,UAAU;QAAA;QAAA,CAAA9G,cAAA,GAAAoB,CAAA,QAAG,MAAMoE,OAAO,CAACG,IAAI,CAAC;UACpCM,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAE;UAAM,CAAE,CAAC;UAC7CC,SAAS,EAAE;SACZ,CAAC;QAAA;QAAApG,cAAA,GAAAoB,CAAA;QAEF,IAAI,CAAC0F,UAAU,CAACR,OAAO,EAAE;UAAA;UAAAtG,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACvB2F,OAAO,CAACC,IAAI,CAAC,6BAA6BF,UAAU,CAACP,KAAK,EAAE,CAAC;QAC/D,CAAC;QAAA;QAAA;UAAAvG,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC,OAAOiF,KAAK,EAAE;QAAA;QAAAvG,cAAA,GAAAoB,CAAA;QACd2F,OAAO,CAACC,IAAI,CAAC,4BAA4BT,KAAK,EAAE,CAAC;QACjD;QAAA;QAAAvG,cAAA,GAAAoB,CAAA;QACAyB,MAAM,CAAC4C,QAAQ,GAAG,KAAK;MACzB;IACF,CAAC;IAAA;IAAA;MAAAzF,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGQ,MAAMwE,aAAaA,CAAClC,OAAe,EAAE8B,MAAuB;IAAA;IAAA1F,cAAA,GAAAqB,CAAA;IAClE,MAAMqB,OAAO;IAAA;IAAA,CAAA1C,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsB,OAAO,CAAC8B,GAAG,CAACZ,OAAO,CAAC;IAAA;IAAA5D,cAAA,GAAAoB,CAAA;IACzC,IAAI,CAACsB,OAAO,EAAE;MAAA;MAAA1C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAC;IAAM,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAEtB;IAAAtB,cAAA,GAAAoB,CAAA;IACAsB,OAAO,CAACmB,UAAU,EAAE;IAAA;IAAA7D,cAAA,GAAAoB,CAAA;IACpBsB,OAAO,CAACwB,QAAQ,GAAG,IAAIlB,IAAI,EAAE,CAACO,WAAW,EAAE;IAAA;IAAAvD,cAAA,GAAAoB,CAAA;IAE3C,IAAIsE,MAAM,CAACY,OAAO,EAAE;MAAA;MAAAtG,cAAA,GAAAsB,CAAA;MAClB;MACA,MAAM2F,YAAY;MAAA;MAAA,CAAAjH,cAAA,GAAAoB,CAAA,QAAGsB,OAAO,CAACmB,UAAU,GAAGnB,OAAO,CAACuB,UAAU;MAAA;MAAAjE,cAAA,GAAAoB,CAAA;MAC5DsB,OAAO,CAACoB,WAAW,GAAGmD,YAAY,GAAGvE,OAAO,CAACmB,UAAU;MAEvD;MAAA;MAAA7D,cAAA,GAAAoB,CAAA;MACA,IAAIsE,MAAM,CAACc,OAAO,EAAE;QAAA;QAAAxG,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAClBsB,OAAO,CAACqB,cAAc,GACpB,CAACrB,OAAO,CAACqB,cAAc,IAAIrB,OAAO,CAACmB,UAAU,GAAG,CAAC,CAAC,GAAG6B,MAAM,CAACc,OAAO,IAAI9D,OAAO,CAACmB,UAAU;MAC7F,CAAC;MAAA;MAAA;QAAA7D,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA,IAAIsE,MAAM,CAACwB,KAAK,EAAEC,WAAW,EAAE;QAAA;QAAAnH,cAAA,GAAAsB,CAAA;QAC7B,MAAM+D,KAAK;QAAA;QAAA,CAAArF,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACmB,MAAM,CAACiC,GAAG,CAACZ,OAAO,CAAC;QAAA;QAAA5D,cAAA,GAAAoB,CAAA;QACtC,IAAIiE,KAAK,EAAE+B,QAAQ,EAAEC,OAAO,EAAE;UAAA;UAAArH,cAAA,GAAAsB,CAAA;UAC5B,MAAMgG,IAAI;UAAA;UAAA,CAAAtH,cAAA,GAAAoB,CAAA,QACR;UAAC;UAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAoE,MAAM,CAACwB,KAAK,CAACK,YAAY;UAAA;UAAA,CAAAvH,cAAA,GAAAsB,CAAA,WAAI,CAAC;UAAK;UAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAA+D,KAAK,CAAC+B,QAAQ,CAACC,OAAO,CAACG,eAAe;UAAA;UAAA,CAAAxH,cAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC,GAChF;UAAC;UAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAAoE,MAAM,CAACwB,KAAK,CAACO,gBAAgB;UAAA;UAAA,CAAAzH,cAAA,GAAAsB,CAAA,WAAI,CAAC;UAAK;UAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAA+D,KAAK,CAAC+B,QAAQ,CAACC,OAAO,CAACK,gBAAgB;UAAA;UAAA,CAAA1H,cAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;UAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACvFsB,OAAO,CAACsB,SAAS,IAAIsD,IAAI;QAC3B,CAAC;QAAA;QAAA;UAAAtH,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC;MAAA;MAAA;QAAAtB,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC,MAAM;MAAA;MAAAtB,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACLsB,OAAO,CAACuB,UAAU,EAAE;MAAA;MAAAjE,cAAA,GAAAoB,CAAA;MACpBsB,OAAO,CAACoB,WAAW,GAAG,CAACpB,OAAO,CAACmB,UAAU,GAAGnB,OAAO,CAACuB,UAAU,IAAIvB,OAAO,CAACmB,UAAU;IACtF;IAEA;IACA,MAAM8D,KAAK;IAAA;IAAA,CAAA3H,cAAA,GAAAoB,CAAA,QAAG,IAAI4B,IAAI,EAAE,CAACO,WAAW,EAAE,CAACqE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,IAAIzD,UAAU;IAAA;IAAA,CAAAnE,cAAA,GAAAoB,CAAA,QAAGsB,OAAO,CAACyB,UAAU,CAAC0D,IAAI,CAAEX,KAAK,IAAK;MAAA;MAAAlH,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAA8F,KAAK,CAACY,IAAI,KAAKH,KAAK;IAAL,CAAK,CAAC;IAAA;IAAA3H,cAAA,GAAAoB,CAAA;IAEzE,IAAI,CAAC+C,UAAU,EAAE;MAAA;MAAAnE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACf+C,UAAU,GAAG;QAAE2D,IAAI,EAAEH,KAAK;QAAEI,KAAK,EAAE,CAAC;QAAET,IAAI,EAAE;MAAC,CAAE;MAAA;MAAAtH,cAAA,GAAAoB,CAAA;MAC/CsB,OAAO,CAACyB,UAAU,CAAC6D,IAAI,CAAC7D,UAAU,CAAC;IACrC,CAAC;IAAA;IAAA;MAAAnE,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED+C,UAAU,CAAC4D,KAAK,EAAE;IAAA;IAAA/H,cAAA,GAAAoB,CAAA;IAClB;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAoE,MAAM,CAACwB,KAAK,EAAEC,WAAW;IAAA;IAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAIoE,MAAM,CAACY,OAAO,GAAE;MAAA;MAAAtG,cAAA,GAAAsB,CAAA;MAC/C,MAAM+D,KAAK;MAAA;MAAA,CAAArF,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACmB,MAAM,CAACiC,GAAG,CAACZ,OAAO,CAAC;MAAA;MAAA5D,cAAA,GAAAoB,CAAA;MACtC,IAAIiE,KAAK,EAAE+B,QAAQ,EAAEC,OAAO,EAAE;QAAA;QAAArH,cAAA,GAAAsB,CAAA;QAC5B,MAAMgG,IAAI;QAAA;QAAA,CAAAtH,cAAA,GAAAoB,CAAA,QACR;QAAC;QAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAoE,MAAM,CAACwB,KAAK,CAACK,YAAY;QAAA;QAAA,CAAAvH,cAAA,GAAAsB,CAAA,WAAI,CAAC;QAAK;QAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAA+D,KAAK,CAAC+B,QAAQ,CAACC,OAAO,CAACG,eAAe;QAAA;QAAA,CAAAxH,cAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC,GAChF;QAAC;QAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAAoE,MAAM,CAACwB,KAAK,CAACO,gBAAgB;QAAA;QAAA,CAAAzH,cAAA,GAAAsB,CAAA,WAAI,CAAC;QAAK;QAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAA+D,KAAK,CAAC+B,QAAQ,CAACC,OAAO,CAACK,gBAAgB;QAAA;QAAA,CAAA1H,cAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;QAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACvF+C,UAAU,CAACmD,IAAI,IAAIA,IAAI;MACzB,CAAC;MAAA;MAAA;QAAAtH,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACAsB,OAAO,CAACyB,UAAU,GAAGzB,OAAO,CAACyB,UAAU,CAAC8D,KAAK,CAAC,CAAC,EAAE,CAAC;IAElD;IAAA;IAAAjI,cAAA,GAAAoB,CAAA;IACA,MAAM,IAAI,CAAC8G,oBAAoB,EAAE;EACnC;EAEA;;;EAGQ,MAAMvF,qBAAqBA,CAAA;IAAA;IAAA3C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjC,IAAI;MACF,MAAM+G,UAAU;MAAA;MAAA,CAAAnI,cAAA,GAAAoB,CAAA,QAAGgH,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;MAAA;MAAArI,cAAA,GAAAoB,CAAA;MAC3D,IAAI+G,UAAU,EAAE;QAAA;QAAAnI,cAAA,GAAAsB,CAAA;QACd,MAAMiB,MAAM;QAAA;QAAA,CAAAvC,cAAA,GAAAoB,CAAA,QAAoBkH,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;QAAA;QAAAnI,cAAA,GAAAoB,CAAA;QACtD,KAAK,MAAMiE,KAAK,IAAI9C,MAAM,EAAE;UAAA;UAAAvC,cAAA,GAAAoB,CAAA;UAC1B,IAAI,CAACmB,MAAM,CAACmB,GAAG,CAAC2B,KAAK,CAACtC,EAAE,EAAEsC,KAAK,CAAC;UAAA;UAAArF,cAAA,GAAAoB,CAAA;UAChC,IAAI,CAACqB,QAAQ,CAACiB,GAAG,CAAC2B,KAAK,CAACtC,EAAE,EAAE,IAAId,eAAA,CAAA0B,cAAc,CAAC0B,KAAK,EAAE,IAAI,CAAC/C,WAAW,CAAC,CAAC;QAC1E;MACF,CAAC;MAAA;MAAA;QAAAtC,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMkH,WAAW;MAAA;MAAA,CAAAxI,cAAA,GAAAoB,CAAA,SAAGgH,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;MAAA;MAAArI,cAAA,GAAAoB,CAAA;MAC7D,IAAIoH,WAAW,EAAE;QAAA;QAAAxI,cAAA,GAAAsB,CAAA;QACf,MAAMoB,OAAO;QAAA;QAAA,CAAA1C,cAAA,GAAAoB,CAAA,SAAmBkH,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC;QAAA;QAAAxI,cAAA,GAAAoB,CAAA;QACvD,KAAK,MAAMqH,MAAM,IAAI/F,OAAO,EAAE;UAAA;UAAA1C,cAAA,GAAAoB,CAAA;UAC5B,IAAI,CAACsB,OAAO,CAACgB,GAAG,CAAC+E,MAAM,CAAC7E,OAAO,EAAE6E,MAAM,CAAC;QAC1C;MACF,CAAC;MAAA;MAAA;QAAAzI,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC,CAAC,OAAOiF,KAAK,EAAE;MAAA;MAAAvG,cAAA,GAAAoB,CAAA;MACd2F,OAAO,CAACR,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D;EACF;EAEA;;;EAGQ,MAAMnC,mBAAmBA,CAAA;IAAA;IAAApE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC/B,IAAI;MACF,MAAMmB,MAAM;MAAA;MAAA,CAAAvC,cAAA,GAAAoB,CAAA,SAAG4D,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAAC2C,MAAM,EAAE,CAAC;MAAA;MAAAlF,cAAA,GAAAoB,CAAA;MAC/CgH,YAAY,CAACM,OAAO,CAAC,kBAAkB,EAAEJ,IAAI,CAACK,SAAS,CAACpG,MAAM,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOgE,KAAK,EAAE;MAAA;MAAAvG,cAAA,GAAAoB,CAAA;MACd2F,OAAO,CAACR,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF;EAEA;;;EAGQ,MAAM2B,oBAAoBA,CAAA;IAAA;IAAAlI,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAChC,IAAI;MACF,MAAMsB,OAAO;MAAA;MAAA,CAAA1C,cAAA,GAAAoB,CAAA,SAAG4D,KAAK,CAACC,IAAI,CAAC,IAAI,CAACvC,OAAO,CAACwC,MAAM,EAAE,CAAC;MAAA;MAAAlF,cAAA,GAAAoB,CAAA;MACjDgH,YAAY,CAACM,OAAO,CAAC,mBAAmB,EAAEJ,IAAI,CAACK,SAAS,CAACjG,OAAO,CAAC,CAAC;IACpE,CAAC,CAAC,OAAO6D,KAAK,EAAE;MAAA;MAAAvG,cAAA,GAAAoB,CAAA;MACd2F,OAAO,CAACR,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF;;AACD;AAAAvG,cAAA,GAAAoB,CAAA;AAjUDwH,OAAA,CAAAxG,cAAA,GAAAA,cAAA;AAqUA;AAAA;AAAApC,cAAA,GAAAoB,CAAA;AACawH,OAAA,CAAAtG,WAAW,GAAG,IAAIH,cAAA,CAAA0G,eAAe,EAAE;AAAA;AAAA7I,cAAA,GAAAoB,CAAA;AACnCwH,OAAA,CAAAE,cAAc,GAAG,IAAI1G,cAAc,CAACwG,OAAA,CAAAtG,WAAW,CAAC","ignoreList":[]}