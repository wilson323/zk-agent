58bc3b58efecdbee129d05c6693322e0
"use strict";

/* istanbul ignore next */
function cov_2dqk12ps1n() {
  var path = "E:\\zk-agent\\lib\\monitoring\\root-cause-analyzer.ts";
  var hash = "d245098f78f85484861f0d9121af422ee0765ca8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\monitoring\\root-cause-analyzer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 63
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 56
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "10": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 77
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 75
        }
      },
      "13": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "14": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "15": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 80
        }
      },
      "17": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 55
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "19": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 109
        }
      },
      "20": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "21": {
        start: {
          line: 39,
          column: 42
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "22": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 68
        }
      },
      "23": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 26
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "26": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "27": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "28": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "29": {
        start: {
          line: 60,
          column: 32
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 60
        }
      },
      "31": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 28
        }
      },
      "32": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 89
        }
      },
      "33": {
        start: {
          line: 66,
          column: 36
        },
        end: {
          line: 66,
          column: 96
        }
      },
      "34": {
        start: {
          line: 68,
          column: 33
        },
        end: {
          line: 68,
          column: 84
        }
      },
      "35": {
        start: {
          line: 70,
          column: 32
        },
        end: {
          line: 70,
          column: 102
        }
      },
      "36": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "37": {
        start: {
          line: 80,
          column: 50
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "38": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 51
        }
      },
      "39": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 53
        }
      },
      "40": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "41": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "42": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 24
        }
      },
      "43": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "44": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 103,
          column: 67
        }
      },
      "45": {
        start: {
          line: 104,
          column: 31
        },
        end: {
          line: 104,
          column: 45
        }
      },
      "46": {
        start: {
          line: 105,
          column: 30
        },
        end: {
          line: 105,
          column: 84
        }
      },
      "47": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 82
        }
      },
      "48": {
        start: {
          line: 108,
          column: 32
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "49": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 140,
          column: 16
        }
      },
      "50": {
        start: {
          line: 128,
          column: 45
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "51": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 67
        }
      },
      "52": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 22
        }
      },
      "53": {
        start: {
          line: 151,
          column: 23
        },
        end: {
          line: 151,
          column: 25
        }
      },
      "54": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "55": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "56": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "57": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 84
        }
      },
      "58": {
        start: {
          line: 171,
          column: 37
        },
        end: {
          line: 171,
          column: 82
        }
      },
      "59": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 177,
          column: 57
        }
      },
      "60": {
        start: {
          line: 178,
          column: 25
        },
        end: {
          line: 178,
          column: 27
        }
      },
      "61": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 79
        }
      },
      "62": {
        start: {
          line: 180,
          column: 52
        },
        end: {
          line: 180,
          column: 78
        }
      },
      "63": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "64": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "65": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 192,
          column: 19
        }
      },
      "66": {
        start: {
          line: 187,
          column: 68
        },
        end: {
          line: 187,
          column: 89
        }
      },
      "67": {
        start: {
          line: 188,
          column: 66
        },
        end: {
          line: 188,
          column: 87
        }
      },
      "68": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 196,
          column: 65
        }
      },
      "69": {
        start: {
          line: 196,
          column: 53
        },
        end: {
          line: 196,
          column: 64
        }
      },
      "70": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "71": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "72": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 208,
          column: 19
        }
      },
      "73": {
        start: {
          line: 203,
          column: 68
        },
        end: {
          line: 203,
          column: 89
        }
      },
      "74": {
        start: {
          line: 204,
          column: 66
        },
        end: {
          line: 204,
          column: 87
        }
      },
      "75": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 24
        }
      },
      "76": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 25
        }
      },
      "77": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 49
        }
      },
      "78": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "79": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 226,
          column: 19
        }
      },
      "80": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 22
        }
      },
      "81": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 233,
          column: 19
        }
      },
      "82": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 22
        }
      },
      "83": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 240,
          column: 19
        }
      },
      "84": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 22
        }
      },
      "85": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 247,
          column: 19
        }
      },
      "86": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 22
        }
      },
      "87": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "88": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "89": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 257,
          column: 19
        }
      },
      "90": {
        start: {
          line: 261,
          column: 31
        },
        end: {
          line: 261,
          column: 104
        }
      },
      "91": {
        start: {
          line: 261,
          column: 52
        },
        end: {
          line: 261,
          column: 103
        }
      },
      "92": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "93": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 267,
          column: 15
        }
      },
      "94": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "95": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 274,
          column: 14
        }
      },
      "96": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 276,
          column: 113
        }
      },
      "97": {
        start: {
          line: 276,
          column: 59
        },
        end: {
          line: 276,
          column: 112
        }
      },
      "98": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 280,
          column: 10
        }
      },
      "99": {
        start: {
          line: 286,
          column: 24
        },
        end: {
          line: 286,
          column: 26
        }
      },
      "100": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "101": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 34
        }
      },
      "102": {
        start: {
          line: 292,
          column: 25
        },
        end: {
          line: 294,
          column: 78
        }
      },
      "103": {
        start: {
          line: 293,
          column: 47
        },
        end: {
          line: 293,
          column: 68
        }
      },
      "104": {
        start: {
          line: 294,
          column: 51
        },
        end: {
          line: 294,
          column: 72
        }
      },
      "105": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "106": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 35
        }
      },
      "107": {
        start: {
          line: 299,
          column: 28
        },
        end: {
          line: 299,
          column: 94
        }
      },
      "108": {
        start: {
          line: 299,
          column: 59
        },
        end: {
          line: 299,
          column: 76
        }
      },
      "109": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "110": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 35
        }
      },
      "111": {
        start: {
          line: 304,
          column: 29
        },
        end: {
          line: 304,
          column: 73
        }
      },
      "112": {
        start: {
          line: 304,
          column: 60
        },
        end: {
          line: 304,
          column: 71
        }
      },
      "113": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "114": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 39
        }
      },
      "115": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 23
        }
      },
      "116": {
        start: {
          line: 314,
          column: 26
        },
        end: {
          line: 314,
          column: 57
        }
      },
      "117": {
        start: {
          line: 316,
          column: 30
        },
        end: {
          line: 316,
          column: 97
        }
      },
      "118": {
        start: {
          line: 316,
          column: 57
        },
        end: {
          line: 316,
          column: 74
        }
      },
      "119": {
        start: {
          line: 318,
          column: 32
        },
        end: {
          line: 318,
          column: 84
        }
      },
      "120": {
        start: {
          line: 318,
          column: 70
        },
        end: {
          line: 318,
          column: 81
        }
      },
      "121": {
        start: {
          line: 320,
          column: 29
        },
        end: {
          line: 320,
          column: 34
        }
      },
      "122": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "123": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 40
        }
      },
      "124": {
        start: {
          line: 324,
          column: 13
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "125": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 36
        }
      },
      "126": {
        start: {
          line: 327,
          column: 13
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "127": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 38
        }
      },
      "128": {
        start: {
          line: 331,
          column: 30
        },
        end: {
          line: 331,
          column: 35
        }
      },
      "129": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "130": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 41
        }
      },
      "131": {
        start: {
          line: 335,
          column: 13
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "132": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 37
        }
      },
      "133": {
        start: {
          line: 338,
          column: 13
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "134": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 39
        }
      },
      "135": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 348,
          column: 10
        }
      },
      "136": {
        start: {
          line: 354,
          column: 32
        },
        end: {
          line: 354,
          column: 34
        }
      },
      "137": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "138": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 364,
          column: 15
        }
      },
      "139": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 372,
          column: 15
        }
      },
      "140": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "141": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 382,
          column: 15
        }
      },
      "142": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "143": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 392,
          column: 15
        }
      },
      "144": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "145": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 403,
          column: 15
        }
      },
      "146": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 413,
          column: 11
        }
      },
      "147": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 31
        }
      },
      "148": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 51
        }
      },
      "149": {
        start: {
          line: 426,
          column: 26
        },
        end: {
          line: 426,
          column: 62
        }
      },
      "150": {
        start: {
          line: 427,
          column: 26
        },
        end: {
          line: 427,
          column: 47
        }
      },
      "151": {
        start: {
          line: 428,
          column: 28
        },
        end: {
          line: 428,
          column: 77
        }
      },
      "152": {
        start: {
          line: 429,
          column: 28
        },
        end: {
          line: 429,
          column: 86
        }
      },
      "153": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 79
        }
      },
      "154": {
        start: {
          line: 436,
          column: 19
        },
        end: {
          line: 436,
          column: 20
        }
      },
      "155": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 441,
          column: 9
        }
      },
      "156": {
        start: {
          line: 437,
          column: 21
        },
        end: {
          line: 437,
          column: 22
        }
      },
      "157": {
        start: {
          line: 438,
          column: 25
        },
        end: {
          line: 438,
          column: 42
        }
      },
      "158": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 47
        }
      },
      "159": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 31
        }
      },
      "160": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 43
        }
      },
      "161": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 448,
          column: 25
        }
      },
      "162": {
        start: {
          line: 447,
          column: 28
        },
        end: {
          line: 447,
          column: 43
        }
      },
      "163": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "164": {
        start: {
          line: 452,
          column: 51
        },
        end: {
          line: 452,
          column: 65
        }
      },
      "165": {
        start: {
          line: 453,
          column: 54
        },
        end: {
          line: 453,
          column: 71
        }
      },
      "166": {
        start: {
          line: 454,
          column: 52
        },
        end: {
          line: 454,
          column: 67
        }
      },
      "167": {
        start: {
          line: 455,
          column: 56
        },
        end: {
          line: 455,
          column: 74
        }
      },
      "168": {
        start: {
          line: 456,
          column: 21
        },
        end: {
          line: 456,
          column: 35
        }
      },
      "169": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 467,
          column: 15
        }
      },
      "170": {
        start: {
          line: 461,
          column: 24
        },
        end: {
          line: 461,
          column: 35
        }
      },
      "171": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 464,
          column: 13
        }
      },
      "172": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 33
        }
      },
      "173": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 35
        }
      },
      "174": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 26
        }
      },
      "175": {
        start: {
          line: 470,
          column: 30
        },
        end: {
          line: 470,
          column: 32
        }
      },
      "176": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "177": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 33
        }
      },
      "178": {
        start: {
          line: 474,
          column: 29
        },
        end: {
          line: 474,
          column: 52
        }
      },
      "179": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 480,
          column: 11
        }
      },
      "180": {
        start: {
          line: 476,
          column: 27
        },
        end: {
          line: 476,
          column: 89
        }
      },
      "181": {
        start: {
          line: 476,
          column: 43
        },
        end: {
          line: 476,
          column: 59
        }
      },
      "182": {
        start: {
          line: 476,
          column: 73
        },
        end: {
          line: 476,
          column: 88
        }
      },
      "183": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 479,
          column: 13
        }
      },
      "184": {
        start: {
          line: 477,
          column: 69
        },
        end: {
          line: 477,
          column: 84
        }
      },
      "185": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 478,
          column: 47
        }
      },
      "186": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 29
        }
      },
      "187": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "188": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 21
        }
      },
      "189": {
        start: {
          line: 487,
          column: 25
        },
        end: {
          line: 488,
          column: 63
        }
      },
      "190": {
        start: {
          line: 487,
          column: 53
        },
        end: {
          line: 487,
          column: 74
        }
      },
      "191": {
        start: {
          line: 488,
          column: 40
        },
        end: {
          line: 488,
          column: 61
        }
      },
      "192": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 43
        }
      },
      "193": {
        start: {
          line: 492,
          column: 34
        },
        end: {
          line: 492,
          column: 36
        }
      },
      "194": {
        start: {
          line: 493,
          column: 27
        },
        end: {
          line: 498,
          column: 30
        }
      },
      "195": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 62
        }
      },
      "196": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 505,
          column: 50
        }
      },
      "197": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 513,
          column: 26
        }
      },
      "198": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 34
        }
      },
      "199": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "200": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 48
        }
      },
      "201": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 40
        }
      },
      "202": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 38
        }
      },
      "203": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 30
        }
      },
      "204": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "205": {
        start: {
          line: 536,
          column: 28
        },
        end: {
          line: 537,
          column: 100
        }
      },
      "206": {
        start: {
          line: 537,
          column: 32
        },
        end: {
          line: 537,
          column: 99
        }
      },
      "207": {
        start: {
          line: 538,
          column: 32
        },
        end: {
          line: 538,
          column: 75
        }
      },
      "208": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 544,
          column: 13
        }
      },
      "209": {
        start: {
          line: 539,
          column: 25
        },
        end: {
          line: 539,
          column: 26
        }
      },
      "210": {
        start: {
          line: 540,
          column: 30
        },
        end: {
          line: 540,
          column: 40
        }
      },
      "211": {
        start: {
          line: 541,
          column: 16
        },
        end: {
          line: 543,
          column: 17
        }
      },
      "212": {
        start: {
          line: 542,
          column: 20
        },
        end: {
          line: 542,
          column: 56
        }
      },
      "213": {
        start: {
          line: 551,
          column: 23
        },
        end: {
          line: 551,
          column: 44
        }
      },
      "214": {
        start: {
          line: 552,
          column: 24
        },
        end: {
          line: 552,
          column: 64
        }
      },
      "215": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 558,
          column: 9
        }
      },
      "216": {
        start: {
          line: 553,
          column: 21
        },
        end: {
          line: 553,
          column: 22
        }
      },
      "217": {
        start: {
          line: 554,
          column: 35
        },
        end: {
          line: 554,
          column: 45
        }
      },
      "218": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 557,
          column: 13
        }
      },
      "219": {
        start: {
          line: 556,
          column: 16
        },
        end: {
          line: 556,
          column: 46
        }
      },
      "220": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 55
        }
      },
      "221": {
        start: {
          line: 570,
          column: 8
        },
        end: {
          line: 570,
          column: 53
        }
      },
      "222": {
        start: {
          line: 573,
          column: 0
        },
        end: {
          line: 573,
          column: 46
        }
      },
      "223": {
        start: {
          line: 575,
          column: 0
        },
        end: {
          line: 575,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 40
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 54
          },
          end: {
            line: 40,
            column: 55
          }
        },
        loc: {
          start: {
            line: 40,
            column: 61
          },
          end: {
            line: 43,
            column: 13
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 58
          }
        },
        loc: {
          start: {
            line: 44,
            column: 64
          },
          end: {
            line: 47,
            column: 13
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 84
          },
          end: {
            line: 49,
            column: 85
          }
        },
        loc: {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 58,
            column: 9
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 94
          },
          end: {
            line: 60,
            column: 95
          }
        },
        loc: {
          start: {
            line: 60,
            column: 101
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 80,
            column: 45
          },
          end: {
            line: 80,
            column: 46
          }
        },
        loc: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 54
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 41
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 101
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 128,
            column: 35
          },
          end: {
            line: 128,
            column: 36
          }
        },
        loc: {
          start: {
            line: 128,
            column: 45
          },
          end: {
            line: 140,
            column: 13
          }
        },
        line: 128
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 52
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 150
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 161,
            column: 30
          },
          end: {
            line: 161,
            column: 31
          }
        },
        loc: {
          start: {
            line: 161,
            column: 39
          },
          end: {
            line: 169,
            column: 9
          }
        },
        line: 161
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 171,
            column: 27
          },
          end: {
            line: 171,
            column: 28
          }
        },
        loc: {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 82
          }
        },
        line: 171
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 55
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 176
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 180,
            column: 47
          },
          end: {
            line: 180,
            column: 48
          }
        },
        loc: {
          start: {
            line: 180,
            column: 52
          },
          end: {
            line: 180,
            column: 78
          }
        },
        line: 180
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 181,
            column: 39
          },
          end: {
            line: 181,
            column: 40
          }
        },
        loc: {
          start: {
            line: 181,
            column: 59
          },
          end: {
            line: 194,
            column: 9
          }
        },
        line: 181
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 187,
            column: 63
          },
          end: {
            line: 187,
            column: 64
          }
        },
        loc: {
          start: {
            line: 187,
            column: 68
          },
          end: {
            line: 187,
            column: 89
          }
        },
        line: 187
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 61
          },
          end: {
            line: 188,
            column: 62
          }
        },
        loc: {
          start: {
            line: 188,
            column: 66
          },
          end: {
            line: 188,
            column: 87
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 196,
            column: 48
          },
          end: {
            line: 196,
            column: 49
          }
        },
        loc: {
          start: {
            line: 196,
            column: 53
          },
          end: {
            line: 196,
            column: 64
          }
        },
        line: 196
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 197,
            column: 40
          },
          end: {
            line: 197,
            column: 41
          }
        },
        loc: {
          start: {
            line: 197,
            column: 65
          },
          end: {
            line: 210,
            column: 9
          }
        },
        line: 197
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 203,
            column: 63
          },
          end: {
            line: 203,
            column: 64
          }
        },
        loc: {
          start: {
            line: 203,
            column: 68
          },
          end: {
            line: 203,
            column: 89
          }
        },
        line: 203
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 204,
            column: 61
          },
          end: {
            line: 204,
            column: 62
          }
        },
        loc: {
          start: {
            line: 204,
            column: 66
          },
          end: {
            line: 204,
            column: 87
          }
        },
        line: 204
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 56
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 216
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 251,
            column: 25
          },
          end: {
            line: 251,
            column: 26
          }
        },
        loc: {
          start: {
            line: 251,
            column: 36
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 251
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 261,
            column: 48
          }
        },
        loc: {
          start: {
            line: 261,
            column: 52
          },
          end: {
            line: 261,
            column: 103
          }
        },
        line: 261
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 276,
            column: 40
          },
          end: {
            line: 276,
            column: 41
          }
        },
        loc: {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 276,
            column: 112
          }
        },
        line: 276
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 60
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 285
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 293,
            column: 42
          },
          end: {
            line: 293,
            column: 43
          }
        },
        loc: {
          start: {
            line: 293,
            column: 47
          },
          end: {
            line: 293,
            column: 68
          }
        },
        line: 293
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 294,
            column: 46
          },
          end: {
            line: 294,
            column: 47
          }
        },
        loc: {
          start: {
            line: 294,
            column: 51
          },
          end: {
            line: 294,
            column: 72
          }
        },
        line: 294
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 299,
            column: 54
          },
          end: {
            line: 299,
            column: 55
          }
        },
        loc: {
          start: {
            line: 299,
            column: 59
          },
          end: {
            line: 299,
            column: 76
          }
        },
        line: 299
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 304,
            column: 55
          },
          end: {
            line: 304,
            column: 56
          }
        },
        loc: {
          start: {
            line: 304,
            column: 60
          },
          end: {
            line: 304,
            column: 71
          }
        },
        line: 304
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 51
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 313
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 316,
            column: 52
          },
          end: {
            line: 316,
            column: 53
          }
        },
        loc: {
          start: {
            line: 316,
            column: 57
          },
          end: {
            line: 316,
            column: 74
          }
        },
        line: 316
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 318,
            column: 65
          },
          end: {
            line: 318,
            column: 66
          }
        },
        loc: {
          start: {
            line: 318,
            column: 70
          },
          end: {
            line: 318,
            column: 81
          }
        },
        line: 318
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 60
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 353
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 32
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 419
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 34
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 425
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 20
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 435
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 444,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        },
        loc: {
          start: {
            line: 444,
            column: 29
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 444
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 447,
            column: 20
          },
          end: {
            line: 447,
            column: 21
          }
        },
        loc: {
          start: {
            line: 447,
            column: 28
          },
          end: {
            line: 447,
            column: 43
          }
        },
        line: 447
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 26
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 450
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 26
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 459
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 460,
            column: 28
          },
          end: {
            line: 460,
            column: 29
          }
        },
        loc: {
          start: {
            line: 460,
            column: 46
          },
          end: {
            line: 467,
            column: 9
          }
        },
        line: 460
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 469,
            column: 5
          }
        },
        loc: {
          start: {
            line: 469,
            column: 33
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 469
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 475,
            column: 42
          },
          end: {
            line: 475,
            column: 43
          }
        },
        loc: {
          start: {
            line: 475,
            column: 49
          },
          end: {
            line: 480,
            column: 9
          }
        },
        line: 475
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 476,
            column: 38
          },
          end: {
            line: 476,
            column: 39
          }
        },
        loc: {
          start: {
            line: 476,
            column: 43
          },
          end: {
            line: 476,
            column: 59
          }
        },
        line: 476
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 476,
            column: 68
          },
          end: {
            line: 476,
            column: 69
          }
        },
        loc: {
          start: {
            line: 476,
            column: 73
          },
          end: {
            line: 476,
            column: 88
          }
        },
        line: 476
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 477,
            column: 64
          },
          end: {
            line: 477,
            column: 65
          }
        },
        loc: {
          start: {
            line: 477,
            column: 69
          },
          end: {
            line: 477,
            column: 84
          }
        },
        line: 477
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 483,
            column: 4
          },
          end: {
            line: 483,
            column: 5
          }
        },
        loc: {
          start: {
            line: 483,
            column: 29
          },
          end: {
            line: 490,
            column: 5
          }
        },
        line: 483
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 487,
            column: 48
          },
          end: {
            line: 487,
            column: 49
          }
        },
        loc: {
          start: {
            line: 487,
            column: 53
          },
          end: {
            line: 487,
            column: 74
          }
        },
        line: 487
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 488,
            column: 35
          },
          end: {
            line: 488,
            column: 36
          }
        },
        loc: {
          start: {
            line: 488,
            column: 40
          },
          end: {
            line: 488,
            column: 61
          }
        },
        line: 488
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 491,
            column: 4
          },
          end: {
            line: 491,
            column: 5
          }
        },
        loc: {
          start: {
            line: 491,
            column: 59
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 491
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 28
          },
          end: {
            line: 506,
            column: 5
          }
        },
        line: 504
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 510,
            column: 4
          },
          end: {
            line: 510,
            column: 5
          }
        },
        loc: {
          start: {
            line: 510,
            column: 23
          },
          end: {
            line: 514,
            column: 5
          }
        },
        line: 510
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 511,
            column: 43
          },
          end: {
            line: 511,
            column: 44
          }
        },
        loc: {
          start: {
            line: 511,
            column: 49
          },
          end: {
            line: 513,
            column: 9
          }
        },
        line: 511
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 518,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        },
        loc: {
          start: {
            line: 518,
            column: 22
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 518
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        },
        loc: {
          start: {
            line: 527,
            column: 21
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 527
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 21
          },
          end: {
            line: 546,
            column: 5
          }
        },
        line: 534
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 537,
            column: 22
          },
          end: {
            line: 537,
            column: 23
          }
        },
        loc: {
          start: {
            line: 537,
            column: 32
          },
          end: {
            line: 537,
            column: 99
          }
        },
        line: 537
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 550,
            column: 5
          }
        },
        loc: {
          start: {
            line: 550,
            column: 56
          },
          end: {
            line: 559,
            column: 5
          }
        },
        line: 550
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 563,
            column: 4
          },
          end: {
            line: 563,
            column: 5
          }
        },
        loc: {
          start: {
            line: 563,
            column: 21
          },
          end: {
            line: 565,
            column: 5
          }
        },
        line: 563
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 569,
            column: 4
          },
          end: {
            line: 569,
            column: 5
          }
        },
        loc: {
          start: {
            line: 569,
            column: 31
          },
          end: {
            line: 571,
            column: 5
          }
        },
        line: 569
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 24
          }
        }, {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 43
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 122,
            column: 68
          },
          end: {
            line: 122,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 68
          },
          end: {
            line: 122,
            column: 94
          }
        }, {
          start: {
            line: 122,
            column: 98
          },
          end: {
            line: 122,
            column: 100
          }
        }],
        line: 122
      },
      "5": {
        loc: {
          start: {
            line: 131,
            column: 27
          },
          end: {
            line: 131,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 27
          },
          end: {
            line: 131,
            column: 50
          }
        }, {
          start: {
            line: 131,
            column: 54
          },
          end: {
            line: 131,
            column: 63
          }
        }],
        line: 131
      },
      "6": {
        loc: {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 50
          }
        }, {
          start: {
            line: 132,
            column: 54
          },
          end: {
            line: 132,
            column: 103
          }
        }],
        line: 132
      },
      "7": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 48
          }
        }, {
          start: {
            line: 133,
            column: 52
          },
          end: {
            line: 133,
            column: 87
          }
        }],
        line: 133
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 36
          }
        }, {
          start: {
            line: 134,
            column: 40
          },
          end: {
            line: 134,
            column: 55
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 46
          }
        }, {
          start: {
            line: 136,
            column: 50
          },
          end: {
            line: 136,
            column: 52
          }
        }],
        line: 136
      },
      "10": {
        loc: {
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 38
          }
        }, {
          start: {
            line: 139,
            column: 42
          },
          end: {
            line: 139,
            column: 47
          }
        }],
        line: 139
      },
      "11": {
        loc: {
          start: {
            line: 180,
            column: 52
          },
          end: {
            line: 180,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 52
          },
          end: {
            line: 180,
            column: 65
          }
        }, {
          start: {
            line: 180,
            column: 69
          },
          end: {
            line: 180,
            column: 78
          }
        }],
        line: 180
      },
      "12": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "13": {
        loc: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 55
          }
        }, {
          start: {
            line: 191,
            column: 59
          },
          end: {
            line: 191,
            column: 91
          }
        }],
        line: 191
      },
      "14": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "15": {
        loc: {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 55
          }
        }, {
          start: {
            line: 207,
            column: 59
          },
          end: {
            line: 207,
            column: 91
          }
        }],
        line: 207
      },
      "16": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 227,
            column: 22
          }
        }, {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 234,
            column: 22
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 241,
            column: 22
          }
        }, {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 248,
            column: 22
          }
        }],
        line: 220
      },
      "17": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "18": {
        loc: {
          start: {
            line: 261,
            column: 52
          },
          end: {
            line: 261,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 52
          },
          end: {
            line: 261,
            column: 77
          }
        }, {
          start: {
            line: 261,
            column: 81
          },
          end: {
            line: 261,
            column: 103
          }
        }],
        line: 261
      },
      "19": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "20": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "21": {
        loc: {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 276,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 98
          },
          end: {
            line: 276,
            column: 105
          }
        }, {
          start: {
            line: 276,
            column: 108
          },
          end: {
            line: 276,
            column: 112
          }
        }],
        line: 276
      },
      "22": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "23": {
        loc: {
          start: {
            line: 292,
            column: 25
          },
          end: {
            line: 294,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 294,
            column: 74
          }
        }, {
          start: {
            line: 294,
            column: 77
          },
          end: {
            line: 294,
            column: 78
          }
        }],
        line: 292
      },
      "24": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "25": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 24
          }
        }, {
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 295,
            column: 73
          }
        }],
        line: 295
      },
      "26": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "27": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "28": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        }],
        line: 321
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: 327,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        }],
        line: 324
      },
      "30": {
        loc: {
          start: {
            line: 327,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "31": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: 335,
            column: 13
          },
          end: {
            line: 340,
            column: 9
          }
        }],
        line: 332
      },
      "32": {
        loc: {
          start: {
            line: 335,
            column: 13
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 13
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: 338,
            column: 13
          },
          end: {
            line: 340,
            column: 9
          }
        }],
        line: 335
      },
      "33": {
        loc: {
          start: {
            line: 338,
            column: 13
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 13
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "34": {
        loc: {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "35": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "36": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 393,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "37": {
        loc: {
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "38": {
        loc: {
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 49
          }
        }, {
          start: {
            line: 426,
            column: 53
          },
          end: {
            line: 426,
            column: 62
          }
        }],
        line: 426
      },
      "39": {
        loc: {
          start: {
            line: 428,
            column: 44
          },
          end: {
            line: 428,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 44
          },
          end: {
            line: 428,
            column: 70
          }
        }, {
          start: {
            line: 428,
            column: 74
          },
          end: {
            line: 428,
            column: 76
          }
        }],
        line: 428
      },
      "40": {
        loc: {
          start: {
            line: 429,
            column: 59
          },
          end: {
            line: 429,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 59
          },
          end: {
            line: 429,
            column: 78
          }
        }, {
          start: {
            line: 429,
            column: 82
          },
          end: {
            line: 429,
            column: 84
          }
        }],
        line: 429
      },
      "41": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 452,
            column: 65
          }
        }, {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 453,
            column: 71
          }
        }, {
          start: {
            line: 454,
            column: 12
          },
          end: {
            line: 454,
            column: 67
          }
        }, {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 455,
            column: 74
          }
        }, {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 456,
            column: 35
          }
        }],
        line: 451
      },
      "42": {
        loc: {
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 464,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 464,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "43": {
        loc: {
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "44": {
        loc: {
          start: {
            line: 474,
            column: 29
          },
          end: {
            line: 474,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 29
          },
          end: {
            line: 474,
            column: 46
          }
        }, {
          start: {
            line: 474,
            column: 50
          },
          end: {
            line: 474,
            column: 52
          }
        }],
        line: 474
      },
      "45": {
        loc: {
          start: {
            line: 477,
            column: 12
          },
          end: {
            line: 479,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 12
          },
          end: {
            line: 479,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 477
      },
      "46": {
        loc: {
          start: {
            line: 477,
            column: 16
          },
          end: {
            line: 477,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 16
          },
          end: {
            line: 477,
            column: 47
          }
        }, {
          start: {
            line: 477,
            column: 51
          },
          end: {
            line: 477,
            column: 85
          }
        }],
        line: 477
      },
      "47": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "48": {
        loc: {
          start: {
            line: 493,
            column: 27
          },
          end: {
            line: 498,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 493,
            column: 27
          },
          end: {
            line: 498,
            column: 25
          }
        }, {
          start: {
            line: 498,
            column: 29
          },
          end: {
            line: 498,
            column: 30
          }
        }],
        line: 493
      },
      "49": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "50": {
        loc: {
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 545,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 545,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "51": {
        loc: {
          start: {
            line: 539,
            column: 28
          },
          end: {
            line: 539,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 539,
            column: 28
          },
          end: {
            line: 539,
            column: 43
          }
        }, {
          start: {
            line: 539,
            column: 47
          },
          end: {
            line: 539,
            column: 65
          }
        }],
        line: 539
      },
      "52": {
        loc: {
          start: {
            line: 541,
            column: 16
          },
          end: {
            line: 543,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 16
          },
          end: {
            line: 543,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "53": {
        loc: {
          start: {
            line: 550,
            column: 27
          },
          end: {
            line: 550,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 550,
            column: 38
          },
          end: {
            line: 550,
            column: 54
          }
        }],
        line: 550
      },
      "54": {
        loc: {
          start: {
            line: 555,
            column: 12
          },
          end: {
            line: 557,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 555,
            column: 12
          },
          end: {
            line: 557,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 555
      },
      "55": {
        loc: {
          start: {
            line: 555,
            column: 16
          },
          end: {
            line: 555,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 555,
            column: 16
          },
          end: {
            line: 555,
            column: 24
          }
        }, {
          start: {
            line: 555,
            column: 28
          },
          end: {
            line: 555,
            column: 73
          }
        }],
        line: 555
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0],
      "54": [0, 0],
      "55": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\monitoring\\root-cause-analyzer.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\monitoring\\root-cause-analyzer.ts"],
      sourcesContent: ["import { AgentError, AgentErrorType, ErrorSeverity } from '../errors/agent-errors';\nimport { LogLevel } from '@prisma/client';\nimport { DatabaseService } from '../database';\nimport { ErrorReport } from '../errors/agent-errors';\nimport { ErrorAnalysis } from './error-tracker';\n\n/**\n * \u6839\u56E0\u5206\u6790\u7ED3\u679C\n */\nexport interface RootCauseAnalysis {\n  id: string;\n  errorId: string;\n  rootCause: string;\n  confidence: number; // 0-1\u4E4B\u95F4\u7684\u7F6E\u4FE1\u5EA6\n  contributingFactors: string[];\n  timeline: TimelineEvent[];\n  impactAssessment: ImpactAssessment;\n  recommendations: Recommendation[];\n  relatedErrors: string[];\n  analysisTimestamp: Date;\n}\n\n/**\n * \u65F6\u95F4\u7EBF\u4E8B\u4EF6\n */\nexport interface TimelineEvent {\n  timestamp: Date;\n  event: string;\n  severity: 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL';\n  source: string;\n  details?: Record<string, any>;\n}\n\n/**\n * \u5F71\u54CD\u8BC4\u4F30\n */\nexport interface ImpactAssessment {\n  affectedUsers: number;\n  affectedSystems: string[];\n  businessImpact: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  technicalImpact: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  estimatedDowntime?: number; // \u5206\u949F\n  financialImpact?: number; // \u4F30\u7B97\u635F\u5931\n}\n\n/**\n * \u5EFA\u8BAE\n */\nexport interface Recommendation {\n  type: 'IMMEDIATE' | 'SHORT_TERM' | 'LONG_TERM';\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  action: string;\n  description: string;\n  estimatedEffort: string;\n  expectedOutcome: string;\n}\n\n/**\n * \u9519\u8BEF\u6A21\u5F0F\n */\nexport interface ErrorPattern {\n  pattern: string;\n  frequency: number;\n  timeRange: { start: Date; end: Date };\n  commonContext: Record<string, any>;\n  severity: ErrorSeverity;\n}\n\n/**\n * \u6839\u56E0\u5206\u6790\u5F15\u64CE\n */\nexport class RootCauseAnalyzer {\n  private analysisCache: Map<string, RootCauseAnalysis> = new Map();\n\n  private cleanupInterval: NodeJS.Timeout | null = null;\n  private readonly maxCacheSize = 1000;\n  private readonly maxCacheAge = 24 * 60 * 60 * 1000; // 24\u5C0F\u65F6\n\n  constructor() {\n    this.startAutoCleanup();\n  }\n\n  /**\n   * \u6267\u884C\u6839\u56E0\u5206\u6790\n   */\n  async analyzeRootCause(errorReport: ErrorReport): Promise<RootCauseAnalysis> {\n    // \u8F93\u5165\u9A8C\u8BC1\n    if (!errorReport || !errorReport.id) {\n      throw new Error('Invalid error report: missing required fields');\n    }\n    \n    if (!errorReport.error) {\n      throw new Error('Invalid error report: missing error details');\n    }\n    \n    const startTime = Date.now();\n    const analysisId = this.generateAnalysisId(errorReport.id);\n    const cacheKey = this.generateCacheKey(errorReport);\n    \n    console.log(`Starting root cause analysis for error ${errorReport.id}`);\n    \n    // \u68C0\u67E5\u7F13\u5B58\uFF08\u4F7F\u7528\u66F4\u667A\u80FD\u7684\u7F13\u5B58\u952E\uFF09\n    const cached = this.analysisCache.get(cacheKey);\n    if (cached) {\n      console.log(`Cache hit for error ${errorReport.id}, analysis time: ${Date.now() - startTime}ms`);\n      return cached;\n    }\n\n    // \u5E76\u884C\u6536\u96C6\u76F8\u5173\u6570\u636E\n    const [relatedErrors, patterns] = await Promise.all([\n      this.findRelatedErrors(errorReport).catch(err => {\n        console.warn('Failed to find related errors:', err);\n        return [];\n      }),\n      this.identifyPatterns(errorReport, []).catch(err => {\n        console.warn('Failed to identify patterns:', err);\n        return [];\n      })\n    ]);\n    \n    const timeline = await this.buildTimeline(errorReport, relatedErrors).catch(err => {\n      console.warn('Failed to build timeline:', err);\n      return [{\n        timestamp: errorReport.timestamp,\n        event: `Primary Error: ${errorReport.error?.message}`,\n        severity: this.mapSeverity(errorReport.error?.severity),\n        source: errorReport.agentType,\n        details: errorReport.context\n      }];\n    });\n    \n    // \u91CD\u65B0\u8BC6\u522B\u6A21\u5F0F\uFF08\u73B0\u5728\u6709\u4E86\u76F8\u5173\u9519\u8BEF\u6570\u636E\uFF09\n    const updatedPatterns = await this.identifyPatterns(errorReport, relatedErrors).catch(err => {\n      console.warn('Failed to update patterns:', err);\n      return patterns;\n    });\n    \n    // \u5206\u6790\u6839\u56E0\n    const rootCause = this.determineRootCause(errorReport, updatedPatterns, timeline);\n    const contributingFactors = this.identifyContributingFactors(errorReport, relatedErrors);\n    \n    // \u8BC4\u4F30\u5F71\u54CD\n    const impactAssessment = await this.assessImpact(errorReport, relatedErrors);\n    \n    // \u751F\u6210\u5EFA\u8BAE\n    const recommendations = this.generateRecommendations(rootCause, errorReport, impactAssessment);\n    \n    const analysis: RootCauseAnalysis = {\n      id: analysisId,\n      errorId: errorReport.id,\n      rootCause: rootCause.cause,\n      confidence: rootCause.confidence,\n      contributingFactors,\n      timeline,\n      impactAssessment,\n      recommendations,\n      relatedErrors: relatedErrors.map(e => e.id),\n      analysisTimestamp: new Date()\n    };\n\n    // \u7F13\u5B58\u7ED3\u679C\uFF08\u4F7F\u7528\u667A\u80FD\u7F13\u5B58\u952E\uFF09\n    this.analysisCache.set(cacheKey, analysis);\n    // \u540C\u65F6\u4F7F\u7528\u5206\u6790ID\u4F5C\u4E3A\u5907\u7528\u952E\n    this.analysisCache.set(analysisId, analysis);\n    \n    const analysisTime = Date.now() - startTime;\n    console.log(`Root cause analysis completed for error ${errorReport.id}:`, {\n      analysisTime: `${analysisTime}ms`,\n      rootCause: analysis.rootCause,\n      confidence: analysis.confidence,\n      relatedErrorsCount: relatedErrors.length,\n      patternsFound: updatedPatterns.length,\n      cacheSize: this.analysisCache.size\n    });\n    \n    return analysis;\n  }\n\n  /**\n   * \u67E5\u627E\u76F8\u5173\u9519\u8BEF\n   */\n  private async findRelatedErrors(errorReport: ErrorReport): Promise<ErrorReport[]> {\n    try {\n      const prisma = DatabaseService.getInstance();\n      const timeWindow = 30 * 60 * 1000; // 30\u5206\u949F\u7A97\u53E3\n      const startTime = new Date(errorReport.timestamp.getTime() - timeWindow);\n      const endTime = new Date(errorReport.timestamp.getTime() + timeWindow);\n\n      // \u67E5\u627E\u65F6\u95F4\u7A97\u53E3\u5185\u7684\u76F8\u5173\u9519\u8BEF\n      const relatedLogs = await prisma.errorLog.findMany({\n        where: {\n          createdAt: {\n            gte: startTime,\n            lte: endTime\n          },\n          OR: [\n            // \u76F8\u540C\u667A\u80FD\u4F53\u7C7B\u578B\n            { metadata: { path: ['agentType'], equals: errorReport.agentType } },\n            // \u76F8\u540C\u7528\u6237\n            { metadata: { path: ['context', 'userId'], equals: errorReport.context?.userId } },\n            // \u76F8\u540C\u4F1A\u8BDD\n            { metadata: { path: ['context', 'sessionId'], equals: errorReport.context?.sessionId } },\n            // \u76F8\u4F3C\u9519\u8BEF\u6D88\u606F\n            { message: { contains: this.extractKeywords(errorReport.error?.message || '')[0] } }\n          ]\n        },\n        orderBy: { createdAt: 'asc' }\n      });\n\n      // \u8F6C\u6362\u4E3AErrorReport\u683C\u5F0F\n      return relatedLogs.map((log: any) => ({\n        id: log.id,\n        timestamp: log.createdAt,\n        agentType: log.metadata?.agentType || 'unknown',\n        errorType: log.metadata?.errorType || AgentErrorType.SERVICE_UNAVAILABLE,\n        severity: log.metadata?.severity || ErrorSeverity.MEDIUM,\n        message: log.message || 'Unknown error',\n        stack: log.metadata?.stack,\n        context: log.metadata?.context || {},\n        userAgent: log.metadata?.userAgent,\n        sessionId: log.metadata?.sessionId,\n        resolved: log.resolved || false\n      }));\n    } catch (error) {\n      console.error('Failed to find related errors:', error);\n      return [];\n    }\n  }\n\n  /**\n   * \u6784\u5EFA\u65F6\u95F4\u7EBF\n   */\n  private async buildTimeline(errorReport: ErrorReport, relatedErrors: ErrorReport[]): Promise<TimelineEvent[]> {\n    const events: TimelineEvent[] = [];\n\n    // \u6DFB\u52A0\u4E3B\u9519\u8BEF\u4E8B\u4EF6\n    events.push({\n      timestamp: errorReport.timestamp,\n      event: `Primary Error: ${errorReport.error?.message}`,\n      severity: this.mapSeverity(errorReport.error?.severity),\n      source: errorReport.agentType,\n      details: errorReport.context\n    });\n\n    // \u6DFB\u52A0\u76F8\u5173\u9519\u8BEF\u4E8B\u4EF6\n    relatedErrors.forEach(error => {\n      events.push({\n        timestamp: error.timestamp,\n        event: `Related Error: ${error.error?.message}`,\n        severity: this.mapSeverity(error.error?.severity),\n        source: error.agentType,\n        details: error.context\n      });\n    });\n\n    // \u6309\u65F6\u95F4\u6392\u5E8F\n    return events.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n  }\n\n  /**\n   * \u8BC6\u522B\u9519\u8BEF\u6A21\u5F0F\n   */\n  private async identifyPatterns(errorReport: ErrorReport, relatedErrors: ErrorReport[]): Promise<ErrorPattern[]> {\n    const allErrors = [errorReport, ...relatedErrors];\n    const patterns: ErrorPattern[] = [];\n\n    // \u6309\u9519\u8BEF\u7C7B\u578B\u5206\u7EC4\n    const byType = this.groupBy(allErrors, e => e.error?.type || 'unknown');\n    Object.entries(byType).forEach(([type, errors]) => {\n      if (errors.length > 1) {\n        patterns.push({\n          pattern: `Error Type: ${type}`,\n          frequency: errors.length,\n          timeRange: {\n            start: new Date(Math.min(...errors.map(e => e.timestamp.getTime()))),\n            end: new Date(Math.max(...errors.map(e => e.timestamp.getTime())))\n          },\n          commonContext: this.extractCommonContext(errors),\n          severity: errors[0].error?.severity || ErrorSeverity.LOW\n        });\n      }\n    });\n\n    // \u6309\u667A\u80FD\u4F53\u7C7B\u578B\u5206\u7EC4\n    const byAgent = this.groupBy(allErrors, e => e.agentType);\n    Object.entries(byAgent).forEach(([agentType, errors]) => {\n      if (errors.length > 1) {\n        patterns.push({\n          pattern: `Agent Type: ${agentType}`,\n          frequency: errors.length,\n          timeRange: {\n            start: new Date(Math.min(...errors.map(e => e.timestamp.getTime()))),\n            end: new Date(Math.max(...errors.map(e => e.timestamp.getTime())))\n          },\n          commonContext: this.extractCommonContext(errors),\n          severity: errors[0].error?.severity || ErrorSeverity.LOW\n        });\n      }\n    });\n\n    return patterns;\n  }\n\n  /**\n   * \u786E\u5B9A\u6839\u56E0\n   */\n  private determineRootCause(\n    errorReport: ErrorReport, \n    patterns: ErrorPattern[], \n    timeline: TimelineEvent[]\n  ): { cause: string; confidence: number } {\n    const causes: Array<{ cause: string; confidence: number; evidence: string[] }> = [];\n\n    // \u57FA\u4E8E\u9519\u8BEF\u7C7B\u578B\u7684\u6839\u56E0\u5206\u6790\n    const errorType = errorReport.error?.type;\n    switch (errorType) {\n      case AgentErrorType.SERVICE_UNAVAILABLE:\n        causes.push({\n          cause: '\u6570\u636E\u5E93\u8FDE\u63A5\u95EE\u9898',\n          confidence: 0.9,\n          evidence: ['\u6570\u636E\u5E93\u8FDE\u63A5\u9519\u8BEF', '\u53EF\u80FD\u7684\u7F51\u7EDC\u95EE\u9898\u6216\u6570\u636E\u5E93\u670D\u52A1\u4E0D\u53EF\u7528']\n        });\n        break;\n      case AgentErrorType.AUTHENTICATION_ERROR:\n        causes.push({\n          cause: '\u8BA4\u8BC1\u914D\u7F6E\u95EE\u9898',\n          confidence: 0.85,\n          evidence: ['\u8BA4\u8BC1\u5931\u8D25', '\u53EF\u80FD\u7684\u4EE4\u724C\u8FC7\u671F\u6216\u6743\u9650\u914D\u7F6E\u9519\u8BEF']\n        });\n        break;\n      case AgentErrorType.AUTHENTICATION_ERROR:\n        causes.push({\n          cause: '\u6570\u636E\u9A8C\u8BC1\u5931\u8D25',\n          confidence: 0.8,\n          evidence: ['\u8F93\u5165\u6570\u636E\u4E0D\u7B26\u5408\u9884\u671F\u683C\u5F0F', '\u53EF\u80FD\u7684\u524D\u7AEF\u9A8C\u8BC1\u7F3A\u5931']\n        });\n        break;\n      case AgentErrorType.CAD_ANALYSIS_TIMEOUT:\n        causes.push({\n          cause: '\u7CFB\u7EDF\u54CD\u5E94\u8D85\u65F6',\n          confidence: 0.75,\n          evidence: ['\u64CD\u4F5C\u8D85\u65F6', '\u53EF\u80FD\u7684\u6027\u80FD\u95EE\u9898\u6216\u8D44\u6E90\u4E0D\u8DB3']\n        });\n        break;\n    }\n\n    // \u57FA\u4E8E\u6A21\u5F0F\u7684\u6839\u56E0\u5206\u6790\n    patterns.forEach(pattern => {\n      if (pattern.frequency > 5) {\n        causes.push({\n          cause: `\u7CFB\u7EDF\u6027\u95EE\u9898: ${pattern.pattern}`,\n          confidence: Math.min(0.9, pattern.frequency / 10),\n          evidence: [`\u9AD8\u9891\u6A21\u5F0F: ${pattern.pattern}`, `\u9891\u7387: ${pattern.frequency}`]\n        });\n      }\n    });\n\n    // \u57FA\u4E8E\u65F6\u95F4\u7EBF\u7684\u6839\u56E0\u5206\u6790\n    const criticalEvents = timeline.filter(e => e.severity === 'CRITICAL' || e.severity === 'ERROR');\n    if (criticalEvents.length > 1) {\n      causes.push({\n        cause: '\u7EA7\u8054\u6545\u969C',\n        confidence: 0.7,\n        evidence: [`\u68C0\u6D4B\u5230${criticalEvents.length}\u4E2A\u5173\u952E\u4E8B\u4EF6`, '\u53EF\u80FD\u5B58\u5728\u7CFB\u7EDF\u4F9D\u8D56\u95EE\u9898']\n      });\n    }\n\n    // \u9009\u62E9\u6700\u53EF\u80FD\u7684\u6839\u56E0\n    if (causes.length === 0) {\n      return {\n        cause: '\u672A\u77E5\u539F\u56E0\uFF0C\u9700\u8981\u8FDB\u4E00\u6B65\u8C03\u67E5',\n        confidence: 0.1\n      };\n    }\n\n    const bestCause = causes.reduce((best, current) => \n      current.confidence > best.confidence ? current : best\n    );\n\n    return {\n      cause: bestCause.cause,\n      confidence: bestCause.confidence\n    };\n  }\n\n  /**\n   * \u8BC6\u522B\u8D21\u732E\u56E0\u7D20\n   */\n  private identifyContributingFactors(errorReport: ErrorReport, relatedErrors: ErrorReport[]): string[] {\n    const factors: string[] = [];\n\n    // \u68C0\u67E5\u7CFB\u7EDF\u8D1F\u8F7D\n    if (relatedErrors.length > 10) {\n      factors.push('\u9AD8\u7CFB\u7EDF\u8D1F\u8F7D');\n    }\n\n    // \u68C0\u67E5\u9519\u8BEF\u9891\u7387\n    const timeSpan = relatedErrors.length > 0 ? \n      Math.max(...relatedErrors.map(e => e.timestamp.getTime())) - \n      Math.min(...relatedErrors.map(e => e.timestamp.getTime())) : 0;\n    \n    if (timeSpan > 0 && relatedErrors.length / (timeSpan / 60000) > 1) {\n      factors.push('\u9519\u8BEF\u9891\u7387\u5F02\u5E38');\n    }\n\n    // \u68C0\u67E5\u7528\u6237\u4F1A\u8BDD\n    const uniqueUsers = new Set(relatedErrors.map(e => e.context?.userId).filter(Boolean));\n    if (uniqueUsers.size > 5) {\n      factors.push('\u591A\u7528\u6237\u53D7\u5F71\u54CD');\n    }\n\n    // \u68C0\u67E5\u667A\u80FD\u4F53\u7C7B\u578B\n    const uniqueAgents = new Set(relatedErrors.map(e => e.agentType));\n    if (uniqueAgents.size > 3) {\n      factors.push('\u591A\u4E2A\u667A\u80FD\u4F53\u7C7B\u578B\u53D7\u5F71\u54CD');\n    }\n\n    return factors;\n  }\n\n  /**\n   * \u8BC4\u4F30\u5F71\u54CD\n   */\n  private async assessImpact(errorReport: ErrorReport, relatedErrors: ErrorReport[]): Promise<ImpactAssessment> {\n    const allErrors = [errorReport, ...relatedErrors];\n    \n    // \u7EDF\u8BA1\u53D7\u5F71\u54CD\u7528\u6237\n    const affectedUsers = new Set(allErrors.map(e => e.context?.userId).filter(Boolean)).size;\n    \n    // \u7EDF\u8BA1\u53D7\u5F71\u54CD\u7CFB\u7EDF\n    const affectedSystems = Array.from(new Set(allErrors.map(e => e.agentType)));\n    \n    // \u8BC4\u4F30\u4E1A\u52A1\u5F71\u54CD\n    let businessImpact: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' = 'LOW';\n    if (affectedUsers > 100) {businessImpact = 'CRITICAL';}\n    else if (affectedUsers > 50) {businessImpact = 'HIGH';}\n    else if (affectedUsers > 10) {businessImpact = 'MEDIUM';}\n    \n    // \u8BC4\u4F30\u6280\u672F\u5F71\u54CD\n    let technicalImpact: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' = 'LOW';\n    if (affectedSystems.length > 5) {technicalImpact = 'CRITICAL';}\n    else if (affectedSystems.length > 3) {technicalImpact = 'HIGH';}\n    else if (affectedSystems.length > 1) {technicalImpact = 'MEDIUM';}\n    \n    return {\n      affectedUsers,\n      affectedSystems,\n      businessImpact,\n      technicalImpact,\n      estimatedDowntime: this.estimateDowntime(allErrors),\n      financialImpact: this.estimateFinancialImpact(affectedUsers, businessImpact)\n    };\n  }\n\n  /**\n   * \u751F\u6210\u5EFA\u8BAE\n   */\n  private generateRecommendations(\n    rootCause: { cause: string; confidence: number },\n    errorReport: ErrorReport,\n    impact: ImpactAssessment\n  ): Recommendation[] {\n    const recommendations: Recommendation[] = [];\n\n    // \u57FA\u4E8E\u6839\u56E0\u7684\u5EFA\u8BAE\n    if (rootCause.cause.includes('\u6570\u636E\u5E93')) {\n      recommendations.push({\n        type: 'IMMEDIATE',\n        priority: 'HIGH',\n        action: '\u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5',\n        description: '\u7ACB\u5373\u68C0\u67E5\u6570\u636E\u5E93\u670D\u52A1\u72B6\u6001\u548C\u8FDE\u63A5\u914D\u7F6E',\n        estimatedEffort: '15\u5206\u949F',\n        expectedOutcome: '\u6062\u590D\u6570\u636E\u5E93\u8FDE\u63A5'\n      });\n      \n      recommendations.push({\n        type: 'SHORT_TERM',\n        priority: 'MEDIUM',\n        action: '\u4F18\u5316\u6570\u636E\u5E93\u6027\u80FD',\n        description: '\u5206\u6790\u6162\u67E5\u8BE2\u5E76\u4F18\u5316\u6570\u636E\u5E93\u7D22\u5F15',\n        estimatedEffort: '2-4\u5C0F\u65F6',\n        expectedOutcome: '\u63D0\u5347\u6570\u636E\u5E93\u54CD\u5E94\u901F\u5EA6'\n      });\n    }\n\n    if (rootCause.cause.includes('\u8BA4\u8BC1')) {\n      recommendations.push({\n        type: 'IMMEDIATE',\n        priority: 'HIGH',\n        action: '\u9A8C\u8BC1\u8BA4\u8BC1\u914D\u7F6E',\n        description: '\u68C0\u67E5JWT\u5BC6\u94A5\u3001\u4EE4\u724C\u8FC7\u671F\u65F6\u95F4\u7B49\u8BA4\u8BC1\u914D\u7F6E',\n        estimatedEffort: '30\u5206\u949F',\n        expectedOutcome: '\u4FEE\u590D\u8BA4\u8BC1\u95EE\u9898'\n      });\n    }\n\n    if (rootCause.cause.includes('\u8D85\u65F6')) {\n      recommendations.push({\n        type: 'IMMEDIATE',\n        priority: 'MEDIUM',\n        action: '\u8C03\u6574\u8D85\u65F6\u914D\u7F6E',\n        description: '\u589E\u52A0\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4\u6216\u4F18\u5316\u5904\u7406\u903B\u8F91',\n        estimatedEffort: '1\u5C0F\u65F6',\n        expectedOutcome: '\u51CF\u5C11\u8D85\u65F6\u9519\u8BEF'\n      });\n    }\n\n    // \u57FA\u4E8E\u5F71\u54CD\u7684\u5EFA\u8BAE\n    if (impact.businessImpact === 'CRITICAL') {\n      recommendations.push({\n        type: 'IMMEDIATE',\n        priority: 'CRITICAL',\n        action: '\u542F\u52A8\u5E94\u6025\u54CD\u5E94',\n        description: '\u7ACB\u5373\u542F\u52A8\u5E94\u6025\u54CD\u5E94\u6D41\u7A0B\uFF0C\u901A\u77E5\u76F8\u5173\u56E2\u961F',\n        estimatedEffort: '\u7ACB\u5373',\n        expectedOutcome: '\u5FEB\u901F\u54CD\u5E94\u548C\u6062\u590D'\n      });\n    }\n\n    // \u957F\u671F\u5EFA\u8BAE\n    recommendations.push({\n      type: 'LONG_TERM',\n      priority: 'MEDIUM',\n      action: '\u6539\u8FDB\u76D1\u63A7\u548C\u544A\u8B66',\n      description: '\u589E\u5F3A\u9519\u8BEF\u76D1\u63A7\u548C\u9884\u8B66\u673A\u5236',\n      estimatedEffort: '1-2\u5468',\n      expectedOutcome: '\u63D0\u524D\u53D1\u73B0\u548C\u9884\u9632\u7C7B\u4F3C\u95EE\u9898'\n    });\n\n    return recommendations;\n  }\n\n  /**\n   * \u8F85\u52A9\u65B9\u6CD5\n   */\n  private generateAnalysisId(errorId: string): string {\n    return `analysis_${errorId}_${Date.now()}`;\n  }\n\n  /**\n   * \u751F\u6210\u57FA\u4E8E\u9519\u8BEF\u7279\u5F81\u7684\u7F13\u5B58\u952E\n   */\n  private generateCacheKey(errorReport: ErrorReport): string {\n    const errorType = errorReport.error?.type || 'unknown';\n    const agentType = errorReport.agentType;\n    const messageHash = this.hashString(errorReport.error?.message || '');\n    const contextHash = this.hashString(JSON.stringify(errorReport.context || {}));\n    \n    return `cache_${errorType}_${agentType}_${messageHash}_${contextHash}`;\n  }\n\n  /**\n   * \u7B80\u5355\u5B57\u7B26\u4E32\u54C8\u5E0C\u51FD\u6570\n   */\n  private hashString(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // \u8F6C\u6362\u4E3A32\u4F4D\u6574\u6570\n    }\n    return Math.abs(hash).toString(36);\n  }\n\n  private extractKeywords(message: string): string[] {\n    return message.toLowerCase()\n      .split(/\\s+/)\n      .filter(word => word.length > 3)\n      .slice(0, 5);\n  }\n\n  private mapSeverity(severity?: ErrorSeverity): 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL' {\n    switch (severity) {\n      case ErrorSeverity.LOW: return 'INFO';\n      case ErrorSeverity.MEDIUM: return 'WARNING';\n      case ErrorSeverity.HIGH: return 'ERROR';\n      case ErrorSeverity.CRITICAL: return 'CRITICAL';\n      default: return 'INFO';\n    }\n  }\n\n  private groupBy<T>(array: T[], keyFn: (item: T) => string): Record<string, T[]> {\n    return array.reduce((groups, item) => {\n      const key = keyFn(item);\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(item);\n      return groups;\n    }, {} as Record<string, T[]>);\n  }\n\n  private extractCommonContext(errors: ErrorReport[]): Record<string, any> {\n    const commonContext: Record<string, any> = {};\n    \n    if (errors.length === 0) {return commonContext;}\n    \n    const firstContext = errors[0].context || {};\n    Object.keys(firstContext).forEach(key => {\n      const values = errors.map(e => e.context?.[key]).filter(v => v !== undefined);\n      if (values.length === errors.length && values.every(v => v === values[0])) {\n        commonContext[key] = values[0];\n      }\n    });\n    \n    return commonContext;\n  }\n\n  private estimateDowntime(errors: ErrorReport[]): number {\n    if (errors.length === 0) {return 0;}\n    \n    const timeSpan = Math.max(...errors.map(e => e.timestamp.getTime())) - \n                    Math.min(...errors.map(e => e.timestamp.getTime()));\n    \n    return Math.ceil(timeSpan / 60000); // \u8F6C\u6362\u4E3A\u5206\u949F\n  }\n\n  private estimateFinancialImpact(affectedUsers: number, businessImpact: string): number {\n    const baseImpactPerUser = 10; // \u5047\u8BBE\u6BCF\u7528\u6237\u6BCF\u5C0F\u65F6\u635F\u593110\u5143\n    const multiplier = {\n      'LOW': 0.5,\n      'MEDIUM': 1,\n      'HIGH': 2,\n      'CRITICAL': 5\n    }[businessImpact] || 1;\n    \n    return affectedUsers * baseImpactPerUser * multiplier;\n  }\n\n  /**\n   * \u83B7\u53D6\u5206\u6790\u7ED3\u679C\n   */\n  getAnalysis(analysisId: string): RootCauseAnalysis | undefined {\n    return this.analysisCache.get(analysisId);\n  }\n\n  /**\n   * \u542F\u52A8\u81EA\u52A8\u6E05\u7406\n   */\n  private startAutoCleanup(): void {\n    this.cleanupInterval = setInterval(() => {\n      this.performCleanup();\n    }, 5 * 60 * 1000); // \u6BCF5\u5206\u949F\u6E05\u7406\u4E00\u6B21\n  }\n\n  /**\n   * \u505C\u6B62\u81EA\u52A8\u6E05\u7406\n   */\n  stopAutoCleanup(): void {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval);\n      this.cleanupInterval = null;\n    }\n  }\n\n  /**\n   * \u6267\u884C\u6E05\u7406\u64CD\u4F5C\n   */\n  private performCleanup(): void {\n    this.cleanupExpiredAnalyses();\n    this.limitCacheSize();\n  }\n\n  /**\n   * \u9650\u5236\u7F13\u5B58\u5927\u5C0F\n   */\n  private limitCacheSize(): void {\n    if (this.analysisCache.size > this.maxCacheSize) {\n      const entries = Array.from(this.analysisCache.entries())\n        .sort((a, b) => a[1].analysisTimestamp.getTime() - b[1].analysisTimestamp.getTime());\n      \n      const removeCount = this.analysisCache.size - this.maxCacheSize;\n      for (let i = 0; i < removeCount && i < entries.length; i++) {\n        const entry = entries[i];\n        if (entry) {\n          this.analysisCache.delete(entry[0]);\n        }\n      }\n    }\n  }\n\n  /**\n   * \u6E05\u7406\u8FC7\u671F\u7684\u5206\u6790\u7ED3\u679C\n   */\n  cleanupExpiredAnalyses(maxAgeMs: number = this.maxCacheAge): void {\n    const cutoff = Date.now() - maxAgeMs;\n    \n    const entries = Array.from(this.analysisCache.entries());\n    for (let i = 0; i < entries.length; i++) {\n      const [id, analysis] = entries[i];\n      if (analysis && analysis.analysisTimestamp.getTime() < cutoff) {\n        this.analysisCache.delete(id);\n      }\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u5206\u6790\u7ED3\u679C\n   */\n  getAllAnalyses(): RootCauseAnalysis[] {\n    return Array.from(this.analysisCache.values());\n  }\n\n  /**\n   * \u5220\u9664\u5206\u6790\u7ED3\u679C\n   */\n  deleteAnalysis(analysisId: string): boolean {\n    return this.analysisCache.delete(analysisId);\n  }\n}\n\n// \u521B\u5EFA\u5E76\u5BFC\u51FA\u6839\u56E0\u5206\u6790\u5668\u5B9E\u4F8B\nexport const rootCauseAnalyzer = new RootCauseAnalyzer();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d245098f78f85484861f0d9121af422ee0765ca8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2dqk12ps1n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dqk12ps1n();
cov_2dqk12ps1n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2dqk12ps1n().s[1]++;
exports.rootCauseAnalyzer = exports.RootCauseAnalyzer = void 0;
const agent_errors_1 =
/* istanbul ignore next */
(cov_2dqk12ps1n().s[2]++, require("../errors/agent-errors"));
const database_1 =
/* istanbul ignore next */
(cov_2dqk12ps1n().s[3]++, require("../database"));
/**
 * 根因分析引擎
 */
class RootCauseAnalyzer {
  constructor() {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[0]++;
    cov_2dqk12ps1n().s[4]++;
    this.analysisCache = new Map();
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[5]++;
    this.cleanupInterval = null;
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[6]++;
    this.maxCacheSize = 1000;
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[7]++;
    this.maxCacheAge = 24 * 60 * 60 * 1000; // 24小时
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[8]++;
    this.startAutoCleanup();
  }
  /**
   * 执行根因分析
   */
  async analyzeRootCause(errorReport) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[1]++;
    cov_2dqk12ps1n().s[9]++;
    // 输入验证
    if (
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[1][0]++, !errorReport) ||
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[1][1]++, !errorReport.id)) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[0][0]++;
      cov_2dqk12ps1n().s[10]++;
      throw new Error('Invalid error report: missing required fields');
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[0][1]++;
    }
    cov_2dqk12ps1n().s[11]++;
    if (!errorReport.error) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[2][0]++;
      cov_2dqk12ps1n().s[12]++;
      throw new Error('Invalid error report: missing error details');
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[2][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[13]++, Date.now());
    const analysisId =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[14]++, this.generateAnalysisId(errorReport.id));
    const cacheKey =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[15]++, this.generateCacheKey(errorReport));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[16]++;
    console.log(`Starting root cause analysis for error ${errorReport.id}`);
    // 检查缓存（使用更智能的缓存键）
    const cached =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[17]++, this.analysisCache.get(cacheKey));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[18]++;
    if (cached) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[3][0]++;
      cov_2dqk12ps1n().s[19]++;
      console.log(`Cache hit for error ${errorReport.id}, analysis time: ${Date.now() - startTime}ms`);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[20]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[3][1]++;
    }
    // 并行收集相关数据
    const [relatedErrors, patterns] =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[21]++, await Promise.all([this.findRelatedErrors(errorReport).catch(err => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[2]++;
      cov_2dqk12ps1n().s[22]++;
      console.warn('Failed to find related errors:', err);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[23]++;
      return [];
    }), this.identifyPatterns(errorReport, []).catch(err => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[3]++;
      cov_2dqk12ps1n().s[24]++;
      console.warn('Failed to identify patterns:', err);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[25]++;
      return [];
    })]));
    const timeline =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[26]++, await this.buildTimeline(errorReport, relatedErrors).catch(err => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[4]++;
      cov_2dqk12ps1n().s[27]++;
      console.warn('Failed to build timeline:', err);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[28]++;
      return [{
        timestamp: errorReport.timestamp,
        event: `Primary Error: ${errorReport.error?.message}`,
        severity: this.mapSeverity(errorReport.error?.severity),
        source: errorReport.agentType,
        details: errorReport.context
      }];
    }));
    // 重新识别模式（现在有了相关错误数据）
    const updatedPatterns =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[29]++, await this.identifyPatterns(errorReport, relatedErrors).catch(err => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[5]++;
      cov_2dqk12ps1n().s[30]++;
      console.warn('Failed to update patterns:', err);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[31]++;
      return patterns;
    }));
    // 分析根因
    const rootCause =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[32]++, this.determineRootCause(errorReport, updatedPatterns, timeline));
    const contributingFactors =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[33]++, this.identifyContributingFactors(errorReport, relatedErrors));
    // 评估影响
    const impactAssessment =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[34]++, await this.assessImpact(errorReport, relatedErrors));
    // 生成建议
    const recommendations =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[35]++, this.generateRecommendations(rootCause, errorReport, impactAssessment));
    const analysis =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[36]++, {
      id: analysisId,
      errorId: errorReport.id,
      rootCause: rootCause.cause,
      confidence: rootCause.confidence,
      contributingFactors,
      timeline,
      impactAssessment,
      recommendations,
      relatedErrors: relatedErrors.map(e => {
        /* istanbul ignore next */
        cov_2dqk12ps1n().f[6]++;
        cov_2dqk12ps1n().s[37]++;
        return e.id;
      }),
      analysisTimestamp: new Date()
    });
    // 缓存结果（使用智能缓存键）
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[38]++;
    this.analysisCache.set(cacheKey, analysis);
    // 同时使用分析ID作为备用键
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[39]++;
    this.analysisCache.set(analysisId, analysis);
    const analysisTime =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[40]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[41]++;
    console.log(`Root cause analysis completed for error ${errorReport.id}:`, {
      analysisTime: `${analysisTime}ms`,
      rootCause: analysis.rootCause,
      confidence: analysis.confidence,
      relatedErrorsCount: relatedErrors.length,
      patternsFound: updatedPatterns.length,
      cacheSize: this.analysisCache.size
    });
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[42]++;
    return analysis;
  }
  /**
   * 查找相关错误
   */
  async findRelatedErrors(errorReport) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[7]++;
    cov_2dqk12ps1n().s[43]++;
    try {
      const prisma =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[44]++, database_1.DatabaseService.getInstance());
      const timeWindow =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[45]++, 30 * 60 * 1000); // 30分钟窗口
      const startTime =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[46]++, new Date(errorReport.timestamp.getTime() - timeWindow));
      const endTime =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[47]++, new Date(errorReport.timestamp.getTime() + timeWindow));
      // 查找时间窗口内的相关错误
      const relatedLogs =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[48]++, await prisma.errorLog.findMany({
        where: {
          createdAt: {
            gte: startTime,
            lte: endTime
          },
          OR: [
          // 相同智能体类型
          {
            metadata: {
              path: ['agentType'],
              equals: errorReport.agentType
            }
          },
          // 相同用户
          {
            metadata: {
              path: ['context', 'userId'],
              equals: errorReport.context?.userId
            }
          },
          // 相同会话
          {
            metadata: {
              path: ['context', 'sessionId'],
              equals: errorReport.context?.sessionId
            }
          },
          // 相似错误消息
          {
            message: {
              contains: this.extractKeywords(
              /* istanbul ignore next */
              (cov_2dqk12ps1n().b[4][0]++, errorReport.error?.message) ||
              /* istanbul ignore next */
              (cov_2dqk12ps1n().b[4][1]++, ''))[0]
            }
          }]
        },
        orderBy: {
          createdAt: 'asc'
        }
      }));
      // 转换为ErrorReport格式
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[49]++;
      return relatedLogs.map(log => {
        /* istanbul ignore next */
        cov_2dqk12ps1n().f[8]++;
        cov_2dqk12ps1n().s[50]++;
        return {
          id: log.id,
          timestamp: log.createdAt,
          agentType:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[5][0]++, log.metadata?.agentType) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[5][1]++, 'unknown'),
          errorType:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[6][0]++, log.metadata?.errorType) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[6][1]++, agent_errors_1.AgentErrorType.SERVICE_UNAVAILABLE),
          severity:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[7][0]++, log.metadata?.severity) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[7][1]++, agent_errors_1.ErrorSeverity.MEDIUM),
          message:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[8][0]++, log.message) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[8][1]++, 'Unknown error'),
          stack: log.metadata?.stack,
          context:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[9][0]++, log.metadata?.context) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[9][1]++, {}),
          userAgent: log.metadata?.userAgent,
          sessionId: log.metadata?.sessionId,
          resolved:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[10][0]++, log.resolved) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[10][1]++, false)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[51]++;
      console.error('Failed to find related errors:', error);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[52]++;
      return [];
    }
  }
  /**
   * 构建时间线
   */
  async buildTimeline(errorReport, relatedErrors) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[9]++;
    const events =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[53]++, []);
    // 添加主错误事件
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[54]++;
    events.push({
      timestamp: errorReport.timestamp,
      event: `Primary Error: ${errorReport.error?.message}`,
      severity: this.mapSeverity(errorReport.error?.severity),
      source: errorReport.agentType,
      details: errorReport.context
    });
    // 添加相关错误事件
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[55]++;
    relatedErrors.forEach(error => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[10]++;
      cov_2dqk12ps1n().s[56]++;
      events.push({
        timestamp: error.timestamp,
        event: `Related Error: ${error.error?.message}`,
        severity: this.mapSeverity(error.error?.severity),
        source: error.agentType,
        details: error.context
      });
    });
    // 按时间排序
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[57]++;
    return events.sort((a, b) => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[11]++;
      cov_2dqk12ps1n().s[58]++;
      return a.timestamp.getTime() - b.timestamp.getTime();
    });
  }
  /**
   * 识别错误模式
   */
  async identifyPatterns(errorReport, relatedErrors) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[12]++;
    const allErrors =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[59]++, [errorReport, ...relatedErrors]);
    const patterns =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[60]++, []);
    // 按错误类型分组
    const byType =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[61]++, this.groupBy(allErrors, e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[13]++;
      cov_2dqk12ps1n().s[62]++;
      return /* istanbul ignore next */(cov_2dqk12ps1n().b[11][0]++, e.error?.type) ||
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[11][1]++, 'unknown');
    }));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[63]++;
    Object.entries(byType).forEach(([type, errors]) => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[14]++;
      cov_2dqk12ps1n().s[64]++;
      if (errors.length > 1) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[12][0]++;
        cov_2dqk12ps1n().s[65]++;
        patterns.push({
          pattern: `Error Type: ${type}`,
          frequency: errors.length,
          timeRange: {
            start: new Date(Math.min(...errors.map(e => {
              /* istanbul ignore next */
              cov_2dqk12ps1n().f[15]++;
              cov_2dqk12ps1n().s[66]++;
              return e.timestamp.getTime();
            }))),
            end: new Date(Math.max(...errors.map(e => {
              /* istanbul ignore next */
              cov_2dqk12ps1n().f[16]++;
              cov_2dqk12ps1n().s[67]++;
              return e.timestamp.getTime();
            })))
          },
          commonContext: this.extractCommonContext(errors),
          severity:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[13][0]++, errors[0].error?.severity) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[13][1]++, agent_errors_1.ErrorSeverity.LOW)
        });
      } else
      /* istanbul ignore next */
      {
        cov_2dqk12ps1n().b[12][1]++;
      }
    });
    // 按智能体类型分组
    const byAgent =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[68]++, this.groupBy(allErrors, e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[17]++;
      cov_2dqk12ps1n().s[69]++;
      return e.agentType;
    }));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[70]++;
    Object.entries(byAgent).forEach(([agentType, errors]) => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[18]++;
      cov_2dqk12ps1n().s[71]++;
      if (errors.length > 1) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[14][0]++;
        cov_2dqk12ps1n().s[72]++;
        patterns.push({
          pattern: `Agent Type: ${agentType}`,
          frequency: errors.length,
          timeRange: {
            start: new Date(Math.min(...errors.map(e => {
              /* istanbul ignore next */
              cov_2dqk12ps1n().f[19]++;
              cov_2dqk12ps1n().s[73]++;
              return e.timestamp.getTime();
            }))),
            end: new Date(Math.max(...errors.map(e => {
              /* istanbul ignore next */
              cov_2dqk12ps1n().f[20]++;
              cov_2dqk12ps1n().s[74]++;
              return e.timestamp.getTime();
            })))
          },
          commonContext: this.extractCommonContext(errors),
          severity:
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[15][0]++, errors[0].error?.severity) ||
          /* istanbul ignore next */
          (cov_2dqk12ps1n().b[15][1]++, agent_errors_1.ErrorSeverity.LOW)
        });
      } else
      /* istanbul ignore next */
      {
        cov_2dqk12ps1n().b[14][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[75]++;
    return patterns;
  }
  /**
   * 确定根因
   */
  determineRootCause(errorReport, patterns, timeline) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[21]++;
    const causes =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[76]++, []);
    // 基于错误类型的根因分析
    const errorType =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[77]++, errorReport.error?.type);
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[78]++;
    switch (errorType) {
      case agent_errors_1.AgentErrorType.SERVICE_UNAVAILABLE:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[16][0]++;
        cov_2dqk12ps1n().s[79]++;
        causes.push({
          cause: '数据库连接问题',
          confidence: 0.9,
          evidence: ['数据库连接错误', '可能的网络问题或数据库服务不可用']
        });
        /* istanbul ignore next */
        cov_2dqk12ps1n().s[80]++;
        break;
      case agent_errors_1.AgentErrorType.AUTHENTICATION_ERROR:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[16][1]++;
        cov_2dqk12ps1n().s[81]++;
        causes.push({
          cause: '认证配置问题',
          confidence: 0.85,
          evidence: ['认证失败', '可能的令牌过期或权限配置错误']
        });
        /* istanbul ignore next */
        cov_2dqk12ps1n().s[82]++;
        break;
      case agent_errors_1.AgentErrorType.AUTHENTICATION_ERROR:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[16][2]++;
        cov_2dqk12ps1n().s[83]++;
        causes.push({
          cause: '数据验证失败',
          confidence: 0.8,
          evidence: ['输入数据不符合预期格式', '可能的前端验证缺失']
        });
        /* istanbul ignore next */
        cov_2dqk12ps1n().s[84]++;
        break;
      case agent_errors_1.AgentErrorType.CAD_ANALYSIS_TIMEOUT:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[16][3]++;
        cov_2dqk12ps1n().s[85]++;
        causes.push({
          cause: '系统响应超时',
          confidence: 0.75,
          evidence: ['操作超时', '可能的性能问题或资源不足']
        });
        /* istanbul ignore next */
        cov_2dqk12ps1n().s[86]++;
        break;
    }
    // 基于模式的根因分析
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[87]++;
    patterns.forEach(pattern => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[22]++;
      cov_2dqk12ps1n().s[88]++;
      if (pattern.frequency > 5) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[17][0]++;
        cov_2dqk12ps1n().s[89]++;
        causes.push({
          cause: `系统性问题: ${pattern.pattern}`,
          confidence: Math.min(0.9, pattern.frequency / 10),
          evidence: [`高频模式: ${pattern.pattern}`, `频率: ${pattern.frequency}`]
        });
      } else
      /* istanbul ignore next */
      {
        cov_2dqk12ps1n().b[17][1]++;
      }
    });
    // 基于时间线的根因分析
    const criticalEvents =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[90]++, timeline.filter(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[23]++;
      cov_2dqk12ps1n().s[91]++;
      return /* istanbul ignore next */(cov_2dqk12ps1n().b[18][0]++, e.severity === 'CRITICAL') ||
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[18][1]++, e.severity === 'ERROR');
    }));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[92]++;
    if (criticalEvents.length > 1) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[19][0]++;
      cov_2dqk12ps1n().s[93]++;
      causes.push({
        cause: '级联故障',
        confidence: 0.7,
        evidence: [`检测到${criticalEvents.length}个关键事件`, '可能存在系统依赖问题']
      });
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[19][1]++;
    }
    // 选择最可能的根因
    cov_2dqk12ps1n().s[94]++;
    if (causes.length === 0) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[20][0]++;
      cov_2dqk12ps1n().s[95]++;
      return {
        cause: '未知原因，需要进一步调查',
        confidence: 0.1
      };
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[20][1]++;
    }
    const bestCause =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[96]++, causes.reduce((best, current) => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[24]++;
      cov_2dqk12ps1n().s[97]++;
      return current.confidence > best.confidence ?
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[21][0]++, current) :
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[21][1]++, best);
    }));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[98]++;
    return {
      cause: bestCause.cause,
      confidence: bestCause.confidence
    };
  }
  /**
   * 识别贡献因素
   */
  identifyContributingFactors(errorReport, relatedErrors) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[25]++;
    const factors =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[99]++, []);
    // 检查系统负载
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[100]++;
    if (relatedErrors.length > 10) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[22][0]++;
      cov_2dqk12ps1n().s[101]++;
      factors.push('高系统负载');
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[22][1]++;
    }
    // 检查错误频率
    const timeSpan =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[102]++, relatedErrors.length > 0 ?
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[23][0]++, Math.max(...relatedErrors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[26]++;
      cov_2dqk12ps1n().s[103]++;
      return e.timestamp.getTime();
    })) - Math.min(...relatedErrors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[27]++;
      cov_2dqk12ps1n().s[104]++;
      return e.timestamp.getTime();
    }))) :
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[23][1]++, 0));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[25][0]++, timeSpan > 0) &&
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[25][1]++, relatedErrors.length / (timeSpan / 60000) > 1)) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[24][0]++;
      cov_2dqk12ps1n().s[106]++;
      factors.push('错误频率异常');
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[24][1]++;
    }
    // 检查用户会话
    const uniqueUsers =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[107]++, new Set(relatedErrors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[28]++;
      cov_2dqk12ps1n().s[108]++;
      return e.context?.userId;
    }).filter(Boolean)));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[109]++;
    if (uniqueUsers.size > 5) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[26][0]++;
      cov_2dqk12ps1n().s[110]++;
      factors.push('多用户受影响');
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[26][1]++;
    }
    // 检查智能体类型
    const uniqueAgents =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[111]++, new Set(relatedErrors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[29]++;
      cov_2dqk12ps1n().s[112]++;
      return e.agentType;
    })));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[113]++;
    if (uniqueAgents.size > 3) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[27][0]++;
      cov_2dqk12ps1n().s[114]++;
      factors.push('多个智能体类型受影响');
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[27][1]++;
    }
    cov_2dqk12ps1n().s[115]++;
    return factors;
  }
  /**
   * 评估影响
   */
  async assessImpact(errorReport, relatedErrors) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[30]++;
    const allErrors =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[116]++, [errorReport, ...relatedErrors]);
    // 统计受影响用户
    const affectedUsers =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[117]++, new Set(allErrors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[31]++;
      cov_2dqk12ps1n().s[118]++;
      return e.context?.userId;
    }).filter(Boolean)).size);
    // 统计受影响系统
    const affectedSystems =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[119]++, Array.from(new Set(allErrors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[32]++;
      cov_2dqk12ps1n().s[120]++;
      return e.agentType;
    }))));
    // 评估业务影响
    let businessImpact =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[121]++, 'LOW');
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[122]++;
    if (affectedUsers > 100) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[28][0]++;
      cov_2dqk12ps1n().s[123]++;
      businessImpact = 'CRITICAL';
    } else {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[28][1]++;
      cov_2dqk12ps1n().s[124]++;
      if (affectedUsers > 50) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[29][0]++;
        cov_2dqk12ps1n().s[125]++;
        businessImpact = 'HIGH';
      } else {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[29][1]++;
        cov_2dqk12ps1n().s[126]++;
        if (affectedUsers > 10) {
          /* istanbul ignore next */
          cov_2dqk12ps1n().b[30][0]++;
          cov_2dqk12ps1n().s[127]++;
          businessImpact = 'MEDIUM';
        } else
        /* istanbul ignore next */
        {
          cov_2dqk12ps1n().b[30][1]++;
        }
      }
    }
    // 评估技术影响
    let technicalImpact =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[128]++, 'LOW');
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[129]++;
    if (affectedSystems.length > 5) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[31][0]++;
      cov_2dqk12ps1n().s[130]++;
      technicalImpact = 'CRITICAL';
    } else {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[31][1]++;
      cov_2dqk12ps1n().s[131]++;
      if (affectedSystems.length > 3) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[32][0]++;
        cov_2dqk12ps1n().s[132]++;
        technicalImpact = 'HIGH';
      } else {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[32][1]++;
        cov_2dqk12ps1n().s[133]++;
        if (affectedSystems.length > 1) {
          /* istanbul ignore next */
          cov_2dqk12ps1n().b[33][0]++;
          cov_2dqk12ps1n().s[134]++;
          technicalImpact = 'MEDIUM';
        } else
        /* istanbul ignore next */
        {
          cov_2dqk12ps1n().b[33][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[135]++;
    return {
      affectedUsers,
      affectedSystems,
      businessImpact,
      technicalImpact,
      estimatedDowntime: this.estimateDowntime(allErrors),
      financialImpact: this.estimateFinancialImpact(affectedUsers, businessImpact)
    };
  }
  /**
   * 生成建议
   */
  generateRecommendations(rootCause, errorReport, impact) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[33]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[136]++, []);
    // 基于根因的建议
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[137]++;
    if (rootCause.cause.includes('数据库')) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[34][0]++;
      cov_2dqk12ps1n().s[138]++;
      recommendations.push({
        type: 'IMMEDIATE',
        priority: 'HIGH',
        action: '检查数据库连接',
        description: '立即检查数据库服务状态和连接配置',
        estimatedEffort: '15分钟',
        expectedOutcome: '恢复数据库连接'
      });
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[139]++;
      recommendations.push({
        type: 'SHORT_TERM',
        priority: 'MEDIUM',
        action: '优化数据库性能',
        description: '分析慢查询并优化数据库索引',
        estimatedEffort: '2-4小时',
        expectedOutcome: '提升数据库响应速度'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[34][1]++;
    }
    cov_2dqk12ps1n().s[140]++;
    if (rootCause.cause.includes('认证')) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[35][0]++;
      cov_2dqk12ps1n().s[141]++;
      recommendations.push({
        type: 'IMMEDIATE',
        priority: 'HIGH',
        action: '验证认证配置',
        description: '检查JWT密钥、令牌过期时间等认证配置',
        estimatedEffort: '30分钟',
        expectedOutcome: '修复认证问题'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[35][1]++;
    }
    cov_2dqk12ps1n().s[142]++;
    if (rootCause.cause.includes('超时')) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[36][0]++;
      cov_2dqk12ps1n().s[143]++;
      recommendations.push({
        type: 'IMMEDIATE',
        priority: 'MEDIUM',
        action: '调整超时配置',
        description: '增加请求超时时间或优化处理逻辑',
        estimatedEffort: '1小时',
        expectedOutcome: '减少超时错误'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[36][1]++;
    }
    // 基于影响的建议
    cov_2dqk12ps1n().s[144]++;
    if (impact.businessImpact === 'CRITICAL') {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[37][0]++;
      cov_2dqk12ps1n().s[145]++;
      recommendations.push({
        type: 'IMMEDIATE',
        priority: 'CRITICAL',
        action: '启动应急响应',
        description: '立即启动应急响应流程，通知相关团队',
        estimatedEffort: '立即',
        expectedOutcome: '快速响应和恢复'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[37][1]++;
    }
    // 长期建议
    cov_2dqk12ps1n().s[146]++;
    recommendations.push({
      type: 'LONG_TERM',
      priority: 'MEDIUM',
      action: '改进监控和告警',
      description: '增强错误监控和预警机制',
      estimatedEffort: '1-2周',
      expectedOutcome: '提前发现和预防类似问题'
    });
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[147]++;
    return recommendations;
  }
  /**
   * 辅助方法
   */
  generateAnalysisId(errorId) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[34]++;
    cov_2dqk12ps1n().s[148]++;
    return `analysis_${errorId}_${Date.now()}`;
  }
  /**
   * 生成基于错误特征的缓存键
   */
  generateCacheKey(errorReport) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[35]++;
    const errorType =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[149]++,
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[38][0]++, errorReport.error?.type) ||
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[38][1]++, 'unknown'));
    const agentType =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[150]++, errorReport.agentType);
    const messageHash =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[151]++, this.hashString(
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[39][0]++, errorReport.error?.message) ||
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[39][1]++, '')));
    const contextHash =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[152]++, this.hashString(JSON.stringify(
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[40][0]++, errorReport.context) ||
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[40][1]++, {}))));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[153]++;
    return `cache_${errorType}_${agentType}_${messageHash}_${contextHash}`;
  }
  /**
   * 简单字符串哈希函数
   */
  hashString(str) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[36]++;
    let hash =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[154]++, 0);
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[155]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[156]++, 0); i < str.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[157]++, str.charCodeAt(i));
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[158]++;
      hash = (hash << 5) - hash + char;
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[159]++;
      hash = hash & hash; // 转换为32位整数
    }
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[160]++;
    return Math.abs(hash).toString(36);
  }
  extractKeywords(message) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[37]++;
    cov_2dqk12ps1n().s[161]++;
    return message.toLowerCase().split(/\s+/).filter(word => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[38]++;
      cov_2dqk12ps1n().s[162]++;
      return word.length > 3;
    }).slice(0, 5);
  }
  mapSeverity(severity) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[39]++;
    cov_2dqk12ps1n().s[163]++;
    switch (severity) {
      case agent_errors_1.ErrorSeverity.LOW:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[41][0]++;
        cov_2dqk12ps1n().s[164]++;
        return 'INFO';
      case agent_errors_1.ErrorSeverity.MEDIUM:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[41][1]++;
        cov_2dqk12ps1n().s[165]++;
        return 'WARNING';
      case agent_errors_1.ErrorSeverity.HIGH:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[41][2]++;
        cov_2dqk12ps1n().s[166]++;
        return 'ERROR';
      case agent_errors_1.ErrorSeverity.CRITICAL:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[41][3]++;
        cov_2dqk12ps1n().s[167]++;
        return 'CRITICAL';
      default:
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[41][4]++;
        cov_2dqk12ps1n().s[168]++;
        return 'INFO';
    }
  }
  groupBy(array, keyFn) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[40]++;
    cov_2dqk12ps1n().s[169]++;
    return array.reduce((groups, item) => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[41]++;
      const key =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[170]++, keyFn(item));
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[171]++;
      if (!groups[key]) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[42][0]++;
        cov_2dqk12ps1n().s[172]++;
        groups[key] = [];
      } else
      /* istanbul ignore next */
      {
        cov_2dqk12ps1n().b[42][1]++;
      }
      cov_2dqk12ps1n().s[173]++;
      groups[key].push(item);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[174]++;
      return groups;
    }, {});
  }
  extractCommonContext(errors) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[42]++;
    const commonContext =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[175]++, {});
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[176]++;
    if (errors.length === 0) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[43][0]++;
      cov_2dqk12ps1n().s[177]++;
      return commonContext;
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[43][1]++;
    }
    const firstContext =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[178]++,
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[44][0]++, errors[0].context) ||
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[44][1]++, {}));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[179]++;
    Object.keys(firstContext).forEach(key => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[43]++;
      const values =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[180]++, errors.map(e => {
        /* istanbul ignore next */
        cov_2dqk12ps1n().f[44]++;
        cov_2dqk12ps1n().s[181]++;
        return e.context?.[key];
      }).filter(v => {
        /* istanbul ignore next */
        cov_2dqk12ps1n().f[45]++;
        cov_2dqk12ps1n().s[182]++;
        return v !== undefined;
      }));
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[183]++;
      if (
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[46][0]++, values.length === errors.length) &&
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[46][1]++, values.every(v => {
        /* istanbul ignore next */
        cov_2dqk12ps1n().f[46]++;
        cov_2dqk12ps1n().s[184]++;
        return v === values[0];
      }))) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[45][0]++;
        cov_2dqk12ps1n().s[185]++;
        commonContext[key] = values[0];
      } else
      /* istanbul ignore next */
      {
        cov_2dqk12ps1n().b[45][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[186]++;
    return commonContext;
  }
  estimateDowntime(errors) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[47]++;
    cov_2dqk12ps1n().s[187]++;
    if (errors.length === 0) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[47][0]++;
      cov_2dqk12ps1n().s[188]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[47][1]++;
    }
    const timeSpan =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[189]++, Math.max(...errors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[48]++;
      cov_2dqk12ps1n().s[190]++;
      return e.timestamp.getTime();
    })) - Math.min(...errors.map(e => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[49]++;
      cov_2dqk12ps1n().s[191]++;
      return e.timestamp.getTime();
    })));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[192]++;
    return Math.ceil(timeSpan / 60000); // 转换为分钟
  }
  estimateFinancialImpact(affectedUsers, businessImpact) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[50]++;
    const baseImpactPerUser =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[193]++, 10); // 假设每用户每小时损失10元
    const multiplier =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[194]++,
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[48][0]++, {
      'LOW': 0.5,
      'MEDIUM': 1,
      'HIGH': 2,
      'CRITICAL': 5
    }[businessImpact]) ||
    /* istanbul ignore next */
    (cov_2dqk12ps1n().b[48][1]++, 1));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[195]++;
    return affectedUsers * baseImpactPerUser * multiplier;
  }
  /**
   * 获取分析结果
   */
  getAnalysis(analysisId) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[51]++;
    cov_2dqk12ps1n().s[196]++;
    return this.analysisCache.get(analysisId);
  }
  /**
   * 启动自动清理
   */
  startAutoCleanup() {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[52]++;
    cov_2dqk12ps1n().s[197]++;
    this.cleanupInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2dqk12ps1n().f[53]++;
      cov_2dqk12ps1n().s[198]++;
      this.performCleanup();
    }, 5 * 60 * 1000); // 每5分钟清理一次
  }
  /**
   * 停止自动清理
   */
  stopAutoCleanup() {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[54]++;
    cov_2dqk12ps1n().s[199]++;
    if (this.cleanupInterval) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[49][0]++;
      cov_2dqk12ps1n().s[200]++;
      clearInterval(this.cleanupInterval);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[201]++;
      this.cleanupInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[49][1]++;
    }
  }
  /**
   * 执行清理操作
   */
  performCleanup() {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[55]++;
    cov_2dqk12ps1n().s[202]++;
    this.cleanupExpiredAnalyses();
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[203]++;
    this.limitCacheSize();
  }
  /**
   * 限制缓存大小
   */
  limitCacheSize() {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[56]++;
    cov_2dqk12ps1n().s[204]++;
    if (this.analysisCache.size > this.maxCacheSize) {
      /* istanbul ignore next */
      cov_2dqk12ps1n().b[50][0]++;
      const entries =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[205]++, Array.from(this.analysisCache.entries()).sort((a, b) => {
        /* istanbul ignore next */
        cov_2dqk12ps1n().f[57]++;
        cov_2dqk12ps1n().s[206]++;
        return a[1].analysisTimestamp.getTime() - b[1].analysisTimestamp.getTime();
      }));
      const removeCount =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[207]++, this.analysisCache.size - this.maxCacheSize);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[208]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[209]++, 0);
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[51][0]++, i < removeCount) &&
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[51][1]++, i < entries.length); i++) {
        const entry =
        /* istanbul ignore next */
        (cov_2dqk12ps1n().s[210]++, entries[i]);
        /* istanbul ignore next */
        cov_2dqk12ps1n().s[211]++;
        if (entry) {
          /* istanbul ignore next */
          cov_2dqk12ps1n().b[52][0]++;
          cov_2dqk12ps1n().s[212]++;
          this.analysisCache.delete(entry[0]);
        } else
        /* istanbul ignore next */
        {
          cov_2dqk12ps1n().b[52][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2dqk12ps1n().b[50][1]++;
    }
  }
  /**
   * 清理过期的分析结果
   */
  cleanupExpiredAnalyses(maxAgeMs =
  /* istanbul ignore next */
  (cov_2dqk12ps1n().b[53][0]++, this.maxCacheAge)) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[58]++;
    const cutoff =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[213]++, Date.now() - maxAgeMs);
    const entries =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[214]++, Array.from(this.analysisCache.entries()));
    /* istanbul ignore next */
    cov_2dqk12ps1n().s[215]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2dqk12ps1n().s[216]++, 0); i < entries.length; i++) {
      const [id, analysis] =
      /* istanbul ignore next */
      (cov_2dqk12ps1n().s[217]++, entries[i]);
      /* istanbul ignore next */
      cov_2dqk12ps1n().s[218]++;
      if (
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[55][0]++, analysis) &&
      /* istanbul ignore next */
      (cov_2dqk12ps1n().b[55][1]++, analysis.analysisTimestamp.getTime() < cutoff)) {
        /* istanbul ignore next */
        cov_2dqk12ps1n().b[54][0]++;
        cov_2dqk12ps1n().s[219]++;
        this.analysisCache.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_2dqk12ps1n().b[54][1]++;
      }
    }
  }
  /**
   * 获取所有分析结果
   */
  getAllAnalyses() {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[59]++;
    cov_2dqk12ps1n().s[220]++;
    return Array.from(this.analysisCache.values());
  }
  /**
   * 删除分析结果
   */
  deleteAnalysis(analysisId) {
    /* istanbul ignore next */
    cov_2dqk12ps1n().f[60]++;
    cov_2dqk12ps1n().s[221]++;
    return this.analysisCache.delete(analysisId);
  }
}
/* istanbul ignore next */
cov_2dqk12ps1n().s[222]++;
exports.RootCauseAnalyzer = RootCauseAnalyzer;
// 创建并导出根因分析器实例
/* istanbul ignore next */
cov_2dqk12ps1n().s[223]++;
exports.rootCauseAnalyzer = new RootCauseAnalyzer();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,