{"version":3,"names":["cov_2bmi2ama9m","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","generateAccessToken","generateRefreshToken","generateTokenPair","verifyAccessToken","verifyRefreshToken","extractBearerToken","isTokenExpiringSoon","jsonwebtoken_1","__importDefault","require","JWT_CONFIG","accessTokenSecret","process","env","JWT_ACCESS_SECRET","refreshTokenSecret","JWT_REFRESH_SECRET","accessTokenExpiry","refreshTokenExpiry","issuer","audience","payload","default","sign","expiresIn","userId","email","user","id","role","accessToken","refreshToken","token","decoded","verify","Error","permissions","error","console","authHeader","startsWith","substring","decode","exp","expirationTime","currentTime","Date","now","fiveMinutes"],"sources":["E:\\zk-agent\\lib\\auth\\jwt.ts"],"sourcesContent":["// @ts-nocheck\n/**\n * JWT Token管理\n * 包含token生成、验证、刷新等功能\n */\n\nimport jwt from \"jsonwebtoken\"\nimport type { User } from \"@prisma/client\"\n\n// JWT配置\nconst JWT_CONFIG = {\n  accessTokenSecret: process.env.JWT_ACCESS_SECRET || \"ai-chat-access-secret-key\",\n  refreshTokenSecret: process.env.JWT_REFRESH_SECRET || \"ai-chat-refresh-secret-key\",\n  accessTokenExpiry: \"15m\", // 访问令牌15分钟过期\n  refreshTokenExpiry: \"7d\", // 刷新令牌7天过期\n  issuer: \"ai-chat-platform\",\n  audience: \"ai-chat-users\",\n}\n\n// Token载荷接口\nexport interface TokenPayload {\n  userId: string\n  email: string\n  role: \"user\" | \"admin\"\n  permissions?: string[]\n}\n\n// Token对接口\nexport interface TokenPair {\n  accessToken: string\n  refreshToken: string\n  expiresIn: number\n}\n\n/**\n * 生成访问令牌\n */\nexport function generateAccessToken(payload: TokenPayload): string {\n  return jwt.sign(\n    {\n      ...payload,\n      type: \"access\",\n    },\n    JWT_CONFIG.accessTokenSecret,\n    {\n      expiresIn: JWT_CONFIG.accessTokenExpiry,\n      issuer: JWT_CONFIG.issuer,\n      audience: JWT_CONFIG.audience,\n    },\n  )\n}\n\n/**\n * 生成刷新令牌\n */\nexport function generateRefreshToken(payload: TokenPayload): string {\n  return jwt.sign(\n    {\n      userId: payload.userId,\n      email: payload.email,\n      type: \"refresh\",\n    },\n    JWT_CONFIG.refreshTokenSecret,\n    {\n      expiresIn: JWT_CONFIG.refreshTokenExpiry,\n      issuer: JWT_CONFIG.issuer,\n      audience: JWT_CONFIG.audience,\n    },\n  )\n}\n\n/**\n * 生成令牌对\n */\nexport function generateTokenPair(user: Pick<User, \"id\" | \"email\"> & { role?: string }): TokenPair {\n  const payload: TokenPayload = {\n    userId: user.id,\n    email: user.email,\n    role: (user.role as \"user\" | \"admin\") || \"user\",\n  }\n\n  const accessToken = generateAccessToken(payload)\n  const refreshToken = generateRefreshToken(payload)\n\n  // 计算过期时间（15分钟）\n  const expiresIn = 15 * 60 * 1000\n\n  return {\n    accessToken,\n    refreshToken,\n    expiresIn,\n  }\n}\n\n/**\n * 验证访问令牌\n */\nexport function verifyAccessToken(token: string): TokenPayload | null {\n  try {\n    const decoded = jwt.verify(token, JWT_CONFIG.accessTokenSecret, {\n      issuer: JWT_CONFIG.issuer,\n      audience: JWT_CONFIG.audience,\n    }) as any\n\n    if (decoded.type !== \"access\") {\n      throw new Error(\"Invalid token type\")\n    }\n\n    return {\n      userId: decoded.userId,\n      email: decoded.email,\n      role: decoded.role,\n      permissions: decoded.permissions,\n    }\n  } catch (error) {\n    console.error(\"访问令牌验证失败:\", error)\n    return null\n  }\n}\n\n/**\n * 验证刷新令牌\n */\nexport function verifyRefreshToken(token: string): Pick<TokenPayload, \"userId\" | \"email\"> | null {\n  try {\n    const decoded = jwt.verify(token, JWT_CONFIG.refreshTokenSecret, {\n      issuer: JWT_CONFIG.issuer,\n      audience: JWT_CONFIG.audience,\n    }) as any\n\n    if (decoded.type !== \"refresh\") {\n      throw new Error(\"Invalid token type\")\n    }\n\n    return {\n      userId: decoded.userId,\n      email: decoded.email,\n    }\n  } catch (error) {\n    console.error(\"刷新令牌验证失败:\", error)\n    return null\n  }\n}\n\n/**\n * 从请求头中提取Bearer token\n */\nexport function extractBearerToken(authHeader: string | null): string | null {\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    return null\n  }\n  return authHeader.substring(7)\n}\n\n/**\n * 检查令牌是否即将过期（5分钟内）\n */\nexport function isTokenExpiringSoon(token: string): boolean {\n  try {\n    const decoded = jwt.decode(token) as any\n    if (!decoded || !decoded.exp) {\n      return true\n    }\n\n    const expirationTime = decoded.exp * 1000\n    const currentTime = Date.now()\n    const fiveMinutes = 5 * 60 * 1000\n\n    return expirationTime - currentTime < fiveMinutes\n  } catch (error) {\n    return true\n  }\n}\n"],"mappings":";;AAAA;AACA;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,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","ignoreList":[]}