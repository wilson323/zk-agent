5c3e138e9af8f0f1a4c740fb16f87f50
"use strict";

/* istanbul ignore next */
function cov_lfrx3ax7o() {
  var path = "E:\\zk-agent\\lib\\ag-ui\\adapter.ts";
  var hash = "060605d04b4a15a4676b24986be8d3a1c572e66e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\ag-ui\\adapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 60
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 30
        }
      },
      "4": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 49
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 80
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "10": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 58
        }
      },
      "11": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "13": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "14": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "15": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 53,
          column: 47
        }
      },
      "16": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 54,
          column: 45
        }
      },
      "17": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "18": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "19": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "20": {
        start: {
          line: 58,
          column: 44
        },
        end: {
          line: 58,
          column: 63
        }
      },
      "21": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 81,
          column: 21
        }
      },
      "22": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "23": {
        start: {
          line: 62,
          column: 42
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "24": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 40
        }
      },
      "25": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 49
        }
      },
      "26": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 71,
          column: 27
        }
      },
      "27": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 78,
          column: 27
        }
      },
      "28": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 44
        }
      },
      "29": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "30": {
        start: {
          line: 83,
          column: 34
        },
        end: {
          line: 83,
          column: 73
        }
      },
      "31": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "32": {
        start: {
          line: 86,
          column: 35
        },
        end: {
          line: 86,
          column: 55
        }
      },
      "33": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 112,
          column: 21
        }
      },
      "34": {
        start: {
          line: 88,
          column: 37
        },
        end: {
          line: 88,
          column: 66
        }
      },
      "35": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 64
        }
      },
      "36": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 110,
          column: 25
        }
      },
      "37": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 109,
          column: 29
        }
      },
      "38": {
        start: {
          line: 92,
          column: 45
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "39": {
        start: {
          line: 94,
          column: 32
        },
        end: {
          line: 101,
          column: 33
        }
      },
      "40": {
        start: {
          line: 95,
          column: 36
        },
        end: {
          line: 100,
          column: 39
        }
      },
      "41": {
        start: {
          line: 103,
          column: 32
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "42": {
        start: {
          line: 106,
          column: 32
        },
        end: {
          line: 108,
          column: 33
        }
      },
      "43": {
        start: {
          line: 107,
          column: 36
        },
        end: {
          line: 107,
          column: 84
        }
      },
      "44": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 111,
          column: 56
        }
      },
      "45": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 35
        }
      },
      "46": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "47": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 73
        }
      },
      "48": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 42
        }
      },
      "49": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 27
        }
      },
      "50": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 131,
          column: 14
        }
      },
      "51": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "52": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 129,
          column: 21
        }
      },
      "53": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 71
        }
      },
      "54": {
        start: {
          line: 138,
          column: 26
        },
        end: {
          line: 138,
          column: 58
        }
      },
      "55": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "56": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "57": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "58": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "59": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "60": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "61": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "62": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 44
        }
      },
      "63": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "64": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 49
        }
      },
      "65": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 38
        }
      },
      "66": {
        start: {
          line: 188,
          column: 0
        },
        end: {
          line: 188,
          column: 34
        }
      },
      "67": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 42
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 38
          }
        },
        loc: {
          start: {
            line: 51,
            column: 51
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 34
          }
        },
        loc: {
          start: {
            line: 56,
            column: 45
          },
          end: {
            line: 122,
            column: 13
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 20
          }
        },
        loc: {
          start: {
            line: 125,
            column: 25
          },
          end: {
            line: 131,
            column: 13
          }
        },
        line: 125
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 126,
            column: 38
          },
          end: {
            line: 126,
            column: 39
          }
        },
        loc: {
          start: {
            line: 126,
            column: 47
          },
          end: {
            line: 130,
            column: 17
          }
        },
        line: 126
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 40
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 137
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 21
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 181
      },
      "9": {
        name: "migrateToStandardRuntime",
        decl: {
          start: {
            line: 189,
            column: 9
          },
          end: {
            line: 189,
            column: 33
          }
        },
        loc: {
          start: {
            line: 189,
            column: 43
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 28
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 53
          }
        }, {
          start: {
            line: 20,
            column: 57
          },
          end: {
            line: 20,
            column: 79
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 65,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 65,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 110,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 110,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 101,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 101,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 108,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 108,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 119,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 119,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "8": {
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 129,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 129,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "9": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\ag-ui\\adapter.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\ag-ui\\adapter.ts"],
      sourcesContent: ["import { Observable, Subject, from } from \"rxjs\"\nimport type {\n  BaseEvent,\n  TextMessageStartEvent,\n  TextMessageContentEvent,\n  TextMessageEndEvent,\n  RunStartedEvent,\n  RunFinishedEvent,\n} from \"./types\"\nimport { AgUIRuntime } from \"./protocol/runtime\"\n\n// CAD \u5206\u6790\u54CD\u5E94\u63A5\u53E3\ninterface CADAnalysisResponse {\n  status: 'success' | 'error' | 'processing';\n  data?: {\n    fileName?: string;\n    fileSize?: number;\n    analysisResult?: Record<string, unknown>;\n    dimensions?: {\n      width?: number;\n      height?: number;\n      depth?: number;\n    };\n    materials?: string[];\n    complexity?: 'low' | 'medium' | 'high';\n    warnings?: string[];\n  };\n  error?: {\n    code: string;\n    message: string;\n    details?: Record<string, unknown>;\n  };\n  timestamp: number;\n  processingTime?: number;\n}\n\n/**\n * @deprecated \u8BF7\u4F7F\u7528 AgUIRuntime \u66FF\u4EE3\n * \u8FD9\u4E2A\u9002\u914D\u5668\u5C06\u5728\u4E0B\u4E2A\u7248\u672C\u4E2D\u79FB\u9664\n */\n/**\n * AG-UI\u9002\u914D\u5668 - \u5C06\u73B0\u6709\u7CFB\u7EDF\u7684\u6D88\u606F\u6D41\u8F6C\u6362\u4E3AAG-UI\u4E8B\u4EF6\u6D41\n * \u8BE5\u9002\u914D\u5668\u786E\u4FDD\u73B0\u6709\u7CFB\u7EDF\u529F\u80FD\u4E0D\u53D8\u7684\u60C5\u51B5\u4E0B\u652F\u6301AG-UI\u534F\u8BAE\n */\nexport class AgUIAdapter {\n  private eventSubject = new Subject<BaseEvent>()\n  private messageIdCounter = 0\n\n  constructor(\n    private options: {\n      debug?: boolean\n      threadId?: string\n    } = {},\n  ) {\n    this.options.threadId = this.options.threadId || `thread-${Date.now()}`\n  }\n\n  /**\n   * \u83B7\u53D6\u4E8B\u4EF6\u6D41Observable\n   */\n  public getEventStream(): Observable<BaseEvent> {\n    return this.eventSubject.asObservable()\n  }\n\n  /**\n   * \u5904\u7406\u6765\u81EAFastGPT\u7684\u6D41\u5F0F\u54CD\u5E94\n   * \u5C06\u5176\u8F6C\u6362\u4E3AAG-UI\u4E8B\u4EF6\u6D41\uFF0C\u4F46\u4E0D\u6539\u53D8\u539F\u6709\u5904\u7406\u903B\u8F91\n   */\n  public handleFastGPTStreamResponse(response: ReadableStream<Uint8Array>): Observable<unknown> {\n    // \u751F\u6210\u552F\u4E00\u6D88\u606FID\n    const messageId = `msg-${++this.messageIdCounter}`\n    const runId = `run-${Date.now()}`\n\n    // \u53D1\u9001\u8FD0\u884C\u5F00\u59CB\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"RUN_STARTED\",\n      threadId: this.options.threadId,\n      runId,\n      timestamp: Date.now(),\n    } as RunStartedEvent)\n\n    // \u53D1\u9001\u6D88\u606F\u5F00\u59CB\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"TEXT_MESSAGE_START\",\n      messageId,\n      role: \"assistant\",\n      timestamp: Date.now(),\n    } as TextMessageStartEvent)\n\n    // \u521B\u5EFA\u4E00\u4E2A\u65B0\u7684Observable\u6765\u5904\u7406\u6D41\u5F0F\u54CD\u5E94\n    return new Observable<unknown>((observer) => {\n      // \u4FDD\u6301\u539F\u6709\u7684\u5904\u7406\u903B\u8F91\n      const reader = response.getReader()\n      const decoder = new TextDecoder()\n      let buffer = \"\"\n\n      const processChunk = async () => {\n        try {\n          const { done, value } = await reader.read()\n\n          if (done) {\n            // \u5904\u7406\u7F13\u51B2\u533A\u4E2D\u5269\u4F59\u7684\u6570\u636E\n            if (buffer) {\n              const chunk = buffer\n              buffer = \"\"\n              observer.next(chunk)\n            }\n\n            // \u53D1\u9001\u6D88\u606F\u7ED3\u675F\u4E8B\u4EF6\n            this.emitEvent({\n              type: \"TEXT_MESSAGE_END\",\n              messageId,\n              timestamp: Date.now(),\n            } as TextMessageEndEvent)\n\n            // \u53D1\u9001\u8FD0\u884C\u7ED3\u675F\u4E8B\u4EF6\n            this.emitEvent({\n              type: \"RUN_FINISHED\",\n              threadId: this.options.threadId,\n              runId,\n              timestamp: Date.now(),\n            } as RunFinishedEvent)\n\n            observer.complete()\n            return\n          }\n\n          // \u89E3\u7801\u4E8C\u8FDB\u5236\u6570\u636E\n          const chunk = decoder.decode(value, { stream: true })\n          buffer += chunk\n\n          // \u5904\u7406\u5B8C\u6574\u7684JSON\u5BF9\u8C61\n          let boundary = buffer.indexOf(\"\\n\")\n          while (boundary !== -1) {\n            const part = buffer.substring(0, boundary)\n            buffer = buffer.substring(boundary + 1)\n\n            if (part.trim()) {\n              try {\n                const data = JSON.parse(part)\n\n                // \u53D1\u9001\u6D88\u606F\u5185\u5BB9\u4E8B\u4EF6\n                if (data.text) {\n                  this.emitEvent({\n                    type: \"TEXT_MESSAGE_CONTENT\",\n                    messageId,\n                    delta: data.text,\n                    timestamp: Date.now(),\n                  } as TextMessageContentEvent)\n                }\n\n                // \u5C06\u539F\u59CB\u6570\u636E\u4F20\u9012\u7ED9\u89C2\u5BDF\u8005\n                observer.next(data)\n              } catch (e) {\n                if (this.options.debug) {\n                  console.error(\"Failed to parse JSON:\", part, e)\n                }\n              }\n            }\n\n            boundary = buffer.indexOf(\"\\n\")\n          }\n\n          // \u7EE7\u7EED\u5904\u7406\u4E0B\u4E00\u4E2A\u5757\n          processChunk()\n        } catch (error) {\n          if (this.options.debug) {\n            console.error(\"Error processing stream:\", error)\n          }\n          observer.error(error)\n        }\n      }\n\n      processChunk()\n\n      // \u8FD4\u56DE\u6E05\u7406\u51FD\u6570\n      return () => {\n        reader.cancel().catch((err) => {\n          if (this.options.debug) {\n            console.error(\"Error cancelling reader:\", err)\n          }\n        })\n      }\n    })\n  }\n\n  /**\n   * \u5904\u7406CAD\u89E3\u8BFB\u667A\u80FD\u4F53\u7684\u54CD\u5E94\n   */\n  public handleCADAnalysisResponse(response: CADAnalysisResponse): Observable<CADAnalysisResponse> {\n    const messageId = `msg-${++this.messageIdCounter}`\n    const runId = `run-${Date.now()}`\n\n    // \u53D1\u9001\u8FD0\u884C\u5F00\u59CB\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"RUN_STARTED\",\n      threadId: this.options.threadId,\n      runId,\n      timestamp: Date.now(),\n    } as RunStartedEvent)\n\n    // \u5C06CAD\u5206\u6790\u7ED3\u679C\u8F6C\u6362\u4E3AAG-UI\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"TEXT_MESSAGE_START\",\n      messageId,\n      role: \"assistant\",\n      timestamp: Date.now(),\n    } as TextMessageStartEvent)\n\n    // \u5C06\u5206\u6790\u7ED3\u679C\u4F5C\u4E3A\u6D88\u606F\u5185\u5BB9\u53D1\u9001\n    const resultText = JSON.stringify(response)\n    this.emitEvent({\n      type: \"TEXT_MESSAGE_CONTENT\",\n      messageId,\n      delta: resultText,\n      timestamp: Date.now(),\n    } as TextMessageContentEvent)\n\n    // \u53D1\u9001\u6D88\u606F\u7ED3\u675F\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"TEXT_MESSAGE_END\",\n      messageId,\n      timestamp: Date.now(),\n    } as TextMessageEndEvent)\n\n    // \u53D1\u9001\u8FD0\u884C\u7ED3\u675F\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"RUN_FINISHED\",\n      threadId: this.options.threadId,\n      runId,\n      timestamp: Date.now(),\n    } as RunFinishedEvent)\n\n    // \u8FD4\u56DE\u539F\u59CB\u54CD\u5E94\u7684Observable\n    return from([response])\n  }\n\n  /**\n   * \u53D1\u9001\u4E8B\u4EF6\u5230\u4E8B\u4EF6\u6D41\n   */\n  private emitEvent(event: BaseEvent): void {\n    if (this.options.debug) {\n      console.debug(\"AG-UI Event:\", event)\n    }\n    this.eventSubject.next(event)\n  }\n}\n\nexport function migrateToStandardRuntime(adapter: AgUIAdapter): AgUIRuntime {\n  // \u8FC1\u79FB\u903B\u8F91\n  return new AgUIRuntime()\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "060605d04b4a15a4676b24986be8d3a1c572e66e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_lfrx3ax7o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_lfrx3ax7o();
cov_lfrx3ax7o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_lfrx3ax7o().s[1]++;
exports.AgUIAdapter = void 0;
/* istanbul ignore next */
cov_lfrx3ax7o().s[2]++;
exports.migrateToStandardRuntime = migrateToStandardRuntime;
const rxjs_1 =
/* istanbul ignore next */
(cov_lfrx3ax7o().s[3]++, require("rxjs"));
const runtime_1 =
/* istanbul ignore next */
(cov_lfrx3ax7o().s[4]++, require("./protocol/runtime"));
/**
 * @deprecated 请使用 AgUIRuntime 替代
 * 这个适配器将在下个版本中移除
 */
/**
 * AG-UI适配器 - 将现有系统的消息流转换为AG-UI事件流
 * 该适配器确保现有系统功能不变的情况下支持AG-UI协议
 */
class AgUIAdapter {
  constructor(options =
  /* istanbul ignore next */
  (cov_lfrx3ax7o().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_lfrx3ax7o().f[0]++;
    cov_lfrx3ax7o().s[5]++;
    this.options = options;
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[6]++;
    this.eventSubject = new rxjs_1.Subject();
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[7]++;
    this.messageIdCounter = 0;
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[8]++;
    this.options.threadId =
    /* istanbul ignore next */
    (cov_lfrx3ax7o().b[1][0]++, this.options.threadId) ||
    /* istanbul ignore next */
    (cov_lfrx3ax7o().b[1][1]++, `thread-${Date.now()}`);
  }
  /**
   * 获取事件流Observable
   */
  getEventStream() {
    /* istanbul ignore next */
    cov_lfrx3ax7o().f[1]++;
    cov_lfrx3ax7o().s[9]++;
    return this.eventSubject.asObservable();
  }
  /**
   * 处理来自FastGPT的流式响应
   * 将其转换为AG-UI事件流，但不改变原有处理逻辑
   */
  handleFastGPTStreamResponse(response) {
    /* istanbul ignore next */
    cov_lfrx3ax7o().f[2]++;
    // 生成唯一消息ID
    const messageId =
    /* istanbul ignore next */
    (cov_lfrx3ax7o().s[10]++, `msg-${++this.messageIdCounter}`);
    const runId =
    /* istanbul ignore next */
    (cov_lfrx3ax7o().s[11]++, `run-${Date.now()}`);
    // 发送运行开始事件
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[12]++;
    this.emitEvent({
      type: "RUN_STARTED",
      threadId: this.options.threadId,
      runId,
      timestamp: Date.now()
    });
    // 发送消息开始事件
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[13]++;
    this.emitEvent({
      type: "TEXT_MESSAGE_START",
      messageId,
      role: "assistant",
      timestamp: Date.now()
    });
    // 创建一个新的Observable来处理流式响应
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[14]++;
    return new rxjs_1.Observable(observer => {
      /* istanbul ignore next */
      cov_lfrx3ax7o().f[3]++;
      // 保持原有的处理逻辑
      const reader =
      /* istanbul ignore next */
      (cov_lfrx3ax7o().s[15]++, response.getReader());
      const decoder =
      /* istanbul ignore next */
      (cov_lfrx3ax7o().s[16]++, new TextDecoder());
      let buffer =
      /* istanbul ignore next */
      (cov_lfrx3ax7o().s[17]++, "");
      /* istanbul ignore next */
      cov_lfrx3ax7o().s[18]++;
      const processChunk = async () => {
        /* istanbul ignore next */
        cov_lfrx3ax7o().f[4]++;
        cov_lfrx3ax7o().s[19]++;
        try {
          const {
            done,
            value
          } =
          /* istanbul ignore next */
          (cov_lfrx3ax7o().s[20]++, await reader.read());
          /* istanbul ignore next */
          cov_lfrx3ax7o().s[21]++;
          if (done) {
            /* istanbul ignore next */
            cov_lfrx3ax7o().b[2][0]++;
            cov_lfrx3ax7o().s[22]++;
            // 处理缓冲区中剩余的数据
            if (buffer) {
              /* istanbul ignore next */
              cov_lfrx3ax7o().b[3][0]++;
              const chunk =
              /* istanbul ignore next */
              (cov_lfrx3ax7o().s[23]++, buffer);
              /* istanbul ignore next */
              cov_lfrx3ax7o().s[24]++;
              buffer = "";
              /* istanbul ignore next */
              cov_lfrx3ax7o().s[25]++;
              observer.next(chunk);
            } else
            /* istanbul ignore next */
            {
              cov_lfrx3ax7o().b[3][1]++;
            }
            // 发送消息结束事件
            cov_lfrx3ax7o().s[26]++;
            this.emitEvent({
              type: "TEXT_MESSAGE_END",
              messageId,
              timestamp: Date.now()
            });
            // 发送运行结束事件
            /* istanbul ignore next */
            cov_lfrx3ax7o().s[27]++;
            this.emitEvent({
              type: "RUN_FINISHED",
              threadId: this.options.threadId,
              runId,
              timestamp: Date.now()
            });
            /* istanbul ignore next */
            cov_lfrx3ax7o().s[28]++;
            observer.complete();
            /* istanbul ignore next */
            cov_lfrx3ax7o().s[29]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_lfrx3ax7o().b[2][1]++;
          }
          // 解码二进制数据
          const chunk =
          /* istanbul ignore next */
          (cov_lfrx3ax7o().s[30]++, decoder.decode(value, {
            stream: true
          }));
          /* istanbul ignore next */
          cov_lfrx3ax7o().s[31]++;
          buffer += chunk;
          // 处理完整的JSON对象
          let boundary =
          /* istanbul ignore next */
          (cov_lfrx3ax7o().s[32]++, buffer.indexOf("\n"));
          /* istanbul ignore next */
          cov_lfrx3ax7o().s[33]++;
          while (boundary !== -1) {
            const part =
            /* istanbul ignore next */
            (cov_lfrx3ax7o().s[34]++, buffer.substring(0, boundary));
            /* istanbul ignore next */
            cov_lfrx3ax7o().s[35]++;
            buffer = buffer.substring(boundary + 1);
            /* istanbul ignore next */
            cov_lfrx3ax7o().s[36]++;
            if (part.trim()) {
              /* istanbul ignore next */
              cov_lfrx3ax7o().b[4][0]++;
              cov_lfrx3ax7o().s[37]++;
              try {
                const data =
                /* istanbul ignore next */
                (cov_lfrx3ax7o().s[38]++, JSON.parse(part));
                // 发送消息内容事件
                /* istanbul ignore next */
                cov_lfrx3ax7o().s[39]++;
                if (data.text) {
                  /* istanbul ignore next */
                  cov_lfrx3ax7o().b[5][0]++;
                  cov_lfrx3ax7o().s[40]++;
                  this.emitEvent({
                    type: "TEXT_MESSAGE_CONTENT",
                    messageId,
                    delta: data.text,
                    timestamp: Date.now()
                  });
                } else
                /* istanbul ignore next */
                {
                  cov_lfrx3ax7o().b[5][1]++;
                }
                // 将原始数据传递给观察者
                cov_lfrx3ax7o().s[41]++;
                observer.next(data);
              } catch (e) {
                /* istanbul ignore next */
                cov_lfrx3ax7o().s[42]++;
                if (this.options.debug) {
                  /* istanbul ignore next */
                  cov_lfrx3ax7o().b[6][0]++;
                  cov_lfrx3ax7o().s[43]++;
                  console.error("Failed to parse JSON:", part, e);
                } else
                /* istanbul ignore next */
                {
                  cov_lfrx3ax7o().b[6][1]++;
                }
              }
            } else
            /* istanbul ignore next */
            {
              cov_lfrx3ax7o().b[4][1]++;
            }
            cov_lfrx3ax7o().s[44]++;
            boundary = buffer.indexOf("\n");
          }
          // 继续处理下一个块
          /* istanbul ignore next */
          cov_lfrx3ax7o().s[45]++;
          processChunk();
        } catch (error) {
          /* istanbul ignore next */
          cov_lfrx3ax7o().s[46]++;
          if (this.options.debug) {
            /* istanbul ignore next */
            cov_lfrx3ax7o().b[7][0]++;
            cov_lfrx3ax7o().s[47]++;
            console.error("Error processing stream:", error);
          } else
          /* istanbul ignore next */
          {
            cov_lfrx3ax7o().b[7][1]++;
          }
          cov_lfrx3ax7o().s[48]++;
          observer.error(error);
        }
      };
      /* istanbul ignore next */
      cov_lfrx3ax7o().s[49]++;
      processChunk();
      // 返回清理函数
      /* istanbul ignore next */
      cov_lfrx3ax7o().s[50]++;
      return () => {
        /* istanbul ignore next */
        cov_lfrx3ax7o().f[5]++;
        cov_lfrx3ax7o().s[51]++;
        reader.cancel().catch(err => {
          /* istanbul ignore next */
          cov_lfrx3ax7o().f[6]++;
          cov_lfrx3ax7o().s[52]++;
          if (this.options.debug) {
            /* istanbul ignore next */
            cov_lfrx3ax7o().b[8][0]++;
            cov_lfrx3ax7o().s[53]++;
            console.error("Error cancelling reader:", err);
          } else
          /* istanbul ignore next */
          {
            cov_lfrx3ax7o().b[8][1]++;
          }
        });
      };
    });
  }
  /**
   * 处理CAD解读智能体的响应
   */
  handleCADAnalysisResponse(response) {
    /* istanbul ignore next */
    cov_lfrx3ax7o().f[7]++;
    const messageId =
    /* istanbul ignore next */
    (cov_lfrx3ax7o().s[54]++, `msg-${++this.messageIdCounter}`);
    const runId =
    /* istanbul ignore next */
    (cov_lfrx3ax7o().s[55]++, `run-${Date.now()}`);
    // 发送运行开始事件
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[56]++;
    this.emitEvent({
      type: "RUN_STARTED",
      threadId: this.options.threadId,
      runId,
      timestamp: Date.now()
    });
    // 将CAD分析结果转换为AG-UI事件
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[57]++;
    this.emitEvent({
      type: "TEXT_MESSAGE_START",
      messageId,
      role: "assistant",
      timestamp: Date.now()
    });
    // 将分析结果作为消息内容发送
    const resultText =
    /* istanbul ignore next */
    (cov_lfrx3ax7o().s[58]++, JSON.stringify(response));
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[59]++;
    this.emitEvent({
      type: "TEXT_MESSAGE_CONTENT",
      messageId,
      delta: resultText,
      timestamp: Date.now()
    });
    // 发送消息结束事件
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[60]++;
    this.emitEvent({
      type: "TEXT_MESSAGE_END",
      messageId,
      timestamp: Date.now()
    });
    // 发送运行结束事件
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[61]++;
    this.emitEvent({
      type: "RUN_FINISHED",
      threadId: this.options.threadId,
      runId,
      timestamp: Date.now()
    });
    // 返回原始响应的Observable
    /* istanbul ignore next */
    cov_lfrx3ax7o().s[62]++;
    return (0, rxjs_1.from)([response]);
  }
  /**
   * 发送事件到事件流
   */
  emitEvent(event) {
    /* istanbul ignore next */
    cov_lfrx3ax7o().f[8]++;
    cov_lfrx3ax7o().s[63]++;
    if (this.options.debug) {
      /* istanbul ignore next */
      cov_lfrx3ax7o().b[9][0]++;
      cov_lfrx3ax7o().s[64]++;
      console.debug("AG-UI Event:", event);
    } else
    /* istanbul ignore next */
    {
      cov_lfrx3ax7o().b[9][1]++;
    }
    cov_lfrx3ax7o().s[65]++;
    this.eventSubject.next(event);
  }
}
/* istanbul ignore next */
cov_lfrx3ax7o().s[66]++;
exports.AgUIAdapter = AgUIAdapter;
function migrateToStandardRuntime(adapter) {
  /* istanbul ignore next */
  cov_lfrx3ax7o().f[9]++;
  cov_lfrx3ax7o().s[67]++;
  // 迁移逻辑
  return new runtime_1.AgUIRuntime();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,