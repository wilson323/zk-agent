2eb45cbcd4b41d217e39ccaa7c48a5ba
"use strict";

/**
 * @file lib/security/rule-validator.ts
 * @description Security rule validation and testing framework
 * @author Security Team
 * @lastUpdate 2024-12-19
 * @security Production-level rule validation and testing
 */
/* istanbul ignore next */
function cov_7o4ma9m8b() {
  var path = "E:\\zk-agent\\lib\\security\\rule-validator.ts";
  var hash = "6aee5870a60b45027e9f7b139ee36b0b37b4306b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\security\\rule-validator.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 121
        }
      },
      "2": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "3": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 60
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 23,
          column: 10
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "10": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 38
        }
      },
      "12": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "13": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "14": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 55
        }
      },
      "15": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 52
        }
      },
      "16": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "17": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 61
        }
      },
      "18": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "19": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 52
        }
      },
      "20": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 50
        }
      },
      "21": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "22": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "23": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 37
        }
      },
      "24": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 73,
          column: 15
        }
      },
      "25": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 26
        }
      },
      "26": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 33
        }
      },
      "27": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 100
        }
      },
      "28": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "29": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "30": {
        start: {
          line: 90,
          column: 26
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "31": {
        start: {
          line: 91,
          column: 30
        },
        end: {
          line: 91,
          column: 60
        }
      },
      "32": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "33": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "34": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 46
        }
      },
      "35": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "36": {
        start: {
          line: 95,
          column: 33
        },
        end: {
          line: 95,
          column: 34
        }
      },
      "37": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 96,
          column: 45
        }
      },
      "38": {
        start: {
          line: 97,
          column: 36
        },
        end: {
          line: 97,
          column: 75
        }
      },
      "39": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "40": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 104,
          column: 23
        }
      },
      "41": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 51
        }
      },
      "42": {
        start: {
          line: 108,
          column: 32
        },
        end: {
          line: 108,
          column: 62
        }
      },
      "43": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 113,
          column: 14
        }
      },
      "44": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "45": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 24
        }
      },
      "46": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 33
        }
      },
      "47": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "48": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "49": {
        start: {
          line: 130,
          column: 31
        },
        end: {
          line: 130,
          column: 60
        }
      },
      "50": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 45
        }
      },
      "51": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "52": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "53": {
        start: {
          line: 149,
          column: 65
        },
        end: {
          line: 149,
          column: 72
        }
      },
      "54": {
        start: {
          line: 150,
          column: 67
        },
        end: {
          line: 150,
          column: 75
        }
      },
      "55": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 23
        }
      },
      "56": {
        start: {
          line: 158,
          column: 30
        },
        end: {
          line: 158,
          column: 62
        }
      },
      "57": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 37
        }
      },
      "58": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 50
        }
      },
      "59": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "60": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 48
        }
      },
      "61": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 72
        }
      },
      "62": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "63": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "64": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 75
        }
      },
      "65": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "66": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 77
        }
      },
      "67": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "68": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 84
        }
      },
      "69": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "70": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 74
        }
      },
      "71": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "72": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 74
        }
      },
      "73": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "74": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 80
        }
      },
      "75": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 211,
          column: 11
        }
      },
      "76": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "77": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 85
        }
      },
      "78": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "79": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 77
        }
      },
      "80": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "81": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 76
        }
      },
      "82": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "83": {
        start: {
          line: 227,
          column: 31
        },
        end: {
          line: 227,
          column: 37
        }
      },
      "84": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 42
        }
      },
      "85": {
        start: {
          line: 230,
          column: 34
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "86": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "87": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 88
        }
      },
      "88": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "89": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 94
        }
      },
      "90": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "91": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 90
        }
      },
      "92": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "93": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 94
        }
      },
      "94": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "95": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 123
        }
      },
      "96": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 104
        }
      },
      "97": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "98": {
        start: {
          line: 263,
          column: 31
        },
        end: {
          line: 263,
          column: 81
        }
      },
      "99": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 60
        }
      },
      "100": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "101": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 85
        }
      },
      "102": {
        start: {
          line: 269,
          column: 31
        },
        end: {
          line: 269,
          column: 78
        }
      },
      "103": {
        start: {
          line: 270,
          column: 31
        },
        end: {
          line: 270,
          column: 68
        }
      },
      "104": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 81
        }
      },
      "105": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 96
        }
      },
      "106": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "107": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 105
        }
      },
      "108": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "109": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 91
        }
      },
      "110": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 114
        }
      },
      "111": {
        start: {
          line: 288,
          column: 30
        },
        end: {
          line: 288,
          column: 49
        }
      },
      "112": {
        start: {
          line: 290,
          column: 30
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "113": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "114": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 300,
          column: 13
        }
      },
      "115": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 124
        }
      },
      "116": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 22
        }
      },
      "117": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "118": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 86
        }
      },
      "119": {
        start: {
          line: 307,
          column: 34
        },
        end: {
          line: 307,
          column: 72
        }
      },
      "120": {
        start: {
          line: 308,
          column: 29
        },
        end: {
          line: 308,
          column: 56
        }
      },
      "121": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "122": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "123": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 128
        }
      },
      "124": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 53
        }
      },
      "125": {
        start: {
          line: 321,
          column: 26
        },
        end: {
          line: 321,
          column: 96
        }
      },
      "126": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "127": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 341,
          column: 13
        }
      },
      "128": {
        start: {
          line: 324,
          column: 35
        },
        end: {
          line: 324,
          column: 75
        }
      },
      "129": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 327,
          column: 17
        }
      },
      "130": {
        start: {
          line: 326,
          column: 20
        },
        end: {
          line: 326,
          column: 153
        }
      },
      "131": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "132": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 336,
          column: 21
        }
      },
      "133": {
        start: {
          line: 330,
          column: 33
        },
        end: {
          line: 330,
          column: 34
        }
      },
      "134": {
        start: {
          line: 331,
          column: 41
        },
        end: {
          line: 331,
          column: 70
        }
      },
      "135": {
        start: {
          line: 332,
          column: 39
        },
        end: {
          line: 332,
          column: 60
        }
      },
      "136": {
        start: {
          line: 333,
          column: 24
        },
        end: {
          line: 335,
          column: 25
        }
      },
      "137": {
        start: {
          line: 334,
          column: 28
        },
        end: {
          line: 334,
          column: 118
        }
      },
      "138": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 122
        }
      },
      "139": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "140": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 353,
          column: 17
        }
      },
      "141": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 108
        }
      },
      "142": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 22
        }
      },
      "143": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 358,
          column: 17
        }
      },
      "144": {
        start: {
          line: 357,
          column: 20
        },
        end: {
          line: 357,
          column: 120
        }
      },
      "145": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 22
        }
      },
      "146": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 363,
          column: 17
        }
      },
      "147": {
        start: {
          line: 362,
          column: 20
        },
        end: {
          line: 362,
          column: 118
        }
      },
      "148": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 22
        }
      },
      "149": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "150": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 101
        }
      },
      "151": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "152": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 82
        }
      },
      "153": {
        start: {
          line: 379,
          column: 36
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "154": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 62
        }
      },
      "155": {
        start: {
          line: 385,
          column: 45
        },
        end: {
          line: 385,
          column: 60
        }
      },
      "156": {
        start: {
          line: 388,
          column: 25
        },
        end: {
          line: 388,
          column: 26
        }
      },
      "157": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 67
        }
      },
      "158": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 63
        }
      },
      "159": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 62
        }
      },
      "160": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 62
        }
      },
      "161": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 60
        }
      },
      "162": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "163": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 26
        }
      },
      "164": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "165": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 28
        }
      },
      "166": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 21
        }
      },
      "167": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "168": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 26
        }
      },
      "169": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "170": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 28
        }
      },
      "171": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 21
        }
      },
      "172": {
        start: {
          line: 413,
          column: 24
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "173": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 56
        }
      },
      "174": {
        start: {
          line: 438,
          column: 24
        },
        end: {
          line: 438,
          column: 57
        }
      },
      "175": {
        start: {
          line: 439,
          column: 25
        },
        end: {
          line: 439,
          column: 38
        }
      },
      "176": {
        start: {
          line: 441,
          column: 33
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "177": {
        start: {
          line: 453,
          column: 33
        },
        end: {
          line: 453,
          column: 65
        }
      },
      "178": {
        start: {
          line: 454,
          column: 35
        },
        end: {
          line: 454,
          column: 139
        }
      },
      "179": {
        start: {
          line: 454,
          column: 68
        },
        end: {
          line: 454,
          column: 138
        }
      },
      "180": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "181": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 90
        }
      },
      "182": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 474,
          column: 11
        }
      },
      "183": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 18
        }
      },
      "184": {
        start: {
          line: 481,
          column: 0
        },
        end: {
          line: 481,
          column: 38
        }
      },
      "185": {
        start: {
          line: 483,
          column: 0
        },
        end: {
          line: 483,
          column: 52
        }
      },
      "186": {
        start: {
          line: 485,
          column: 0
        },
        end: {
          line: 485,
          column: 86
        }
      },
      "187": {
        start: {
          line: 486,
          column: 0
        },
        end: {
          line: 486,
          column: 78
        }
      },
      "188": {
        start: {
          line: 487,
          column: 0
        },
        end: {
          line: 487,
          column: 88
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 89
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 126
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 60
          },
          end: {
            line: 149,
            column: 61
          }
        },
        loc: {
          start: {
            line: 149,
            column: 65
          },
          end: {
            line: 149,
            column: 72
          }
        },
        line: 149
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 150,
            column: 62
          },
          end: {
            line: 150,
            column: 63
          }
        },
        loc: {
          start: {
            line: 150,
            column: 67
          },
          end: {
            line: 150,
            column: 75
          }
        },
        line: 150
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 34
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 157
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 25
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 169
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 25
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 175
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 42
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 184
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 207,
            column: 36
          },
          end: {
            line: 207,
            column: 37
          }
        },
        loc: {
          start: {
            line: 207,
            column: 43
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 207
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 39
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 224
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 44
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 260
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 35
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 287
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 37
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 320
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 38
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 347
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 41
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 377
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 385,
            column: 40
          },
          end: {
            line: 385,
            column: 41
          }
        },
        loc: {
          start: {
            line: 385,
            column: 45
          },
          end: {
            line: 385,
            column: 60
          }
        },
        line: 385
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        loc: {
          start: {
            line: 387,
            column: 38
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 387
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        loc: {
          start: {
            line: 403,
            column: 33
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 403
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        },
        loc: {
          start: {
            line: 412,
            column: 38
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 412
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        loc: {
          start: {
            line: 437,
            column: 44
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 437
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 454,
            column: 57
          },
          end: {
            line: 454,
            column: 58
          }
        },
        loc: {
          start: {
            line: 454,
            column: 68
          },
          end: {
            line: 454,
            column: 138
          }
        },
        line: 454
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 33
          },
          end: {
            line: 475,
            column: 5
          }
        },
        line: 459
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        },
        loc: {
          start: {
            line: 476,
            column: 34
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 476
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 101,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 101,
            column: 44
          }
        }, {
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 101,
            column: 49
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 56
          }
        }, {
          start: {
            line: 158,
            column: 60
          },
          end: {
            line: 158,
            column: 62
          }
        }],
        line: 158
      },
      "6": {
        loc: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 41
          }
        }, {
          start: {
            line: 170,
            column: 45
          },
          end: {
            line: 170,
            column: 47
          }
        }],
        line: 170
      },
      "7": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "8": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 20
          }
        }, {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 51
          }
        }],
        line: 186
      },
      "9": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "10": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 22
          }
        }, {
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 189,
            column: 55
          }
        }],
        line: 189
      },
      "11": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "12": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 29
          }
        }, {
          start: {
            line: 192,
            column: 33
          },
          end: {
            line: 192,
            column: 69
          }
        }],
        line: 192
      },
      "13": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "14": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "15": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "16": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 47
          }
        }, {
          start: {
            line: 204,
            column: 51
          },
          end: {
            line: 204,
            column: 83
          }
        }],
        line: 204
      },
      "17": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 29
          }
        }, {
          start: {
            line: 213,
            column: 33
          },
          end: {
            line: 213,
            column: 69
          }
        }],
        line: 213
      },
      "20": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "21": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "22": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "23": {
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 236,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 236,
            column: 49
          }
        }, {
          start: {
            line: 236,
            column: 53
          },
          end: {
            line: 236,
            column: 84
          }
        }],
        line: 236
      },
      "24": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "25": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "26": {
        loc: {
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 244,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 16
          },
          end: {
            line: 244,
            column: 44
          }
        }, {
          start: {
            line: 244,
            column: 48
          },
          end: {
            line: 244,
            column: 73
          }
        }],
        line: 244
      },
      "27": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "28": {
        loc: {
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 249,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 248,
            column: 44
          }
        }, {
          start: {
            line: 248,
            column: 48
          },
          end: {
            line: 248,
            column: 76
          }
        }, {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 46
          }
        }],
        line: 248
      },
      "29": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "30": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "31": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "32": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 300,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 300,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "33": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "34": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 34
          }
        }, {
          start: {
            line: 303,
            column: 38
          },
          end: {
            line: 303,
            column: 60
          }
        }],
        line: 303
      },
      "35": {
        loc: {
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "36": {
        loc: {
          start: {
            line: 310,
            column: 16
          },
          end: {
            line: 310,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 16
          },
          end: {
            line: 310,
            column: 48
          }
        }, {
          start: {
            line: 310,
            column: 52
          },
          end: {
            line: 310,
            column: 81
          }
        }],
        line: 310
      },
      "37": {
        loc: {
          start: {
            line: 321,
            column: 26
          },
          end: {
            line: 321,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 26
          },
          end: {
            line: 321,
            column: 53
          }
        }, {
          start: {
            line: 321,
            column: 57
          },
          end: {
            line: 321,
            column: 96
          }
        }],
        line: 321
      },
      "38": {
        loc: {
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "39": {
        loc: {
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "40": {
        loc: {
          start: {
            line: 333,
            column: 24
          },
          end: {
            line: 335,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 24
          },
          end: {
            line: 335,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "41": {
        loc: {
          start: {
            line: 333,
            column: 28
          },
          end: {
            line: 333,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 28
          },
          end: {
            line: 333,
            column: 35
          }
        }, {
          start: {
            line: 333,
            column: 39
          },
          end: {
            line: 333,
            column: 68
          }
        }, {
          start: {
            line: 333,
            column: 72
          },
          end: {
            line: 333,
            column: 105
          }
        }],
        line: 333
      },
      "42": {
        loc: {
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 354,
            column: 22
          }
        }, {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 359,
            column: 22
          }
        }, {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 364,
            column: 22
          }
        }],
        line: 349
      },
      "43": {
        loc: {
          start: {
            line: 351,
            column: 16
          },
          end: {
            line: 353,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 16
          },
          end: {
            line: 353,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "44": {
        loc: {
          start: {
            line: 356,
            column: 16
          },
          end: {
            line: 358,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 16
          },
          end: {
            line: 358,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "45": {
        loc: {
          start: {
            line: 356,
            column: 20
          },
          end: {
            line: 356,
            column: 156
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 20
          },
          end: {
            line: 356,
            column: 84
          }
        }, {
          start: {
            line: 356,
            column: 88
          },
          end: {
            line: 356,
            column: 156
          }
        }],
        line: 356
      },
      "46": {
        loc: {
          start: {
            line: 361,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "47": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "48": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "49": {
        loc: {
          start: {
            line: 390,
            column: 23
          },
          end: {
            line: 390,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 23
          },
          end: {
            line: 390,
            column: 48
          }
        }, {
          start: {
            line: 390,
            column: 52
          },
          end: {
            line: 390,
            column: 54
          }
        }],
        line: 390
      },
      "50": {
        loc: {
          start: {
            line: 391,
            column: 23
          },
          end: {
            line: 391,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 23
          },
          end: {
            line: 391,
            column: 48
          }
        }, {
          start: {
            line: 391,
            column: 52
          },
          end: {
            line: 391,
            column: 54
          }
        }],
        line: 391
      },
      "51": {
        loc: {
          start: {
            line: 392,
            column: 23
          },
          end: {
            line: 392,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 23
          },
          end: {
            line: 392,
            column: 47
          }
        }, {
          start: {
            line: 392,
            column: 51
          },
          end: {
            line: 392,
            column: 53
          }
        }],
        line: 392
      },
      "52": {
        loc: {
          start: {
            line: 393,
            column: 23
          },
          end: {
            line: 393,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 23
          },
          end: {
            line: 393,
            column: 43
          }
        }, {
          start: {
            line: 393,
            column: 47
          },
          end: {
            line: 393,
            column: 49
          }
        }],
        line: 393
      },
      "53": {
        loc: {
          start: {
            line: 394,
            column: 23
          },
          end: {
            line: 394,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 23
          },
          end: {
            line: 394,
            column: 45
          }
        }, {
          start: {
            line: 394,
            column: 49
          },
          end: {
            line: 394,
            column: 51
          }
        }],
        line: 394
      },
      "54": {
        loc: {
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "55": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 400,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 400,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "56": {
        loc: {
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "57": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "58": {
        loc: {
          start: {
            line: 435,
            column: 15
          },
          end: {
            line: 435,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 15
          },
          end: {
            line: 435,
            column: 37
          }
        }, {
          start: {
            line: 435,
            column: 41
          },
          end: {
            line: 435,
            column: 55
          }
        }],
        line: 435
      },
      "59": {
        loc: {
          start: {
            line: 453,
            column: 33
          },
          end: {
            line: 453,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 453,
            column: 33
          },
          end: {
            line: 453,
            column: 59
          }
        }, {
          start: {
            line: 453,
            column: 63
          },
          end: {
            line: 453,
            column: 65
          }
        }],
        line: 453
      },
      "60": {
        loc: {
          start: {
            line: 454,
            column: 68
          },
          end: {
            line: 454,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 68
          },
          end: {
            line: 454,
            column: 93
          }
        }, {
          start: {
            line: 454,
            column: 97
          },
          end: {
            line: 454,
            column: 138
          }
        }],
        line: 454
      },
      "61": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\security\\rule-validator.ts",
      mappings: ";AAAA;;;;;;GAMG;;;AAEH,+CAA4C;AAC5C,6DAA4D;AAC5D,6DAAgG;AAEhG,MAAM,MAAM,GAAG,IAAI,eAAM,CAAC,eAAe,CAAC,CAAC;AAqC3C,MAAa,aAAa;IAKxB;QAFQ,cAAS,GAAgC,IAAI,GAAG,EAAE,CAAC;QAGzD,IAAI,CAAC,gBAAgB,GAAG;YACtB,kBAAkB,EAAE,GAAG;YACvB,gBAAgB,EAAE,IAAI,EAAE,WAAW;YACnC,uBAAuB,EAAE,IAAI;YAC7B,oBAAoB,EAAE,IAAI;SAC3B,CAAC;QACF,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC5B,aAAa,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;QAC/C,CAAC;QACD,OAAO,aAAa,CAAC,QAAQ,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAAC,IAAkB;QACnC,MAAM,MAAM,GAAyB;YACnC,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,WAAW,EAAE;gBACX,eAAe,EAAE,KAAK;gBACtB,sBAAsB,EAAE,CAAC;gBACzB,WAAW,EAAE,KAAK;aACnB;SACF,CAAC;QAEF,IAAI,CAAC;YACH,mBAAmB;YACnB,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAE3C,mBAAmB;YACnB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAExC,yBAAyB;YACzB,IAAI,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC;gBAClD,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC/C,CAAC;YAED,sBAAsB;YACtB,IAAI,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,CAAC;YAED,uBAAuB;YACvB,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAEtC,uBAAuB;YACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAEvC,sCAAsC;YACtC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC7B,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE;gBACvC,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;gBAC5B,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;aACjC,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;QAEhB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,IAAA,+BAAe,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAEnE,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE;gBACrC,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,KAAK,EAAE,IAAA,+BAAe,EAAC,KAAK,CAAC;aAC9B,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;QAChB,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,QAAQ,CAAC,IAAkB,EAAE,QAAgB;QAUjD,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC1C,MAAM,aAAa,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;QAErD,IAAI,CAAC;YACH,MAAM,OAAO,GAKR,EAAE,CAAC;YAER,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEnC,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC;gBAC9D,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;gBAC9B,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAE5D,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE,CAAC;oBAChC,OAAO,CAAC,IAAI,CAAC;wBACX,IAAI,EAAE,SAAS,GAAG,CAAC;wBACnB,MAAM,EAAE,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC;wBAC9B,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;wBACf,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE;qBACrB,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACxC,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;YAEnD,OAAO;gBACL,OAAO;gBACP,aAAa,EAAE,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,OAAO,EAAE,0BAA0B;gBAChF,WAAW,EAAE,WAAW,GAAG,aAAa;aACzC,CAAC;QAEJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE;gBAClC,MAAM,EAAE,IAAI,CAAC,EAAE;gBACf,KAAK,EAAE,IAAA,+BAAe,EAAC,KAAK,CAAC;aAC9B,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,aAAa,CAAC,KAAqB;QACvC,MAAM,OAAO,GAAG,IAAI,GAAG,EAAgC,CAAC;QAExD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC;gBACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC/B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;oBACnB,KAAK,EAAE,KAAK;oBACZ,MAAM,EAAE,CAAC,sBAAsB,IAAA,+BAAe,EAAC,KAAK,CAAC,EAAE,CAAC;oBACxD,QAAQ,EAAE,EAAE;oBACZ,WAAW,EAAE,EAAE;oBACf,WAAW,EAAE;wBACX,eAAe,EAAE,MAAM;wBACvB,sBAAsB,EAAE,CAAC,CAAC;wBAC1B,WAAW,EAAE,MAAM;qBACpB;iBACF,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,iCAAiC,EAAE;YAC7C,UAAU,EAAE,KAAK,CAAC,MAAM;YACxB,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM;YACpE,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM;SACxE,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,MAAc,EAAE,QAAsB;QAChD,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACvD,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QAE1C,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC7B,MAAM;YACN,QAAQ,EAAE,QAAQ,CAAC,IAAI;SACxB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,MAAc;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,MAAiC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,MAAM,EAAE,CAAC;QAEhE,MAAM,CAAC,IAAI,CAAC,kCAAkC,EAAE;YAC9C,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;SAC7B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,uBAAuB,CAAC,IAAkB,EAAE,MAA4B;QAC9E,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,QAAQ,EAAE,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;QACjE,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE,CAAC;YAC9D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;QAC1E,CAAC;QAED,oBAAoB;QACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,yCAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChE,CAAC;QAED,oBAAoB;QACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,yCAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChE,CAAC;QAED,2BAA2B;QAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC5E,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;QACtE,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAChC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBACzB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,yCAAyC,GAAG,EAAE,CAAC,CAAC;YACvE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE,CAAC;YAC9D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;QACnE,CAAC;QAED,sBAAsB;QACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QAClE,CAAC;IACH,CAAC;IAED;;OAEG;IACK,oBAAoB,CAAC,IAAkB,EAAE,MAA4B;QAC3E,IAAI,CAAC;YACH,yBAAyB;YACzB,MAAM,UAAU,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE9B,gCAAgC;YAChC,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAE1C,sCAAsC;YACtC,IAAI,IAAI,CAAC,2BAA2B,CAAC,aAAa,CAAC,EAAE,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;YAC1E,CAAC;YAED,6BAA6B;YAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBACzE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;YAChF,CAAC;YAED,wBAAwB;YACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;gBACtC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;YAC5E,CAAC;YAED,kCAAkC;YAClC,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;gBAC9D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;YAChF,CAAC;YAED,oBAAoB;YACpB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAC5D,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;gBACnC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,iFAAiF,CAAC,CAAC;YAC7G,CAAC;QAEH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,IAAA,+BAAe,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,mBAAmB,CAAC,IAAkB,EAAE,MAA4B;QAChF,IAAI,CAAC;YACH,6BAA6B;YAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACtE,MAAM,CAAC,WAAW,CAAC,eAAe,GAAG,UAAU,CAAC;YAEhD,IAAI,UAAU,KAAK,MAAM,EAAE,CAAC;gBAC1B,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;YACvE,CAAC;YAED,uCAAuC;YACvC,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAEzD,MAAM,CAAC,WAAW,CAAC,sBAAsB,GAAG,UAAU,CAAC,aAAa,CAAC;YACrE,MAAM,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAEpF,IAAI,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;gBACtE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,UAAU,CAAC,aAAa,uBAAuB,CAAC,CAAC;YAC3F,CAAC;YAED,IAAI,MAAM,CAAC,WAAW,CAAC,WAAW,KAAK,MAAM,EAAE,CAAC;gBAC9C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;YAC7E,CAAC;QAEH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,IAAA,+BAAe,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACnF,CAAC;IACH,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,IAAkB,EAAE,MAA4B;QACvE,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAE1C,qCAAqC;QACrC,MAAM,aAAa,GAAG;YACpB,YAAY;YACZ,YAAY;YACZ,gBAAgB;YAChB,gBAAgB;SACjB,CAAC;QAEF,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;YACzC,IAAI,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;gBACrC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAuF,CAAC,CAAC;gBAC5G,MAAM;YACR,CAAC;QACH,CAAC;QAED,uCAAuC;QACvC,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;YACrD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;QAC5E,CAAC;QAED,oDAAoD;QACpD,MAAM,iBAAiB,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;QAEjD,KAAK,MAAM,SAAS,IAAI,iBAAiB,EAAE,CAAC;YAC1C,IAAI,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;gBACtE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,iDAAiD,SAAS,4BAA4B,CAAC,CAAC;YAClH,CAAC;QACH,CAAC;QAED,mDAAmD;QACnD,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,YAAY,CAAC,IAAkB,EAAE,MAA4B;QACzE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEzF,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;YACjC,IAAI,CAAC;gBACH,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAE5D,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,KAAK,QAAQ,CAAC,eAAe,EAAE,CAAC;oBAC3D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAClB,cAAc,QAAQ,CAAC,IAAI,eAAe,QAAQ,CAAC,eAAe,iBAAiB,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAC/G,CAAC;gBACJ,CAAC;gBAED,uCAAuC;gBACvC,IAAI,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC3D,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;wBAC/C,MAAM,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBAErC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;4BAClF,MAAM,CAAC,QAAQ,CAAC,IAAI,CAClB,cAAc,QAAQ,CAAC,IAAI,iCAAiC,CAAC,GAAG,CAAC,EAAE,CACpE,CAAC;wBACJ,CAAC;oBACH,CAAC;gBACH,CAAC;YAEH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,QAAQ,CAAC,IAAI,aAAa,IAAA,+BAAe,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACvF,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,IAAkB,EAAE,MAA4B;QAC1E,yCAAyC;QACzC,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;YACtB,KAAK,yCAAoB,CAAC,gBAAgB;gBACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;oBACzC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;gBAC1F,CAAC;gBACD,MAAM;YAER,KAAK,yCAAoB,CAAC,oBAAoB;gBAC5C,IAAI,IAAI,CAAC,QAAQ,KAAK,yCAAoB,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,yCAAoB,CAAC,QAAQ,EAAE,CAAC;oBACnG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;gBACtG,CAAC;gBACD,MAAM;YAER,KAAK,yCAAoB,CAAC,YAAY;gBACpC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;oBACvD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;gBACpG,CAAC;gBACD,MAAM;QACV,CAAC;QAED,qCAAqC;QACrC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAC3F,CAAC;QAED,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YACjC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;QACxE,CAAC;IACH,CAAC;IAED;;OAEG;IACK,2BAA2B,CAAC,OAAe;QACjD,2DAA2D;QAC3D,MAAM,mBAAmB,GAAG;YAC1B,YAAY;YACZ,YAAY;YACZ,iBAAiB;YACjB,cAAc;SACf,CAAC;QAEF,OAAO,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACxD,CAAC;IAEO,wBAAwB,CAAC,OAAe;QAC9C,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,2BAA2B;QAC3B,UAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS;QACrE,UAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,oBAAoB;QAC5E,UAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,cAAc;QACrE,UAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,eAAe;QACtE,UAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,mBAAmB;QAExE,IAAI,UAAU,GAAG,EAAE,EAAE,CAAC;YAAA,OAAO,MAAM,CAAC;QAAA,CAAC;QACrC,IAAI,UAAU,GAAG,EAAE,EAAE,CAAC;YAAA,OAAO,QAAQ,CAAC;QAAA,CAAC;QACvC,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,qBAAqB,CAAC,KAAa;QACzC,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC;YAAA,OAAO,MAAM,CAAC;QAAA,CAAC,CAAC,QAAQ;QAClD,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;YAAA,OAAO,QAAQ,CAAC;QAAA,CAAC,CAAC,UAAU;QACrD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,kBAAkB,CAAC,aAAqB;QAC9C,MAAM,OAAO,GAA2B;YACtC,KAAK,EAAE;;;;;OAKN;YACD,KAAK,EAAE;;;;OAIN;YACD,KAAK,EAAE;;;;OAIN;YACD,OAAO,EAAE;;;OAGR;SACF,CAAC;QAEF,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAEO,yBAAyB,CAAC,IAAkB,EAAE,MAA4B;QAChF,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,yCAAyC;QACzC,MAAM,gBAAgB,GAA2C;YAC/D,CAAC,yCAAoB,CAAC,gBAAgB,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC;YACpF,CAAC,yCAAoB,CAAC,oBAAoB,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC;YAC9E,CAAC,yCAAoB,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC;YAC5E,CAAC,yCAAoB,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,CAAC;YAC/E,CAAC,yCAAoB,CAAC,eAAe,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC;YAC9E,CAAC,yCAAoB,CAAC,eAAe,CAAC,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;YACnF,CAAC,yCAAoB,CAAC,cAAc,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC;YAC/E,CAAC,yCAAoB,CAAC,gBAAgB,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC;YAC7E,CAAC,yCAAoB,CAAC,kBAAkB,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC;YAChF,CAAC,yCAAoB,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC;SAC/E,CAAC;QAEF,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC1D,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CACzD,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CACvE,CAAC;QAEF,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,4CAA4C,QAAQ,GAAG,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;IAEO,0BAA0B;QAChC,oDAAoD;QACpD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAE;YACnC;gBACE,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,kBAAkB;gBACxB,eAAe,EAAE,CAAC;gBAClB,WAAW,EAAE,gCAAgC;aAC9C;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,2BAA2B;gBACjC,eAAe,EAAE,CAAC;gBAClB,WAAW,EAAE,gCAAgC;aAC9C;SACF,CAAC,CAAC;IACL,CAAC;IAEO,mBAAmB,CAAC,QAA8B;QACxD,8CAA8C;QAC9C,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;AAljBD,sCAkjBC;AAED,4BAA4B;AACf,QAAA,aAAa,GAAG,aAAa,CAAC,WAAW,EAAE,CAAC;AAEzD,6BAA6B;AAChB,QAAA,YAAY,GAAG,qBAAa,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAa,CAAC,CAAC;AAC9D,QAAA,QAAQ,GAAG,qBAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAa,CAAC,CAAC;AACtD,QAAA,aAAa,GAAG,qBAAa,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAa,CAAC,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\lib\\security\\rule-validator.ts"],
      sourcesContent: ["/**\n * @file lib/security/rule-validator.ts\n * @description Security rule validation and testing framework\n * @author Security Team\n * @lastUpdate 2024-12-19\n * @security Production-level rule validation and testing\n */\n\nimport { Logger } from '@/lib/utils/logger';\nimport { getErrorMessage } from '@/lib/utils/error-handler';\nimport { SecurityRule, SecurityRuleCategory, SecurityRuleSeverity } from './code-review-system';\n\nconst logger = new Logger('RuleValidator');\n\n// Rule validation result\nexport interface RuleValidationResult {\n  valid: boolean;\n  errors: string[];\n  warnings: string[];\n  suggestions: string[];\n  performance: {\n    regexComplexity: 'low' | 'medium' | 'high';\n    estimatedExecutionTime: number;\n    memoryUsage: 'low' | 'medium' | 'high';\n  };\n}\n\n// Test case for rule validation\nexport interface RuleTestCase {\n  name: string;\n  code: string;\n  expectedMatches: number;\n  expectedPositions?: Array<{ line: number; column: number }>;\n  description: string;\n}\n\n// Rule validation configuration\nexport interface ValidationConfig {\n  maxRegexComplexity: number;\n  maxExecutionTime: number;\n  enablePerformanceChecks: boolean;\n  enableSecurityChecks: boolean;\n  customPatterns?: Array<{\n    pattern: RegExp;\n    message: string;\n    severity: 'error' | 'warning';\n  }>;\n}\n\nexport class RuleValidator {\n  private static instance: RuleValidator;\n  private validationConfig: ValidationConfig;\n  private testCases: Map<string, RuleTestCase[]> = new Map();\n\n  private constructor() {\n    this.validationConfig = {\n      maxRegexComplexity: 100,\n      maxExecutionTime: 1000, // 1 second\n      enablePerformanceChecks: true,\n      enableSecurityChecks: true,\n    };\n    this.initializeDefaultTestCases();\n  }\n\n  public static getInstance(): RuleValidator {\n    if (!RuleValidator.instance) {\n      RuleValidator.instance = new RuleValidator();\n    }\n    return RuleValidator.instance;\n  }\n\n  /**\n   * Validate a security rule\n   */\n  async validateRule(rule: SecurityRule): Promise<RuleValidationResult> {\n    const result: RuleValidationResult = {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: [],\n      performance: {\n        regexComplexity: 'low',\n        estimatedExecutionTime: 0,\n        memoryUsage: 'low',\n      },\n    };\n\n    try {\n      // Basic validation\n      this.validateBasicProperties(rule, result);\n      \n      // Regex validation\n      this.validateRegexPattern(rule, result);\n      \n      // Performance validation\n      if (this.validationConfig.enablePerformanceChecks) {\n        await this.validatePerformance(rule, result);\n      }\n      \n      // Security validation\n      if (this.validationConfig.enableSecurityChecks) {\n        this.validateSecurity(rule, result);\n      }\n      \n      // Test case validation\n      await this.runTestCases(rule, result);\n      \n      // Generate suggestions\n      this.generateSuggestions(rule, result);\n\n      // Mark as invalid if there are errors\n      if (result.errors.length > 0) {\n        result.valid = false;\n      }\n\n      logger.info('Rule validation completed', {\n        ruleId: rule.id,\n        valid: result.valid,\n        errors: result.errors.length,\n        warnings: result.warnings.length,\n      });\n\n      return result;\n\n    } catch (error) {\n      result.valid = false;\n      result.errors.push(`Validation failed: ${getErrorMessage(error)}`);\n      \n      logger.error('Rule validation failed', {\n        ruleId: rule.id,\n        error: getErrorMessage(error),\n      });\n\n      return result;\n    }\n  }\n\n  /**\n   * Test rule against sample code\n   */\n  async testRule(rule: SecurityRule, testCode: string): Promise<{\n    matches: Array<{\n      line: number;\n      column: number;\n      match: string;\n      context: string;\n    }>;\n    executionTime: number;\n    memoryUsage: number;\n  }> {\n    const startTime = process.hrtime.bigint();\n    const initialMemory = process.memoryUsage().heapUsed;\n\n    try {\n      const matches: Array<{\n        line: number;\n        column: number;\n        match: string;\n        context: string;\n      }> = [];\n\n      const lines = testCode.split('\\n');\n      \n      for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n        const line = lines[lineIndex];\n        const lineMatches = Array.from(line.matchAll(rule.pattern));\n        \n        for (const match of lineMatches) {\n          matches.push({\n            line: lineIndex + 1,\n            column: (match.index || 0) + 1,\n            match: match[0],\n            context: line.trim(),\n          });\n        }\n      }\n\n      const endTime = process.hrtime.bigint();\n      const finalMemory = process.memoryUsage().heapUsed;\n\n      return {\n        matches,\n        executionTime: Number(endTime - startTime) / 1000000, // Convert to milliseconds\n        memoryUsage: finalMemory - initialMemory,\n      };\n\n    } catch (error) {\n      logger.error('Rule testing failed', {\n        ruleId: rule.id,\n        error: getErrorMessage(error),\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Batch validate multiple rules\n   */\n  async validateRules(rules: SecurityRule[]): Promise<Map<string, RuleValidationResult>> {\n    const results = new Map<string, RuleValidationResult>();\n    \n    for (const rule of rules) {\n      try {\n        const result = await this.validateRule(rule);\n        results.set(rule.id, result);\n      } catch (error) {\n        results.set(rule.id, {\n          valid: false,\n          errors: [`Validation failed: ${getErrorMessage(error)}`],\n          warnings: [],\n          suggestions: [],\n          performance: {\n            regexComplexity: 'high',\n            estimatedExecutionTime: -1,\n            memoryUsage: 'high',\n          },\n        });\n      }\n    }\n\n    logger.info('Batch rule validation completed', {\n      totalRules: rules.length,\n      validRules: Array.from(results.values()).filter(r => r.valid).length,\n      invalidRules: Array.from(results.values()).filter(r => !r.valid).length,\n    });\n\n    return results;\n  }\n\n  /**\n   * Add custom test case for a rule\n   */\n  addTestCase(ruleId: string, testCase: RuleTestCase): void {\n    const existingTests = this.testCases.get(ruleId) || [];\n    existingTests.push(testCase);\n    this.testCases.set(ruleId, existingTests);\n\n    logger.info('Test case added', {\n      ruleId,\n      testName: testCase.name,\n    });\n  }\n\n  /**\n   * Get test cases for a rule\n   */\n  getTestCases(ruleId: string): RuleTestCase[] {\n    return this.testCases.get(ruleId) || [];\n  }\n\n  /**\n   * Update validation configuration\n   */\n  updateConfig(config: Partial<ValidationConfig>): void {\n    this.validationConfig = { ...this.validationConfig, ...config };\n    \n    logger.info('Validation configuration updated', {\n      updates: Object.keys(config),\n    });\n  }\n\n  /**\n   * Private: Validate basic rule properties\n   */\n  private validateBasicProperties(rule: SecurityRule, result: RuleValidationResult): void {\n    // Required fields\n    if (!rule.id || typeof rule.id !== 'string') {\n      result.errors.push('Rule ID is required and must be a string');\n    }\n\n    if (!rule.name || typeof rule.name !== 'string') {\n      result.errors.push('Rule name is required and must be a string');\n    }\n\n    if (!rule.description || typeof rule.description !== 'string') {\n      result.errors.push('Rule description is required and must be a string');\n    }\n\n    // Validate category\n    if (!Object.values(SecurityRuleCategory).includes(rule.category)) {\n      result.errors.push(`Invalid rule category: ${rule.category}`);\n    }\n\n    // Validate severity\n    if (!Object.values(SecurityRuleSeverity).includes(rule.severity)) {\n      result.errors.push(`Invalid rule severity: ${rule.severity}`);\n    }\n\n    // Validate file extensions\n    if (!Array.isArray(rule.fileExtensions) || rule.fileExtensions.length === 0) {\n      result.errors.push('Rule must specify at least one file extension');\n    }\n\n    rule.fileExtensions.forEach(ext => {\n      if (!ext.startsWith('.')) {\n        result.warnings.push(`File extension should start with dot: ${ext}`);\n      }\n    });\n\n    // Validate remediation\n    if (!rule.remediation || typeof rule.remediation !== 'string') {\n      result.warnings.push('Rule should include remediation guidance');\n    }\n\n    // Validate references\n    if (!Array.isArray(rule.references)) {\n      result.warnings.push('Rule should include security references');\n    }\n  }\n\n  /**\n   * Private: Validate regex pattern\n   */\n  private validateRegexPattern(rule: SecurityRule, result: RuleValidationResult): void {\n    try {\n      // Test if regex is valid\n      const testString = 'test';\n      rule.pattern.test(testString);\n\n      // Check for common regex issues\n      const patternSource = rule.pattern.source;\n\n      // Check for catastrophic backtracking\n      if (this.hasCatastrophicBacktracking(patternSource)) {\n        result.errors.push('Regex pattern may cause catastrophic backtracking');\n      }\n\n      // Check for case sensitivity\n      if (!rule.pattern.flags.includes('i') && patternSource.includes('[a-z]')) {\n        result.warnings.push('Consider making pattern case-insensitive with /i flag');\n      }\n\n      // Check for global flag\n      if (!rule.pattern.flags.includes('g')) {\n        result.warnings.push('Consider using global flag /g to find all matches');\n      }\n\n      // Check for overly broad patterns\n      if (patternSource.includes('.*') && patternSource.length < 10) {\n        result.warnings.push('Pattern may be too broad and generate false positives');\n      }\n\n      // Check for anchors\n      if (!patternSource.includes('^') && !patternSource.includes('$') && \n          !patternSource.includes('\\\\b')) {\n        result.suggestions.push('Consider using word boundaries (\\\\b) or anchors (^ $) for more precise matching');\n      }\n\n    } catch (error) {\n      result.errors.push(`Invalid regex pattern: ${getErrorMessage(error)}`);\n    }\n  }\n\n  /**\n   * Private: Validate performance characteristics\n   */\n  private async validatePerformance(rule: SecurityRule, result: RuleValidationResult): Promise<void> {\n    try {\n      // Calculate regex complexity\n      const complexity = this.calculateRegexComplexity(rule.pattern.source);\n      result.performance.regexComplexity = complexity;\n\n      if (complexity === 'high') {\n        result.warnings.push('High regex complexity may impact performance');\n      }\n\n      // Test execution time with sample data\n      const sampleCode = this.generateSampleCode(rule.fileExtensions[0]);\n      const testResult = await this.testRule(rule, sampleCode);\n      \n      result.performance.estimatedExecutionTime = testResult.executionTime;\n      result.performance.memoryUsage = this.categorizeMemoryUsage(testResult.memoryUsage);\n\n      if (testResult.executionTime > this.validationConfig.maxExecutionTime) {\n        result.warnings.push(`Execution time (${testResult.executionTime}ms) exceeds threshold`);\n      }\n\n      if (result.performance.memoryUsage === 'high') {\n        result.warnings.push('High memory usage detected during pattern matching');\n      }\n\n    } catch (error) {\n      result.warnings.push(`Performance validation failed: ${getErrorMessage(error)}`);\n    }\n  }\n\n  /**\n   * Private: Validate security aspects\n   */\n  private validateSecurity(rule: SecurityRule, result: RuleValidationResult): void {\n    const patternSource = rule.pattern.source;\n\n    // Check for potential ReDoS patterns\n    const redosPatterns = [\n      /\\(\\.\\*\\+\\)/,\n      /\\(\\.\\+\\*\\)/,\n      /\\(\\[.*\\]\\+\\)\\+/,\n      /\\(\\[.*\\]\\*\\)\\+/,\n    ];\n\n    for (const redosPattern of redosPatterns) {\n      if (redosPattern.test(patternSource)) {\n        result.errors.push('Pattern contains potential ReDoS (Regular Expression Denial of Service) vulnerability');\n        break;\n      }\n    }\n\n    // Check for overly permissive patterns\n    if (patternSource === '.*' || patternSource === '.+') {\n      result.errors.push('Pattern is too permissive and will match everything');\n    }\n\n    // Check for patterns that might leak sensitive data\n    const sensitivePatterns = ['password', 'token', 'key', 'secret'];\n    const lowerPattern = patternSource.toLowerCase();\n    \n    for (const sensitive of sensitivePatterns) {\n      if (lowerPattern.includes(sensitive) && !lowerPattern.includes('\\\\b')) {\n        result.suggestions.push(`Consider using word boundaries when matching '${sensitive}' to avoid false positives`);\n      }\n    }\n\n    // Validate pattern matches intended security issue\n    this.validateSecurityRelevance(rule, result);\n  }\n\n  /**\n   * Private: Run test cases against rule\n   */\n  private async runTestCases(rule: SecurityRule, result: RuleValidationResult): Promise<void> {\n    const testCases = this.testCases.get(rule.id) || this.getDefaultTestCases(rule.category);\n    \n    for (const testCase of testCases) {\n      try {\n        const testResult = await this.testRule(rule, testCase.code);\n        \n        if (testResult.matches.length !== testCase.expectedMatches) {\n          result.warnings.push(\n            `Test case '${testCase.name}': expected ${testCase.expectedMatches} matches, got ${testResult.matches.length}`\n          );\n        }\n\n        // Check expected positions if provided\n        if (testCase.expectedPositions) {\n          for (let i = 0; i < testCase.expectedPositions.length; i++) {\n            const expected = testCase.expectedPositions[i];\n            const actual = testResult.matches[i];\n            \n            if (!actual || actual.line !== expected.line || actual.column !== expected.column) {\n              result.warnings.push(\n                `Test case '${testCase.name}': position mismatch at match ${i + 1}`\n              );\n            }\n          }\n        }\n\n      } catch (error) {\n        result.errors.push(`Test case '${testCase.name}' failed: ${getErrorMessage(error)}`);\n      }\n    }\n  }\n\n  /**\n   * Private: Generate improvement suggestions\n   */\n  private generateSuggestions(rule: SecurityRule, result: RuleValidationResult): void {\n    // Suggest improvements based on category\n    switch (rule.category) {\n      case SecurityRuleCategory.INPUT_VALIDATION:\n        if (!rule.pattern.source.includes('\\\\b')) {\n          result.suggestions.push('Consider using word boundaries for input validation patterns');\n        }\n        break;\n        \n      case SecurityRuleCategory.INJECTION_PREVENTION:\n        if (rule.severity !== SecurityRuleSeverity.HIGH && rule.severity !== SecurityRuleSeverity.CRITICAL) {\n          result.suggestions.push('Injection prevention rules should typically be HIGH or CRITICAL severity');\n        }\n        break;\n        \n      case SecurityRuleCategory.CRYPTOGRAPHY:\n        if (!rule.remediation.toLowerCase().includes('secure')) {\n          result.suggestions.push('Cryptography rules should emphasize secure alternatives in remediation');\n        }\n        break;\n    }\n\n    // Suggest documentation improvements\n    if (rule.references.length === 0) {\n      result.suggestions.push('Add security references (OWASP, CWE, etc.) for better context');\n    }\n\n    if (rule.remediation.length < 50) {\n      result.suggestions.push('Provide more detailed remediation guidance');\n    }\n  }\n\n  /**\n   * Private: Helper methods\n   */\n  private hasCatastrophicBacktracking(pattern: string): boolean {\n    // Simple heuristic for catastrophic backtracking detection\n    const problematicPatterns = [\n      /\\(\\.\\*\\)\\+/,\n      /\\(\\.\\+\\)\\*/,\n      /\\(\\[.*?\\]\\+\\)\\+/,\n      /\\(\\.\\*\\?\\)\\*/,\n    ];\n\n    return problematicPatterns.some(p => p.test(pattern));\n  }\n\n  private calculateRegexComplexity(pattern: string): 'low' | 'medium' | 'high' {\n    let complexity = 0;\n    \n    // Count complex constructs\n    complexity += (pattern.match(/\\(.*?\\)/g) || []).length * 2; // Groups\n    complexity += (pattern.match(/\\[.*?\\]/g) || []).length; // Character classes\n    complexity += (pattern.match(/[+*?{]/g) || []).length; // Quantifiers\n    complexity += (pattern.match(/\\|/g) || []).length * 2; // Alternations\n    complexity += (pattern.match(/\\\\\\w/g) || []).length; // Escape sequences\n\n    if (complexity > 20) {return 'high';}\n    if (complexity > 10) {return 'medium';}\n    return 'low';\n  }\n\n  private categorizeMemoryUsage(bytes: number): 'low' | 'medium' | 'high' {\n    if (bytes > 1024 * 1024) {return 'high';} // > 1MB\n    if (bytes > 100 * 1024) {return 'medium';} // > 100KB\n    return 'low';\n  }\n\n  private generateSampleCode(fileExtension: string): string {\n    const samples: Record<string, string> = {\n      '.js': `\n        const password = \"hardcoded123\";\n        eval(userInput);\n        document.innerHTML = unsafeData;\n        console.log(\"debug info\");\n      `,\n      '.ts': `\n        const apiKey: string = \"sk-1234567890abcdef\";\n        const result = eval(dynamicCode);\n        Math.random();\n      `,\n      '.py': `\n        password = \"secret123\"\n        eval(user_input)\n        exec(dangerous_code)\n      `,\n      '.java': `\n        String password = \"hardcoded\";\n        Runtime.getRuntime().exec(command);\n      `,\n    };\n\n    return samples[fileExtension] || samples['.js'];\n  }\n\n  private validateSecurityRelevance(rule: SecurityRule, result: RuleValidationResult): void {\n    const pattern = rule.pattern.source.toLowerCase();\n    const category = rule.category;\n\n    // Validate pattern relevance to category\n    const categoryPatterns: Record<SecurityRuleCategory, string[]> = {\n      [SecurityRuleCategory.INPUT_VALIDATION]: ['input', 'validate', 'sanitize', 'escape'],\n      [SecurityRuleCategory.INJECTION_PREVENTION]: ['sql', 'inject', 'eval', 'exec'],\n      [SecurityRuleCategory.CRYPTOGRAPHY]: ['crypto', 'random', 'hash', 'encrypt'],\n      [SecurityRuleCategory.ACCESS_CONTROL]: ['auth', 'permission', 'role', 'access'],\n      [SecurityRuleCategory.DATA_PROTECTION]: ['password', 'secret', 'key', 'token'],\n      [SecurityRuleCategory.OUTPUT_ENCODING]: ['innerHTML', 'output', 'encode', 'escape'],\n      [SecurityRuleCategory.ERROR_HANDLING]: ['error', 'exception', 'catch', 'throw'],\n      [SecurityRuleCategory.LOGGING_AUDITING]: ['log', 'audit', 'track', 'monitor'],\n      [SecurityRuleCategory.SESSION_MANAGEMENT]: ['session', 'cookie', 'jwt', 'token'],\n      [SecurityRuleCategory.CONFIGURATION]: ['config', 'setting', 'env', 'property'],\n    };\n\n    const relevantKeywords = categoryPatterns[category] || [];\n    const hasRelevantKeyword = relevantKeywords.some(keyword => \n      pattern.includes(keyword) || rule.name.toLowerCase().includes(keyword)\n    );\n\n    if (!hasRelevantKeyword) {\n      result.warnings.push(`Pattern may not be relevant to category '${category}'`);\n    }\n  }\n\n  private initializeDefaultTestCases(): void {\n    // Add default test cases for common rule categories\n    this.testCases.set('eval-detection', [\n      {\n        name: 'Basic eval usage',\n        code: 'eval(\"alert(1)\")',\n        expectedMatches: 1,\n        description: 'Should detect basic eval usage',\n      },\n      {\n        name: 'No false positives',\n        code: 'const evaluate = () => {}',\n        expectedMatches: 0,\n        description: 'Should not match similar words',\n      },\n    ]);\n  }\n\n  private getDefaultTestCases(category: SecurityRuleCategory): RuleTestCase[] {\n    // Return category-specific default test cases\n    return [];\n  }\n}\n\n// Export singleton instance\nexport const ruleValidator = RuleValidator.getInstance();\n\n// Export convenience methods\nexport const validateRule = ruleValidator.validateRule.bind(ruleValidator);\nexport const testRule = ruleValidator.testRule.bind(ruleValidator);\nexport const validateRules = ruleValidator.validateRules.bind(ruleValidator);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6aee5870a60b45027e9f7b139ee36b0b37b4306b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7o4ma9m8b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7o4ma9m8b();
cov_7o4ma9m8b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7o4ma9m8b().s[1]++;
exports.validateRules = exports.testRule = exports.validateRule = exports.ruleValidator = exports.RuleValidator = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_7o4ma9m8b().s[2]++, require("@/lib/utils/logger"));
const error_handler_1 =
/* istanbul ignore next */
(cov_7o4ma9m8b().s[3]++, require("@/lib/utils/error-handler"));
const code_review_system_1 =
/* istanbul ignore next */
(cov_7o4ma9m8b().s[4]++, require("./code-review-system"));
const logger =
/* istanbul ignore next */
(cov_7o4ma9m8b().s[5]++, new logger_1.Logger('RuleValidator'));
class RuleValidator {
  constructor() {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[0]++;
    cov_7o4ma9m8b().s[6]++;
    this.testCases = new Map();
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[7]++;
    this.validationConfig = {
      maxRegexComplexity: 100,
      maxExecutionTime: 1000,
      // 1 second
      enablePerformanceChecks: true,
      enableSecurityChecks: true
    };
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[8]++;
    this.initializeDefaultTestCases();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[1]++;
    cov_7o4ma9m8b().s[9]++;
    if (!RuleValidator.instance) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[0][0]++;
      cov_7o4ma9m8b().s[10]++;
      RuleValidator.instance = new RuleValidator();
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[0][1]++;
    }
    cov_7o4ma9m8b().s[11]++;
    return RuleValidator.instance;
  }
  /**
   * Validate a security rule
   */
  async validateRule(rule) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[2]++;
    const result =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[12]++, {
      valid: true,
      errors: [],
      warnings: [],
      suggestions: [],
      performance: {
        regexComplexity: 'low',
        estimatedExecutionTime: 0,
        memoryUsage: 'low'
      }
    });
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[13]++;
    try {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[14]++;
      // Basic validation
      this.validateBasicProperties(rule, result);
      // Regex validation
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[15]++;
      this.validateRegexPattern(rule, result);
      // Performance validation
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[16]++;
      if (this.validationConfig.enablePerformanceChecks) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[1][0]++;
        cov_7o4ma9m8b().s[17]++;
        await this.validatePerformance(rule, result);
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[1][1]++;
      }
      // Security validation
      cov_7o4ma9m8b().s[18]++;
      if (this.validationConfig.enableSecurityChecks) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[2][0]++;
        cov_7o4ma9m8b().s[19]++;
        this.validateSecurity(rule, result);
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[2][1]++;
      }
      // Test case validation
      cov_7o4ma9m8b().s[20]++;
      await this.runTestCases(rule, result);
      // Generate suggestions
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[21]++;
      this.generateSuggestions(rule, result);
      // Mark as invalid if there are errors
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[22]++;
      if (result.errors.length > 0) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[3][0]++;
        cov_7o4ma9m8b().s[23]++;
        result.valid = false;
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[3][1]++;
      }
      cov_7o4ma9m8b().s[24]++;
      logger.info('Rule validation completed', {
        ruleId: rule.id,
        valid: result.valid,
        errors: result.errors.length,
        warnings: result.warnings.length
      });
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[25]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[26]++;
      result.valid = false;
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[27]++;
      result.errors.push(`Validation failed: ${(0, error_handler_1.getErrorMessage)(error)}`);
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[28]++;
      logger.error('Rule validation failed', {
        ruleId: rule.id,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[29]++;
      return result;
    }
  }
  /**
   * Test rule against sample code
   */
  async testRule(rule, testCode) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[3]++;
    const startTime =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[30]++, process.hrtime.bigint());
    const initialMemory =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[31]++, process.memoryUsage().heapUsed);
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[32]++;
    try {
      const matches =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[33]++, []);
      const lines =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[34]++, testCode.split('\n'));
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[35]++;
      for (let lineIndex =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[36]++, 0); lineIndex < lines.length; lineIndex++) {
        const line =
        /* istanbul ignore next */
        (cov_7o4ma9m8b().s[37]++, lines[lineIndex]);
        const lineMatches =
        /* istanbul ignore next */
        (cov_7o4ma9m8b().s[38]++, Array.from(line.matchAll(rule.pattern)));
        /* istanbul ignore next */
        cov_7o4ma9m8b().s[39]++;
        for (const match of lineMatches) {
          /* istanbul ignore next */
          cov_7o4ma9m8b().s[40]++;
          matches.push({
            line: lineIndex + 1,
            column: (
            /* istanbul ignore next */
            (cov_7o4ma9m8b().b[4][0]++, match.index) ||
            /* istanbul ignore next */
            (cov_7o4ma9m8b().b[4][1]++, 0)) + 1,
            match: match[0],
            context: line.trim()
          });
        }
      }
      const endTime =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[41]++, process.hrtime.bigint());
      const finalMemory =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[42]++, process.memoryUsage().heapUsed);
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[43]++;
      return {
        matches,
        executionTime: Number(endTime - startTime) / 1000000,
        // Convert to milliseconds
        memoryUsage: finalMemory - initialMemory
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[44]++;
      logger.error('Rule testing failed', {
        ruleId: rule.id,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[45]++;
      throw error;
    }
  }
  /**
   * Batch validate multiple rules
   */
  async validateRules(rules) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[4]++;
    const results =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[46]++, new Map());
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[47]++;
    for (const rule of rules) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[48]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_7o4ma9m8b().s[49]++, await this.validateRule(rule));
        /* istanbul ignore next */
        cov_7o4ma9m8b().s[50]++;
        results.set(rule.id, result);
      } catch (error) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().s[51]++;
        results.set(rule.id, {
          valid: false,
          errors: [`Validation failed: ${(0, error_handler_1.getErrorMessage)(error)}`],
          warnings: [],
          suggestions: [],
          performance: {
            regexComplexity: 'high',
            estimatedExecutionTime: -1,
            memoryUsage: 'high'
          }
        });
      }
    }
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[52]++;
    logger.info('Batch rule validation completed', {
      totalRules: rules.length,
      validRules: Array.from(results.values()).filter(r => {
        /* istanbul ignore next */
        cov_7o4ma9m8b().f[5]++;
        cov_7o4ma9m8b().s[53]++;
        return r.valid;
      }).length,
      invalidRules: Array.from(results.values()).filter(r => {
        /* istanbul ignore next */
        cov_7o4ma9m8b().f[6]++;
        cov_7o4ma9m8b().s[54]++;
        return !r.valid;
      }).length
    });
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[55]++;
    return results;
  }
  /**
   * Add custom test case for a rule
   */
  addTestCase(ruleId, testCase) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[7]++;
    const existingTests =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[56]++,
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[5][0]++, this.testCases.get(ruleId)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[5][1]++, []));
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[57]++;
    existingTests.push(testCase);
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[58]++;
    this.testCases.set(ruleId, existingTests);
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[59]++;
    logger.info('Test case added', {
      ruleId,
      testName: testCase.name
    });
  }
  /**
   * Get test cases for a rule
   */
  getTestCases(ruleId) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[8]++;
    cov_7o4ma9m8b().s[60]++;
    return /* istanbul ignore next */(cov_7o4ma9m8b().b[6][0]++, this.testCases.get(ruleId)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[6][1]++, []);
  }
  /**
   * Update validation configuration
   */
  updateConfig(config) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[9]++;
    cov_7o4ma9m8b().s[61]++;
    this.validationConfig = {
      ...this.validationConfig,
      ...config
    };
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[62]++;
    logger.info('Validation configuration updated', {
      updates: Object.keys(config)
    });
  }
  /**
   * Private: Validate basic rule properties
   */
  validateBasicProperties(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[10]++;
    cov_7o4ma9m8b().s[63]++;
    // Required fields
    if (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[8][0]++, !rule.id) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[8][1]++, typeof rule.id !== 'string')) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[7][0]++;
      cov_7o4ma9m8b().s[64]++;
      result.errors.push('Rule ID is required and must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[7][1]++;
    }
    cov_7o4ma9m8b().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[10][0]++, !rule.name) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[10][1]++, typeof rule.name !== 'string')) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[9][0]++;
      cov_7o4ma9m8b().s[66]++;
      result.errors.push('Rule name is required and must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[9][1]++;
    }
    cov_7o4ma9m8b().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[12][0]++, !rule.description) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[12][1]++, typeof rule.description !== 'string')) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[11][0]++;
      cov_7o4ma9m8b().s[68]++;
      result.errors.push('Rule description is required and must be a string');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[11][1]++;
    }
    // Validate category
    cov_7o4ma9m8b().s[69]++;
    if (!Object.values(code_review_system_1.SecurityRuleCategory).includes(rule.category)) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[13][0]++;
      cov_7o4ma9m8b().s[70]++;
      result.errors.push(`Invalid rule category: ${rule.category}`);
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[13][1]++;
    }
    // Validate severity
    cov_7o4ma9m8b().s[71]++;
    if (!Object.values(code_review_system_1.SecurityRuleSeverity).includes(rule.severity)) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[14][0]++;
      cov_7o4ma9m8b().s[72]++;
      result.errors.push(`Invalid rule severity: ${rule.severity}`);
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[14][1]++;
    }
    // Validate file extensions
    cov_7o4ma9m8b().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[16][0]++, !Array.isArray(rule.fileExtensions)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[16][1]++, rule.fileExtensions.length === 0)) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[15][0]++;
      cov_7o4ma9m8b().s[74]++;
      result.errors.push('Rule must specify at least one file extension');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[15][1]++;
    }
    cov_7o4ma9m8b().s[75]++;
    rule.fileExtensions.forEach(ext => {
      /* istanbul ignore next */
      cov_7o4ma9m8b().f[11]++;
      cov_7o4ma9m8b().s[76]++;
      if (!ext.startsWith('.')) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[17][0]++;
        cov_7o4ma9m8b().s[77]++;
        result.warnings.push(`File extension should start with dot: ${ext}`);
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[17][1]++;
      }
    });
    // Validate remediation
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[19][0]++, !rule.remediation) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[19][1]++, typeof rule.remediation !== 'string')) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[18][0]++;
      cov_7o4ma9m8b().s[79]++;
      result.warnings.push('Rule should include remediation guidance');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[18][1]++;
    }
    // Validate references
    cov_7o4ma9m8b().s[80]++;
    if (!Array.isArray(rule.references)) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[20][0]++;
      cov_7o4ma9m8b().s[81]++;
      result.warnings.push('Rule should include security references');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[20][1]++;
    }
  }
  /**
   * Private: Validate regex pattern
   */
  validateRegexPattern(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[12]++;
    cov_7o4ma9m8b().s[82]++;
    try {
      // Test if regex is valid
      const testString =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[83]++, 'test');
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[84]++;
      rule.pattern.test(testString);
      // Check for common regex issues
      const patternSource =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[85]++, rule.pattern.source);
      // Check for catastrophic backtracking
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[86]++;
      if (this.hasCatastrophicBacktracking(patternSource)) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[21][0]++;
        cov_7o4ma9m8b().s[87]++;
        result.errors.push('Regex pattern may cause catastrophic backtracking');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[21][1]++;
      }
      // Check for case sensitivity
      cov_7o4ma9m8b().s[88]++;
      if (
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[23][0]++, !rule.pattern.flags.includes('i')) &&
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[23][1]++, patternSource.includes('[a-z]'))) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[22][0]++;
        cov_7o4ma9m8b().s[89]++;
        result.warnings.push('Consider making pattern case-insensitive with /i flag');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[22][1]++;
      }
      // Check for global flag
      cov_7o4ma9m8b().s[90]++;
      if (!rule.pattern.flags.includes('g')) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[24][0]++;
        cov_7o4ma9m8b().s[91]++;
        result.warnings.push('Consider using global flag /g to find all matches');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[24][1]++;
      }
      // Check for overly broad patterns
      cov_7o4ma9m8b().s[92]++;
      if (
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[26][0]++, patternSource.includes('.*')) &&
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[26][1]++, patternSource.length < 10)) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[25][0]++;
        cov_7o4ma9m8b().s[93]++;
        result.warnings.push('Pattern may be too broad and generate false positives');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[25][1]++;
      }
      // Check for anchors
      cov_7o4ma9m8b().s[94]++;
      if (
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[28][0]++, !patternSource.includes('^')) &&
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[28][1]++, !patternSource.includes('$')) &&
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[28][2]++, !patternSource.includes('\\b'))) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[27][0]++;
        cov_7o4ma9m8b().s[95]++;
        result.suggestions.push('Consider using word boundaries (\\b) or anchors (^ $) for more precise matching');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[27][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[96]++;
      result.errors.push(`Invalid regex pattern: ${(0, error_handler_1.getErrorMessage)(error)}`);
    }
  }
  /**
   * Private: Validate performance characteristics
   */
  async validatePerformance(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[13]++;
    cov_7o4ma9m8b().s[97]++;
    try {
      // Calculate regex complexity
      const complexity =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[98]++, this.calculateRegexComplexity(rule.pattern.source));
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[99]++;
      result.performance.regexComplexity = complexity;
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[100]++;
      if (complexity === 'high') {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[29][0]++;
        cov_7o4ma9m8b().s[101]++;
        result.warnings.push('High regex complexity may impact performance');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[29][1]++;
      }
      // Test execution time with sample data
      const sampleCode =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[102]++, this.generateSampleCode(rule.fileExtensions[0]));
      const testResult =
      /* istanbul ignore next */
      (cov_7o4ma9m8b().s[103]++, await this.testRule(rule, sampleCode));
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[104]++;
      result.performance.estimatedExecutionTime = testResult.executionTime;
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[105]++;
      result.performance.memoryUsage = this.categorizeMemoryUsage(testResult.memoryUsage);
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[106]++;
      if (testResult.executionTime > this.validationConfig.maxExecutionTime) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[30][0]++;
        cov_7o4ma9m8b().s[107]++;
        result.warnings.push(`Execution time (${testResult.executionTime}ms) exceeds threshold`);
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[30][1]++;
      }
      cov_7o4ma9m8b().s[108]++;
      if (result.performance.memoryUsage === 'high') {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[31][0]++;
        cov_7o4ma9m8b().s[109]++;
        result.warnings.push('High memory usage detected during pattern matching');
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[31][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[110]++;
      result.warnings.push(`Performance validation failed: ${(0, error_handler_1.getErrorMessage)(error)}`);
    }
  }
  /**
   * Private: Validate security aspects
   */
  validateSecurity(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[14]++;
    const patternSource =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[111]++, rule.pattern.source);
    // Check for potential ReDoS patterns
    const redosPatterns =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[112]++, [/\(\.\*\+\)/, /\(\.\+\*\)/, /\(\[.*\]\+\)\+/, /\(\[.*\]\*\)\+/]);
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[113]++;
    for (const redosPattern of redosPatterns) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[114]++;
      if (redosPattern.test(patternSource)) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[32][0]++;
        cov_7o4ma9m8b().s[115]++;
        result.errors.push('Pattern contains potential ReDoS (Regular Expression Denial of Service) vulnerability');
        /* istanbul ignore next */
        cov_7o4ma9m8b().s[116]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[32][1]++;
      }
    }
    // Check for overly permissive patterns
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[117]++;
    if (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[34][0]++, patternSource === '.*') ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[34][1]++, patternSource === '.+')) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[33][0]++;
      cov_7o4ma9m8b().s[118]++;
      result.errors.push('Pattern is too permissive and will match everything');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[33][1]++;
    }
    // Check for patterns that might leak sensitive data
    const sensitivePatterns =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[119]++, ['password', 'token', 'key', 'secret']);
    const lowerPattern =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[120]++, patternSource.toLowerCase());
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[121]++;
    for (const sensitive of sensitivePatterns) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[122]++;
      if (
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[36][0]++, lowerPattern.includes(sensitive)) &&
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[36][1]++, !lowerPattern.includes('\\b'))) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[35][0]++;
        cov_7o4ma9m8b().s[123]++;
        result.suggestions.push(`Consider using word boundaries when matching '${sensitive}' to avoid false positives`);
      } else
      /* istanbul ignore next */
      {
        cov_7o4ma9m8b().b[35][1]++;
      }
    }
    // Validate pattern matches intended security issue
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[124]++;
    this.validateSecurityRelevance(rule, result);
  }
  /**
   * Private: Run test cases against rule
   */
  async runTestCases(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[15]++;
    const testCases =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[125]++,
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[37][0]++, this.testCases.get(rule.id)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[37][1]++, this.getDefaultTestCases(rule.category)));
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[126]++;
    for (const testCase of testCases) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().s[127]++;
      try {
        const testResult =
        /* istanbul ignore next */
        (cov_7o4ma9m8b().s[128]++, await this.testRule(rule, testCase.code));
        /* istanbul ignore next */
        cov_7o4ma9m8b().s[129]++;
        if (testResult.matches.length !== testCase.expectedMatches) {
          /* istanbul ignore next */
          cov_7o4ma9m8b().b[38][0]++;
          cov_7o4ma9m8b().s[130]++;
          result.warnings.push(`Test case '${testCase.name}': expected ${testCase.expectedMatches} matches, got ${testResult.matches.length}`);
        } else
        /* istanbul ignore next */
        {
          cov_7o4ma9m8b().b[38][1]++;
        }
        // Check expected positions if provided
        cov_7o4ma9m8b().s[131]++;
        if (testCase.expectedPositions) {
          /* istanbul ignore next */
          cov_7o4ma9m8b().b[39][0]++;
          cov_7o4ma9m8b().s[132]++;
          for (let i =
          /* istanbul ignore next */
          (cov_7o4ma9m8b().s[133]++, 0); i < testCase.expectedPositions.length; i++) {
            const expected =
            /* istanbul ignore next */
            (cov_7o4ma9m8b().s[134]++, testCase.expectedPositions[i]);
            const actual =
            /* istanbul ignore next */
            (cov_7o4ma9m8b().s[135]++, testResult.matches[i]);
            /* istanbul ignore next */
            cov_7o4ma9m8b().s[136]++;
            if (
            /* istanbul ignore next */
            (cov_7o4ma9m8b().b[41][0]++, !actual) ||
            /* istanbul ignore next */
            (cov_7o4ma9m8b().b[41][1]++, actual.line !== expected.line) ||
            /* istanbul ignore next */
            (cov_7o4ma9m8b().b[41][2]++, actual.column !== expected.column)) {
              /* istanbul ignore next */
              cov_7o4ma9m8b().b[40][0]++;
              cov_7o4ma9m8b().s[137]++;
              result.warnings.push(`Test case '${testCase.name}': position mismatch at match ${i + 1}`);
            } else
            /* istanbul ignore next */
            {
              cov_7o4ma9m8b().b[40][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_7o4ma9m8b().b[39][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_7o4ma9m8b().s[138]++;
        result.errors.push(`Test case '${testCase.name}' failed: ${(0, error_handler_1.getErrorMessage)(error)}`);
      }
    }
  }
  /**
   * Private: Generate improvement suggestions
   */
  generateSuggestions(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[16]++;
    cov_7o4ma9m8b().s[139]++;
    // Suggest improvements based on category
    switch (rule.category) {
      case code_review_system_1.SecurityRuleCategory.INPUT_VALIDATION:
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[42][0]++;
        cov_7o4ma9m8b().s[140]++;
        if (!rule.pattern.source.includes('\\b')) {
          /* istanbul ignore next */
          cov_7o4ma9m8b().b[43][0]++;
          cov_7o4ma9m8b().s[141]++;
          result.suggestions.push('Consider using word boundaries for input validation patterns');
        } else
        /* istanbul ignore next */
        {
          cov_7o4ma9m8b().b[43][1]++;
        }
        cov_7o4ma9m8b().s[142]++;
        break;
      case code_review_system_1.SecurityRuleCategory.INJECTION_PREVENTION:
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[42][1]++;
        cov_7o4ma9m8b().s[143]++;
        if (
        /* istanbul ignore next */
        (cov_7o4ma9m8b().b[45][0]++, rule.severity !== code_review_system_1.SecurityRuleSeverity.HIGH) &&
        /* istanbul ignore next */
        (cov_7o4ma9m8b().b[45][1]++, rule.severity !== code_review_system_1.SecurityRuleSeverity.CRITICAL)) {
          /* istanbul ignore next */
          cov_7o4ma9m8b().b[44][0]++;
          cov_7o4ma9m8b().s[144]++;
          result.suggestions.push('Injection prevention rules should typically be HIGH or CRITICAL severity');
        } else
        /* istanbul ignore next */
        {
          cov_7o4ma9m8b().b[44][1]++;
        }
        cov_7o4ma9m8b().s[145]++;
        break;
      case code_review_system_1.SecurityRuleCategory.CRYPTOGRAPHY:
        /* istanbul ignore next */
        cov_7o4ma9m8b().b[42][2]++;
        cov_7o4ma9m8b().s[146]++;
        if (!rule.remediation.toLowerCase().includes('secure')) {
          /* istanbul ignore next */
          cov_7o4ma9m8b().b[46][0]++;
          cov_7o4ma9m8b().s[147]++;
          result.suggestions.push('Cryptography rules should emphasize secure alternatives in remediation');
        } else
        /* istanbul ignore next */
        {
          cov_7o4ma9m8b().b[46][1]++;
        }
        cov_7o4ma9m8b().s[148]++;
        break;
    }
    // Suggest documentation improvements
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[149]++;
    if (rule.references.length === 0) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[47][0]++;
      cov_7o4ma9m8b().s[150]++;
      result.suggestions.push('Add security references (OWASP, CWE, etc.) for better context');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[47][1]++;
    }
    cov_7o4ma9m8b().s[151]++;
    if (rule.remediation.length < 50) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[48][0]++;
      cov_7o4ma9m8b().s[152]++;
      result.suggestions.push('Provide more detailed remediation guidance');
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[48][1]++;
    }
  }
  /**
   * Private: Helper methods
   */
  hasCatastrophicBacktracking(pattern) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[17]++;
    // Simple heuristic for catastrophic backtracking detection
    const problematicPatterns =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[153]++, [/\(\.\*\)\+/, /\(\.\+\)\*/, /\(\[.*?\]\+\)\+/, /\(\.\*\?\)\*/]);
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[154]++;
    return problematicPatterns.some(p => {
      /* istanbul ignore next */
      cov_7o4ma9m8b().f[18]++;
      cov_7o4ma9m8b().s[155]++;
      return p.test(pattern);
    });
  }
  calculateRegexComplexity(pattern) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[19]++;
    let complexity =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[156]++, 0);
    // Count complex constructs
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[157]++;
    complexity += (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[49][0]++, pattern.match(/\(.*?\)/g)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[49][1]++, [])).length * 2; // Groups
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[158]++;
    complexity += (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[50][0]++, pattern.match(/\[.*?\]/g)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[50][1]++, [])).length; // Character classes
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[159]++;
    complexity += (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[51][0]++, pattern.match(/[+*?{]/g)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[51][1]++, [])).length; // Quantifiers
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[160]++;
    complexity += (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[52][0]++, pattern.match(/\|/g)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[52][1]++, [])).length * 2; // Alternations
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[161]++;
    complexity += (
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[53][0]++, pattern.match(/\\\w/g)) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[53][1]++, [])).length; // Escape sequences
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[162]++;
    if (complexity > 20) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[54][0]++;
      cov_7o4ma9m8b().s[163]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[54][1]++;
    }
    cov_7o4ma9m8b().s[164]++;
    if (complexity > 10) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[55][0]++;
      cov_7o4ma9m8b().s[165]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[55][1]++;
    }
    cov_7o4ma9m8b().s[166]++;
    return 'low';
  }
  categorizeMemoryUsage(bytes) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[20]++;
    cov_7o4ma9m8b().s[167]++;
    if (bytes > 1024 * 1024) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[56][0]++;
      cov_7o4ma9m8b().s[168]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[56][1]++;
    } // > 1MB
    cov_7o4ma9m8b().s[169]++;
    if (bytes > 100 * 1024) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[57][0]++;
      cov_7o4ma9m8b().s[170]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[57][1]++;
    } // > 100KB
    cov_7o4ma9m8b().s[171]++;
    return 'low';
  }
  generateSampleCode(fileExtension) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[21]++;
    const samples =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[172]++, {
      '.js': `
        const password = "hardcoded123";
        eval(userInput);
        document.innerHTML = unsafeData;
        console.log("debug info");
      `,
      '.ts': `
        const apiKey: string = "sk-1234567890abcdef";
        const result = eval(dynamicCode);
        Math.random();
      `,
      '.py': `
        password = "secret123"
        eval(user_input)
        exec(dangerous_code)
      `,
      '.java': `
        String password = "hardcoded";
        Runtime.getRuntime().exec(command);
      `
    });
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[173]++;
    return /* istanbul ignore next */(cov_7o4ma9m8b().b[58][0]++, samples[fileExtension]) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[58][1]++, samples['.js']);
  }
  validateSecurityRelevance(rule, result) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[22]++;
    const pattern =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[174]++, rule.pattern.source.toLowerCase());
    const category =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[175]++, rule.category);
    // Validate pattern relevance to category
    const categoryPatterns =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[176]++, {
      [code_review_system_1.SecurityRuleCategory.INPUT_VALIDATION]: ['input', 'validate', 'sanitize', 'escape'],
      [code_review_system_1.SecurityRuleCategory.INJECTION_PREVENTION]: ['sql', 'inject', 'eval', 'exec'],
      [code_review_system_1.SecurityRuleCategory.CRYPTOGRAPHY]: ['crypto', 'random', 'hash', 'encrypt'],
      [code_review_system_1.SecurityRuleCategory.ACCESS_CONTROL]: ['auth', 'permission', 'role', 'access'],
      [code_review_system_1.SecurityRuleCategory.DATA_PROTECTION]: ['password', 'secret', 'key', 'token'],
      [code_review_system_1.SecurityRuleCategory.OUTPUT_ENCODING]: ['innerHTML', 'output', 'encode', 'escape'],
      [code_review_system_1.SecurityRuleCategory.ERROR_HANDLING]: ['error', 'exception', 'catch', 'throw'],
      [code_review_system_1.SecurityRuleCategory.LOGGING_AUDITING]: ['log', 'audit', 'track', 'monitor'],
      [code_review_system_1.SecurityRuleCategory.SESSION_MANAGEMENT]: ['session', 'cookie', 'jwt', 'token'],
      [code_review_system_1.SecurityRuleCategory.CONFIGURATION]: ['config', 'setting', 'env', 'property']
    });
    const relevantKeywords =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[177]++,
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[59][0]++, categoryPatterns[category]) ||
    /* istanbul ignore next */
    (cov_7o4ma9m8b().b[59][1]++, []));
    const hasRelevantKeyword =
    /* istanbul ignore next */
    (cov_7o4ma9m8b().s[178]++, relevantKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_7o4ma9m8b().f[23]++;
      cov_7o4ma9m8b().s[179]++;
      return /* istanbul ignore next */(cov_7o4ma9m8b().b[60][0]++, pattern.includes(keyword)) ||
      /* istanbul ignore next */
      (cov_7o4ma9m8b().b[60][1]++, rule.name.toLowerCase().includes(keyword));
    }));
    /* istanbul ignore next */
    cov_7o4ma9m8b().s[180]++;
    if (!hasRelevantKeyword) {
      /* istanbul ignore next */
      cov_7o4ma9m8b().b[61][0]++;
      cov_7o4ma9m8b().s[181]++;
      result.warnings.push(`Pattern may not be relevant to category '${category}'`);
    } else
    /* istanbul ignore next */
    {
      cov_7o4ma9m8b().b[61][1]++;
    }
  }
  initializeDefaultTestCases() {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[24]++;
    cov_7o4ma9m8b().s[182]++;
    // Add default test cases for common rule categories
    this.testCases.set('eval-detection', [{
      name: 'Basic eval usage',
      code: 'eval("alert(1)")',
      expectedMatches: 1,
      description: 'Should detect basic eval usage'
    }, {
      name: 'No false positives',
      code: 'const evaluate = () => {}',
      expectedMatches: 0,
      description: 'Should not match similar words'
    }]);
  }
  getDefaultTestCases(category) {
    /* istanbul ignore next */
    cov_7o4ma9m8b().f[25]++;
    cov_7o4ma9m8b().s[183]++;
    // Return category-specific default test cases
    return [];
  }
}
/* istanbul ignore next */
cov_7o4ma9m8b().s[184]++;
exports.RuleValidator = RuleValidator;
// Export singleton instance
/* istanbul ignore next */
cov_7o4ma9m8b().s[185]++;
exports.ruleValidator = RuleValidator.getInstance();
// Export convenience methods
/* istanbul ignore next */
cov_7o4ma9m8b().s[186]++;
exports.validateRule = exports.ruleValidator.validateRule.bind(exports.ruleValidator);
/* istanbul ignore next */
cov_7o4ma9m8b().s[187]++;
exports.testRule = exports.ruleValidator.testRule.bind(exports.ruleValidator);
/* istanbul ignore next */
cov_7o4ma9m8b().s[188]++;
exports.validateRules = exports.ruleValidator.validateRules.bind(exports.ruleValidator);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,