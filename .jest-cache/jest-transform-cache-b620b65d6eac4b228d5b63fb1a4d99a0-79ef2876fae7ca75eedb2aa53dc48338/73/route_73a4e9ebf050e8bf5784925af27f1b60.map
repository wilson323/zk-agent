{"version":3,"names":["cov_2kn6i57vld","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","zod_1","user_service_1","stats_service_1","middleware_1","exports","GET","createApiRoute","RouteConfigs","protectedGet","req","validatedQuery","currentUser","getCurrentUser","ApiResponseWrapper","error","ErrorCode","AUTHORIZATION_ERROR","searchParams","URL","url","validationResult","getUsersSchema","safeParse","Object","fromEntries","success","VALIDATION_ERROR","errors","message","page","limit","search","role","status","data","pageNum","Number","parseInt","limitNum","skip","where","OR","contains","mode","email","users","pagination","getUsers","total","pages","Math","ceil","INTERNAL_SERVER_ERROR","POST","protectedPost","validatedBody","newUser","createUser","createUsageStats","userId","agentType","action","metadata","targetUserId","id","targetUserEmail","z","object","string","default","optional","enum"],"sources":["E:\\zk-agent\\app\\api\\admin\\users\\route.ts"],"sourcesContent":["/**\n * @file admin\\users\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '../../../../lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '../../../../lib/utils/api-helper';\nimport { ErrorCode } from '../../../../types/core';\nimport { z } from 'zod';\nimport { getUsers, createUser } from '../../../../lib/services/user-service';\nimport { createUsageStats } from '../../../../lib/services/stats-service';\nimport { getCurrentUser } from '../../../../lib/auth/middleware';\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { validatedQuery: validatedQuery }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser['role'] !== 'admin') {\n        return ApiResponseWrapper.error(ErrorCode.AUTHORIZATION_ERROR, '权限不足', null);\n      }\n\n      const { searchParams } = new URL(req.url);\n  const validationResult = getUsersSchema.safeParse(Object.fromEntries(searchParams));\n\n  if (!validationResult.success) {\n        return ApiResponseWrapper.error(\n          ErrorCode.VALIDATION_ERROR,\n          validationResult.error.errors[0]?.message || '验证失败',\n          null,\n          400\n        );\n      }\n\n      const { page, limit, search, role, status } = validationResult.data;\n      const pageNum = Number.parseInt(page);\n      const limitNum = Number.parseInt(limit);\n      const skip = (pageNum - 1) * limitNum;\n\n      // 构建查询条件\n      const where: any = {};\n      if (search) {\n        where.OR = [\n          { name: { contains: search, mode: 'insensitive' } },\n          { email: { contains: search, mode: 'insensitive' } },\n        ];\n      }\n      if (role) {\n        where.role = role;\n      }\n      if (status) {\n        where.status = status;\n      }\n\n      const { users, pagination } = await getUsers({\n        where,\n        skip: skip,\n        limit: limitNum,\n      });\n      const total = pagination.total;\n\n      return ApiResponseWrapper.success({\n        success: true,\n        data: {\n          users,\n          pagination: {\n            page: pageNum,\n            limit: limitNum,\n            total,\n            pages: Math.ceil(total / limitNum),\n          },\n        },\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR,\n        '获取用户列表失败',\n        null,\n        500\n      );\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { validatedBody }) => {\n    try {\n      const currentUser = getCurrentUser(req);\n      if (!currentUser || currentUser['role'] !== 'admin') {\n        return ApiResponseWrapper.error(ErrorCode.AUTHORIZATION_ERROR, '权限不足', null, 403);\n      }\n\n      const { email, name, role } = validatedBody;\n\n      const newUser = await createUser({ email, name, role });\n\n      if (newUser) {\n        await createUsageStats({\n          userId: currentUser.userId,\n          agentType: 'admin',\n          action: 'create_user',\n          metadata: {\n            targetUserId: newUser.id,\n            targetUserEmail: newUser.email,\n          },\n          req,\n        });\n      }\n\n      // The logging logic is expected to be moved into the createUser service\n\n      return ApiResponseWrapper.success({\n        success: true,\n        data: newUser,\n        message: '用户创建成功',\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, '创建用户失败', null, 500);\n    }\n  }\n);\n\n// Schema for getting users\nconst getUsersSchema = z.object({\n  page: z.string().default('1'),\n  limit: z.string().default('10'),\n  search: z.string().optional(),\n  role: z.enum(['USER', 'ADMIN']).optional(),\n  status: z.enum(['ACTIVE', 'INACTIVE', 'SUSPENDED', 'DELETED']).optional(),\n});\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}