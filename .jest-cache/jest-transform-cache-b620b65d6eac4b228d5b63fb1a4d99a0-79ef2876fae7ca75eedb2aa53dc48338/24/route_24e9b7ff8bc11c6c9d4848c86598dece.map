{"version":3,"names":["cov_1pwpu6hjzw","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","exports","GET","createApiRoute","RouteConfigs","publicGet","req","params","validatedBody","validatedQuery","user","requestId","ApiResponseWrapper","success","message","timestamp","Date","toISOString","error","status","POST","protectedPost","body","json","data","PUT","protectedPut","DELETE","method","requireAuth","timeout","_req"],"sources":["E:\\zk-agent\\app\\api\\v1\\route.ts"],"sourcesContent":["/**\n * @file v1\\route.ts\n * @description API v1 route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      return ApiResponseWrapper.success({\n        success: true,\n        version: 'v1',\n        message: 'API v1 is running',\n        timestamp: new Date().toISOString(),\n      })\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      )\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json()\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        message: 'POST request processed',\n        data: body,\n        timestamp: new Date().toISOString(),\n      })\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      )\n    }\n  }\n);\n\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json()\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        message: 'PUT request processed',\n        data: body,\n        timestamp: new Date().toISOString(),\n      })\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      )\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  { method: 'DELETE', requireAuth: true, timeout: 60000 },\n  async (_req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      return ApiResponseWrapper.success({\n        success: true,\n        message: 'DELETE request processed',\n        timestamp: new Date().toISOString(),\n      })\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      )\n    }\n  }\n);"],"mappings":"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","ignoreList":[]}