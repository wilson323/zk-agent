{"version":3,"names":["cov_1lgwl7saz","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","msw_1","require","mockUsers","id","username","email","avatar","role","profile","firstName","lastName","bio","company","location","website","preferences","theme","language","notifications","push","sms","subscription","plan","status","expiresAt","Date","usage","chatMessages","cadAnalyses","posterGenerations","storageUsed","limits","storageLimit","createdAt","lastLoginAt","isActive","currentUser","generateToken","user","header","btoa","JSON","stringify","alg","typ","payload","sub","exp","Math","floor","now","signature","exports","authHandlers","http","post","request","body","json","find","u","HttpResponse","success","message","password","token","data","expiresIn","existingUser","existingUsername","newUser","get","authHeader","headers","startsWith","put","currentPassword","newToken","usagePercentage","storage","percentage","length"],"sources":["E:\\zk-agent\\lib\\mocks\\handlers\\auth.ts"],"sourcesContent":["// @ts-nocheck\n/**\r\n * @file Auth Mock Handlers\r\n * @description 认证相关的Mock API处理器\r\n * @author ZK-Agent Team A\r\n * @date 2024-12-19\r\n */\r\n\r\nimport { http, HttpResponse } from 'msw'\r\n\r\n// 用户类型\r\ninterface User {\r\n  id: string\r\n  username: string\r\n  email: string\r\n  avatar?: string\r\n  role: 'admin' | 'user' | 'premium'\r\n  profile: {\r\n    firstName: string\r\n    lastName: string\r\n    bio?: string\r\n    company?: string\r\n    location?: string\r\n    website?: string\r\n  }\r\n  preferences: {\r\n    theme: 'light' | 'dark' | 'auto'\r\n    language: string\r\n    notifications: {\r\n      email: boolean\r\n      push: boolean\r\n      sms: boolean\r\n    }\r\n  }\r\n  subscription: {\r\n    plan: 'free' | 'pro' | 'enterprise'\r\n    status: 'active' | 'inactive' | 'expired'\r\n    expiresAt?: Date\r\n  }\r\n  usage: {\r\n    chatMessages: number\r\n    cadAnalyses: number\r\n    posterGenerations: number\r\n    storageUsed: number // bytes\r\n  }\r\n  limits: {\r\n    chatMessages: number\r\n    cadAnalyses: number\r\n    posterGenerations: number\r\n    storageLimit: number // bytes\r\n  }\r\n  createdAt: Date\r\n  lastLoginAt?: Date\r\n  isActive: boolean\r\n}\r\n\r\n// Mock用户数据\r\nconst mockUsers: User[] = [\r\n  {\r\n    id: 'user-001',\r\n    username: 'demo_user',\r\n    email: 'demo@example.com',\r\n    avatar: '/avatars/demo.jpg',\r\n    role: 'user',\r\n    profile: {\r\n      firstName: '演示',\r\n      lastName: '用户',\r\n      bio: '这是一个演示用户账户',\r\n      company: 'ZK-Agent',\r\n      location: '北京',\r\n      website: 'https://zk-agent.com'\r\n    },\r\n    preferences: {\r\n      theme: 'light',\r\n      language: 'zh-CN',\r\n      notifications: {\r\n        email: true,\r\n        push: true,\r\n        sms: false\r\n      }\r\n    },\r\n    subscription: {\r\n      plan: 'pro',\r\n      status: 'active',\r\n      expiresAt: new Date('2025-12-31')\r\n    },\r\n    usage: {\r\n      chatMessages: 1250,\r\n      cadAnalyses: 45,\r\n      posterGenerations: 120,\r\n      storageUsed: 1024 * 1024 * 500 // 500MB\r\n    },\r\n    limits: {\r\n      chatMessages: 10000,\r\n      cadAnalyses: 100,\r\n      posterGenerations: 500,\r\n      storageLimit: 1024 * 1024 * 1024 * 5 // 5GB\r\n    },\r\n    createdAt: new Date('2024-01-15'),\r\n    lastLoginAt: new Date('2024-12-19T08:30:00Z'),\r\n    isActive: true\r\n  }\r\n]\r\n\r\n// 当前登录用户\r\nlet currentUser: User | null = null\r\n\r\n// JWT Token模拟\r\nconst generateToken = (user: User) => {\r\n  const header = btoa(JSON.stringify({ alg: 'HS256', typ: 'JWT' }))\r\n  const payload = btoa(JSON.stringify({ \r\n    sub: user.id, \r\n    email: user.email, \r\n    role: user.role,\r\n    exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 24小时过期\r\n  }))\r\n  const signature = btoa('mock-signature')\r\n  return `${header}.${payload}.${signature}`\r\n}\r\n\r\nexport const authHandlers = [\r\n  // 用户登录\r\n  http.post('/api/auth/login', async ({ request }) => {\r\n    const body = await request.json() as { email: string; password: string }\r\n    \r\n    // 简单的登录验证\r\n    const user = mockUsers.find(u => u.email === body.email)\r\n    \r\n    if (!user) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '用户不存在' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    if (!user.isActive) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '账户已被禁用' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    // 模拟密码验证（实际应用中应该使用加密密码）\r\n    if (body.password !== 'demo123') {\r\n      return HttpResponse.json(\r\n        { success: false, message: '密码错误' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    // 更新最后登录时间\r\n    user.lastLoginAt = new Date()\r\n    currentUser = user\r\n\r\n    const token = generateToken(user)\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: {\r\n        user: {\r\n          id: user.id,\r\n          username: user.username,\r\n          email: user.email,\r\n          avatar: user.avatar,\r\n          role: user.role,\r\n          profile: user.profile,\r\n          subscription: user.subscription\r\n        },\r\n        token,\r\n        expiresIn: 86400 // 24小时\r\n      }\r\n    })\r\n  }),\r\n\r\n  // 用户注册\r\n  http.post('/api/auth/register', async ({ request }) => {\r\n    const body = await request.json() as {\r\n      username: string\r\n      email: string\r\n      password: string\r\n      firstName: string\r\n      lastName: string\r\n    }\r\n\r\n    // 检查邮箱是否已存在\r\n    const existingUser = mockUsers.find(u => u.email === body.email)\r\n    if (existingUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '邮箱已被注册' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // 检查用户名是否已存在\r\n    const existingUsername = mockUsers.find(u => u.username === body.username)\r\n    if (existingUsername) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '用户名已被使用' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // 创建新用户\r\n    const newUser: User = {\r\n      id: `user-${Date.now()}`,\r\n      username: body.username,\r\n      email: body.email,\r\n      role: 'user',\r\n      profile: {\r\n        firstName: body.firstName,\r\n        lastName: body.lastName\r\n      },\r\n      preferences: {\r\n        theme: 'light',\r\n        language: 'zh-CN',\r\n        notifications: {\r\n          email: true,\r\n          push: true,\r\n          sms: false\r\n        }\r\n      },\r\n      subscription: {\r\n        plan: 'free',\r\n        status: 'active'\r\n      },\r\n      usage: {\r\n        chatMessages: 0,\r\n        cadAnalyses: 0,\r\n        posterGenerations: 0,\r\n        storageUsed: 0\r\n      },\r\n      limits: {\r\n        chatMessages: 100,\r\n        cadAnalyses: 5,\r\n        posterGenerations: 10,\r\n        storageLimit: 1024 * 1024 * 100 // 100MB\r\n      },\r\n      createdAt: new Date(),\r\n      isActive: true\r\n    }\r\n\r\n    mockUsers.push(newUser)\r\n    currentUser = newUser\r\n\r\n    const token = generateToken(newUser)\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: {\r\n        user: {\r\n          id: newUser.id,\r\n          username: newUser.username,\r\n          email: newUser.email,\r\n          avatar: newUser.avatar,\r\n          role: newUser.role,\r\n          profile: newUser.profile,\r\n          subscription: newUser.subscription\r\n        },\r\n        token,\r\n        expiresIn: 86400\r\n      }\r\n    }, { status: 201 })\r\n  }),\r\n\r\n  // 获取当前用户信息\r\n  http.get('/api/auth/me', ({ request }) => {\r\n    const authHeader = request.headers.get('Authorization')\r\n    \r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '未授权访问' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    if (!currentUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '用户未登录' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: currentUser\r\n    })\r\n  }),\r\n\r\n  // 更新用户资料\r\n  http.put('/api/auth/profile', async ({ request }) => {\r\n    const authHeader = request.headers.get('Authorization')\r\n    \r\n    if (!authHeader || !currentUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '未授权访问' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const body = await request.json() as Partial<User['profile']>\r\n    \r\n    currentUser.profile = { ...currentUser.profile, ...body }\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: currentUser\r\n    })\r\n  }),\r\n\r\n  // 更新用户偏好设置\r\n  http.put('/api/auth/preferences', async ({ request }) => {\r\n    const authHeader = request.headers.get('Authorization')\r\n    \r\n    if (!authHeader || !currentUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '未授权访问' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const body = await request.json() as Partial<User['preferences']>\r\n    \r\n    currentUser.preferences = { ...currentUser.preferences, ...body }\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: currentUser\r\n    })\r\n  }),\r\n\r\n  // 修改密码\r\n  http.post('/api/auth/change-password', async ({ request }) => {\r\n    const authHeader = request.headers.get('Authorization')\r\n    \r\n    if (!authHeader || !currentUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '未授权访问' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const body = await request.json() as {\r\n      currentPassword: string\r\n      newPassword: string\r\n    }\r\n\r\n    // 验证当前密码\r\n    if (body.currentPassword !== 'demo123') {\r\n      return HttpResponse.json(\r\n        { success: false, message: '当前密码错误' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // 模拟密码更新\r\n    return HttpResponse.json({\r\n      success: true,\r\n      message: '密码修改成功'\r\n    })\r\n  }),\r\n\r\n  // 用户登出\r\n  http.post('/api/auth/logout', () => {\r\n    currentUser = null\r\n    \r\n    return HttpResponse.json({\r\n      success: true,\r\n      message: '登出成功'\r\n    })\r\n  }),\r\n\r\n  // 刷新Token\r\n  http.post('/api/auth/refresh', ({ request }) => {\r\n    const authHeader = request.headers.get('Authorization')\r\n    \r\n    if (!authHeader || !currentUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '未授权访问' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const newToken = generateToken(currentUser)\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: {\r\n        token: newToken,\r\n        expiresIn: 86400\r\n      }\r\n    })\r\n  }),\r\n\r\n  // 获取用户使用统计\r\n  http.get('/api/auth/usage', ({ request }) => {\r\n    const authHeader = request.headers.get('Authorization')\r\n    \r\n    if (!authHeader || !currentUser) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '未授权访问' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const usagePercentage = {\r\n      chatMessages: (currentUser.usage.chatMessages / currentUser.limits.chatMessages) * 100,\r\n      cadAnalyses: (currentUser.usage.cadAnalyses / currentUser.limits.cadAnalyses) * 100,\r\n      posterGenerations: (currentUser.usage.posterGenerations / currentUser.limits.posterGenerations) * 100,\r\n      storage: (currentUser.usage.storageUsed / currentUser.limits.storageLimit) * 100\r\n    }\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      data: {\r\n        usage: currentUser.usage,\r\n        limits: currentUser.limits,\r\n        percentage: usagePercentage,\r\n        subscription: currentUser.subscription\r\n      }\r\n    })\r\n  }),\r\n\r\n  // 忘记密码\r\n  http.post('/api/auth/forgot-password', async ({ request }) => {\r\n    const body = await request.json() as { email: string }\r\n    \r\n    const user = mockUsers.find(u => u.email === body.email)\r\n    \r\n    if (!user) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '邮箱不存在' },\r\n        { status: 404 }\r\n      )\r\n    }\r\n\r\n    // 模拟发送重置邮件\r\n    return HttpResponse.json({\r\n      success: true,\r\n      message: '密码重置邮件已发送'\r\n    })\r\n  }),\r\n\r\n  // 重置密码\r\n  http.post('/api/auth/reset-password', async ({ request }) => {\r\n    const body = await request.json() as {\r\n      token: string\r\n      newPassword: string\r\n    }\r\n\r\n    // 模拟token验证\r\n    if (!body.token || body.token.length < 10) {\r\n      return HttpResponse.json(\r\n        { success: false, message: '无效的重置令牌' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    return HttpResponse.json({\r\n      success: true,\r\n      message: '密码重置成功'\r\n    })\r\n  })\r\n] "],"mappings":"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","ignoreList":[]}