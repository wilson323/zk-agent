5740ae762e1256906f22f174ae84e46a
"use strict";

/**
 * @file lib/database/enhanced-database-manager.ts
 * @description 增强数据库管理器 - B团队核心组件
 * @author B团队数据库架构师
 * @lastUpdate 2024-12-19
 * @performance 数据库查询≤100ms，强制事务，连接池管理
 */
/* istanbul ignore next */
function cov_1okmjd2ydn() {
  var path = "E:\\zk-agent\\lib\\database\\enhanced-database-manager.ts";
  var hash = "6d0cf5517ad6b6ae4d056ae048ddc1a48ed0b095";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\enhanced-database-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 140
        }
      },
      "2": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "3": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 58
        }
      },
      "5": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "15": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "20": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "22": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 82
        }
      },
      "23": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "24": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 65
        }
      },
      "25": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 75,
          column: 15
        }
      },
      "26": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 68
        }
      },
      "27": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "28": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 89
        }
      },
      "29": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 90
        }
      },
      "30": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "31": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "32": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "33": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 94
        }
      },
      "34": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 92,
          column: 15
        }
      },
      "35": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 91,
          column: 19
        }
      },
      "36": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "37": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 61
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "39": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 98
        }
      },
      "40": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "41": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 50
        }
      },
      "42": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 108,
          column: 39
        }
      },
      "43": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "44": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 52
        }
      },
      "45": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "46": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 123,
          column: 19
        }
      },
      "47": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "48": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "49": {
        start: {
          line: 129,
          column: 34
        },
        end: {
          line: 129,
          column: 71
        }
      },
      "50": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 52
        }
      },
      "51": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "52": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "53": {
        start: {
          line: 144,
          column: 30
        },
        end: {
          line: 144,
          column: 58
        }
      },
      "54": {
        start: {
          line: 145,
          column: 26
        },
        end: {
          line: 145,
          column: 36
        }
      },
      "55": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "56": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 71
        }
      },
      "57": {
        start: {
          line: 148,
          column: 27
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "58": {
        start: {
          line: 153,
          column: 29
        },
        end: {
          line: 153,
          column: 51
        }
      },
      "59": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "60": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 26
        }
      },
      "61": {
        start: {
          line: 161,
          column: 29
        },
        end: {
          line: 161,
          column: 51
        }
      },
      "62": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "63": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 24
        }
      },
      "64": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 46
        }
      },
      "65": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 175,
          column: 36
        }
      },
      "66": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "67": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "68": {
        start: {
          line: 179,
          column: 31
        },
        end: {
          line: 179,
          column: 58
        }
      },
      "69": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "70": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 74
        }
      },
      "71": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 34
        }
      },
      "72": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 186,
          column: 42
        }
      },
      "73": {
        start: {
          line: 187,
          column: 29
        },
        end: {
          line: 187,
          column: 51
        }
      },
      "74": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "75": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 52
        }
      },
      "76": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 203,
          column: 15
        }
      },
      "77": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "78": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 75
        }
      },
      "79": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "80": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 214,
          column: 19
        }
      },
      "81": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 26
        }
      },
      "82": {
        start: {
          line: 219,
          column: 29
        },
        end: {
          line: 219,
          column: 51
        }
      },
      "83": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "84": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "85": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 24
        }
      },
      "86": {
        start: {
          line: 240,
          column: 24
        },
        end: {
          line: 240,
          column: 26
        }
      },
      "87": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 62
        }
      },
      "88": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "89": {
        start: {
          line: 243,
          column: 33
        },
        end: {
          line: 243,
          column: 87
        }
      },
      "90": {
        start: {
          line: 243,
          column: 74
        },
        end: {
          line: 243,
          column: 85
        }
      },
      "91": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 42
        }
      },
      "92": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 23
        }
      },
      "93": {
        start: {
          line: 252,
          column: 26
        },
        end: {
          line: 252,
          column: 36
        }
      },
      "94": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "95": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 69
        }
      },
      "96": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 50
        }
      },
      "97": {
        start: {
          line: 258,
          column: 31
        },
        end: {
          line: 258,
          column: 80
        }
      },
      "98": {
        start: {
          line: 260,
          column: 30
        },
        end: {
          line: 260,
          column: 92
        }
      },
      "99": {
        start: {
          line: 262,
          column: 33
        },
        end: {
          line: 262,
          column: 61
        }
      },
      "100": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "101": {
        start: {
          line: 275,
          column: 28
        },
        end: {
          line: 275,
          column: 50
        }
      },
      "102": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 88
        }
      },
      "103": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 281,
          column: 15
        }
      },
      "104": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 291,
          column: 14
        }
      },
      "105": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 62
        }
      },
      "106": {
        start: {
          line: 299,
          column: 30
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "107": {
        start: {
          line: 299,
          column: 50
        },
        end: {
          line: 299,
          column: 83
        }
      },
      "108": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "109": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 307,
          column: 14
        }
      },
      "110": {
        start: {
          line: 309,
          column: 29
        },
        end: {
          line: 309,
          column: 49
        }
      },
      "111": {
        start: {
          line: 310,
          column: 31
        },
        end: {
          line: 310,
          column: 99
        }
      },
      "112": {
        start: {
          line: 310,
          column: 64
        },
        end: {
          line: 310,
          column: 80
        }
      },
      "113": {
        start: {
          line: 311,
          column: 28
        },
        end: {
          line: 311,
          column: 98
        }
      },
      "114": {
        start: {
          line: 311,
          column: 54
        },
        end: {
          line: 311,
          column: 90
        }
      },
      "115": {
        start: {
          line: 312,
          column: 29
        },
        end: {
          line: 312,
          column: 57
        }
      },
      "116": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 320,
          column: 10
        }
      },
      "117": {
        start: {
          line: 326,
          column: 23
        },
        end: {
          line: 326,
          column: 47
        }
      },
      "118": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "119": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 24
        }
      },
      "120": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "121": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 40
        }
      },
      "122": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 24
        }
      },
      "123": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 22
        }
      },
      "124": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 27
        }
      },
      "125": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "126": {
        start: {
          line: 346,
          column: 23
        },
        end: {
          line: 346,
          column: 59
        }
      },
      "127": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "128": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 21
        }
      },
      "129": {
        start: {
          line: 350,
          column: 26
        },
        end: {
          line: 350,
          column: 76
        }
      },
      "130": {
        start: {
          line: 350,
          column: 56
        },
        end: {
          line: 350,
          column: 72
        }
      },
      "131": {
        start: {
          line: 351,
          column: 30
        },
        end: {
          line: 351,
          column: 55
        }
      },
      "132": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 85
        }
      },
      "133": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 365,
          column: 18
        }
      },
      "134": {
        start: {
          line: 359,
          column: 24
        },
        end: {
          line: 359,
          column: 34
        }
      },
      "135": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "136": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 363,
          column: 17
        }
      },
      "137": {
        start: {
          line: 362,
          column: 20
        },
        end: {
          line: 362,
          column: 48
        }
      },
      "138": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "139": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "140": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 390,
          column: 15
        }
      },
      "141": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 80
        }
      },
      "142": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 77
        }
      },
      "143": {
        start: {
          line: 403,
          column: 23
        },
        end: {
          line: 403,
          column: 25
        }
      },
      "144": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "145": {
        start: {
          line: 404,
          column: 21
        },
        end: {
          line: 404,
          column: 22
        }
      },
      "146": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 50
        }
      },
      "147": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 22
        }
      },
      "148": {
        start: {
          line: 410,
          column: 29
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "149": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "150": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "151": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 36
        }
      },
      "152": {
        start: {
          line: 419,
          column: 17
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "153": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 38
        }
      },
      "154": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 36
        }
      },
      "155": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 28
        }
      },
      "156": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 440,
          column: 10
        }
      },
      "157": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 64
        }
      },
      "158": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 462,
          column: 9
        }
      },
      "159": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 60
        }
      },
      "160": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 60
        }
      },
      "161": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 44
        }
      },
      "162": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 30
        }
      },
      "163": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 67
        }
      },
      "164": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 461,
          column: 15
        }
      },
      "165": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 27
        }
      },
      "166": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 32
        }
      },
      "167": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 48
        }
      },
      "168": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 44
        }
      },
      "169": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 72
        }
      },
      "170": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 36
        }
      },
      "171": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "172": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 30
        }
      },
      "173": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 70
        }
      },
      "174": {
        start: {
          line: 495,
          column: 0
        },
        end: {
          line: 495,
          column: 58
        }
      },
      "175": {
        start: {
          line: 497,
          column: 0
        },
        end: {
          line: 497,
          column: 72
        }
      },
      "176": {
        start: {
          line: 499,
          column: 0
        },
        end: {
          line: 499,
          column: 63
        }
      },
      "177": {
        start: {
          line: 501,
          column: 0
        },
        end: {
          line: 501,
          column: 118
        }
      },
      "178": {
        start: {
          line: 503,
          column: 0
        },
        end: {
          line: 503,
          column: 106
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 26
          }
        },
        loc: {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 37,
            column: 9
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 39
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 68
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 73,
            column: 62
          },
          end: {
            line: 73,
            column: 63
          }
        },
        loc: {
          start: {
            line: 73,
            column: 68
          },
          end: {
            line: 75,
            column: 13
          }
        },
        line: 73
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 58
          },
          end: {
            line: 76,
            column: 59
          }
        },
        loc: {
          start: {
            line: 76,
            column: 69
          },
          end: {
            line: 79,
            column: 13
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 64
          },
          end: {
            line: 80,
            column: 65
          }
        },
        loc: {
          start: {
            line: 80,
            column: 70
          },
          end: {
            line: 82,
            column: 13
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 80
          },
          end: {
            line: 83,
            column: 81
          }
        },
        loc: {
          start: {
            line: 83,
            column: 91
          },
          end: {
            line: 85,
            column: 13
          }
        },
        line: 83
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 87,
            column: 69
          },
          end: {
            line: 87,
            column: 70
          }
        },
        loc: {
          start: {
            line: 87,
            column: 81
          },
          end: {
            line: 92,
            column: 13
          }
        },
        line: 87
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 93,
            column: 65
          },
          end: {
            line: 93,
            column: 66
          }
        },
        loc: {
          start: {
            line: 93,
            column: 76
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 93
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 105
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 106,
            column: 34
          }
        },
        loc: {
          start: {
            line: 106,
            column: 40
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 106
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 133,
            column: 33
          },
          end: {
            line: 133,
            column: 34
          }
        },
        loc: {
          start: {
            line: 133,
            column: 40
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 133
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 50
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 173
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 51
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 239
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 243,
            column: 61
          },
          end: {
            line: 243,
            column: 62
          }
        },
        loc: {
          start: {
            line: 243,
            column: 74
          },
          end: {
            line: 243,
            column: 85
          }
        },
        line: 243
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 24
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 251
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 24
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 297
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 299,
            column: 45
          },
          end: {
            line: 299,
            column: 46
          }
        },
        loc: {
          start: {
            line: 299,
            column: 50
          },
          end: {
            line: 299,
            column: 83
          }
        },
        line: 299
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 310,
            column: 52
          },
          end: {
            line: 310,
            column: 53
          }
        },
        loc: {
          start: {
            line: 310,
            column: 64
          },
          end: {
            line: 310,
            column: 80
          }
        },
        line: 310
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 311,
            column: 49
          },
          end: {
            line: 311,
            column: 50
          }
        },
        loc: {
          start: {
            line: 311,
            column: 54
          },
          end: {
            line: 311,
            column: 90
          }
        },
        line: 311
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 22
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 325
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 29
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 337
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 28
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 345
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 350,
            column: 40
          },
          end: {
            line: 350,
            column: 41
          }
        },
        loc: {
          start: {
            line: 350,
            column: 56
          },
          end: {
            line: 350,
            column: 72
          }
        },
        line: 350
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 357
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 358,
            column: 20
          },
          end: {
            line: 358,
            column: 21
          }
        },
        loc: {
          start: {
            line: 358,
            column: 26
          },
          end: {
            line: 365,
            column: 9
          }
        },
        line: 358
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 38
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 370
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 396
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 28
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 399
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 28
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 402
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 34
          },
          end: {
            line: 427,
            column: 5
          }
        },
        line: 409
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 415,
            column: 24
          },
          end: {
            line: 415,
            column: 25
          }
        },
        loc: {
          start: {
            line: 415,
            column: 34
          },
          end: {
            line: 425,
            column: 9
          }
        },
        line: 415
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 431,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        loc: {
          start: {
            line: 431,
            column: 36
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 431
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 29
          },
          end: {
            line: 463,
            column: 5
          }
        },
        line: 445
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 467,
            column: 5
          }
        },
        loc: {
          start: {
            line: 467,
            column: 22
          },
          end: {
            line: 469,
            column: 5
          }
        },
        line: 467
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 473,
            column: 4
          },
          end: {
            line: 473,
            column: 5
          }
        },
        loc: {
          start: {
            line: 473,
            column: 17
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 473
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 37
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 480
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        loc: {
          start: {
            line: 487,
            column: 29
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 487
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "2": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "3": {
        loc: {
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 41
          }
        }, {
          start: {
            line: 149,
            column: 45
          },
          end: {
            line: 149,
            column: 49
          }
        }],
        line: 149
      },
      "4": {
        loc: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 41
          }
        }, {
          start: {
            line: 150,
            column: 45
          },
          end: {
            line: 150,
            column: 50
          }
        }],
        line: 150
      },
      "5": {
        loc: {
          start: {
            line: 151,
            column: 32
          },
          end: {
            line: 151,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 32
          },
          end: {
            line: 151,
            column: 55
          }
        }, {
          start: {
            line: 151,
            column: 59
          },
          end: {
            line: 151,
            column: 114
          }
        }],
        line: 151
      },
      "6": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "7": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 24
          }
        }, {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 45
          }
        }],
        line: 178
      },
      "8": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "9": {
        loc: {
          start: {
            line: 194,
            column: 24
          },
          end: {
            line: 194,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 53
          },
          end: {
            line: 194,
            column: 82
          }
        }, {
          start: {
            line: 194,
            column: 85
          },
          end: {
            line: 194,
            column: 91
          }
        }],
        line: 194
      },
      "10": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "11": {
        loc: {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 24
          }
        }, {
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 205,
            column: 45
          }
        }, {
          start: {
            line: 205,
            column: 49
          },
          end: {
            line: 205,
            column: 83
          }
        }],
        line: 205
      },
      "12": {
        loc: {
          start: {
            line: 206,
            column: 48
          },
          end: {
            line: 206,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 48
          },
          end: {
            line: 206,
            column: 56
          }
        }, {
          start: {
            line: 206,
            column: 60
          },
          end: {
            line: 206,
            column: 73
          }
        }],
        line: 206
      },
      "13": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "14": {
        loc: {
          start: {
            line: 239,
            column: 35
          },
          end: {
            line: 239,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 239,
            column: 47
          },
          end: {
            line: 239,
            column: 49
          }
        }],
        line: 239
      },
      "15": {
        loc: {
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 266,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 266,
            column: 56
          }
        }, {
          start: {
            line: 266,
            column: 60
          },
          end: {
            line: 266,
            column: 61
          }
        }],
        line: 266
      },
      "16": {
        loc: {
          start: {
            line: 268,
            column: 31
          },
          end: {
            line: 268,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 31
          },
          end: {
            line: 268,
            column: 54
          }
        }, {
          start: {
            line: 268,
            column: 58
          },
          end: {
            line: 268,
            column: 59
          }
        }],
        line: 268
      },
      "17": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "18": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "19": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "20": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "21": {
        loc: {
          start: {
            line: 352,
            column: 15
          },
          end: {
            line: 352,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 352,
            column: 35
          },
          end: {
            line: 352,
            column: 80
          }
        }, {
          start: {
            line: 352,
            column: 83
          },
          end: {
            line: 352,
            column: 84
          }
        }],
        line: 352
      },
      "22": {
        loc: {
          start: {
            line: 361,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "23": {
        loc: {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }],
        line: 416
      },
      "24": {
        loc: {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: 422,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }],
        line: 419
      },
      "25": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\enhanced-database-manager.ts",
      mappings: ";AAAA;;;;;;GAMG;;;AAEH,2CAAsD;AACtD,+CAA4C;AAE5C,2DAAoD;AACpD,+DAAmF;AA4CnF,MAAa,uBAAuB;IAqBlC;QAlBQ,WAAM,GAAG,IAAI,eAAM,CAAC,yBAAyB,CAAC,CAAC;QAC/C,iBAAY,GAA8B,IAAI,GAAG,EAAE,CAAC;QACpD,eAAU,GAAqC,IAAI,GAAG,EAAE,CAAC;QACzD,uBAAkB,GAAG,GAAG,CAAC,CAAC,QAAQ;QAClC,iBAAY,GAAG,IAAI,CAAC;QACpB,aAAQ,GAAG,MAAM,CAAC,CAAC,MAAM;QAEjC,QAAQ;QACS,eAAU,GAAyB;YAClD,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,EAAE;YACP,oBAAoB,EAAE,KAAK;YAC3B,mBAAmB,EAAE,KAAK;YAC1B,oBAAoB,EAAE,IAAI;YAC1B,iBAAiB,EAAE,KAAK;YACxB,kBAAkB,EAAE,IAAI;SACzB,CAAC;QAGA,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,kBAAkB;QAClB,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE;YACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC;YACtC,uBAAuB,CAAC,QAAQ,GAAG,IAAI,uBAAuB,EAAE,CAAC;QACnE,CAAC;QACD,OAAO,uBAAuB,CAAC,QAAQ,CAAC;IAC1C,CAAC;IAED;;OAEG;IACK,gBAAgB;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,qBAAY,CAAC;YAC7B,GAAG,EAAE;gBACH,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;gBACjC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;gBACjC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;aACjC;YACD,WAAW,EAAE;gBACX,EAAE,EAAE;oBACF,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;iBAC9B;aACF;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;IAC5E,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,0BAA0B;QACtC,IAAI,CAAC;YACH,cAAc;YACd,MAAM,iCAAa,CAAC,UAAU,EAAE,CAAC;YAEjC,WAAW;YACX,iCAAa,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;YAEH,iCAAa,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACzE,wCAAoB,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;YAEH,iCAAa,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;gBACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,iCAAa,CAAC,EAAE,CAAC,6BAA6B,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;YAEH,SAAS;YACT,wCAAoB,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,EAAE;gBAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4CAA4C,EAAE;oBAC7D,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;iBAC1B,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,wCAAoB,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;QAC7D,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wCAAwC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACxF,CAAC;IACH,CAAC;IAED;;OAEG;IACK,iBAAiB;QACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACvC,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAE5B,MAAM,OAAO,GAAiB;gBAC5B,OAAO;gBACP,GAAG,EAAE,CAAC,CAAC,KAAK;gBACZ,QAAQ;gBACR,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;gBACrB,MAAM,EAAE,CAAC,CAAC,MAAM;aACjB,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAExC,QAAQ;YACR,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;oBACtC,OAAO;oBACP,QAAQ;oBACR,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW;iBAC5C,CAAC,CAAC;gBAEH,UAAU;gBACV,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC;YAED,mBAAmB;YACnB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC;gBAClC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;gBACxD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE;gBAClC,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,MAAM,EAAE,CAAC,CAAC,MAAM;aACjB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,kBAAkB,CACtB,UAA4D,EAC5D,OAIC;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACnD,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,aAAa,EAAE,CAAC,CAAC;YAE3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE;gBACxD,OAAO,EAAE,OAAO,EAAE,OAAO,IAAI,IAAI,EAAE,SAAS;gBAC5C,OAAO,EAAE,OAAO,EAAE,OAAO,IAAI,KAAK,EAAE,QAAQ;gBAC5C,cAAc,EAAE,OAAO,EAAE,cAAc,IAAI,eAAM,CAAC,yBAAyB,CAAC,aAAa;aAC1F,CAAC,CAAC;YAEH,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;gBACxC,aAAa;gBACb,QAAQ;aACT,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE;gBACtC,aAAa;gBACb,QAAQ;gBACR,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAChB,OAAyB,EACzB,QAAiB,EACjB,QAAiB;QAEjB,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC;YACH,OAAO;YACP,IAAI,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;gBAClC,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAC3C,IAAI,MAAM,EAAE,CAAC;oBACX,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;oBACtD,OAAO,MAAM,CAAC;gBAChB,CAAC;YACH,CAAC;YAED,OAAO;YACP,MAAM,MAAM,GAAG,MAAM,OAAO,EAAE,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YAExC,SAAS;YACT,MAAM,OAAO,GAAiB;gBAC5B,OAAO;gBACP,GAAG,EAAE,cAAc;gBACnB,QAAQ;gBACR,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;gBACrB,MAAM,EAAE,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;aAC5E,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAExC,WAAW;YACX,wCAAoB,CAAC,WAAW,CAAC;gBAC/B,KAAK,EAAE,cAAc;gBACrB,QAAQ;gBACR,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,OAAO;aACtB,CAAC,CAAC;YAEH,OAAO;YACP,IAAI,QAAQ,IAAI,IAAI,CAAC,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBACxE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7D,CAAC;YAED,OAAO;YACP,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE;oBACvC,OAAO;oBACP,QAAQ;oBACR,SAAS,EAAE,IAAI,CAAC,kBAAkB;iBACnC,CAAC,CAAC;YACL,CAAC;YAED,OAAO,MAAM,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YAExC,aAAa;YACb,wCAAoB,CAAC,WAAW,CAAC;gBAC/B,KAAK,EAAE,cAAc;gBACrB,QAAQ;gBACR,OAAO,EAAE,KAAK;gBACd,KAAK;gBACL,YAAY,EAAE,OAAO;aACtB,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE;gBAC1C,OAAO;gBACP,QAAQ;gBACR,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAChB,UAAmC,EACnC,SAAS,GAAG,EAAE;QAEd,MAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAEvD,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE,CAAC;YAC5B,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,GAAG,CACpC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CACpC,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,WAAW;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC;YACH,cAAc;YACd,MAAM,iCAAa,CAAC,cAAc,EAAE,CAAC;YACrC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YAEvC,UAAU;YACV,MAAM,UAAU,GAAG,iCAAa,CAAC,aAAa,EAAE,CAAC;YAEjD,SAAS;YACT,MAAM,SAAS,GAAG,wCAAoB,CAAC,mBAAmB,EAAE,CAAC;YAE7D,UAAU;YACV,MAAM,YAAY,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAElD,OAAO;gBACL,SAAS,EAAE,UAAU,CAAC,MAAM,KAAK,SAAS;gBAC1C,OAAO;gBACP,iBAAiB,EAAE,UAAU,CAAC,UAAU,IAAI,CAAC;gBAC7C,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBACnC,aAAa,EAAE,UAAU,CAAC,YAAY,IAAI,CAAC;gBAC3C,YAAY;gBACZ,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,WAAW;gBAC1C,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACtC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YAEvC,WAAW;YACX,wCAAoB,CAAC,WAAW,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;YAExD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE;gBAChD,KAAK,EAAE,KAAK,CAAC,OAAO;gBACpB,OAAO;aACR,CAAC,CAAC;YAEH,OAAO;gBACL,SAAS,EAAE,KAAK;gBAChB,OAAO;gBACP,iBAAiB,EAAE,CAAC;gBACpB,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;gBACnC,aAAa,EAAE,CAAC;gBAChB,YAAY,EAAE,CAAC;gBACf,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACtC,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,iBAAiB;QAYf,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;QACvD,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAClC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ;SAChD,CAAC;QAEF,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC/B,OAAO;gBACL,YAAY,EAAE,CAAC;gBACf,cAAc,EAAE,CAAC;gBACjB,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;aAChB,CAAC;QACJ,CAAC;QAED,MAAM,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC;QAC1C,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC;QAC5F,MAAM,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC;QAC3F,MAAM,YAAY,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAElD,OAAO;YACL,YAAY;YACZ,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;YAC1C,WAAW;YACX,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,YAAY,CAAC,GAAG,GAAG,CAAC;YAC7D,YAAY;YACZ,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC;SAC5D,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,YAAY,CAAI,GAAW;QACjC,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,EAAE,CAAC;YAAA,OAAO,IAAI,CAAC;QAAA,CAAC;QAE3B,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,OAAO,MAAM,CAAC,IAAS,CAAC;IAC1B,CAAC;IAEO,QAAQ,CAAI,GAAW,EAAE,IAAO,EAAE,GAAW;QACnD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE;YACvB,GAAG;YACH,IAAI;YACJ,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG;YACxB,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC;IAEO,qBAAqB;QAC3B,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;QACpD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAAA,OAAO,CAAC,CAAC;QAAA,CAAC;QAEpC,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACrE,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC;QAEhD,OAAO,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED;;OAEG;IACK,iBAAiB;QACvB,WAAW,CAAC,GAAG,EAAE;YACf,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACvB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC;gBACrD,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;oBACvB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;QACH,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,UAAU;IACvB,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB,CAAC,OAAqB;QACpD,IAAI,CAAC;YACH,MAAM,KAAK,CAAC,mBAAmB,EAAE;gBAC/B,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;gBAC/C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oBACnB,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE;wBACJ,OAAO,EAAE,OAAO,CAAC,OAAO;wBACxB,QAAQ,EAAE,OAAO,CAAC,QAAQ;wBAC1B,SAAS,EAAE,IAAI,CAAC,kBAAkB;wBAClC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;qBACnC;oBACD,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;iBACpC,CAAC;aACH,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE;gBACnD,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;OAEG;IACK,eAAe;QACrB,OAAO,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAC1E,CAAC;IAEO,qBAAqB;QAC3B,OAAO,MAAM,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IACvE,CAAC;IAEO,UAAU,CAAI,KAAU,EAAE,IAAY;QAC5C,MAAM,MAAM,GAAU,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACxC,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,oBAAoB,CAAC,OAAuB;QAKlD,MAAM,YAAY,GAAG;YACnB,IAAI,EAAE,CAAC,EAAK,SAAS;YACrB,MAAM,EAAE,CAAC,EAAG,WAAW;YACvB,IAAI,EAAE,CAAC,EAAK,UAAU;SACvB,CAAC;QAEF,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,IAAI,MAAM,CAAC,QAAQ,GAAG,EAAE,EAAE,CAAC;gBACzB,YAAY,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;iBAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE,CAAC;gBAClC,YAAY,CAAC,MAAM,EAAE,CAAC;YACxB,CAAC;iBAAM,CAAC;gBACN,YAAY,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,uBAAuB;QAO3B,kBAAkB;QAClB,6BAA6B;QAC7B,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YACvD,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACtC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;YAC1B,MAAM,EAAE,IAAI,CAAC,UAAU;SACxB,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,gBAAgB;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;QAExD,IAAI,CAAC;YACH,SAAS;YACT,wCAAoB,CAAC,IAAI,EAAE,CAAC;YAE5B,UAAU;YACV,MAAM,iCAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,aAAa;YACb,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;YAEhC,OAAO;YACP,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QACzD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE;gBAClD,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;OAEG;IACH,eAAe;QACb,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,SAAiB;QACrC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;IAClE,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,OAAgB;QAC9B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAChE,CAAC;CACF;AA3kBD,0DA2kBC;AAED,SAAS;AACI,QAAA,uBAAuB,GAAG,uBAAuB,CAAC,WAAW,EAAE,CAAC;AAE7E,SAAS;AACI,QAAA,EAAE,GAAG,+BAAuB,CAAC,eAAe,EAAE,CAAC;AAE5D,UAAU;AACG,QAAA,kBAAkB,GAAG,+BAAuB,CAAC,kBAAkB,CAAC,IAAI,CAAC,+BAAuB,CAAC,CAAC;AAE3G,UAAU;AACG,QAAA,YAAY,GAAG,+BAAuB,CAAC,YAAY,CAAC,IAAI,CAAC,+BAAuB,CAAC,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\enhanced-database-manager.ts"],
      sourcesContent: ["/**\n * @file lib/database/enhanced-database-manager.ts\n * @description \u589E\u5F3A\u6570\u636E\u5E93\u7BA1\u7406\u5668 - B\u56E2\u961F\u6838\u5FC3\u7EC4\u4EF6\n * @author B\u56E2\u961F\u6570\u636E\u5E93\u67B6\u6784\u5E08\n * @lastUpdate 2024-12-19\n * @performance \u6570\u636E\u5E93\u67E5\u8BE2\u2264100ms\uFF0C\u5F3A\u5236\u4E8B\u52A1\uFF0C\u8FDE\u63A5\u6C60\u7BA1\u7406\n */\n\nimport { PrismaClient, Prisma } from '@prisma/client';\nimport { Logger } from '@/lib/utils/logger';\nimport { performanceMonitor } from '@/lib/middleware/performance-monitor';\nimport { healthChecker } from './connection-health';\nimport { performanceMonitor as dbPerformanceMonitor } from './performance-monitor';\n\n// \u67E5\u8BE2\u6027\u80FD\u6307\u6807\u63A5\u53E3\ninterface QueryMetrics {\n  queryId: string;\n  sql: string;\n  duration: number;\n  timestamp: number;\n  params?: Record<string, unknown>;\n  result?: unknown;\n  error?: string;\n}\n\n// \u8FDE\u63A5\u6C60\u914D\u7F6E\u63A5\u53E3\ninterface ConnectionPoolConfig {\n  min: number;\n  max: number;\n  acquireTimeoutMillis: number;\n  createTimeoutMillis: number;\n  destroyTimeoutMillis: number;\n  idleTimeoutMillis: number;\n  reapIntervalMillis: number;\n}\n\n// \u67E5\u8BE2\u7F13\u5B58\u63A5\u53E3\ninterface QueryCache<T = unknown> {\n  key: string;\n  data: T;\n  expiry: number;\n  hits: number;\n}\n\n// \u6570\u636E\u5E93\u5065\u5EB7\u72B6\u6001\ninterface DatabaseHealth {\n  connected: boolean;\n  latency: number;\n  activeConnections: number;\n  maxConnections: number;\n  queuedQueries: number;\n  cacheHitRate: number;\n  slowQueries: number;\n  lastChecked: string;\n}\n\nexport class EnhancedDatabaseManager {\n  private static instance: EnhancedDatabaseManager;\n  private prisma: PrismaClient;\n  private logger = new Logger('EnhancedDatabaseManager');\n  private queryMetrics: Map<string, QueryMetrics> = new Map();\n  private queryCache: Map<string, QueryCache<unknown>> = new Map();\n  private slowQueryThreshold = 100; // 100ms\n  private cacheEnabled = true;\n  private cacheTTL = 300000; // 5\u5206\u949F\n  \n  // \u8FDE\u63A5\u6C60\u914D\u7F6E\n  private readonly poolConfig: ConnectionPoolConfig = {\n    min: 2,\n    max: 20,\n    acquireTimeoutMillis: 30000,\n    createTimeoutMillis: 30000,\n    destroyTimeoutMillis: 5000,\n    idleTimeoutMillis: 30000,\n    reapIntervalMillis: 1000,\n  };\n\n  private constructor() {\n    this.initializePrisma();\n    \n    // \u5EF6\u8FDF\u8BBE\u7F6E\u67E5\u8BE2\u65E5\u5FD7\u4EE5\u907F\u514D\u5FAA\u73AF\u4F9D\u8D56\n    process.nextTick(() => {\n      this.setupQueryLogging();\n    });\n    \n    this.startCacheCleanup();\n    this.initializeHealthMonitoring();\n  }\n\n  public static getInstance(): EnhancedDatabaseManager {\n    if (!EnhancedDatabaseManager.instance) {\n      EnhancedDatabaseManager.instance = new EnhancedDatabaseManager();\n    }\n    return EnhancedDatabaseManager.instance;\n  }\n\n  /**\n   * \u521D\u59CB\u5316Prisma\u5BA2\u6237\u7AEF\n   */\n  private initializePrisma(): void {\n    this.prisma = new PrismaClient({\n      log: [\n        { emit: 'event', level: 'query' },\n        { emit: 'event', level: 'error' },\n        { emit: 'event', level: 'warn' },\n      ],\n      datasources: {\n        db: {\n          url: process.env.DATABASE_URL,\n        },\n      },\n    });\n\n    this.logger.info('Prisma client initialized with enhanced configuration');\n  }\n\n  /**\n   * \u521D\u59CB\u5316\u5065\u5EB7\u76D1\u63A7\n   */\n  private async initializeHealthMonitoring(): Promise<void> {\n    try {\n      // \u521D\u59CB\u5316\u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\u5668\n      await healthChecker.initialize();\n      \n      // \u76D1\u542C\u5065\u5EB7\u68C0\u67E5\u4E8B\u4EF6\n      healthChecker.on('connected', () => {\n        this.logger.info('Database connection established');\n      });\n      \n      healthChecker.on('error', (error) => {\n        this.logger.error('Database connection error', { error: error.message });\n        dbPerformanceMonitor.recordError(error, 'connection');\n      });\n      \n      healthChecker.on('reconnected', () => {\n        this.logger.info('Database connection restored');\n      });\n      \n      healthChecker.on('maxReconnectAttemptsReached', (error) => {\n        this.logger.error('Max reconnect attempts reached', { error: error.message });\n      });\n      \n      // \u76D1\u542C\u6027\u80FD\u544A\u8B66\n      dbPerformanceMonitor.on('slowQuery', (record) => {\n        this.logger.warn('Slow query detected by performance monitor', {\n          query: record.query,\n          duration: record.duration\n        });\n      });\n      \n      dbPerformanceMonitor.on('alert', (alert) => {\n        this.logger.warn('Performance alert', alert);\n      });\n      \n      this.logger.info('Database health monitoring initialized');\n    } catch (error) {\n      this.logger.error('Failed to initialize health monitoring', { error: error.message });\n    }\n  }\n\n  /**\n   * \u8BBE\u7F6E\u67E5\u8BE2\u65E5\u5FD7\u8BB0\u5F55\n   */\n  private setupQueryLogging(): void {\n    this.prisma.$on('query', (e) => {\n      const queryId = this.generateQueryId();\n      const duration = e.duration;\n      \n      const metrics: QueryMetrics = {\n        queryId,\n        sql: e.query,\n        duration,\n        timestamp: Date.now(),\n        params: e.params,\n      };\n\n      this.queryMetrics.set(queryId, metrics);\n\n      // \u68C0\u67E5\u6162\u67E5\u8BE2\n      if (duration > this.slowQueryThreshold) {\n        this.logger.warn('Slow query detected', {\n          queryId,\n          duration,\n          sql: e.query.substring(0, 200), // \u622A\u53D6\u524D200\u5B57\u7B26\n        });\n\n        // \u53D1\u9001\u6162\u67E5\u8BE2\u544A\u8B66\n        this.sendSlowQueryAlert(metrics);\n      }\n\n      // \u6E05\u7406\u65E7\u6307\u6807\uFF08\u4FDD\u7559\u6700\u8FD11000\u6761\uFF09\n      if (this.queryMetrics.size > 1000) {\n        const oldestKey = this.queryMetrics.keys().next().value;\n        this.queryMetrics.delete(oldestKey);\n      }\n    });\n\n    this.prisma.$on('error', (e) => {\n      this.logger.error('Database error', {\n        message: e.message,\n        target: e.target,\n      });\n    });\n  }\n\n  /**\n   * \u5F3A\u5236\u4E8B\u52A1\u6267\u884C\n   */\n  async executeTransaction<T>(\n    operations: (prisma: Prisma.TransactionClient) => Promise<T>,\n    options?: {\n      maxWait?: number;\n      timeout?: number;\n      isolationLevel?: Prisma.TransactionIsolationLevel;\n    }\n  ): Promise<T> {\n    const transactionId = this.generateTransactionId();\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Transaction started', { transactionId });\n\n      const result = await this.prisma.$transaction(operations, {\n        maxWait: options?.maxWait || 5000, // 5\u79D2\u6700\u5927\u7B49\u5F85\n        timeout: options?.timeout || 10000, // 10\u79D2\u8D85\u65F6\n        isolationLevel: options?.isolationLevel || Prisma.TransactionIsolationLevel.ReadCommitted,\n      });\n\n      const duration = Date.now() - startTime;\n      this.logger.info('Transaction completed', {\n        transactionId,\n        duration,\n      });\n\n      return result;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      this.logger.error('Transaction failed', {\n        transactionId,\n        duration,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * \u4F18\u5316\u67E5\u8BE2\u6267\u884C\uFF08\u5E26\u7F13\u5B58\uFF09\n   */\n  async executeQuery<T>(\n    queryFn: () => Promise<T>,\n    cacheKey?: string,\n    cacheTTL?: number\n  ): Promise<T> {\n    const queryId = this.generateQueryId();\n    const startTime = Date.now();\n\n    try {\n      // \u68C0\u67E5\u7F13\u5B58\n      if (cacheKey && this.cacheEnabled) {\n        const cached = this.getFromCache(cacheKey);\n        if (cached) {\n          this.logger.debug('Cache hit', { queryId, cacheKey });\n          return cached;\n        }\n      }\n\n      // \u6267\u884C\u67E5\u8BE2\n      const result = await queryFn();\n      const duration = Date.now() - startTime;\n\n      // \u8BB0\u5F55\u67E5\u8BE2\u6307\u6807\n      const metrics: QueryMetrics = {\n        queryId,\n        sql: 'Custom Query',\n        duration,\n        timestamp: Date.now(),\n        result: typeof result === 'object' ? JSON.stringify(result).length : result,\n      };\n\n      this.queryMetrics.set(queryId, metrics);\n\n      // \u8BB0\u5F55\u5230\u6027\u80FD\u76D1\u63A7\u5668\n      dbPerformanceMonitor.recordQuery({\n        query: 'Custom Query',\n        duration,\n        success: true,\n        connectionId: queryId\n      });\n\n      // \u7F13\u5B58\u7ED3\u679C\n      if (cacheKey && this.cacheEnabled && duration < this.slowQueryThreshold) {\n        this.setCache(cacheKey, result, cacheTTL || this.cacheTTL);\n      }\n\n      // \u68C0\u67E5\u6027\u80FD\n      if (duration > this.slowQueryThreshold) {\n        this.logger.warn('Slow query execution', {\n          queryId,\n          duration,\n          threshold: this.slowQueryThreshold,\n        });\n      }\n\n      return result;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      \n      // \u8BB0\u5F55\u9519\u8BEF\u5230\u6027\u80FD\u76D1\u63A7\u5668\n      dbPerformanceMonitor.recordQuery({\n        query: 'Custom Query',\n        duration,\n        success: false,\n        error,\n        connectionId: queryId\n      });\n      \n      this.logger.error('Query execution failed', {\n        queryId,\n        duration,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * \u6279\u91CF\u64CD\u4F5C\u4F18\u5316\n   */\n  async executeBatch<T>(\n    operations: Array<() => Promise<T>>,\n    batchSize = 10\n  ): Promise<T[]> {\n    const results: T[] = [];\n    const batches = this.chunkArray(operations, batchSize);\n\n    for (const batch of batches) {\n      const batchResults = await Promise.all(\n        batch.map(operation => operation())\n      );\n      results.push(...batchResults);\n    }\n\n    return results;\n  }\n\n  /**\n   * \u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\n   */\n  async healthCheck(): Promise<DatabaseHealth> {\n    const startTime = Date.now();\n\n    try {\n      // \u4F7F\u7528\u5065\u5EB7\u68C0\u67E5\u5668\u6D4B\u8BD5\u8FDE\u63A5\n      await healthChecker.testConnection();\n      const latency = Date.now() - startTime;\n\n      // \u83B7\u53D6\u8FDE\u63A5\u6C60\u72B6\u6001\n      const poolStatus = healthChecker.getPoolStatus();\n      \n      // \u83B7\u53D6\u6027\u80FD\u7EDF\u8BA1\n      const perfStats = dbPerformanceMonitor.getPerformanceStats();\n\n      // \u8BA1\u7B97\u7F13\u5B58\u547D\u4E2D\u7387\n      const cacheHitRate = this.calculateCacheHitRate();\n\n      return {\n        connected: poolStatus.status === 'healthy',\n        latency,\n        activeConnections: poolStatus.totalCount || 0,\n        maxConnections: this.poolConfig.max,\n        queuedQueries: poolStatus.waitingCount || 0,\n        cacheHitRate,\n        slowQueries: perfStats.overall.slowQueries,\n        lastChecked: new Date().toISOString(),\n      };\n    } catch (error) {\n      const latency = Date.now() - startTime;\n      \n      // \u8BB0\u5F55\u5065\u5EB7\u68C0\u67E5\u9519\u8BEF\n      dbPerformanceMonitor.recordError(error, 'health_check');\n      \n      this.logger.error('Database health check failed', {\n        error: error.message,\n        latency,\n      });\n\n      return {\n        connected: false,\n        latency,\n        activeConnections: 0,\n        maxConnections: this.poolConfig.max,\n        queuedQueries: 0,\n        cacheHitRate: 0,\n        slowQueries: 0,\n        lastChecked: new Date().toISOString(),\n      };\n    }\n  }\n\n  /**\n   * \u67E5\u8BE2\u6027\u80FD\u5206\u6790\n   */\n  getQueryAnalytics(): {\n    totalQueries: number;\n    averageLatency: number;\n    slowQueries: number;\n    slowQueryRate?: number;\n    cacheHitRate: number;\n    queryDistribution?: {\n      fast: number;\n      normal: number;\n      slow: number;\n    };\n  } {\n    const metrics = Array.from(this.queryMetrics.values());\n    const recentMetrics = metrics.filter(\n      m => Date.now() - m.timestamp < 300000 // \u6700\u8FD15\u5206\u949F\n    );\n\n    if (recentMetrics.length === 0) {\n      return {\n        totalQueries: 0,\n        averageLatency: 0,\n        slowQueries: 0,\n        cacheHitRate: 0,\n      };\n    }\n\n    const totalQueries = recentMetrics.length;\n    const averageLatency = recentMetrics.reduce((sum, m) => sum + m.duration, 0) / totalQueries;\n    const slowQueries = recentMetrics.filter(m => m.duration > this.slowQueryThreshold).length;\n    const cacheHitRate = this.calculateCacheHitRate();\n\n    return {\n      totalQueries,\n      averageLatency: Math.round(averageLatency),\n      slowQueries,\n      slowQueryRate: Math.round((slowQueries / totalQueries) * 100),\n      cacheHitRate,\n      queryDistribution: this.getQueryDistribution(recentMetrics),\n    };\n  }\n\n  /**\n   * \u7F13\u5B58\u7BA1\u7406\n   */\n  private getFromCache<T>(key: string): T | null {\n    const cached = this.queryCache.get(key);\n    if (!cached) {return null;}\n\n    if (Date.now() > cached.expiry) {\n      this.queryCache.delete(key);\n      return null;\n    }\n\n    cached.hits++;\n    return cached.data as T;\n  }\n\n  private setCache<T>(key: string, data: T, ttl: number): void {\n    this.queryCache.set(key, {\n      key,\n      data,\n      expiry: Date.now() + ttl,\n      hits: 0,\n    });\n  }\n\n  private calculateCacheHitRate(): number {\n    const caches = Array.from(this.queryCache.values());\n    if (caches.length === 0) {return 0;}\n\n    const totalHits = caches.reduce((sum, cache) => sum + cache.hits, 0);\n    const totalRequests = caches.length + totalHits;\n    \n    return totalRequests > 0 ? Math.round((totalHits / totalRequests) * 100) : 0;\n  }\n\n  /**\n   * \u7F13\u5B58\u6E05\u7406\n   */\n  private startCacheCleanup(): void {\n    setInterval(() => {\n      const now = Date.now();\n      for (const [key, cache] of this.queryCache.entries()) {\n        if (now > cache.expiry) {\n          this.queryCache.delete(key);\n        }\n      }\n    }, 60000); // \u6BCF\u5206\u949F\u6E05\u7406\u4E00\u6B21\n  }\n\n  /**\n   * \u6162\u67E5\u8BE2\u544A\u8B66\n   */\n  private async sendSlowQueryAlert(metrics: QueryMetrics): Promise<void> {\n    try {\n      await fetch('/api/admin/alerts', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          type: 'SLOW_QUERY',\n          data: {\n            queryId: metrics.queryId,\n            duration: metrics.duration,\n            threshold: this.slowQueryThreshold,\n            sql: metrics.sql.substring(0, 200),\n          },\n          timestamp: new Date().toISOString(),\n        }),\n      });\n    } catch (error) {\n      this.logger.error('Failed to send slow query alert', {\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * \u5DE5\u5177\u65B9\u6CD5\n   */\n  private generateQueryId(): string {\n    return `query_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateTransactionId(): string {\n    return `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private chunkArray<T>(array: T[], size: number): T[][] {\n    const chunks: T[][] = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunks.push(array.slice(i, i + size));\n    }\n    return chunks;\n  }\n\n  private getQueryDistribution(metrics: QueryMetrics[]): {\n    fast: number;\n    normal: number;\n    slow: number;\n  } {\n    const distribution = {\n      fast: 0,    // < 50ms\n      normal: 0,  // 50-100ms\n      slow: 0,    // > 100ms\n    };\n\n    metrics.forEach(metric => {\n      if (metric.duration < 50) {\n        distribution.fast++;\n      } else if (metric.duration <= 100) {\n        distribution.normal++;\n      } else {\n        distribution.slow++;\n      }\n    });\n\n    return distribution;\n  }\n\n  /**\n   * \u8FDE\u63A5\u6C60\u7BA1\u7406\n   */\n  async getConnectionPoolStatus(): Promise<{\n    active: number;\n    idle: number;\n    waiting: number;\n    total: number;\n    config: ConnectionPoolConfig;\n  }> {\n    // \u8FD9\u91CC\u5E94\u8BE5\u4ECE\u5B9E\u9645\u7684\u8FDE\u63A5\u6C60\u83B7\u53D6\u72B6\u6001\n    // Prisma \u4E0D\u76F4\u63A5\u66B4\u9732\u8FDE\u63A5\u6C60\u72B6\u6001\uFF0C\u8FD9\u91CC\u63D0\u4F9B\u6A21\u62DF\u6570\u636E\n    return {\n      active: Math.floor(Math.random() * this.poolConfig.max),\n      idle: Math.floor(Math.random() * (this.poolConfig.max - 5)),\n      waiting: Math.floor(Math.random() * 5),\n      total: this.poolConfig.max,\n      config: this.poolConfig,\n    };\n  }\n\n  /**\n   * \u4F18\u96C5\u5173\u95ED\n   */\n  async gracefulShutdown(): Promise<void> {\n    this.logger.info('Starting graceful database shutdown');\n    \n    try {\n      // \u505C\u6B62\u6027\u80FD\u76D1\u63A7\n      dbPerformanceMonitor.stop();\n      \n      // \u5173\u95ED\u5065\u5EB7\u68C0\u67E5\u5668\n      await healthChecker.close();\n      \n      // \u65AD\u5F00Prisma\u8FDE\u63A5\n      await this.prisma.$disconnect();\n      \n      // \u6E05\u7406\u7F13\u5B58\n      this.clearCache();\n      \n      this.logger.info('Database disconnected successfully');\n    } catch (error) {\n      this.logger.error('Error during database shutdown', {\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * \u83B7\u53D6Prisma\u5BA2\u6237\u7AEF\u5B9E\u4F8B\n   */\n  getPrismaClient(): PrismaClient {\n    return this.prisma;\n  }\n\n  /**\n   * \u6E05\u7406\u7F13\u5B58\n   */\n  clearCache(): void {\n    this.queryCache.clear();\n    this.logger.info('Query cache cleared');\n  }\n\n  /**\n   * \u8BBE\u7F6E\u6162\u67E5\u8BE2\u9608\u503C\n   */\n  setSlowQueryThreshold(threshold: number): void {\n    this.slowQueryThreshold = threshold;\n    this.logger.info('Slow query threshold updated', { threshold });\n  }\n\n  /**\n   * \u542F\u7528/\u7981\u7528\u7F13\u5B58\n   */\n  setCacheEnabled(enabled: boolean): void {\n    this.cacheEnabled = enabled;\n    if (!enabled) {\n      this.clearCache();\n    }\n    this.logger.info('Cache enabled status changed', { enabled });\n  }\n}\n\n// \u5BFC\u51FA\u5355\u4F8B\u5B9E\u4F8B\nexport const enhancedDatabaseManager = EnhancedDatabaseManager.getInstance();\n\n// \u5BFC\u51FA\u4FBF\u6377\u65B9\u6CD5\nexport const db = enhancedDatabaseManager.getPrismaClient();\n\n// \u5BFC\u51FA\u4E8B\u52A1\u6267\u884C\u5668\nexport const executeTransaction = enhancedDatabaseManager.executeTransaction.bind(enhancedDatabaseManager);\n\n// \u5BFC\u51FA\u67E5\u8BE2\u6267\u884C\u5668\nexport const executeQuery = enhancedDatabaseManager.executeQuery.bind(enhancedDatabaseManager);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6d0cf5517ad6b6ae4d056ae048ddc1a48ed0b095"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1okmjd2ydn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1okmjd2ydn();
cov_1okmjd2ydn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1okmjd2ydn().s[1]++;
exports.executeQuery = exports.executeTransaction = exports.db = exports.enhancedDatabaseManager = exports.EnhancedDatabaseManager = void 0;
const client_1 =
/* istanbul ignore next */
(cov_1okmjd2ydn().s[2]++, require("@prisma/client"));
const logger_1 =
/* istanbul ignore next */
(cov_1okmjd2ydn().s[3]++, require("@/lib/utils/logger"));
const connection_health_1 =
/* istanbul ignore next */
(cov_1okmjd2ydn().s[4]++, require("./connection-health"));
const performance_monitor_1 =
/* istanbul ignore next */
(cov_1okmjd2ydn().s[5]++, require("./performance-monitor"));
class EnhancedDatabaseManager {
  constructor() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[0]++;
    cov_1okmjd2ydn().s[6]++;
    this.logger = new logger_1.Logger('EnhancedDatabaseManager');
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[7]++;
    this.queryMetrics = new Map();
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[8]++;
    this.queryCache = new Map();
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[9]++;
    this.slowQueryThreshold = 100; // 100ms
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[10]++;
    this.cacheEnabled = true;
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[11]++;
    this.cacheTTL = 300000; // 5分钟
    // 连接池配置
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[12]++;
    this.poolConfig = {
      min: 2,
      max: 20,
      acquireTimeoutMillis: 30000,
      createTimeoutMillis: 30000,
      destroyTimeoutMillis: 5000,
      idleTimeoutMillis: 30000,
      reapIntervalMillis: 1000
    };
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[13]++;
    this.initializePrisma();
    // 延迟设置查询日志以避免循环依赖
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[14]++;
    process.nextTick(() => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[1]++;
      cov_1okmjd2ydn().s[15]++;
      this.setupQueryLogging();
    });
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[16]++;
    this.startCacheCleanup();
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[17]++;
    this.initializeHealthMonitoring();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[2]++;
    cov_1okmjd2ydn().s[18]++;
    if (!EnhancedDatabaseManager.instance) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().b[0][0]++;
      cov_1okmjd2ydn().s[19]++;
      EnhancedDatabaseManager.instance = new EnhancedDatabaseManager();
    } else
    /* istanbul ignore next */
    {
      cov_1okmjd2ydn().b[0][1]++;
    }
    cov_1okmjd2ydn().s[20]++;
    return EnhancedDatabaseManager.instance;
  }
  /**
   * 初始化Prisma客户端
   */
  initializePrisma() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[3]++;
    cov_1okmjd2ydn().s[21]++;
    this.prisma = new client_1.PrismaClient({
      log: [{
        emit: 'event',
        level: 'query'
      }, {
        emit: 'event',
        level: 'error'
      }, {
        emit: 'event',
        level: 'warn'
      }],
      datasources: {
        db: {
          url: process.env.DATABASE_URL
        }
      }
    });
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[22]++;
    this.logger.info('Prisma client initialized with enhanced configuration');
  }
  /**
   * 初始化健康监控
   */
  async initializeHealthMonitoring() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[4]++;
    cov_1okmjd2ydn().s[23]++;
    try {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[24]++;
      // 初始化数据库健康检查器
      await connection_health_1.healthChecker.initialize();
      // 监听健康检查事件
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[25]++;
      connection_health_1.healthChecker.on('connected', () => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[5]++;
        cov_1okmjd2ydn().s[26]++;
        this.logger.info('Database connection established');
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[27]++;
      connection_health_1.healthChecker.on('error', error => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[6]++;
        cov_1okmjd2ydn().s[28]++;
        this.logger.error('Database connection error', {
          error: error.message
        });
        /* istanbul ignore next */
        cov_1okmjd2ydn().s[29]++;
        performance_monitor_1.performanceMonitor.recordError(error, 'connection');
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[30]++;
      connection_health_1.healthChecker.on('reconnected', () => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[7]++;
        cov_1okmjd2ydn().s[31]++;
        this.logger.info('Database connection restored');
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[32]++;
      connection_health_1.healthChecker.on('maxReconnectAttemptsReached', error => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[8]++;
        cov_1okmjd2ydn().s[33]++;
        this.logger.error('Max reconnect attempts reached', {
          error: error.message
        });
      });
      // 监听性能告警
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[34]++;
      performance_monitor_1.performanceMonitor.on('slowQuery', record => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[9]++;
        cov_1okmjd2ydn().s[35]++;
        this.logger.warn('Slow query detected by performance monitor', {
          query: record.query,
          duration: record.duration
        });
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[36]++;
      performance_monitor_1.performanceMonitor.on('alert', alert => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[10]++;
        cov_1okmjd2ydn().s[37]++;
        this.logger.warn('Performance alert', alert);
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[38]++;
      this.logger.info('Database health monitoring initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[39]++;
      this.logger.error('Failed to initialize health monitoring', {
        error: error.message
      });
    }
  }
  /**
   * 设置查询日志记录
   */
  setupQueryLogging() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[11]++;
    cov_1okmjd2ydn().s[40]++;
    this.prisma.$on('query', e => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[12]++;
      const queryId =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[41]++, this.generateQueryId());
      const duration =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[42]++, e.duration);
      const metrics =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[43]++, {
        queryId,
        sql: e.query,
        duration,
        timestamp: Date.now(),
        params: e.params
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[44]++;
      this.queryMetrics.set(queryId, metrics);
      // 检查慢查询
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[45]++;
      if (duration > this.slowQueryThreshold) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[1][0]++;
        cov_1okmjd2ydn().s[46]++;
        this.logger.warn('Slow query detected', {
          queryId,
          duration,
          sql: e.query.substring(0, 200) // 截取前200字符
        });
        // 发送慢查询告警
        /* istanbul ignore next */
        cov_1okmjd2ydn().s[47]++;
        this.sendSlowQueryAlert(metrics);
      } else
      /* istanbul ignore next */
      {
        cov_1okmjd2ydn().b[1][1]++;
      }
      // 清理旧指标（保留最近1000条）
      cov_1okmjd2ydn().s[48]++;
      if (this.queryMetrics.size > 1000) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[2][0]++;
        const oldestKey =
        /* istanbul ignore next */
        (cov_1okmjd2ydn().s[49]++, this.queryMetrics.keys().next().value);
        /* istanbul ignore next */
        cov_1okmjd2ydn().s[50]++;
        this.queryMetrics.delete(oldestKey);
      } else
      /* istanbul ignore next */
      {
        cov_1okmjd2ydn().b[2][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[51]++;
    this.prisma.$on('error', e => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[13]++;
      cov_1okmjd2ydn().s[52]++;
      this.logger.error('Database error', {
        message: e.message,
        target: e.target
      });
    });
  }
  /**
   * 强制事务执行
   */
  async executeTransaction(operations, options) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[14]++;
    const transactionId =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[53]++, this.generateTransactionId());
    const startTime =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[54]++, Date.now());
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[55]++;
    try {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[56]++;
      this.logger.info('Transaction started', {
        transactionId
      });
      const result =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[57]++, await this.prisma.$transaction(operations, {
        maxWait:
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[3][0]++, options?.maxWait) ||
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[3][1]++, 5000),
        // 5秒最大等待
        timeout:
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[4][0]++, options?.timeout) ||
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[4][1]++, 10000),
        // 10秒超时
        isolationLevel:
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[5][0]++, options?.isolationLevel) ||
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[5][1]++, client_1.Prisma.TransactionIsolationLevel.ReadCommitted)
      }));
      const duration =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[58]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[59]++;
      this.logger.info('Transaction completed', {
        transactionId,
        duration
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[60]++;
      return result;
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[61]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[62]++;
      this.logger.error('Transaction failed', {
        transactionId,
        duration,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[63]++;
      throw error;
    }
  }
  /**
   * 优化查询执行（带缓存）
   */
  async executeQuery(queryFn, cacheKey, cacheTTL) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[15]++;
    const queryId =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[64]++, this.generateQueryId());
    const startTime =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[65]++, Date.now());
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[66]++;
    try {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[67]++;
      // 检查缓存
      if (
      /* istanbul ignore next */
      (cov_1okmjd2ydn().b[7][0]++, cacheKey) &&
      /* istanbul ignore next */
      (cov_1okmjd2ydn().b[7][1]++, this.cacheEnabled)) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[6][0]++;
        const cached =
        /* istanbul ignore next */
        (cov_1okmjd2ydn().s[68]++, this.getFromCache(cacheKey));
        /* istanbul ignore next */
        cov_1okmjd2ydn().s[69]++;
        if (cached) {
          /* istanbul ignore next */
          cov_1okmjd2ydn().b[8][0]++;
          cov_1okmjd2ydn().s[70]++;
          this.logger.debug('Cache hit', {
            queryId,
            cacheKey
          });
          /* istanbul ignore next */
          cov_1okmjd2ydn().s[71]++;
          return cached;
        } else
        /* istanbul ignore next */
        {
          cov_1okmjd2ydn().b[8][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1okmjd2ydn().b[6][1]++;
      }
      // 执行查询
      const result =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[72]++, await queryFn());
      const duration =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[73]++, Date.now() - startTime);
      // 记录查询指标
      const metrics =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[74]++, {
        queryId,
        sql: 'Custom Query',
        duration,
        timestamp: Date.now(),
        result: typeof result === 'object' ?
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[9][0]++, JSON.stringify(result).length) :
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[9][1]++, result)
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[75]++;
      this.queryMetrics.set(queryId, metrics);
      // 记录到性能监控器
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[76]++;
      performance_monitor_1.performanceMonitor.recordQuery({
        query: 'Custom Query',
        duration,
        success: true,
        connectionId: queryId
      });
      // 缓存结果
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_1okmjd2ydn().b[11][0]++, cacheKey) &&
      /* istanbul ignore next */
      (cov_1okmjd2ydn().b[11][1]++, this.cacheEnabled) &&
      /* istanbul ignore next */
      (cov_1okmjd2ydn().b[11][2]++, duration < this.slowQueryThreshold)) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[10][0]++;
        cov_1okmjd2ydn().s[78]++;
        this.setCache(cacheKey, result,
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[12][0]++, cacheTTL) ||
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[12][1]++, this.cacheTTL));
      } else
      /* istanbul ignore next */
      {
        cov_1okmjd2ydn().b[10][1]++;
      }
      // 检查性能
      cov_1okmjd2ydn().s[79]++;
      if (duration > this.slowQueryThreshold) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[13][0]++;
        cov_1okmjd2ydn().s[80]++;
        this.logger.warn('Slow query execution', {
          queryId,
          duration,
          threshold: this.slowQueryThreshold
        });
      } else
      /* istanbul ignore next */
      {
        cov_1okmjd2ydn().b[13][1]++;
      }
      cov_1okmjd2ydn().s[81]++;
      return result;
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[82]++, Date.now() - startTime);
      // 记录错误到性能监控器
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[83]++;
      performance_monitor_1.performanceMonitor.recordQuery({
        query: 'Custom Query',
        duration,
        success: false,
        error,
        connectionId: queryId
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[84]++;
      this.logger.error('Query execution failed', {
        queryId,
        duration,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[85]++;
      throw error;
    }
  }
  /**
   * 批量操作优化
   */
  async executeBatch(operations, batchSize =
  /* istanbul ignore next */
  (cov_1okmjd2ydn().b[14][0]++, 10)) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[16]++;
    const results =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[86]++, []);
    const batches =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[87]++, this.chunkArray(operations, batchSize));
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[88]++;
    for (const batch of batches) {
      const batchResults =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[89]++, await Promise.all(batch.map(operation => {
        /* istanbul ignore next */
        cov_1okmjd2ydn().f[17]++;
        cov_1okmjd2ydn().s[90]++;
        return operation();
      })));
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[91]++;
      results.push(...batchResults);
    }
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[92]++;
    return results;
  }
  /**
   * 数据库健康检查
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[18]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[93]++, Date.now());
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[94]++;
    try {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[95]++;
      // 使用健康检查器测试连接
      await connection_health_1.healthChecker.testConnection();
      const latency =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[96]++, Date.now() - startTime);
      // 获取连接池状态
      const poolStatus =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[97]++, connection_health_1.healthChecker.getPoolStatus());
      // 获取性能统计
      const perfStats =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[98]++, performance_monitor_1.performanceMonitor.getPerformanceStats());
      // 计算缓存命中率
      const cacheHitRate =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[99]++, this.calculateCacheHitRate());
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[100]++;
      return {
        connected: poolStatus.status === 'healthy',
        latency,
        activeConnections:
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[15][0]++, poolStatus.totalCount) ||
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[15][1]++, 0),
        maxConnections: this.poolConfig.max,
        queuedQueries:
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[16][0]++, poolStatus.waitingCount) ||
        /* istanbul ignore next */
        (cov_1okmjd2ydn().b[16][1]++, 0),
        cacheHitRate,
        slowQueries: perfStats.overall.slowQueries,
        lastChecked: new Date().toISOString()
      };
    } catch (error) {
      const latency =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[101]++, Date.now() - startTime);
      // 记录健康检查错误
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[102]++;
      performance_monitor_1.performanceMonitor.recordError(error, 'health_check');
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[103]++;
      this.logger.error('Database health check failed', {
        error: error.message,
        latency
      });
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[104]++;
      return {
        connected: false,
        latency,
        activeConnections: 0,
        maxConnections: this.poolConfig.max,
        queuedQueries: 0,
        cacheHitRate: 0,
        slowQueries: 0,
        lastChecked: new Date().toISOString()
      };
    }
  }
  /**
   * 查询性能分析
   */
  getQueryAnalytics() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[19]++;
    const metrics =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[105]++, Array.from(this.queryMetrics.values()));
    const recentMetrics =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[106]++, metrics.filter(m => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[20]++;
      cov_1okmjd2ydn().s[107]++;
      return Date.now() - m.timestamp < 300000;
    } // 最近5分钟
    ));
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[108]++;
    if (recentMetrics.length === 0) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().b[17][0]++;
      cov_1okmjd2ydn().s[109]++;
      return {
        totalQueries: 0,
        averageLatency: 0,
        slowQueries: 0,
        cacheHitRate: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1okmjd2ydn().b[17][1]++;
    }
    const totalQueries =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[110]++, recentMetrics.length);
    const averageLatency =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[111]++, recentMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[21]++;
      cov_1okmjd2ydn().s[112]++;
      return sum + m.duration;
    }, 0) / totalQueries);
    const slowQueries =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[113]++, recentMetrics.filter(m => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[22]++;
      cov_1okmjd2ydn().s[114]++;
      return m.duration > this.slowQueryThreshold;
    }).length);
    const cacheHitRate =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[115]++, this.calculateCacheHitRate());
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[116]++;
    return {
      totalQueries,
      averageLatency: Math.round(averageLatency),
      slowQueries,
      slowQueryRate: Math.round(slowQueries / totalQueries * 100),
      cacheHitRate,
      queryDistribution: this.getQueryDistribution(recentMetrics)
    };
  }
  /**
   * 缓存管理
   */
  getFromCache(key) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[23]++;
    const cached =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[117]++, this.queryCache.get(key));
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[118]++;
    if (!cached) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().b[18][0]++;
      cov_1okmjd2ydn().s[119]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1okmjd2ydn().b[18][1]++;
    }
    cov_1okmjd2ydn().s[120]++;
    if (Date.now() > cached.expiry) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().b[19][0]++;
      cov_1okmjd2ydn().s[121]++;
      this.queryCache.delete(key);
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[122]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1okmjd2ydn().b[19][1]++;
    }
    cov_1okmjd2ydn().s[123]++;
    cached.hits++;
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[124]++;
    return cached.data;
  }
  setCache(key, data, ttl) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[24]++;
    cov_1okmjd2ydn().s[125]++;
    this.queryCache.set(key, {
      key,
      data,
      expiry: Date.now() + ttl,
      hits: 0
    });
  }
  calculateCacheHitRate() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[25]++;
    const caches =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[126]++, Array.from(this.queryCache.values()));
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[127]++;
    if (caches.length === 0) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().b[20][0]++;
      cov_1okmjd2ydn().s[128]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1okmjd2ydn().b[20][1]++;
    }
    const totalHits =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[129]++, caches.reduce((sum, cache) => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[26]++;
      cov_1okmjd2ydn().s[130]++;
      return sum + cache.hits;
    }, 0));
    const totalRequests =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[131]++, caches.length + totalHits);
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[132]++;
    return totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_1okmjd2ydn().b[21][0]++, Math.round(totalHits / totalRequests * 100)) :
    /* istanbul ignore next */
    (cov_1okmjd2ydn().b[21][1]++, 0);
  }
  /**
   * 缓存清理
   */
  startCacheCleanup() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[27]++;
    cov_1okmjd2ydn().s[133]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[28]++;
      const now =
      /* istanbul ignore next */
      (cov_1okmjd2ydn().s[134]++, Date.now());
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[135]++;
      for (const [key, cache] of this.queryCache.entries()) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().s[136]++;
        if (now > cache.expiry) {
          /* istanbul ignore next */
          cov_1okmjd2ydn().b[22][0]++;
          cov_1okmjd2ydn().s[137]++;
          this.queryCache.delete(key);
        } else
        /* istanbul ignore next */
        {
          cov_1okmjd2ydn().b[22][1]++;
        }
      }
    }, 60000); // 每分钟清理一次
  }
  /**
   * 慢查询告警
   */
  async sendSlowQueryAlert(metrics) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[29]++;
    cov_1okmjd2ydn().s[138]++;
    try {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[139]++;
      await fetch('/api/admin/alerts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type: 'SLOW_QUERY',
          data: {
            queryId: metrics.queryId,
            duration: metrics.duration,
            threshold: this.slowQueryThreshold,
            sql: metrics.sql.substring(0, 200)
          },
          timestamp: new Date().toISOString()
        })
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[140]++;
      this.logger.error('Failed to send slow query alert', {
        error: error.message
      });
    }
  }
  /**
   * 工具方法
   */
  generateQueryId() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[30]++;
    cov_1okmjd2ydn().s[141]++;
    return `query_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateTransactionId() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[31]++;
    cov_1okmjd2ydn().s[142]++;
    return `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  chunkArray(array, size) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[32]++;
    const chunks =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[143]++, []);
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[144]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[145]++, 0); i < array.length; i += size) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[146]++;
      chunks.push(array.slice(i, i + size));
    }
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[147]++;
    return chunks;
  }
  getQueryDistribution(metrics) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[33]++;
    const distribution =
    /* istanbul ignore next */
    (cov_1okmjd2ydn().s[148]++, {
      fast: 0,
      // < 50ms
      normal: 0,
      // 50-100ms
      slow: 0 // > 100ms
    });
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[149]++;
    metrics.forEach(metric => {
      /* istanbul ignore next */
      cov_1okmjd2ydn().f[34]++;
      cov_1okmjd2ydn().s[150]++;
      if (metric.duration < 50) {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[23][0]++;
        cov_1okmjd2ydn().s[151]++;
        distribution.fast++;
      } else {
        /* istanbul ignore next */
        cov_1okmjd2ydn().b[23][1]++;
        cov_1okmjd2ydn().s[152]++;
        if (metric.duration <= 100) {
          /* istanbul ignore next */
          cov_1okmjd2ydn().b[24][0]++;
          cov_1okmjd2ydn().s[153]++;
          distribution.normal++;
        } else {
          /* istanbul ignore next */
          cov_1okmjd2ydn().b[24][1]++;
          cov_1okmjd2ydn().s[154]++;
          distribution.slow++;
        }
      }
    });
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[155]++;
    return distribution;
  }
  /**
   * 连接池管理
   */
  async getConnectionPoolStatus() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[35]++;
    cov_1okmjd2ydn().s[156]++;
    // 这里应该从实际的连接池获取状态
    // Prisma 不直接暴露连接池状态，这里提供模拟数据
    return {
      active: Math.floor(Math.random() * this.poolConfig.max),
      idle: Math.floor(Math.random() * (this.poolConfig.max - 5)),
      waiting: Math.floor(Math.random() * 5),
      total: this.poolConfig.max,
      config: this.poolConfig
    };
  }
  /**
   * 优雅关闭
   */
  async gracefulShutdown() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[36]++;
    cov_1okmjd2ydn().s[157]++;
    this.logger.info('Starting graceful database shutdown');
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[158]++;
    try {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[159]++;
      // 停止性能监控
      performance_monitor_1.performanceMonitor.stop();
      // 关闭健康检查器
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[160]++;
      await connection_health_1.healthChecker.close();
      // 断开Prisma连接
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[161]++;
      await this.prisma.$disconnect();
      // 清理缓存
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[162]++;
      this.clearCache();
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[163]++;
      this.logger.info('Database disconnected successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().s[164]++;
      this.logger.error('Error during database shutdown', {
        error: error.message
      });
    }
  }
  /**
   * 获取Prisma客户端实例
   */
  getPrismaClient() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[37]++;
    cov_1okmjd2ydn().s[165]++;
    return this.prisma;
  }
  /**
   * 清理缓存
   */
  clearCache() {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[38]++;
    cov_1okmjd2ydn().s[166]++;
    this.queryCache.clear();
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[167]++;
    this.logger.info('Query cache cleared');
  }
  /**
   * 设置慢查询阈值
   */
  setSlowQueryThreshold(threshold) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[39]++;
    cov_1okmjd2ydn().s[168]++;
    this.slowQueryThreshold = threshold;
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[169]++;
    this.logger.info('Slow query threshold updated', {
      threshold
    });
  }
  /**
   * 启用/禁用缓存
   */
  setCacheEnabled(enabled) {
    /* istanbul ignore next */
    cov_1okmjd2ydn().f[40]++;
    cov_1okmjd2ydn().s[170]++;
    this.cacheEnabled = enabled;
    /* istanbul ignore next */
    cov_1okmjd2ydn().s[171]++;
    if (!enabled) {
      /* istanbul ignore next */
      cov_1okmjd2ydn().b[25][0]++;
      cov_1okmjd2ydn().s[172]++;
      this.clearCache();
    } else
    /* istanbul ignore next */
    {
      cov_1okmjd2ydn().b[25][1]++;
    }
    cov_1okmjd2ydn().s[173]++;
    this.logger.info('Cache enabled status changed', {
      enabled
    });
  }
}
/* istanbul ignore next */
cov_1okmjd2ydn().s[174]++;
exports.EnhancedDatabaseManager = EnhancedDatabaseManager;
// 导出单例实例
/* istanbul ignore next */
cov_1okmjd2ydn().s[175]++;
exports.enhancedDatabaseManager = EnhancedDatabaseManager.getInstance();
// 导出便捷方法
/* istanbul ignore next */
cov_1okmjd2ydn().s[176]++;
exports.db = exports.enhancedDatabaseManager.getPrismaClient();
// 导出事务执行器
/* istanbul ignore next */
cov_1okmjd2ydn().s[177]++;
exports.executeTransaction = exports.enhancedDatabaseManager.executeTransaction.bind(exports.enhancedDatabaseManager);
// 导出查询执行器
/* istanbul ignore next */
cov_1okmjd2ydn().s[178]++;
exports.executeQuery = exports.enhancedDatabaseManager.executeQuery.bind(exports.enhancedDatabaseManager);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,