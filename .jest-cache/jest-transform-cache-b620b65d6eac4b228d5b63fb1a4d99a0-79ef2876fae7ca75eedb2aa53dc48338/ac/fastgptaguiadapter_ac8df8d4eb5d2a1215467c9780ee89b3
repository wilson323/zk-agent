c9c94fdb2e2d53bf3ecf9f3555c9bd37
"use strict";

/* istanbul ignore next */
function cov_2qei6htqzu() {
  var path = "E:\\zk-agent\\lib\\api\\fastgpt-ag-ui-adapter.ts";
  var hash = "79e44f6d31055a0da1ee0eaefae9b8afcbb7ea1e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\api\\fastgpt-ag-ui-adapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "4": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "5": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 71,
          column: 1
        }
      },
      "6": {
        start: {
          line: 14,
          column: 41
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "7": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 74
        }
      },
      "8": {
        start: {
          line: 22,
          column: 67
        },
        end: {
          line: 22,
          column: 73
        }
      },
      "9": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 100
        }
      },
      "10": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 37
        }
      },
      "11": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 67
        }
      },
      "12": {
        start: {
          line: 38,
          column: 54
        },
        end: {
          line: 38,
          column: 60
        }
      },
      "13": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "14": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "15": {
        start: {
          line: 47,
          column: 51
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "16": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 53,
          column: 14
        }
      },
      "17": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "18": {
        start: {
          line: 61,
          column: 42
        },
        end: {
          line: 61,
          column: 48
        }
      },
      "19": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "20": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 41
        }
      },
      "21": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "22": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 92
        }
      },
      "23": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 78
        }
      },
      "24": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 22
        }
      },
      "25": {
        start: {
          line: 89,
          column: 22
        },
        end: {
          line: 89,
          column: 45
        }
      },
      "26": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "27": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 40
        }
      },
      "28": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "29": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "30": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "31": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 47
        }
      },
      "32": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 22
        }
      },
      "33": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 45
        }
      },
      "34": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "35": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 40
        }
      },
      "36": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 90
        }
      },
      "37": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 64
        }
      },
      "38": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 22
        }
      },
      "39": {
        start: {
          line: 123,
          column: 22
        },
        end: {
          line: 123,
          column: 45
        }
      },
      "40": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "41": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "42": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "43": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "44": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 82
        }
      },
      "45": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "46": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 145,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 16,
            column: 9
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 21,
            column: 18
          }
        },
        loc: {
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 18
          }
        },
        loc: {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 18
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 60,
            column: 18
          }
        },
        loc: {
          start: {
            line: 60,
            column: 35
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 33
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 47
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 88
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 47
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 53
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 133
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 42
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 137
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 38,
            column: 49
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "2": {
        loc: {
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 39
          }
        }, {
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 100,
            column: 45
          }
        }],
        line: 100
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 45
          }
        }],
        line: 122
      },
      "5": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\api\\fastgpt-ag-ui-adapter.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\api\\fastgpt-ag-ui-adapter.ts"],
      sourcesContent: ["// @ts-nocheck\nimport { AgentRuntime, type AgentState, type ToolDefinition } from \"@ag-ui/server\"\nimport { initChatSession, sendChatMessage, getHistoryMessages } from \"./fastgpt\"\nimport { generateImageFromChat } from \"../utils/image-generator\"\n\n// FastGPT\u5DE5\u5177\u5B9A\u4E49\nconst fastgptTools: ToolDefinition[] = [\n  {\n    name: \"init_chat_session\",\n    description: \"\u521D\u59CB\u5316FastGPT\u804A\u5929\u4F1A\u8BDD\",\n    execute: async (params: { appId: string; variables?: Record<string, string> }) => {\n      const { appId, variables } = params\n      return await initChatSession(appId, variables)\n    },\n  },\n  {\n    name: \"send_message\",\n    description: \"\u53D1\u9001\u6D88\u606F\u5230FastGPT\",\n    execute: async (params: {\n      chatId: string\n      content: string\n      variables?: Record<string, string>\n      streamCallback?: (chunk: string) => void\n    }) => {\n      const { chatId, content, variables, streamCallback } = params\n      return await sendChatMessage(chatId, content, variables, streamCallback)\n    },\n  },\n  {\n    name: \"get_history\",\n    description: \"\u83B7\u53D6FastGPT\u5386\u53F2\u6D88\u606F\",\n    execute: async (params: { chatId: string }) => {\n      const { chatId } = params\n      return await getHistoryMessages(chatId)\n    },\n  },\n  {\n    name: \"generate_image\",\n    description: \"\u4ECE\u804A\u5929\u8BB0\u5F55\u751F\u6210\u957F\u56FE\",\n    execute: async (params: { chatId: string; includeWelcome?: boolean }) => {\n      const { chatId, includeWelcome = true } = params\n      const history = await getHistoryMessages(chatId)\n      return await generateImageFromChat(history, includeWelcome)\n    },\n  },\n  {\n    name: \"feedback\",\n    description: \"\u63D0\u4EA4\u53CD\u9988\uFF08\u70B9\u8D5E/\u70B9\u8E29\uFF09\",\n    execute: async (params: { messageId: string; rating: \"like\" | \"dislike\"; comment?: string }) => {\n      const { messageId, rating, comment } = params\n      // \u5B9E\u73B0\u70B9\u8D5E/\u70B9\u8E29\u529F\u80FD\n      const response = await fetch(\"/api/fastgpt/feedback\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ messageId, rating, comment }),\n      })\n      return await response.json()\n    },\n  },\n  {\n    name: \"batch_forward\",\n    description: \"\u6279\u91CF\u8F6C\u53D1\u6D88\u606F\",\n    execute: async (params: { messages: string[]; targets: string[] }) => {\n      const { messages, targets } = params\n      // \u5B9E\u73B0\u6279\u91CF\u8F6C\u53D1\u529F\u80FD\n      const response = await fetch(\"/api/fastgpt/batch-forward\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ messages, targets }),\n      })\n      return await response.json()\n    },\n  },\n]\n\n// \u521B\u5EFAFastGPT AG-UI\u9002\u914D\u5668\nexport class FastGptAgUiAdapter {\n  private runtime: AgentRuntime\n\n  constructor(threadId: string, runId: string) {\n    this.runtime = new AgentRuntime({\n      threadId,\n      runId,\n      tools: fastgptTools,\n    })\n  }\n\n  // \u521D\u59CB\u5316\u804A\u5929\u4F1A\u8BDD\n  async initChatSession(appId: string, variables?: Record<string, string>): Promise<any> {\n    const result = await this.runtime.runTool(\"init_chat_session\", { appId, variables })\n    this.runtime.updateState({ chatId: result.chatId, appId, variables })\n    return result\n  }\n\n  // \u53D1\u9001\u6D88\u606F\n  async sendMessage(content: string, streamCallback?: (chunk: string) => void): Promise<any> {\n    const state = this.runtime.getState() as AgentState & { chatId: string; variables?: Record<string, string> }\n    if (!state.chatId) {\n      throw new Error(\"\u804A\u5929\u4F1A\u8BDD\u672A\u521D\u59CB\u5316\")\n    }\n\n    const result = await this.runtime.runTool(\"send_message\", {\n      chatId: state.chatId,\n      content,\n      variables: state.variables,\n      streamCallback,\n    })\n\n    // \u66F4\u65B0\u72B6\u6001\uFF0C\u4FDD\u5B58\u6700\u65B0\u6D88\u606F\n    const messages = state.messages || []\n    messages.push(\n      {\n        role: \"user\",\n        content,\n      },\n      {\n        role: \"assistant\",\n        content: result.reply,\n      },\n    )\n\n    this.runtime.updateState({ messages })\n    return result\n  }\n\n  // \u83B7\u53D6\u5386\u53F2\u6D88\u606F\n  async getHistory(): Promise<any> {\n    const state = this.runtime.getState() as AgentState & { chatId: string }\n    if (!state.chatId) {\n      throw new Error(\"\u804A\u5929\u4F1A\u8BDD\u672A\u521D\u59CB\u5316\")\n    }\n\n    const result = await this.runtime.runTool(\"get_history\", { chatId: state.chatId })\n    this.runtime.updateState({ messages: result.messages })\n    return result\n  }\n\n  // \u751F\u6210\u957F\u56FE\n  async generateImage(includeWelcome = true): Promise<any> {\n    const state = this.runtime.getState() as AgentState & { chatId: string }\n    if (!state.chatId) {\n      throw new Error(\"\u804A\u5929\u4F1A\u8BDD\u672A\u521D\u59CB\u5316\")\n    }\n\n    return await this.runtime.runTool(\"generate_image\", {\n      chatId: state.chatId,\n      includeWelcome,\n    })\n  }\n\n  // \u63D0\u4EA4\u53CD\u9988\n  async submitFeedback(messageId: string, rating: \"like\" | \"dislike\", comment?: string): Promise<any> {\n    return await this.runtime.runTool(\"feedback\", { messageId, rating, comment })\n  }\n\n  // \u6279\u91CF\u8F6C\u53D1\n  async batchForward(messages: string[], targets: string[]): Promise<any> {\n    return await this.runtime.runTool(\"batch_forward\", { messages, targets })\n  }\n\n  // \u83B7\u53D6\u5F53\u524D\u72B6\u6001\n  getState(): AgentState {\n    return this.runtime.getState()\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "79e44f6d31055a0da1ee0eaefae9b8afcbb7ea1e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qei6htqzu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qei6htqzu();
cov_2qei6htqzu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2qei6htqzu().s[1]++;
exports.FastGptAgUiAdapter = void 0;
// @ts-nocheck
const server_1 =
/* istanbul ignore next */
(cov_2qei6htqzu().s[2]++, require("@ag-ui/server"));
const fastgpt_1 =
/* istanbul ignore next */
(cov_2qei6htqzu().s[3]++, require("./fastgpt"));
const image_generator_1 =
/* istanbul ignore next */
(cov_2qei6htqzu().s[4]++, require("../utils/image-generator"));
// FastGPT工具定义
const fastgptTools =
/* istanbul ignore next */
(cov_2qei6htqzu().s[5]++, [{
  name: "init_chat_session",
  description: "初始化FastGPT聊天会话",
  execute: async params => {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[0]++;
    const {
      appId,
      variables
    } =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[6]++, params);
    /* istanbul ignore next */
    cov_2qei6htqzu().s[7]++;
    return await (0, fastgpt_1.initChatSession)(appId, variables);
  }
}, {
  name: "send_message",
  description: "发送消息到FastGPT",
  execute: async params => {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[1]++;
    const {
      chatId,
      content,
      variables,
      streamCallback
    } =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[8]++, params);
    /* istanbul ignore next */
    cov_2qei6htqzu().s[9]++;
    return await (0, fastgpt_1.sendChatMessage)(chatId, content, variables, streamCallback);
  }
}, {
  name: "get_history",
  description: "获取FastGPT历史消息",
  execute: async params => {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[2]++;
    const {
      chatId
    } =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[10]++, params);
    /* istanbul ignore next */
    cov_2qei6htqzu().s[11]++;
    return await (0, fastgpt_1.getHistoryMessages)(chatId);
  }
}, {
  name: "generate_image",
  description: "从聊天记录生成长图",
  execute: async params => {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[3]++;
    const {
      chatId,
      includeWelcome =
      /* istanbul ignore next */
      (cov_2qei6htqzu().b[0][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[12]++, params);
    const history =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[13]++, await (0, fastgpt_1.getHistoryMessages)(chatId));
    /* istanbul ignore next */
    cov_2qei6htqzu().s[14]++;
    return await (0, image_generator_1.generateImageFromChat)(history, includeWelcome);
  }
}, {
  name: "feedback",
  description: "提交反馈（点赞/点踩）",
  execute: async params => {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[4]++;
    const {
      messageId,
      rating,
      comment
    } =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[15]++, params);
    // 实现点赞/点踩功能
    const response =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[16]++, await fetch("/api/fastgpt/feedback", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        messageId,
        rating,
        comment
      })
    }));
    /* istanbul ignore next */
    cov_2qei6htqzu().s[17]++;
    return await response.json();
  }
}, {
  name: "batch_forward",
  description: "批量转发消息",
  execute: async params => {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[5]++;
    const {
      messages,
      targets
    } =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[18]++, params);
    // 实现批量转发功能
    const response =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[19]++, await fetch("/api/fastgpt/batch-forward", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        messages,
        targets
      })
    }));
    /* istanbul ignore next */
    cov_2qei6htqzu().s[20]++;
    return await response.json();
  }
}]);
// 创建FastGPT AG-UI适配器
class FastGptAgUiAdapter {
  constructor(threadId, runId) {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[6]++;
    cov_2qei6htqzu().s[21]++;
    this.runtime = new server_1.AgentRuntime({
      threadId,
      runId,
      tools: fastgptTools
    });
  }
  // 初始化聊天会话
  async initChatSession(appId, variables) {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[7]++;
    const result =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[22]++, await this.runtime.runTool("init_chat_session", {
      appId,
      variables
    }));
    /* istanbul ignore next */
    cov_2qei6htqzu().s[23]++;
    this.runtime.updateState({
      chatId: result.chatId,
      appId,
      variables
    });
    /* istanbul ignore next */
    cov_2qei6htqzu().s[24]++;
    return result;
  }
  // 发送消息
  async sendMessage(content, streamCallback) {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[8]++;
    const state =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[25]++, this.runtime.getState());
    /* istanbul ignore next */
    cov_2qei6htqzu().s[26]++;
    if (!state.chatId) {
      /* istanbul ignore next */
      cov_2qei6htqzu().b[1][0]++;
      cov_2qei6htqzu().s[27]++;
      throw new Error("聊天会话未初始化");
    } else
    /* istanbul ignore next */
    {
      cov_2qei6htqzu().b[1][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[28]++, await this.runtime.runTool("send_message", {
      chatId: state.chatId,
      content,
      variables: state.variables,
      streamCallback
    }));
    // 更新状态，保存最新消息
    const messages =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[29]++,
    /* istanbul ignore next */
    (cov_2qei6htqzu().b[2][0]++, state.messages) ||
    /* istanbul ignore next */
    (cov_2qei6htqzu().b[2][1]++, []));
    /* istanbul ignore next */
    cov_2qei6htqzu().s[30]++;
    messages.push({
      role: "user",
      content
    }, {
      role: "assistant",
      content: result.reply
    });
    /* istanbul ignore next */
    cov_2qei6htqzu().s[31]++;
    this.runtime.updateState({
      messages
    });
    /* istanbul ignore next */
    cov_2qei6htqzu().s[32]++;
    return result;
  }
  // 获取历史消息
  async getHistory() {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[9]++;
    const state =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[33]++, this.runtime.getState());
    /* istanbul ignore next */
    cov_2qei6htqzu().s[34]++;
    if (!state.chatId) {
      /* istanbul ignore next */
      cov_2qei6htqzu().b[3][0]++;
      cov_2qei6htqzu().s[35]++;
      throw new Error("聊天会话未初始化");
    } else
    /* istanbul ignore next */
    {
      cov_2qei6htqzu().b[3][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[36]++, await this.runtime.runTool("get_history", {
      chatId: state.chatId
    }));
    /* istanbul ignore next */
    cov_2qei6htqzu().s[37]++;
    this.runtime.updateState({
      messages: result.messages
    });
    /* istanbul ignore next */
    cov_2qei6htqzu().s[38]++;
    return result;
  }
  // 生成长图
  async generateImage(includeWelcome =
  /* istanbul ignore next */
  (cov_2qei6htqzu().b[4][0]++, true)) {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[10]++;
    const state =
    /* istanbul ignore next */
    (cov_2qei6htqzu().s[39]++, this.runtime.getState());
    /* istanbul ignore next */
    cov_2qei6htqzu().s[40]++;
    if (!state.chatId) {
      /* istanbul ignore next */
      cov_2qei6htqzu().b[5][0]++;
      cov_2qei6htqzu().s[41]++;
      throw new Error("聊天会话未初始化");
    } else
    /* istanbul ignore next */
    {
      cov_2qei6htqzu().b[5][1]++;
    }
    cov_2qei6htqzu().s[42]++;
    return await this.runtime.runTool("generate_image", {
      chatId: state.chatId,
      includeWelcome
    });
  }
  // 提交反馈
  async submitFeedback(messageId, rating, comment) {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[11]++;
    cov_2qei6htqzu().s[43]++;
    return await this.runtime.runTool("feedback", {
      messageId,
      rating,
      comment
    });
  }
  // 批量转发
  async batchForward(messages, targets) {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[12]++;
    cov_2qei6htqzu().s[44]++;
    return await this.runtime.runTool("batch_forward", {
      messages,
      targets
    });
  }
  // 获取当前状态
  getState() {
    /* istanbul ignore next */
    cov_2qei6htqzu().f[13]++;
    cov_2qei6htqzu().s[45]++;
    return this.runtime.getState();
  }
}
/* istanbul ignore next */
cov_2qei6htqzu().s[46]++;
exports.FastGptAgUiAdapter = FastGptAgUiAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnFlaTZodHF6dSIsImFjdHVhbENvdmVyYWdlIiwicyIsInNlcnZlcl8xIiwicmVxdWlyZSIsImZhc3RncHRfMSIsImltYWdlX2dlbmVyYXRvcl8xIiwiZmFzdGdwdFRvb2xzIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZXhlY3V0ZSIsInBhcmFtcyIsImYiLCJhcHBJZCIsInZhcmlhYmxlcyIsImluaXRDaGF0U2Vzc2lvbiIsImNoYXRJZCIsImNvbnRlbnQiLCJzdHJlYW1DYWxsYmFjayIsInNlbmRDaGF0TWVzc2FnZSIsImdldEhpc3RvcnlNZXNzYWdlcyIsImluY2x1ZGVXZWxjb21lIiwiYiIsImhpc3RvcnkiLCJnZW5lcmF0ZUltYWdlRnJvbUNoYXQiLCJtZXNzYWdlSWQiLCJyYXRpbmciLCJjb21tZW50IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImpzb24iLCJtZXNzYWdlcyIsInRhcmdldHMiLCJGYXN0R3B0QWdVaUFkYXB0ZXIiLCJjb25zdHJ1Y3RvciIsInRocmVhZElkIiwicnVuSWQiLCJydW50aW1lIiwiQWdlbnRSdW50aW1lIiwidG9vbHMiLCJyZXN1bHQiLCJydW5Ub29sIiwidXBkYXRlU3RhdGUiLCJzZW5kTWVzc2FnZSIsInN0YXRlIiwiZ2V0U3RhdGUiLCJFcnJvciIsInB1c2giLCJyb2xlIiwicmVwbHkiLCJnZXRIaXN0b3J5IiwiZ2VuZXJhdGVJbWFnZSIsInN1Ym1pdEZlZWRiYWNrIiwiYmF0Y2hGb3J3YXJkIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcbGliXFxhcGlcXGZhc3RncHQtYWctdWktYWRhcHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgQWdlbnRSdW50aW1lLCB0eXBlIEFnZW50U3RhdGUsIHR5cGUgVG9vbERlZmluaXRpb24gfSBmcm9tIFwiQGFnLXVpL3NlcnZlclwiXG5pbXBvcnQgeyBpbml0Q2hhdFNlc3Npb24sIHNlbmRDaGF0TWVzc2FnZSwgZ2V0SGlzdG9yeU1lc3NhZ2VzIH0gZnJvbSBcIi4vZmFzdGdwdFwiXG5pbXBvcnQgeyBnZW5lcmF0ZUltYWdlRnJvbUNoYXQgfSBmcm9tIFwiLi4vdXRpbHMvaW1hZ2UtZ2VuZXJhdG9yXCJcblxuLy8gRmFzdEdQVOW3peWFt+WumuS5iVxuY29uc3QgZmFzdGdwdFRvb2xzOiBUb29sRGVmaW5pdGlvbltdID0gW1xuICB7XG4gICAgbmFtZTogXCJpbml0X2NoYXRfc2Vzc2lvblwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIuWIneWni+WMlkZhc3RHUFTogYrlpKnkvJror51cIixcbiAgICBleGVjdXRlOiBhc3luYyAocGFyYW1zOiB7IGFwcElkOiBzdHJpbmc7IHZhcmlhYmxlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfSkgPT4ge1xuICAgICAgY29uc3QgeyBhcHBJZCwgdmFyaWFibGVzIH0gPSBwYXJhbXNcbiAgICAgIHJldHVybiBhd2FpdCBpbml0Q2hhdFNlc3Npb24oYXBwSWQsIHZhcmlhYmxlcylcbiAgICB9LFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJzZW5kX21lc3NhZ2VcIixcbiAgICBkZXNjcmlwdGlvbjogXCLlj5HpgIHmtojmga/liLBGYXN0R1BUXCIsXG4gICAgZXhlY3V0ZTogYXN5bmMgKHBhcmFtczoge1xuICAgICAgY2hhdElkOiBzdHJpbmdcbiAgICAgIGNvbnRlbnQ6IHN0cmluZ1xuICAgICAgdmFyaWFibGVzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPlxuICAgICAgc3RyZWFtQ2FsbGJhY2s/OiAoY2h1bms6IHN0cmluZykgPT4gdm9pZFxuICAgIH0pID0+IHtcbiAgICAgIGNvbnN0IHsgY2hhdElkLCBjb250ZW50LCB2YXJpYWJsZXMsIHN0cmVhbUNhbGxiYWNrIH0gPSBwYXJhbXNcbiAgICAgIHJldHVybiBhd2FpdCBzZW5kQ2hhdE1lc3NhZ2UoY2hhdElkLCBjb250ZW50LCB2YXJpYWJsZXMsIHN0cmVhbUNhbGxiYWNrKVxuICAgIH0sXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcImdldF9oaXN0b3J5XCIsXG4gICAgZGVzY3JpcHRpb246IFwi6I635Y+WRmFzdEdQVOWOhuWPsua2iOaBr1wiLFxuICAgIGV4ZWN1dGU6IGFzeW5jIChwYXJhbXM6IHsgY2hhdElkOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgY29uc3QgeyBjaGF0SWQgfSA9IHBhcmFtc1xuICAgICAgcmV0dXJuIGF3YWl0IGdldEhpc3RvcnlNZXNzYWdlcyhjaGF0SWQpXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiZ2VuZXJhdGVfaW1hZ2VcIixcbiAgICBkZXNjcmlwdGlvbjogXCLku47ogYrlpKnorrDlvZXnlJ/miJDplb/lm75cIixcbiAgICBleGVjdXRlOiBhc3luYyAocGFyYW1zOiB7IGNoYXRJZDogc3RyaW5nOyBpbmNsdWRlV2VsY29tZT86IGJvb2xlYW4gfSkgPT4ge1xuICAgICAgY29uc3QgeyBjaGF0SWQsIGluY2x1ZGVXZWxjb21lID0gdHJ1ZSB9ID0gcGFyYW1zXG4gICAgICBjb25zdCBoaXN0b3J5ID0gYXdhaXQgZ2V0SGlzdG9yeU1lc3NhZ2VzKGNoYXRJZClcbiAgICAgIHJldHVybiBhd2FpdCBnZW5lcmF0ZUltYWdlRnJvbUNoYXQoaGlzdG9yeSwgaW5jbHVkZVdlbGNvbWUpXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiZmVlZGJhY2tcIixcbiAgICBkZXNjcmlwdGlvbjogXCLmj5DkuqTlj43ppojvvIjngrnotZ4v54K56Lip77yJXCIsXG4gICAgZXhlY3V0ZTogYXN5bmMgKHBhcmFtczogeyBtZXNzYWdlSWQ6IHN0cmluZzsgcmF0aW5nOiBcImxpa2VcIiB8IFwiZGlzbGlrZVwiOyBjb21tZW50Pzogc3RyaW5nIH0pID0+IHtcbiAgICAgIGNvbnN0IHsgbWVzc2FnZUlkLCByYXRpbmcsIGNvbW1lbnQgfSA9IHBhcmFtc1xuICAgICAgLy8g5a6e546w54K56LWeL+eCuei4qeWKn+iDvVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvZmFzdGdwdC9mZWVkYmFja1wiLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBtZXNzYWdlSWQsIHJhdGluZywgY29tbWVudCB9KSxcbiAgICAgIH0pXG4gICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiYmF0Y2hfZm9yd2FyZFwiLFxuICAgIGRlc2NyaXB0aW9uOiBcIuaJuemHj+i9rOWPkea2iOaBr1wiLFxuICAgIGV4ZWN1dGU6IGFzeW5jIChwYXJhbXM6IHsgbWVzc2FnZXM6IHN0cmluZ1tdOyB0YXJnZXRzOiBzdHJpbmdbXSB9KSA9PiB7XG4gICAgICBjb25zdCB7IG1lc3NhZ2VzLCB0YXJnZXRzIH0gPSBwYXJhbXNcbiAgICAgIC8vIOWunueOsOaJuemHj+i9rOWPkeWKn+iDvVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvZmFzdGdwdC9iYXRjaC1mb3J3YXJkXCIsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG1lc3NhZ2VzLCB0YXJnZXRzIH0pLFxuICAgICAgfSlcbiAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICB9LFxuICB9LFxuXVxuXG4vLyDliJvlu7pGYXN0R1BUIEFHLVVJ6YCC6YWN5ZmoXG5leHBvcnQgY2xhc3MgRmFzdEdwdEFnVWlBZGFwdGVyIHtcbiAgcHJpdmF0ZSBydW50aW1lOiBBZ2VudFJ1bnRpbWVcblxuICBjb25zdHJ1Y3Rvcih0aHJlYWRJZDogc3RyaW5nLCBydW5JZDogc3RyaW5nKSB7XG4gICAgdGhpcy5ydW50aW1lID0gbmV3IEFnZW50UnVudGltZSh7XG4gICAgICB0aHJlYWRJZCxcbiAgICAgIHJ1bklkLFxuICAgICAgdG9vbHM6IGZhc3RncHRUb29scyxcbiAgICB9KVxuICB9XG5cbiAgLy8g5Yid5aeL5YyW6IGK5aSp5Lya6K+dXG4gIGFzeW5jIGluaXRDaGF0U2Vzc2lvbihhcHBJZDogc3RyaW5nLCB2YXJpYWJsZXM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+KTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnJ1bnRpbWUucnVuVG9vbChcImluaXRfY2hhdF9zZXNzaW9uXCIsIHsgYXBwSWQsIHZhcmlhYmxlcyB9KVxuICAgIHRoaXMucnVudGltZS51cGRhdGVTdGF0ZSh7IGNoYXRJZDogcmVzdWx0LmNoYXRJZCwgYXBwSWQsIHZhcmlhYmxlcyB9KVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8vIOWPkemAgea2iOaBr1xuICBhc3luYyBzZW5kTWVzc2FnZShjb250ZW50OiBzdHJpbmcsIHN0cmVhbUNhbGxiYWNrPzogKGNodW5rOiBzdHJpbmcpID0+IHZvaWQpOiBQcm9taXNlPGFueT4ge1xuICAgIGNvbnN0IHN0YXRlID0gdGhpcy5ydW50aW1lLmdldFN0YXRlKCkgYXMgQWdlbnRTdGF0ZSAmIHsgY2hhdElkOiBzdHJpbmc7IHZhcmlhYmxlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfVxuICAgIGlmICghc3RhdGUuY2hhdElkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCLogYrlpKnkvJror53mnKrliJ3lp4vljJZcIilcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnJ1bnRpbWUucnVuVG9vbChcInNlbmRfbWVzc2FnZVwiLCB7XG4gICAgICBjaGF0SWQ6IHN0YXRlLmNoYXRJZCxcbiAgICAgIGNvbnRlbnQsXG4gICAgICB2YXJpYWJsZXM6IHN0YXRlLnZhcmlhYmxlcyxcbiAgICAgIHN0cmVhbUNhbGxiYWNrLFxuICAgIH0pXG5cbiAgICAvLyDmm7TmlrDnirbmgIHvvIzkv53lrZjmnIDmlrDmtojmga9cbiAgICBjb25zdCBtZXNzYWdlcyA9IHN0YXRlLm1lc3NhZ2VzIHx8IFtdXG4gICAgbWVzc2FnZXMucHVzaChcbiAgICAgIHtcbiAgICAgICAgcm9sZTogXCJ1c2VyXCIsXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICByb2xlOiBcImFzc2lzdGFudFwiLFxuICAgICAgICBjb250ZW50OiByZXN1bHQucmVwbHksXG4gICAgICB9LFxuICAgIClcblxuICAgIHRoaXMucnVudGltZS51cGRhdGVTdGF0ZSh7IG1lc3NhZ2VzIH0pXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgLy8g6I635Y+W5Y6G5Y+y5raI5oGvXG4gIGFzeW5jIGdldEhpc3RvcnkoKTogUHJvbWlzZTxhbnk+IHtcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMucnVudGltZS5nZXRTdGF0ZSgpIGFzIEFnZW50U3RhdGUgJiB7IGNoYXRJZDogc3RyaW5nIH1cbiAgICBpZiAoIXN0YXRlLmNoYXRJZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwi6IGK5aSp5Lya6K+d5pyq5Yid5aeL5YyWXCIpXG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5ydW50aW1lLnJ1blRvb2woXCJnZXRfaGlzdG9yeVwiLCB7IGNoYXRJZDogc3RhdGUuY2hhdElkIH0pXG4gICAgdGhpcy5ydW50aW1lLnVwZGF0ZVN0YXRlKHsgbWVzc2FnZXM6IHJlc3VsdC5tZXNzYWdlcyB9KVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIC8vIOeUn+aIkOmVv+WbvlxuICBhc3luYyBnZW5lcmF0ZUltYWdlKGluY2x1ZGVXZWxjb21lID0gdHJ1ZSk6IFByb21pc2U8YW55PiB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLnJ1bnRpbWUuZ2V0U3RhdGUoKSBhcyBBZ2VudFN0YXRlICYgeyBjaGF0SWQ6IHN0cmluZyB9XG4gICAgaWYgKCFzdGF0ZS5jaGF0SWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIuiBiuWkqeS8muivneacquWIneWni+WMllwiKVxuICAgIH1cblxuICAgIHJldHVybiBhd2FpdCB0aGlzLnJ1bnRpbWUucnVuVG9vbChcImdlbmVyYXRlX2ltYWdlXCIsIHtcbiAgICAgIGNoYXRJZDogc3RhdGUuY2hhdElkLFxuICAgICAgaW5jbHVkZVdlbGNvbWUsXG4gICAgfSlcbiAgfVxuXG4gIC8vIOaPkOS6pOWPjemmiFxuICBhc3luYyBzdWJtaXRGZWVkYmFjayhtZXNzYWdlSWQ6IHN0cmluZywgcmF0aW5nOiBcImxpa2VcIiB8IFwiZGlzbGlrZVwiLCBjb21tZW50Pzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5ydW50aW1lLnJ1blRvb2woXCJmZWVkYmFja1wiLCB7IG1lc3NhZ2VJZCwgcmF0aW5nLCBjb21tZW50IH0pXG4gIH1cblxuICAvLyDmibnph4/ovazlj5FcbiAgYXN5bmMgYmF0Y2hGb3J3YXJkKG1lc3NhZ2VzOiBzdHJpbmdbXSwgdGFyZ2V0czogc3RyaW5nW10pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnJ1bnRpbWUucnVuVG9vbChcImJhdGNoX2ZvcndhcmRcIiwgeyBtZXNzYWdlcywgdGFyZ2V0cyB9KVxuICB9XG5cbiAgLy8g6I635Y+W5b2T5YmN54q25oCBXG4gIGdldFN0YXRlKCk6IEFnZW50U3RhdGUge1xuICAgIHJldHVybiB0aGlzLnJ1bnRpbWUuZ2V0U3RhdGUoKVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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