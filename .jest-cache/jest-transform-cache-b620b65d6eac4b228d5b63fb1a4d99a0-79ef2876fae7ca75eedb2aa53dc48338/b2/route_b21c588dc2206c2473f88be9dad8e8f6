c26b547c6aa165ea2abea1dbc8ed1918
"use strict";

/**
 * @file fastgpt\test-connection\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1h97lu4vqo() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\test-connection\\route.ts";
  var hash = "5f9e617cccf3a4c1102013980a9115be83aefd2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\test-connection\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 38
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "9": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 90
        }
      },
      "10": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 23,
          column: 39
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "12": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 96
        }
      },
      "13": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "15": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 110
        }
      },
      "16": {
        start: {
          line: 36,
          column: 65
        },
        end: {
          line: 36,
          column: 108
        }
      },
      "17": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 152
        }
      },
      "18": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 90
        }
      },
      "20": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 93
          },
          end: {
            line: 13,
            column: 94
          }
        },
        loc: {
          start: {
            line: 13,
            column: 122
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 58
          },
          end: {
            line: 36,
            column: 59
          }
        },
        loc: {
          start: {
            line: 36,
            column: 65
          },
          end: {
            line: 36,
            column: 108
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 50
          }
        }, {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 61
          }
        }, {
          start: {
            line: 19,
            column: 65
          },
          end: {
            line: 19,
            column: 90
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 23,
            column: 39
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 14
          },
          end: {
            line: 22,
            column: 102
          }
        }, {
          start: {
            line: 23,
            column: 14
          },
          end: {
            line: 23,
            column: 39
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 84
          },
          end: {
            line: 37,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 84
          },
          end: {
            line: 37,
            column: 108
          }
        }, {
          start: {
            line: 37,
            column: 112
          },
          end: {
            line: 37,
            column: 131
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\test-connection\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,0DAA4D;AAC5D,uDAA4D;AAC5D,kEAA8D;AAEjD,QAAA,IAAI,GAAG,IAAA,0BAAc,EAChC,4BAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;IAC1B,IAAI,CAAC;QACH,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAA;QAE5C,mDAAmD;QACnD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAA;QAE1C,sCAAsC;QACtC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,OAAO,IAAI,yBAAyB,CAAA;QAElF,gDAAgD;QAChD,MAAM,QAAQ,GAAG,QAAQ;YACvB,CAAC,CAAC,kBAAkB,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,gBAAgB;YAC1F,CAAC,CAAC,GAAG,MAAM,gBAAgB,CAAA;QAE7B,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,+BAAkB,CAAC,KAAK,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAA;QACxE,CAAC;QAED,iDAAiD;QACjD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,QAAQ,EAAE;YACrC,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,UAAU,MAAM,EAAE;aAClC;SACF,CAAC,CAAA;QAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAA;YAClG,OAAO,+BAAkB,CAAC,KAAK,CAC7B,2BAA2B,SAAS,CAAC,KAAK,EAAE,OAAO,IAAI,QAAQ,CAAC,UAAU,EAAE,EAC5E,QAAQ,CAAC,MAAM,CAChB,CAAA;QACH,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QAClC,OAAO,+BAAkB,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;IACtE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA;IAC/D,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\test-connection\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\test-connection\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async ({ validatedBody }) => {\n    try {\n      const { baseUrl, useProxy } = _validatedBody\n    \n      // Use server-side environment variable for API key\n      const apiKey = process.env.FASTGPT_API_KEY\n    \n      // Use server-side or provided API URL\n      const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\"\n    \n      // Determine the actual API endpoint for testing\n      const endpoint = useProxy\n        ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/models`\n        : `${apiUrl}/api/v1/models`\n    \n      if (!apiKey) {\n        return ApiResponseWrapper.error('FastGPT API key not configured', 500)\n      }\n    \n      // Test the connection by making a simple request\n      const response = await fetch(endpoint, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n      })\n    \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }))\n        return ApiResponseWrapper.error(\n          `Connection test failed: ${errorData.error?.message || response.statusText}`,\n          response.status\n        )\n      }\n    \n      const data = await response.json()\n      return ApiResponseWrapper.success({ success: true, data, useProxy })\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500)\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5f9e617cccf3a4c1102013980a9115be83aefd2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h97lu4vqo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h97lu4vqo();
cov_1h97lu4vqo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1h97lu4vqo().s[1]++;
exports.POST = void 0;
const api_route_1 =
/* istanbul ignore next */
(cov_1h97lu4vqo().s[2]++, require("@/lib/middleware/api-route"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1h97lu4vqo().s[3]++, require("@/lib/utils/api-helper"));
const route_configs_1 =
/* istanbul ignore next */
(cov_1h97lu4vqo().s[4]++, require("@/lib/middleware/route-configs"));
/* istanbul ignore next */
cov_1h97lu4vqo().s[5]++;
exports.POST = (0, api_route_1.createApiRoute)(route_configs_1.RouteConfigs.protectedPost(), async ({
  validatedBody
}) => {
  /* istanbul ignore next */
  cov_1h97lu4vqo().f[0]++;
  cov_1h97lu4vqo().s[6]++;
  try {
    const {
      baseUrl,
      useProxy
    } =
    /* istanbul ignore next */
    (cov_1h97lu4vqo().s[7]++, _validatedBody);
    // Use server-side environment variable for API key
    const apiKey =
    /* istanbul ignore next */
    (cov_1h97lu4vqo().s[8]++, process.env.FASTGPT_API_KEY);
    // Use server-side or provided API URL
    const apiUrl =
    /* istanbul ignore next */
    (cov_1h97lu4vqo().s[9]++,
    /* istanbul ignore next */
    (cov_1h97lu4vqo().b[0][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1h97lu4vqo().b[0][1]++, baseUrl) ||
    /* istanbul ignore next */
    (cov_1h97lu4vqo().b[0][2]++, "https://zktecoaihub.com"));
    // Determine the actual API endpoint for testing
    const endpoint =
    /* istanbul ignore next */
    (cov_1h97lu4vqo().s[10]++, useProxy ?
    /* istanbul ignore next */
    (cov_1h97lu4vqo().b[1][0]++, `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\/\//, ""))}/api/v1/models`) :
    /* istanbul ignore next */
    (cov_1h97lu4vqo().b[1][1]++, `${apiUrl}/api/v1/models`));
    /* istanbul ignore next */
    cov_1h97lu4vqo().s[11]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_1h97lu4vqo().b[2][0]++;
      cov_1h97lu4vqo().s[12]++;
      return api_helper_1.ApiResponseWrapper.error('FastGPT API key not configured', 500);
    } else
    /* istanbul ignore next */
    {
      cov_1h97lu4vqo().b[2][1]++;
    }
    // Test the connection by making a simple request
    const response =
    /* istanbul ignore next */
    (cov_1h97lu4vqo().s[13]++, await fetch(endpoint, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      }
    }));
    /* istanbul ignore next */
    cov_1h97lu4vqo().s[14]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1h97lu4vqo().b[3][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1h97lu4vqo().s[15]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1h97lu4vqo().f[1]++;
        cov_1h97lu4vqo().s[16]++;
        return {
          error: {
            message: response.statusText
          }
        };
      }));
      /* istanbul ignore next */
      cov_1h97lu4vqo().s[17]++;
      return api_helper_1.ApiResponseWrapper.error(`Connection test failed: ${
      /* istanbul ignore next */
      (cov_1h97lu4vqo().b[4][0]++, errorData.error?.message) ||
      /* istanbul ignore next */
      (cov_1h97lu4vqo().b[4][1]++, response.statusText)}`, response.status);
    } else
    /* istanbul ignore next */
    {
      cov_1h97lu4vqo().b[3][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1h97lu4vqo().s[18]++, await response.json());
    /* istanbul ignore next */
    cov_1h97lu4vqo().s[19]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data,
      useProxy
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1h97lu4vqo().s[20]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,