{"file":"E:\\zk-agent\\tests\\api\\routes\\proxy.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\tests\\api\\routes\\proxy.test.ts"],"sourcesContent":["/**\n * 代理API路由错误处理测试\n * 测试代理服务、请求转发、响应处理等各种错误场景\n */\n\nimport { NextRequest } from 'next/server';\nimport { GET, POST, PUT, DELETE } from '@/app/api/proxy/route';\n// import { GlobalErrorHandler } from '../../../lib/middleware/global-error-handler';\n// import { AgentError, AgentErrorType, ErrorSeverity } from '@/lib/errors/agent-errors';\n\n// Mock dependencies\njest.mock('../../../lib/services/proxy-manager', () => ({\n  forwardRequest: jest.fn(),\n  validateProxyTarget: jest.fn(),\n  checkProxyPermissions: jest.fn(),\n  transformRequest: jest.fn(),\n  transformResponse: jest.fn(),\n  getProxyConfiguration: jest.fn(),\n  updateProxyRules: jest.fn(),\n  logProxyActivity: jest.fn()\n}));\n\njest.mock('../../../lib/security/proxy-security', () => ({\n  validateTargetUrl: jest.fn(),\n  checkRateLimits: jest.fn(),\n  sanitizeHeaders: jest.fn(),\n  validateRequestBody: jest.fn(),\n  checkBlacklist: jest.fn(),\n  enforceSecurityPolicies: jest.fn()\n}));\n\njest.mock('../../../lib/cache/proxy-cache', () => ({\n  getCachedResponse: jest.fn(),\n  setCachedResponse: jest.fn(),\n  invalidateCache: jest.fn(),\n  checkCachePolicy: jest.fn()\n}));\n\njest.mock('../../../lib/auth/session', () => ({\n  validateSession: jest.fn(),\n  checkProxyPermissions: jest.fn()\n}));\n\ndescribe('Proxy API Error Handling', () => {\n  let errorHandler: any;\n\n  beforeEach(() => {\n    // errorHandler = GlobalErrorHandler.getInstance();\n    errorHandler = { errorCount: 0, circuitBreakerOpen: false };\n    jest.clearAllMocks();\n  });\n\n  describe('GET /api/proxy - Forward GET Requests', () => {\n    it('should handle invalid target URL', async () => {\n      const { validateTargetUrl } = require('../../../lib/security/proxy-security');\n      validateTargetUrl.mockRejectedValue(new Error('Invalid target URL format'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=invalid-url');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.success).toBe(false);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid target URL format');\n    });\n\n    it('should handle missing target parameter', async () => {\n      const request = new NextRequest('http://localhost:3000/api/proxy');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Target URL is required');\n    });\n\n    it('should handle blacklisted target URL', async () => {\n      const { checkBlacklist } = require('../../../lib/security/proxy-security');\n      checkBlacklist.mockRejectedValue(new Error('Target URL is blacklisted'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://blacklisted.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Target URL is blacklisted');\n    });\n\n    it('should handle proxy rate limit exceeded', async () => {\n      const { checkRateLimits } = require('../../../lib/security/proxy-security');\n      checkRateLimits.mockRejectedValue(new Error('Proxy rate limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\n      expect(data.error.message).toContain('Proxy rate limit exceeded');\n    });\n\n    it('should handle target server connection timeout', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Connection timeout to target server'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://slow.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504); // Gateway timeout\n      expect(data.error.message).toContain('Connection timeout to target server');\n    });\n\n    it('should handle target server unavailable', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Target server unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://down.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(502); // Bad gateway\n      expect(data.error.message).toContain('Target server unavailable');\n    });\n\n    it('should handle DNS resolution failure', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('DNS resolution failed for target'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://nonexistent.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(502);\n      expect(data.error.message).toContain('DNS resolution failed');\n    });\n\n    it('should handle SSL certificate verification failure', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('SSL certificate verification failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://invalid-ssl.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(502);\n      expect(data.error.message).toContain('SSL certificate verification failed');\n    });\n\n    it('should handle insufficient proxy permissions', async () => {\n      const { checkProxyPermissions } = require('../../../lib/auth/session');\n      checkProxyPermissions.mockRejectedValue(new Error('Insufficient proxy permissions'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://restricted.example.com', {\n        headers: { 'Authorization': 'Bearer user-token' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n    });\n\n    it('should handle proxy configuration not found', async () => {\n      const { getProxyConfiguration } = require('../../../lib/services/proxy-manager');\n      getProxyConfiguration.mockRejectedValue(new Error('Proxy configuration not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://unconfigured.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Proxy configuration not found');\n    });\n  });\n\n  describe('POST /api/proxy - Forward POST Requests', () => {\n    let validRequestBody: any;\n\n    beforeEach(() => {\n      validRequestBody = {\n        target: 'https://api.example.com/data',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer target-token'\n        },\n        body: {\n          data: 'test data'\n        }\n      };\n    });\n\n    it('should handle invalid request body format', async () => {\n      const { validateRequestBody } = require('../../../lib/security/proxy-security');\n      validateRequestBody.mockRejectedValue(new Error('Invalid request body format'));\n\n      const invalidBody = 'invalid json';\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: invalidBody,\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid request body format');\n    });\n\n    it('should handle malicious headers injection', async () => {\n      const { sanitizeHeaders } = require('../../../lib/security/proxy-security');\n      sanitizeHeaders.mockRejectedValue(new Error('Malicious headers detected'));\n\n      const maliciousBody = {\n        ...validRequestBody,\n        headers: {\n          'X-Forwarded-For': '127.0.0.1; rm -rf /',\n          'Host': 'evil.com'\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(maliciousBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Malicious headers detected');\n    });\n\n    it('should handle request body size limit exceeded', async () => {\n      const { validateRequestBody } = require('../../../lib/security/proxy-security');\n      validateRequestBody.mockRejectedValue(new Error('Request body size limit exceeded'));\n\n      const largeBody = {\n        ...validRequestBody,\n        body: 'x'.repeat(10 * 1024 * 1024) // 10MB\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(largeBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(413); // Payload too large\n      expect(data.error.message).toContain('Request body size limit exceeded');\n    });\n\n    it('should handle target server authentication failure', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Target server authentication failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(validRequestBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.message).toContain('Target server authentication failed');\n    });\n\n    it('should handle target server validation error', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Target server validation error: Invalid data format'));\n\n      const invalidDataBody = {\n        ...validRequestBody,\n        body: { invalid: 'data' }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(invalidDataBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Target server validation error');\n    });\n\n    it('should handle request transformation failure', async () => {\n      const { transformRequest } = require('../../../lib/services/proxy-manager');\n      transformRequest.mockRejectedValue(new Error('Request transformation failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(validRequestBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Request transformation failed');\n    });\n\n    it('should handle response transformation failure', async () => {\n      const { transformResponse } = require('../../../lib/services/proxy-manager');\n      transformResponse.mockRejectedValue(new Error('Response transformation failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(validRequestBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Response transformation failed');\n    });\n\n    it('should handle concurrent proxy request limit', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Concurrent proxy request limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy', {\n        method: 'POST',\n        body: JSON.stringify(validRequestBody),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Concurrent proxy request limit exceeded');\n    });\n  });\n\n  describe('PUT /api/proxy/config - Update Proxy Configuration', () => {\n    let validProxyConfig: any;\n\n    beforeEach(() => {\n      validProxyConfig = {\n        rules: [\n          {\n            pattern: '/api/external/*',\n            target: 'https://external-api.example.com',\n            methods: ['GET', 'POST'],\n            headers: {\n              'X-API-Key': 'secret-key'\n            },\n            timeout: 30000,\n            retries: 3\n          }\n        ],\n        security: {\n          rateLimits: {\n            requests: 100,\n            window: 3600\n          },\n          blacklist: ['malicious.com'],\n          whitelist: ['trusted.com']\n        }\n      };\n    });\n\n    it('should handle invalid proxy configuration format', async () => {\n      const { updateProxyRules } = require('../../../lib/services/proxy-manager');\n      updateProxyRules.mockRejectedValue(new Error('Invalid proxy configuration format'));\n\n      const invalidConfig = { rules: 'invalid' };\n      const request = new NextRequest('http://localhost:3000/api/proxy/config', {\n        method: 'PUT',\n        body: JSON.stringify(invalidConfig),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid proxy configuration format');\n    });\n\n    it('should handle conflicting proxy rules', async () => {\n      const { updateProxyRules } = require('../../../lib/services/proxy-manager');\n      updateProxyRules.mockRejectedValue(new Error('Conflicting proxy rules detected'));\n\n      const conflictingConfig = {\n        rules: [\n          { pattern: '/api/*', target: 'https://api1.example.com' },\n          { pattern: '/api/*', target: 'https://api2.example.com' }\n        ]\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/config', {\n        method: 'PUT',\n        body: JSON.stringify(conflictingConfig),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Conflicting proxy rules detected');\n    });\n\n    it('should handle invalid target URL in configuration', async () => {\n      const { updateProxyRules } = require('../../../lib/services/proxy-manager');\n      updateProxyRules.mockRejectedValue(new Error('Invalid target URL in proxy rule'));\n\n      const invalidTargetConfig = {\n        rules: [\n          { pattern: '/api/*', target: 'invalid-url' }\n        ]\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/config', {\n        method: 'PUT',\n        body: JSON.stringify(invalidTargetConfig),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Invalid target URL in proxy rule');\n    });\n\n    it('should handle proxy configuration save failure', async () => {\n      const { updateProxyRules } = require('../../../lib/services/proxy-manager');\n      updateProxyRules.mockRejectedValue(new Error('Failed to save proxy configuration'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/config', {\n        method: 'PUT',\n        body: JSON.stringify(validProxyConfig),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to save proxy configuration');\n    });\n\n    it('should handle insufficient permissions for configuration update', async () => {\n      const { checkProxyPermissions } = require('../../../lib/auth/session');\n      checkProxyPermissions.mockRejectedValue(new Error('Admin permissions required for proxy configuration'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/config', {\n        method: 'PUT',\n        body: JSON.stringify(validProxyConfig),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n    });\n  });\n\n  describe('DELETE /api/proxy/cache - Clear Proxy Cache', () => {\n    it('should handle cache invalidation failure', async () => {\n      const { invalidateCache } = require('../../../lib/cache/proxy-cache');\n      invalidateCache.mockRejectedValue(new Error('Cache invalidation failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/cache', {\n        method: 'DELETE'\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Cache invalidation failed');\n    });\n\n    it('should handle cache service unavailable', async () => {\n      const { invalidateCache } = require('../../../lib/cache/proxy-cache');\n      invalidateCache.mockRejectedValue(new Error('Cache service unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/cache', {\n        method: 'DELETE'\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Cache service unavailable');\n    });\n\n    it('should handle partial cache invalidation', async () => {\n      const { invalidateCache } = require('../../../lib/cache/proxy-cache');\n      invalidateCache.mockRejectedValue(new Error('Partial cache invalidation: some entries could not be cleared'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy/cache?pattern=/api/external/*', {\n        method: 'DELETE'\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(207); // Multi-status\n      expect(data.error.message).toContain('Partial cache invalidation');\n    });\n  });\n\n  describe('Proxy Security Enforcement', () => {\n    it('should handle security policy violation', async () => {\n      const { enforceSecurityPolicies } = require('../../../lib/security/proxy-security');\n      enforceSecurityPolicies.mockRejectedValue(new Error('Security policy violation: SSRF attempt detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=http://localhost:22');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Security policy violation');\n    });\n\n    it('should handle suspicious request pattern', async () => {\n      const { enforceSecurityPolicies } = require('../../../lib/security/proxy-security');\n      enforceSecurityPolicies.mockRejectedValue(new Error('Suspicious request pattern detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com/../../../etc/passwd');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Suspicious request pattern detected');\n    });\n\n    it('should handle IP address restriction violation', async () => {\n      const { enforceSecurityPolicies } = require('../../../lib/security/proxy-security');\n      enforceSecurityPolicies.mockRejectedValue(new Error('IP address not allowed for proxy requests'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://restricted.example.com', {\n        headers: { 'X-Forwarded-For': '192.168.1.100' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('IP address not allowed');\n    });\n  });\n\n  describe('Proxy Cache Management', () => {\n    it('should handle cache policy validation failure', async () => {\n      const { checkCachePolicy } = require('../../../lib/cache/proxy-cache');\n      checkCachePolicy.mockRejectedValue(new Error('Invalid cache policy for target'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://no-cache.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Invalid cache policy');\n    });\n\n    it('should handle cache storage failure', async () => {\n      const { setCachedResponse } = require('../../../lib/cache/proxy-cache');\n      setCachedResponse.mockRejectedValue(new Error('Cache storage failure'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://cacheable.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Cache storage failure');\n    });\n\n    it('should handle corrupted cache data', async () => {\n      const { getCachedResponse } = require('../../../lib/cache/proxy-cache');\n      getCachedResponse.mockRejectedValue(new Error('Corrupted cache data detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://cached.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Corrupted cache data detected');\n    });\n  });\n\n  describe('Proxy Activity Logging', () => {\n    it('should handle logging service failure', async () => {\n      const { logProxyActivity } = require('../../../lib/services/proxy-manager');\n      logProxyActivity.mockRejectedValue(new Error('Proxy activity logging failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      // Should not fail the main request, but log the tracking error\n      expect(response.status).not.toBe(500);\n      expect(data).toBeDefined();\n    });\n\n    it('should handle log storage capacity exceeded', async () => {\n      const { logProxyActivity } = require('../../../lib/services/proxy-manager');\n      logProxyActivity.mockRejectedValue(new Error('Log storage capacity exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com');\n      await GET(request);\n\n      // Should continue processing despite logging failure\n      expect(logProxyActivity).toHaveBeenCalled();\n    });\n  });\n\n  describe('Error Recovery and Monitoring', () => {\n    it('should provide proxy operation recovery suggestions', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Temporary proxy service outage'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.recovery).toBeDefined();\n      expect(data.error.recovery.suggestions).toContain('Retry proxy request');\n    });\n\n    it('should track proxy operation performance', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Test error'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com');\n      await GET(request);\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.errorCount).toBeGreaterThan(0);\n    });\n\n    it('should include proxy context in error responses', async () => {\n      const { forwardRequest } = require('../../../lib/services/proxy-manager');\n      forwardRequest.mockRejectedValue(new Error('Test error'));\n\n      const request = new NextRequest('http://localhost:3000/api/proxy?target=https://api.example.com');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(data.error.context).toBeDefined();\n      expect(data.error.context.operation).toBe('forwardRequest');\n      expect(data.error.context.targetUrl).toBe('https://api.example.com');\n    });\n  });\n});"],"version":3}