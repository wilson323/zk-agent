77b6839b73218d240e00f6373871d861
"use strict";

/* istanbul ignore next */
function cov_1wzucppx2i() {
  var path = "E:\\zk-agent\\lib\\cad\\advanced-cad-analyzer.ts";
  var hash = "f9a5a1089be9772f9b66bb98a610aebfe9b9c2fa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\cad\\advanced-cad-analyzer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "3": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 56
        }
      },
      "4": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "8": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "9": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 30,
          column: 17
        }
      },
      "10": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "11": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "12": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 32
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "14": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 72
        }
      },
      "15": {
        start: {
          line: 43,
          column: 33
        },
        end: {
          line: 43,
          column: 70
        }
      },
      "16": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "17": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "18": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 49
        }
      },
      "19": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "20": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 45
        }
      },
      "21": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "22": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "23": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 52
        }
      },
      "24": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "25": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "26": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 67,
          column: 22
        }
      },
      "27": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 54
        }
      },
      "30": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "32": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 92,
          column: 54
        }
      },
      "33": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "34": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "35": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 21
        }
      },
      "36": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 104,
          column: 83
        }
      },
      "37": {
        start: {
          line: 104,
          column: 69
        },
        end: {
          line: 104,
          column: 79
        }
      },
      "38": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 105,
          column: 67
        }
      },
      "39": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 51
        }
      },
      "40": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 110,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 28
          }
        },
        loc: {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 33,
            column: 9
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 32,
            column: 13
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 83
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 24
          }
        },
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 70
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 45,
            column: 29
          }
        },
        loc: {
          start: {
            line: 45,
            column: 44
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 45
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 98
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 104,
            column: 54
          },
          end: {
            line: 104,
            column: 55
          }
        },
        loc: {
          start: {
            line: 104,
            column: 69
          },
          end: {
            line: 104,
            column: 79
          }
        },
        line: 104
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 81
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 44
          }
        }, {
          start: {
            line: 43,
            column: 48
          },
          end: {
            line: 43,
            column: 49
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 54
          },
          end: {
            line: 43,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 54
          },
          end: {
            line: 43,
            column: 64
          }
        }, {
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 43,
            column: 69
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\cad\\advanced-cad-analyzer.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\cad\\advanced-cad-analyzer.ts"],
      sourcesContent: ["// @ts-nocheck\nimport { EventEmitter } from \"events\"\n\n// \u6DFB\u52A0\u5B9E\u65F6\u5206\u6790\u8FDB\u5EA6\u63A5\u53E3\nexport interface RealTimeProgress {\n  stage: string\n  progress: number\n  details: string\n  timestamp: Date\n  estimatedTimeRemaining?: number\n}\n\n// \u6DFB\u52A0\u6279\u91CF\u5206\u6790\u914D\u7F6E\nexport interface BatchAnalysisConfig {\n  maxConcurrent: number\n  priorityQueue: boolean\n  progressCallback?: (fileId: string, progress: RealTimeProgress) => void\n}\n\nexport interface CADFileInfo {\n  id: string\n  path: string\n  priority?: number\n}\n\nexport interface CADAnalysisResult {\n  [key: string]: any // Define the structure as needed\n}\n\nexport class AdvancedCADAnalyzer {\n  private eventEmitter = new EventEmitter()\n  private analysisQueue: Map<string, any> = new Map()\n  private activeAnalyses: Set<string> = new Set()\n  private performanceMetrics: Map<string, any> = new Map()\n\n  /**\n   * \u5206\u6790\u5355\u4E2ACAD\u6587\u4EF6\n   * @param file CAD\u6587\u4EF6\u4FE1\u606F\n   * @returns \u5206\u6790\u7ED3\u679C\n   */\n  async analyzeFile(file: CADFileInfo): Promise<CADAnalysisResult> {\n    return new Promise((resolve, reject) => {\n      // \u6A21\u62DF\u5206\u6790\u8FC7\u7A0B\n      setTimeout(() => {\n        const result: CADAnalysisResult = {\n          fileId: file.id,\n          status: \"success\",\n          data: {\n            vertices: 1000,\n            edges: 2000,\n            faces: 3000,\n          },\n        }\n        resolve(result)\n      }, 1000)\n    })\n  }\n\n  /**\n   * \u6279\u91CF\u5206\u6790\u591A\u4E2ACAD\u6587\u4EF6\n   */\n  async analyzeBatch(\n    files: CADFileInfo[],\n    config: BatchAnalysisConfig = { maxConcurrent: 3, priorityQueue: false },\n  ): Promise<Map<string, CADAnalysisResult>> {\n    const results = new Map<string, CADAnalysisResult>()\n    const queue = [...files]\n\n    // \u6309\u4F18\u5148\u7EA7\u6392\u5E8F\n    if (config.priorityQueue) {\n      queue.sort((a, b) => (b.priority || 0) - (a.priority || 0))\n    }\n\n    const processFile = async (file: CADFileInfo) => {\n      try {\n        this.activeAnalyses.add(file.id)\n        const result = await this.analyzeFile(file)\n        results.set(file.id, result)\n\n        // \u89E6\u53D1\u8FDB\u5EA6\u56DE\u8C03\n        config.progressCallback?.(file.id, {\n          stage: \"completed\",\n          progress: 100,\n          details: \"\u5206\u6790\u5B8C\u6210\",\n          timestamp: new Date(),\n        })\n      } catch (error) {\n        console.error(`\u6587\u4EF6 ${file.id} \u5206\u6790\u5931\u8D25:`, error)\n      } finally {\n        this.activeAnalyses.delete(file.id)\n      }\n    }\n\n    // \u5E76\u53D1\u5904\u7406\n    const chunks = []\n    for (let i = 0; i < queue.length; i += config.maxConcurrent) {\n      chunks.push(queue.slice(i, i + config.maxConcurrent))\n    }\n\n    for (const chunk of chunks) {\n      await Promise.all(chunk.map(processFile))\n    }\n\n    return results\n  }\n\n  /**\n   * \u5B9E\u65F6\u6027\u80FD\u76D1\u63A7\n   */\n  getPerformanceMetrics(): any {\n    return {\n      activeAnalyses: this.activeAnalyses.size,\n      queueLength: this.analysisQueue.size,\n      averageProcessingTime: this.calculateAverageProcessingTime(),\n      memoryUsage: process.memoryUsage(),\n      cpuUsage: process.cpuUsage(),\n    }\n  }\n\n  /**\n   * \u667A\u80FD\u7F13\u5B58\u7BA1\u7406\n   */\n  private cacheResults(fileId: string, result: CADAnalysisResult): void {\n    // \u5B9E\u73B0\u667A\u80FD\u7F13\u5B58\u903B\u8F91\n    const cacheKey = this.generateCacheKey(fileId)\n    // \u7F13\u5B58\u5230\u5185\u5B58\u6216\u6301\u4E45\u5316\u5B58\u50A8\n  }\n\n  private generateCacheKey(fileId: string): string {\n    return `cache_key_for_${fileId}`\n  }\n\n  private calculateAverageProcessingTime(): number {\n    // \u5B9E\u73B0\u5E73\u5747\u5904\u7406\u65F6\u95F4\u8BA1\u7B97\u903B\u8F91\n    if (this.processingTimes.length === 0) {\n      return 0;\n    }\n    \n    // \u8BA1\u7B97\u6240\u6709\u5904\u7406\u65F6\u95F4\u7684\u5E73\u5747\u503C\n    const totalTime = this.processingTimes.reduce((sum, time) => sum + time, 0);\n    const averageTime = totalTime / this.processingTimes.length;\n    \n    // \u4FDD\u7559\u4E24\u4F4D\u5C0F\u6570\n    return Math.round(averageTime * 100) / 100;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f9a5a1089be9772f9b66bb98a610aebfe9b9c2fa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wzucppx2i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wzucppx2i();
cov_1wzucppx2i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wzucppx2i().s[1]++;
exports.AdvancedCADAnalyzer = void 0;
// @ts-nocheck
const events_1 =
/* istanbul ignore next */
(cov_1wzucppx2i().s[2]++, require("events"));
class AdvancedCADAnalyzer {
  constructor() {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[0]++;
    cov_1wzucppx2i().s[3]++;
    this.eventEmitter = new events_1.EventEmitter();
    /* istanbul ignore next */
    cov_1wzucppx2i().s[4]++;
    this.analysisQueue = new Map();
    /* istanbul ignore next */
    cov_1wzucppx2i().s[5]++;
    this.activeAnalyses = new Set();
    /* istanbul ignore next */
    cov_1wzucppx2i().s[6]++;
    this.performanceMetrics = new Map();
  }
  /**
   * 分析单个CAD文件
   * @param file CAD文件信息
   * @returns 分析结果
   */
  async analyzeFile(file) {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[1]++;
    cov_1wzucppx2i().s[7]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1wzucppx2i().f[2]++;
      cov_1wzucppx2i().s[8]++;
      // 模拟分析过程
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1wzucppx2i().f[3]++;
        const result =
        /* istanbul ignore next */
        (cov_1wzucppx2i().s[9]++, {
          fileId: file.id,
          status: "success",
          data: {
            vertices: 1000,
            edges: 2000,
            faces: 3000
          }
        });
        /* istanbul ignore next */
        cov_1wzucppx2i().s[10]++;
        resolve(result);
      }, 1000);
    });
  }
  /**
   * 批量分析多个CAD文件
   */
  async analyzeBatch(files, config =
  /* istanbul ignore next */
  (cov_1wzucppx2i().b[0][0]++, {
    maxConcurrent: 3,
    priorityQueue: false
  })) {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[4]++;
    const results =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[11]++, new Map());
    const queue =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[12]++, [...files]);
    // 按优先级排序
    /* istanbul ignore next */
    cov_1wzucppx2i().s[13]++;
    if (config.priorityQueue) {
      /* istanbul ignore next */
      cov_1wzucppx2i().b[1][0]++;
      cov_1wzucppx2i().s[14]++;
      queue.sort((a, b) => {
        /* istanbul ignore next */
        cov_1wzucppx2i().f[5]++;
        cov_1wzucppx2i().s[15]++;
        return (
        /* istanbul ignore next */
        (cov_1wzucppx2i().b[2][0]++, b.priority) ||
        /* istanbul ignore next */
        (cov_1wzucppx2i().b[2][1]++, 0)) - (
        /* istanbul ignore next */
        (cov_1wzucppx2i().b[3][0]++, a.priority) ||
        /* istanbul ignore next */
        (cov_1wzucppx2i().b[3][1]++, 0));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wzucppx2i().b[1][1]++;
    }
    cov_1wzucppx2i().s[16]++;
    const processFile = async file => {
      /* istanbul ignore next */
      cov_1wzucppx2i().f[6]++;
      cov_1wzucppx2i().s[17]++;
      try {
        /* istanbul ignore next */
        cov_1wzucppx2i().s[18]++;
        this.activeAnalyses.add(file.id);
        const result =
        /* istanbul ignore next */
        (cov_1wzucppx2i().s[19]++, await this.analyzeFile(file));
        /* istanbul ignore next */
        cov_1wzucppx2i().s[20]++;
        results.set(file.id, result);
        // 触发进度回调
        /* istanbul ignore next */
        cov_1wzucppx2i().s[21]++;
        config.progressCallback?.(file.id, {
          stage: "completed",
          progress: 100,
          details: "分析完成",
          timestamp: new Date()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1wzucppx2i().s[22]++;
        console.error(`文件 ${file.id} 分析失败:`, error);
      } finally {
        /* istanbul ignore next */
        cov_1wzucppx2i().s[23]++;
        this.activeAnalyses.delete(file.id);
      }
    };
    // 并发处理
    const chunks =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[24]++, []);
    /* istanbul ignore next */
    cov_1wzucppx2i().s[25]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[26]++, 0); i < queue.length; i += config.maxConcurrent) {
      /* istanbul ignore next */
      cov_1wzucppx2i().s[27]++;
      chunks.push(queue.slice(i, i + config.maxConcurrent));
    }
    /* istanbul ignore next */
    cov_1wzucppx2i().s[28]++;
    for (const chunk of chunks) {
      /* istanbul ignore next */
      cov_1wzucppx2i().s[29]++;
      await Promise.all(chunk.map(processFile));
    }
    /* istanbul ignore next */
    cov_1wzucppx2i().s[30]++;
    return results;
  }
  /**
   * 实时性能监控
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[7]++;
    cov_1wzucppx2i().s[31]++;
    return {
      activeAnalyses: this.activeAnalyses.size,
      queueLength: this.analysisQueue.size,
      averageProcessingTime: this.calculateAverageProcessingTime(),
      memoryUsage: process.memoryUsage(),
      cpuUsage: process.cpuUsage()
    };
  }
  /**
   * 智能缓存管理
   */
  cacheResults(fileId, result) {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[8]++;
    // 实现智能缓存逻辑
    const cacheKey =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[32]++, this.generateCacheKey(fileId));
    // 缓存到内存或持久化存储
  }
  generateCacheKey(fileId) {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[9]++;
    cov_1wzucppx2i().s[33]++;
    return `cache_key_for_${fileId}`;
  }
  calculateAverageProcessingTime() {
    /* istanbul ignore next */
    cov_1wzucppx2i().f[10]++;
    cov_1wzucppx2i().s[34]++;
    // 实现平均处理时间计算逻辑
    if (this.processingTimes.length === 0) {
      /* istanbul ignore next */
      cov_1wzucppx2i().b[4][0]++;
      cov_1wzucppx2i().s[35]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1wzucppx2i().b[4][1]++;
    }
    // 计算所有处理时间的平均值
    const totalTime =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[36]++, this.processingTimes.reduce((sum, time) => {
      /* istanbul ignore next */
      cov_1wzucppx2i().f[11]++;
      cov_1wzucppx2i().s[37]++;
      return sum + time;
    }, 0));
    const averageTime =
    /* istanbul ignore next */
    (cov_1wzucppx2i().s[38]++, totalTime / this.processingTimes.length);
    // 保留两位小数
    /* istanbul ignore next */
    cov_1wzucppx2i().s[39]++;
    return Math.round(averageTime * 100) / 100;
  }
}
/* istanbul ignore next */
cov_1wzucppx2i().s[40]++;
exports.AdvancedCADAnalyzer = AdvancedCADAnalyzer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,