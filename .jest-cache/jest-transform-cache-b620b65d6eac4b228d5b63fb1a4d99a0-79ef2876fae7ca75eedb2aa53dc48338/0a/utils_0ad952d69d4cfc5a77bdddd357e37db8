3ce5aaf55a8ca68f23605cbd53309a82
"use strict";

/* istanbul ignore next */
function cov_1ecmqp524f() {
  var path = "E:\\zk-agent\\lib\\utils.ts";
  var hash = "d667284a5ff81519501118624134ec5133be15cf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 56
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 16
        }
      },
      "3": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "4": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 67
        }
      },
      "6": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "7": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "9": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 69
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "11": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 25
        }
      },
      "12": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "16": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "cn",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 11
          }
        },
        loc: {
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 25
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 24
          }
        }, {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 42
          }
        }, {
          start: {
            line: 25,
            column: 46
          },
          end: {
            line: 25,
            column: 59
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\utils.ts",
      mappings: ";;;AAIA,gBAEC;AAND,cAAc;AACd,+BAA2B;AAC3B,mDAAwC;AAExC,SAAgB,EAAE,CAAC,GAAG,MAAM;IAC1B,OAAO,IAAA,wBAAO,EAAC,IAAA,WAAI,EAAC,MAAM,CAAC,CAAC,CAAA;AAC9B,CAAC;AAEY,QAAA,YAAY,GAAG;IAC1B,OAAO,EAAE,iBAAiB;IAC1B,OAAO,EAAE,iBAAiB;IAC1B,SAAS,EAAE,mBAAmB;IAC9B,YAAY,EAAE,aAAa;IAC3B,yBAAyB,EAAE,2BAA2B;CACvD,CAAA;AAEM,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,IAAI,CAAC;QACH,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAA;QAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;YAAA,OAAO,KAAK,CAAA;QAAA,CAAC;QAE/B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;QACrC,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAA;IACtD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAA;QACzD,OAAO,KAAK,CAAA;IACd,CAAC;AACH,CAAC,CAAA;AAXY,QAAA,eAAe,mBAW3B",
      names: [],
      sources: ["E:\\zk-agent\\lib\\utils.ts"],
      sourcesContent: ["// @ts-nocheck\nimport { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}\n\nexport const STORAGE_KEYS = {\n  API_URL: \"fastgpt_api_url\",\n  API_KEY: \"fastgpt_api_key\",\n  USE_PROXY: \"fastgpt_use_proxy\",\n  CURRENT_USER: \"currentUser\",\n  DEFAULT_AGENT_INITIALIZED: \"default_agent_initialized\",\n}\n\nexport const isApiConfigured = () => {\n  try {\n    const configJson = localStorage.getItem(\"ai_chat_api_config\")\n    if (!configJson) {return false}\n\n    const config = JSON.parse(configJson)\n    return !!(config && config.baseUrl && config.apiKey)\n  } catch (error) {\n    console.error(\"Error checking API configuration:\", error)\n    return false\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d667284a5ff81519501118624134ec5133be15cf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ecmqp524f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ecmqp524f();
cov_1ecmqp524f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ecmqp524f().s[1]++;
exports.isApiConfigured = exports.STORAGE_KEYS = void 0;
/* istanbul ignore next */
cov_1ecmqp524f().s[2]++;
exports.cn = cn;
// @ts-nocheck
const clsx_1 =
/* istanbul ignore next */
(cov_1ecmqp524f().s[3]++, require("clsx"));
const tailwind_merge_1 =
/* istanbul ignore next */
(cov_1ecmqp524f().s[4]++, require("tailwind-merge"));
function cn(...inputs) {
  /* istanbul ignore next */
  cov_1ecmqp524f().f[0]++;
  cov_1ecmqp524f().s[5]++;
  return (0, tailwind_merge_1.twMerge)((0, clsx_1.clsx)(inputs));
}
/* istanbul ignore next */
cov_1ecmqp524f().s[6]++;
exports.STORAGE_KEYS = {
  API_URL: "fastgpt_api_url",
  API_KEY: "fastgpt_api_key",
  USE_PROXY: "fastgpt_use_proxy",
  CURRENT_USER: "currentUser",
  DEFAULT_AGENT_INITIALIZED: "default_agent_initialized"
};
/* istanbul ignore next */
cov_1ecmqp524f().s[7]++;
const isApiConfigured = () => {
  /* istanbul ignore next */
  cov_1ecmqp524f().f[1]++;
  cov_1ecmqp524f().s[8]++;
  try {
    const configJson =
    /* istanbul ignore next */
    (cov_1ecmqp524f().s[9]++, localStorage.getItem("ai_chat_api_config"));
    /* istanbul ignore next */
    cov_1ecmqp524f().s[10]++;
    if (!configJson) {
      /* istanbul ignore next */
      cov_1ecmqp524f().b[0][0]++;
      cov_1ecmqp524f().s[11]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1ecmqp524f().b[0][1]++;
    }
    const config =
    /* istanbul ignore next */
    (cov_1ecmqp524f().s[12]++, JSON.parse(configJson));
    /* istanbul ignore next */
    cov_1ecmqp524f().s[13]++;
    return !!(
    /* istanbul ignore next */
    (cov_1ecmqp524f().b[1][0]++, config) &&
    /* istanbul ignore next */
    (cov_1ecmqp524f().b[1][1]++, config.baseUrl) &&
    /* istanbul ignore next */
    (cov_1ecmqp524f().b[1][2]++, config.apiKey));
  } catch (error) {
    /* istanbul ignore next */
    cov_1ecmqp524f().s[14]++;
    console.error("Error checking API configuration:", error);
    /* istanbul ignore next */
    cov_1ecmqp524f().s[15]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1ecmqp524f().s[16]++;
exports.isApiConfigured = isApiConfigured;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWVjbXFwNTI0ZiIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJjbiIsImNsc3hfMSIsInJlcXVpcmUiLCJ0YWlsd2luZF9tZXJnZV8xIiwiaW5wdXRzIiwiZiIsInR3TWVyZ2UiLCJjbHN4IiwiU1RPUkFHRV9LRVlTIiwiQVBJX1VSTCIsIkFQSV9LRVkiLCJVU0VfUFJPWFkiLCJDVVJSRU5UX1VTRVIiLCJERUZBVUxUX0FHRU5UX0lOSVRJQUxJWkVEIiwiaXNBcGlDb25maWd1cmVkIiwiY29uZmlnSnNvbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJiIiwiY29uZmlnIiwiSlNPTiIsInBhcnNlIiwiYmFzZVVybCIsImFwaUtleSIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcbGliXFx1dGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHsgY2xzeCB9IGZyb20gXCJjbHN4XCJcbmltcG9ydCB7IHR3TWVyZ2UgfSBmcm9tIFwidGFpbHdpbmQtbWVyZ2VcIlxuXG5leHBvcnQgZnVuY3Rpb24gY24oLi4uaW5wdXRzKSB7XG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcbn1cblxuZXhwb3J0IGNvbnN0IFNUT1JBR0VfS0VZUyA9IHtcbiAgQVBJX1VSTDogXCJmYXN0Z3B0X2FwaV91cmxcIixcbiAgQVBJX0tFWTogXCJmYXN0Z3B0X2FwaV9rZXlcIixcbiAgVVNFX1BST1hZOiBcImZhc3RncHRfdXNlX3Byb3h5XCIsXG4gIENVUlJFTlRfVVNFUjogXCJjdXJyZW50VXNlclwiLFxuICBERUZBVUxUX0FHRU5UX0lOSVRJQUxJWkVEOiBcImRlZmF1bHRfYWdlbnRfaW5pdGlhbGl6ZWRcIixcbn1cblxuZXhwb3J0IGNvbnN0IGlzQXBpQ29uZmlndXJlZCA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjb25maWdKc29uID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhaV9jaGF0X2FwaV9jb25maWdcIilcbiAgICBpZiAoIWNvbmZpZ0pzb24pIHtyZXR1cm4gZmFsc2V9XG5cbiAgICBjb25zdCBjb25maWcgPSBKU09OLnBhcnNlKGNvbmZpZ0pzb24pXG4gICAgcmV0dXJuICEhKGNvbmZpZyAmJiBjb25maWcuYmFzZVVybCAmJiBjb25maWcuYXBpS2V5KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjaGVja2luZyBBUEkgY29uZmlndXJhdGlvbjpcIiwgZXJyb3IpXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFhRTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7O0FBVEZDLE9BQUEsQ0FBQUMsRUFBQSxHQUFBQSxFQUFBO0FBSkE7QUFDQSxNQUFBQyxNQUFBO0FBQUE7QUFBQSxDQUFBTCxjQUFBLEdBQUFFLENBQUEsT0FBQUksT0FBQTtBQUNBLE1BQUFDLGdCQUFBO0FBQUE7QUFBQSxDQUFBUCxjQUFBLEdBQUFFLENBQUEsT0FBQUksT0FBQTtBQUVBLFNBQWdCRixFQUFFQSxDQUFDLEdBQUdJLE1BQU07RUFBQTtFQUFBUixjQUFBLEdBQUFTLENBQUE7RUFBQVQsY0FBQSxHQUFBRSxDQUFBO0VBQzFCLE9BQU8sSUFBQUssZ0JBQUEsQ0FBQUcsT0FBTyxFQUFDLElBQUFMLE1BQUEsQ0FBQU0sSUFBSSxFQUFDSCxNQUFNLENBQUMsQ0FBQztBQUM5QjtBQUFDO0FBQUFSLGNBQUEsR0FBQUUsQ0FBQTtBQUVZQyxPQUFBLENBQUFTLFlBQVksR0FBRztFQUMxQkMsT0FBTyxFQUFFLGlCQUFpQjtFQUMxQkMsT0FBTyxFQUFFLGlCQUFpQjtFQUMxQkMsU0FBUyxFQUFFLG1CQUFtQjtFQUM5QkMsWUFBWSxFQUFFLGFBQWE7RUFDM0JDLHlCQUF5QixFQUFFO0NBQzVCO0FBQUE7QUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtBQUVNLE1BQU1nQixlQUFlLEdBQUdBLENBQUEsS0FBSztFQUFBO0VBQUFsQixjQUFBLEdBQUFTLENBQUE7RUFBQVQsY0FBQSxHQUFBRSxDQUFBO0VBQ2xDLElBQUk7SUFDRixNQUFNaUIsVUFBVTtJQUFBO0lBQUEsQ0FBQW5CLGNBQUEsR0FBQUUsQ0FBQSxPQUFHa0IsWUFBWSxDQUFDQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7SUFBQTtJQUFBckIsY0FBQSxHQUFBRSxDQUFBO0lBQzdELElBQUksQ0FBQ2lCLFVBQVUsRUFBRTtNQUFBO01BQUFuQixjQUFBLEdBQUFzQixDQUFBO01BQUF0QixjQUFBLEdBQUFFLENBQUE7TUFBQyxPQUFPLEtBQUs7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBRixjQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFFL0IsTUFBTUMsTUFBTTtJQUFBO0lBQUEsQ0FBQXZCLGNBQUEsR0FBQUUsQ0FBQSxRQUFHc0IsSUFBSSxDQUFDQyxLQUFLLENBQUNOLFVBQVUsQ0FBQztJQUFBO0lBQUFuQixjQUFBLEdBQUFFLENBQUE7SUFDckMsT0FBTyxDQUFDO0lBQUU7SUFBQSxDQUFBRixjQUFBLEdBQUFzQixDQUFBLFVBQUFDLE1BQU07SUFBQTtJQUFBLENBQUF2QixjQUFBLEdBQUFzQixDQUFBLFVBQUlDLE1BQU0sQ0FBQ0csT0FBTztJQUFBO0lBQUEsQ0FBQTFCLGNBQUEsR0FBQXNCLENBQUEsVUFBSUMsTUFBTSxDQUFDSSxNQUFNLEVBQUM7RUFDdEQsQ0FBQyxDQUFDLE9BQU9DLEtBQUssRUFBRTtJQUFBO0lBQUE1QixjQUFBLEdBQUFFLENBQUE7SUFDZDJCLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLG1DQUFtQyxFQUFFQSxLQUFLLENBQUM7SUFBQTtJQUFBNUIsY0FBQSxHQUFBRSxDQUFBO0lBQ3pELE9BQU8sS0FBSztFQUNkO0FBQ0YsQ0FBQztBQUFBO0FBQUFGLGNBQUEsR0FBQUUsQ0FBQTtBQVhZQyxPQUFBLENBQUFlLGVBQWUsR0FBQUEsZUFBQSIsImlnbm9yZUxpc3QiOltdfQ==