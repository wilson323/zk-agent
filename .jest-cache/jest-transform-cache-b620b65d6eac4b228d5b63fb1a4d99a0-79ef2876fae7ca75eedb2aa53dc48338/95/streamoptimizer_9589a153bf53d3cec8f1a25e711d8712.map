{"version":3,"names":["cov_1jzhpv9125","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","StreamOptimizer","constructor","config","buffer","isBuffering","chunkSize","delayBetweenChunks","enableCompression","enableBuffering","maxBufferSize","retryAttempts","retryDelay","enableAdaptiveChunking","networkSpeedDetection","priorityBasedDelivery","contentAwareOptimization","metrics","totalChunks","processedChunks","averageChunkSize","totalLatency","throughput","errorRate","optimizeStream","stream","onChunk","onComplete","onError","startTime","Date","now","reader","getReader","decoder","TextDecoder","done","value","read","length","flushBuffer","updateMetrics","chunk","decode","processChunk","error","releaseLock","bufferChunk","directProcess","push","join","content","chunks","splitIntoChunks","networkSpeed","detectNetworkSpeed","adaptedChunkSize","adaptChunkSize","delay","processedChunk","i","slice","endTime","getMetrics","resetMetrics","ms","Promise","resolve","setTimeout","setBuffering","enabled","updateConfig","newConfig","contentType","baseSize","Math","max","min","fetch","method","exports"],"sources":["E:\\zk-agent\\lib\\chat\\stream-optimizer.ts"],"sourcesContent":["// @ts-nocheck\n/**\n * 流式响应优化器\n * 优化AI对话的流式响应性能和用户体验\n */\n\nexport interface StreamConfig {\n  chunkSize: number\n  delayBetweenChunks: number\n  enableCompression: boolean\n  enableBuffering: boolean\n  maxBufferSize: number\n  retryAttempts: number\n  retryDelay: number\n  // 新增智能优化配置\n  enableAdaptiveChunking: boolean\n  networkSpeedDetection: boolean\n  priorityBasedDelivery: boolean\n  contentAwareOptimization: boolean\n}\n\nexport interface StreamMetrics {\n  totalChunks: number\n  processedChunks: number\n  averageChunkSize: number\n  totalLatency: number\n  throughput: number\n  errorRate: number\n}\n\nexport class StreamOptimizer {\n  private config: StreamConfig\n  private metrics: StreamMetrics\n  private buffer: string[] = []\n  private isBuffering = false\n\n  constructor(config: Partial<StreamConfig> = {}) {\n    this.config = {\n      chunkSize: 50,\n      delayBetweenChunks: 10,\n      enableCompression: true,\n      enableBuffering: true,\n      maxBufferSize: 1000,\n      retryAttempts: 3,\n      retryDelay: 1000,\n      enableAdaptiveChunking: false,\n      networkSpeedDetection: false,\n      priorityBasedDelivery: false,\n      contentAwareOptimization: false,\n      ...config,\n    }\n\n    this.metrics = {\n      totalChunks: 0,\n      processedChunks: 0,\n      averageChunkSize: 0,\n      totalLatency: 0,\n      throughput: 0,\n      errorRate: 0,\n    }\n  }\n\n  /**\n   * 优化流式响应\n   */\n  async optimizeStream(\n    stream: ReadableStream<Uint8Array>,\n    onChunk: (chunk: string) => void,\n    onComplete: () => void,\n    onError: (error: Error) => void,\n  ): Promise<void> {\n    const startTime = Date.now()\n    const reader = stream.getReader()\n    const decoder = new TextDecoder()\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n\n        if (done) {\n          // 处理缓冲区中剩余的内容\n          if (this.buffer.length > 0) {\n            await this.flushBuffer(onChunk)\n          }\n\n          this.updateMetrics(startTime)\n          onComplete()\n          break\n        }\n\n        const chunk = decoder.decode(value, { stream: true })\n        await this.processChunk(chunk, onChunk)\n      }\n    } catch (error) {\n      this.metrics.errorRate++\n      onError(error as Error)\n    } finally {\n      reader.releaseLock()\n    }\n  }\n\n  /**\n   * 处理单个数据块\n   */\n  private async processChunk(chunk: string, onChunk: (chunk: string) => void): Promise<void> {\n    this.metrics.totalChunks++\n\n    if (this.config.enableBuffering) {\n      await this.bufferChunk(chunk, onChunk)\n    } else {\n      await this.directProcess(chunk, onChunk)\n    }\n  }\n\n  /**\n   * 缓冲处理\n   */\n  private async bufferChunk(chunk: string, onChunk: (chunk: string) => void): Promise<void> {\n    this.buffer.push(chunk)\n\n    if (this.buffer.join(\"\").length >= this.config.maxBufferSize || !this.isBuffering) {\n      await this.flushBuffer(onChunk)\n    }\n  }\n\n  /**\n   * 刷新缓冲区\n   */\n  private async flushBuffer(onChunk: (chunk: string) => void): Promise<void> {\n    if (this.buffer.length === 0) {return}\n\n    const content = this.buffer.join(\"\")\n    this.buffer = []\n\n    // 按配置的块大小分割内容\n    let chunks = this.splitIntoChunks(content, this.config.chunkSize)\n\n    // 自适应块大小调整\n    if (this.config.enableAdaptiveChunking) {\n      const networkSpeed = await this.detectNetworkSpeed()\n      const adaptedChunkSize = this.adaptChunkSize(networkSpeed, \"text\") // 假设内容类型为 'text'\n      chunks = this.splitIntoChunks(content, adaptedChunkSize)\n    }\n\n    for (const chunk of chunks) {\n      onChunk(chunk)\n      this.metrics.processedChunks++\n\n      if (this.config.delayBetweenChunks > 0) {\n        await this.delay(this.config.delayBetweenChunks)\n      }\n    }\n  }\n\n  /**\n   * 直接处理\n   */\n  private async directProcess(chunk: string, onChunk: (chunk: string) => void): Promise<void> {\n    let chunks = this.splitIntoChunks(chunk, this.config.chunkSize)\n\n    // 自适应块大小调整\n    if (this.config.enableAdaptiveChunking) {\n      const networkSpeed = await this.detectNetworkSpeed()\n      const adaptedChunkSize = this.adaptChunkSize(networkSpeed, \"text\") // 假设内容类型为 'text'\n      chunks = this.splitIntoChunks(chunk, adaptedChunkSize)\n    }\n\n    for (const processedChunk of chunks) {\n      onChunk(processedChunk)\n      this.metrics.processedChunks++\n\n      if (this.config.delayBetweenChunks > 0) {\n        await this.delay(this.config.delayBetweenChunks)\n      }\n    }\n  }\n\n  /**\n   * 分割内容为指定大小的块\n   */\n  private splitIntoChunks(content: string, chunkSize: number): string[] {\n    const chunks: string[] = []\n\n    for (let i = 0; i < content.length; i += chunkSize) {\n      chunks.push(content.slice(i, i + chunkSize))\n    }\n\n    return chunks\n  }\n\n  /**\n   * 更新性能指标\n   */\n  private updateMetrics(startTime: number): void {\n    const endTime = Date.now()\n    this.metrics.totalLatency = endTime - startTime\n    this.metrics.averageChunkSize =\n      this.metrics.totalChunks > 0 ? this.metrics.processedChunks / this.metrics.totalChunks : 0\n    this.metrics.throughput = this.metrics.processedChunks / (this.metrics.totalLatency / 1000)\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getMetrics(): StreamMetrics {\n    return { ...this.metrics }\n  }\n\n  /**\n   * 重置指标\n   */\n  resetMetrics(): void {\n    this.metrics = {\n      totalChunks: 0,\n      processedChunks: 0,\n      averageChunkSize: 0,\n      totalLatency: 0,\n      throughput: 0,\n      errorRate: 0,\n    }\n  }\n\n  /**\n   * 延迟函数\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms))\n  }\n\n  /**\n   * 启用/禁用缓冲\n   */\n  setBuffering(enabled: boolean): void {\n    this.isBuffering = enabled\n  }\n\n  /**\n   * 更新配置\n   */\n  updateConfig(newConfig: Partial<StreamConfig>): void {\n    this.config = { ...this.config, ...newConfig }\n  }\n\n  /**\n   * 自适应块大小调整\n   */\n  private adaptChunkSize(networkSpeed: number, contentType: string): number {\n    let baseSize = this.config.chunkSize\n\n    // 根据网络速度调整\n    if (networkSpeed < 1000) {\n      // 慢速网络\n      baseSize = Math.max(20, baseSize * 0.5)\n    } else if (networkSpeed > 10000) {\n      // 高速网络\n      baseSize = Math.min(200, baseSize * 2)\n    }\n\n    // 根据内容类型调整\n    if (contentType === \"code\") {\n      baseSize = Math.min(baseSize, 100) // 代码块较小\n    } else if (contentType === \"analysis\") {\n      baseSize = Math.max(baseSize, 80) // 分析结果较大\n    }\n\n    return baseSize\n  }\n\n  /**\n   * 网络速度检测\n   */\n  private async detectNetworkSpeed(): Promise<number> {\n    const startTime = Date.now()\n    try {\n      await fetch(\"/api/ping\", { method: \"HEAD\" })\n      const endTime = Date.now()\n      return 1000 / (endTime - startTime) // 简化的速度计算\n    } catch {\n      return 1000 // 默认速度\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}