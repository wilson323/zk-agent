da15d9c3809826c2665e67096fca3b0b
"use strict";

/**
 * @file ag-ui\cad-analysis\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2fwb4q0jru() {
  var path = "E:\\zk-agent\\app\\api\\ag-ui\\cad-analysis\\route.ts";
  var hash = "39162b0cf6e88c72f0dcad3950f8d986aeacceb3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ag-ui\\cad-analysis\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 110,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "7": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "9": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "11": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 72
        }
      },
      "12": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "13": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "14": {
        start: {
          line: 31,
          column: 34
        },
        end: {
          line: 31,
          column: 92
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 74
        }
      },
      "17": {
        start: {
          line: 36,
          column: 31
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "18": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "19": {
        start: {
          line: 93,
          column: 37
        },
        end: {
          line: 93,
          column: 62
        }
      },
      "20": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "21": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 69
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 105
          },
          end: {
            line: 12,
            column: 106
          }
        },
        loc: {
          start: {
            line: 12,
            column: 180
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 93,
            column: 27
          }
        },
        loc: {
          start: {
            line: 93,
            column: 37
          },
          end: {
            line: 93,
            column: 62
          }
        },
        line: 93
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 40
          },
          end: {
            line: 32,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 40
          },
          end: {
            line: 32,
            column: 53
          }
        }, {
          start: {
            line: 32,
            column: 57
          },
          end: {
            line: 32,
            column: 59
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ag-ui\\cad-analysis\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ag-ui\\cad-analysis\\route.ts"],
      sourcesContent: ["/**\n * @file ag-ui\\cad-analysis\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\n// CAD\u5206\u6790\u7ED3\u679C\u7C7B\u578B\u5B9A\u4E49\ninterface CADAnalysisResult {\n  summary: {\n    totalComponents: number;\n    totalLayers: number;\n    dimensions: {\n      width: number;\n      height: number;\n      depth: number;\n    };\n  };\n}\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const formData = await req.formData();\n      const file = formData.get(\"file\") as File;\n      const threadId = formData.get(\"threadId\") as string;\n      const runId = formData.get(\"runId\") as string;\n    \n      if (!file) {\n        return ApiResponseWrapper.error('\u6587\u4EF6\u4E0D\u80FD\u4E3A\u7A7A', 400);\n      }\n    \n      // \u9A8C\u8BC1\u6587\u4EF6\u7C7B\u578B\n      const allowedTypes = [\n        'application/octet-stream',\n        'application/x-autocad',\n        'application/dwg',\n        'application/dxf',\n        'model/step',\n        'model/iges'\n      ];\n    \n      const fileExtension = file.name.toLowerCase().split('.').pop();\n      const allowedExtensions = ['dwg', 'dxf', 'step', 'stp', 'iges', 'igs', 'obj', 'stl'];\n    \n      if (!allowedExtensions.includes(fileExtension || '')) {\n        return ApiResponseWrapper.error('\u4E0D\u652F\u6301\u7684\u6587\u4EF6\u7C7B\u578B', 400);\n      }\n    \n        // \u6A21\u62DFCAD\u5206\u6790\u8FC7\u7A0B\n        const analysisResult: CADAnalysisResult = {\n          summary: {\n            totalComponents: Math.floor(Math.random() * 50) + 10,\n            totalLayers: Math.floor(Math.random() * 10) + 1,\n            dimensions: {\n              width: Math.random() * 1000 + 100,\n              height: Math.random() * 1000 + 100,\n              depth: Math.random() * 1000 + 100\n            },\n            complexity: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)] as 'low' | 'medium' | 'high'\n          },\n          components: [\n            {\n              id: 'comp-001',\n              name: '\u4E3B\u4F53\u7ED3\u6784',\n              type: '\u7ED3\u6784\u4EF6',\n              material: '\u94DD\u5408\u91D1',\n              quantity: 1,\n              dimensions: {\n                length: Math.random() * 500 + 50,\n                width: Math.random() * 300 + 30,\n                height: Math.random() * 200 + 20\n              },\n              riskLevel: 'low',\n              issues: []\n            },\n            {\n              id: 'comp-002',\n              name: '\u8FDE\u63A5\u4EF6',\n              type: '\u7D27\u56FA\u4EF6',\n              material: '\u4E0D\u9508\u94A2',\n              quantity: 4,\n              dimensions: {\n                length: Math.random() * 50 + 5,\n                width: Math.random() * 20 + 2,\n                height: Math.random() * 10 + 1\n              },\n              riskLevel: 'medium',\n              issues: ['\u5C3A\u5BF8\u53EF\u80FD\u8FC7\u5C0F']\n            }\n          ],\n          recommendations: [\n            '\u5EFA\u8BAE\u4F18\u5316\u96F6\u4EF6\u539A\u5EA6\u4EE5\u51CF\u5C11\u6750\u6599\u4F7F\u7528',\n            '\u8003\u8651\u4F7F\u7528\u66F4\u8F7B\u91CF\u7684\u6750\u6599',\n            '\u68C0\u67E5\u88C5\u914D\u95F4\u9699\u662F\u5426\u5408\u7406',\n            '\u5EFA\u8BAE\u589E\u52A0\u5012\u89D2\u4EE5\u63D0\u9AD8\u5B89\u5168\u6027'\n          ],\n          riskAssessment: {\n            overallRisk: 'low',\n            criticalIssues: [],\n            warnings: [\n              '\u90E8\u5206\u96F6\u4EF6\u5C3A\u5BF8\u53EF\u80FD\u8FC7\u5C0F',\n              '\u5EFA\u8BAE\u68C0\u67E5\u6750\u6599\u5F3A\u5EA6'\n            ]\n          }\n        }\n    \n        // \u6A21\u62DF\u5904\u7406\u5EF6\u8FDF\n        await new Promise(resolve => setTimeout(resolve, 1000))\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: {\n          threadId,\n          runId,\n          fileName: file.name,\n          fileSize: file.size,\n          fileType: file.type,\n          analysis: analysisResult,\n          processedAt: new Date().toISOString()\n        }\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error('CAD\u5206\u6790\u5931\u8D25', 500);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "39162b0cf6e88c72f0dcad3950f8d986aeacceb3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fwb4q0jru = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fwb4q0jru();
cov_2fwb4q0jru().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fwb4q0jru().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2fwb4q0jru().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2fwb4q0jru().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_2fwb4q0jru().s[4]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2fwb4q0jru().f[0]++;
  cov_2fwb4q0jru().s[5]++;
  try {
    const formData =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[6]++, await req.formData());
    const file =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[7]++, formData.get("file"));
    const threadId =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[8]++, formData.get("threadId"));
    const runId =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[9]++, formData.get("runId"));
    /* istanbul ignore next */
    cov_2fwb4q0jru().s[10]++;
    if (!file) {
      /* istanbul ignore next */
      cov_2fwb4q0jru().b[0][0]++;
      cov_2fwb4q0jru().s[11]++;
      return api_helper_1.ApiResponseWrapper.error('文件不能为空', 400);
    } else
    /* istanbul ignore next */
    {
      cov_2fwb4q0jru().b[0][1]++;
    }
    // 验证文件类型
    const allowedTypes =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[12]++, ['application/octet-stream', 'application/x-autocad', 'application/dwg', 'application/dxf', 'model/step', 'model/iges']);
    const fileExtension =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[13]++, file.name.toLowerCase().split('.').pop());
    const allowedExtensions =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[14]++, ['dwg', 'dxf', 'step', 'stp', 'iges', 'igs', 'obj', 'stl']);
    /* istanbul ignore next */
    cov_2fwb4q0jru().s[15]++;
    if (!allowedExtensions.includes(
    /* istanbul ignore next */
    (cov_2fwb4q0jru().b[2][0]++, fileExtension) ||
    /* istanbul ignore next */
    (cov_2fwb4q0jru().b[2][1]++, ''))) {
      /* istanbul ignore next */
      cov_2fwb4q0jru().b[1][0]++;
      cov_2fwb4q0jru().s[16]++;
      return api_helper_1.ApiResponseWrapper.error('不支持的文件类型', 400);
    } else
    /* istanbul ignore next */
    {
      cov_2fwb4q0jru().b[1][1]++;
    }
    // 模拟CAD分析过程
    const analysisResult =
    /* istanbul ignore next */
    (cov_2fwb4q0jru().s[17]++, {
      summary: {
        totalComponents: Math.floor(Math.random() * 50) + 10,
        totalLayers: Math.floor(Math.random() * 10) + 1,
        dimensions: {
          width: Math.random() * 1000 + 100,
          height: Math.random() * 1000 + 100,
          depth: Math.random() * 1000 + 100
        },
        complexity: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)]
      },
      components: [{
        id: 'comp-001',
        name: '主体结构',
        type: '结构件',
        material: '铝合金',
        quantity: 1,
        dimensions: {
          length: Math.random() * 500 + 50,
          width: Math.random() * 300 + 30,
          height: Math.random() * 200 + 20
        },
        riskLevel: 'low',
        issues: []
      }, {
        id: 'comp-002',
        name: '连接件',
        type: '紧固件',
        material: '不锈钢',
        quantity: 4,
        dimensions: {
          length: Math.random() * 50 + 5,
          width: Math.random() * 20 + 2,
          height: Math.random() * 10 + 1
        },
        riskLevel: 'medium',
        issues: ['尺寸可能过小']
      }],
      recommendations: ['建议优化零件厚度以减少材料使用', '考虑使用更轻量的材料', '检查装配间隙是否合理', '建议增加倒角以提高安全性'],
      riskAssessment: {
        overallRisk: 'low',
        criticalIssues: [],
        warnings: ['部分零件尺寸可能过小', '建议检查材料强度']
      }
    });
    // 模拟处理延迟
    /* istanbul ignore next */
    cov_2fwb4q0jru().s[18]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_2fwb4q0jru().f[1]++;
      cov_2fwb4q0jru().s[19]++;
      return setTimeout(resolve, 1000);
    });
    /* istanbul ignore next */
    cov_2fwb4q0jru().s[20]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: {
        threadId,
        runId,
        fileName: file.name,
        fileSize: file.size,
        fileType: file.type,
        analysis: analysisResult,
        processedAt: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fwb4q0jru().s[21]++;
    return api_helper_1.ApiResponseWrapper.error('CAD分析失败', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,