{"version":3,"names":["cov_1lhjjj0tqf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","require","exports","TYPES","PrismaClient","Symbol","for","AgentService","AgentManager","Logger","Config","ExampleService","ExampleController","ServiceLifetime","Container","constructor","services","Map","singletons","register","token","factory","lifetime","Singleton","set","registerSingleton","registerTransient","Transient","resolve","descriptor","get","Error","toString","has","Scoped","isRegistered","dispose","clear","container"],"sources":["E:\\zk-agent\\lib\\di\\container.ts"],"sourcesContent":["/**\n * @file 依赖注入容器\n * @description 实现依赖注入模式，提高代码的可测试性和可维护性\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport 'reflect-metadata';\nimport { PrismaClient } from '@prisma/client'\nimport { AgentService } from '../services/agent-service'\nimport { AgUIAgentManager } from '../ag-ui/protocol/agent-manager'\nimport { IAgentManager, IAgentService } from '../interfaces/agent-manager.interface'\n\n/**\n * 服务标识符\n */\nexport const TYPES = {\n  PrismaClient: Symbol.for('PrismaClient'),\n  AgentService: Symbol.for('AgentService'),\n  AgentManager: Symbol.for('AgentManager'),\n  Logger: Symbol.for('Logger'),\n  Config: Symbol.for('Config'),\n  ExampleService: Symbol.for('ExampleService'),\n  ExampleController: Symbol.for('ExampleController')\n} as const\n\n/**\n * 服务生命周期\n */\nexport enum ServiceLifetime {\n  Singleton = 'singleton',\n  Transient = 'transient',\n  Scoped = 'scoped'\n}\n\n/**\n * 服务描述符\n */\nexport interface ServiceDescriptor<T = any> {\n  token: symbol\n  factory: (container: Container) => T\n  lifetime: ServiceLifetime\n  instance?: T\n}\n\n/**\n * 依赖注入容器\n */\nexport class Container {\n  private services = new Map<symbol, ServiceDescriptor>()\n  private singletons = new Map<symbol, any>()\n\n  /**\n   * 注册服务\n   */\n  register<T>(\n    token: symbol,\n    factory: (container: Container) => T,\n    lifetime: ServiceLifetime = ServiceLifetime.Singleton\n  ): void {\n    this.services.set(token, {\n      token,\n      factory,\n      lifetime\n    })\n  }\n\n  /**\n   * 注册单例服务\n   */\n  registerSingleton<T>(\n    token: symbol,\n    factory: (container: Container) => T\n  ): void {\n    this.register(token, factory, ServiceLifetime.Singleton)\n  }\n\n  /**\n   * 注册瞬态服务\n   */\n  registerTransient<T>(\n    token: symbol,\n    factory: (container: Container) => T\n  ): void {\n    this.register(token, factory, ServiceLifetime.Transient)\n  }\n\n  /**\n   * 解析服务\n   */\n  resolve<T>(token: symbol): T {\n    const descriptor = this.services.get(token)\n    if (!descriptor) {\n      throw new Error(`Service not registered: ${token.toString()}`)\n    }\n\n    switch (descriptor.lifetime) {\n      case ServiceLifetime.Singleton:\n        if (!this.singletons.has(token)) {\n          this.singletons.set(token, descriptor.factory(this))\n        }\n        return this.singletons.get(token)\n\n      case ServiceLifetime.Transient:\n        return descriptor.factory(this)\n\n      case ServiceLifetime.Scoped:\n        // 简化实现，暂时按单例处理\n        if (!this.singletons.has(token)) {\n          this.singletons.set(token, descriptor.factory(this))\n        }\n        return this.singletons.get(token)\n\n      default:\n        throw new Error(`Unknown service lifetime: ${descriptor.lifetime}`)\n    }\n  }\n\n  /**\n   * 检查服务是否已注册\n   */\n  isRegistered(token: symbol): boolean {\n    return this.services.has(token)\n  }\n\n  /**\n   * 清理容器\n   */\n  dispose(): void {\n    this.singletons.clear()\n    this.services.clear()\n  }\n}\n\n/**\n * 默认容器实例\n */\nexport const container = new Container()\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}