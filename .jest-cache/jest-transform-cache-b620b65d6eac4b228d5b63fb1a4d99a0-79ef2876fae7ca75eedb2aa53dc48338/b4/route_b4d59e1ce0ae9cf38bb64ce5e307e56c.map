{"version":3,"names":["cov_sm4mei4eh","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","body","json","analysisId","exportConfig","ApiResponseWrapper","error","ErrorCode","VALIDATION_ERROR","validFormats","includes","format","timestamp","Date","now","filename","exportData","generateExportData","Promise","resolve","setTimeout","exportUrl","success","size","message","console","INTERNAL_SERVER_ERROR","Math","floor","random"],"sources":["E:\\zk-agent\\app\\api\\cad\\export\\route.ts"],"sourcesContent":["/**\n * @file cad\\export\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport type { ExportConfig } from \"@/types/cad\";\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json();\n      const { analysisId, exportConfig }: { analysisId: string; exportConfig: ExportConfig } = body;\n  \n      if (!analysisId) {\n        return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, \"缺少分析ID\", null);\n      }\n  \n      // 验证导出配置\n      const validFormats = [\"pdf\", \"docx\", \"xlsx\", \"json\", \"xml\"];\n      if (!validFormats.includes(exportConfig.format)) {\n        return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, \"不支持的导出格式\", null);\n      }\n  \n      // 模拟生成导出文件\n      const timestamp = Date.now();\n      const filename = `cad_analysis_${analysisId}_${timestamp}.${exportConfig.format}`;\n  \n      // 根据导出配置生成不同格式的文件\n      const exportData = await generateExportData(analysisId, exportConfig);\n  \n      // 模拟文件生成过程\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n  \n      const exportUrl = `/exports/${exportConfig.format}/${filename}`;\n  \n      return ApiResponseWrapper.success({\n        success: true,\n        exportUrl,\n        filename,\n        format: exportConfig.format,\n        size: exportData.size,\n        message: \"导出成功\",\n      });\n    } catch (error) {\n      console.error('CAD导出失败:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"CAD导出失败\",\n        null,\n        500\n      );\n    }\n  }\n);\n\n// 辅助函数：生成导出数据\nasync function generateExportData(analysisId: string, exportConfig: ExportConfig) {\n  // 模拟数据生成逻辑\n  return {\n    size: Math.floor(Math.random() * 1000000) + 100000 // 随机文件大小\n  };\n}"],"mappings":"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","ignoreList":[]}