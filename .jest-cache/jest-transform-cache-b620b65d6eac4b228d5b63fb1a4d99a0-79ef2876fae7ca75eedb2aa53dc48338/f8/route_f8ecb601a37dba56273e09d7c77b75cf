be8648c7b29494d8739c6d02eaa34492
"use strict";

/**
 * @file Metrics API Route
 * @description 处理系统指标相关的API请求
 * @author ZK-Agent Team
 * @date 2024-12-19
 */
/* istanbul ignore next */
function cov_2asuj2vwch() {
  var path = "E:\\zk-agent\\app\\api\\metrics\\route.ts";
  var hash = "01808c51d6e2e4bd64e2cfb933c2b17ff847e892";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\metrics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 67
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "5": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 19,
          column: 2
        }
      },
      "6": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "7": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 30,
          column: 2
        }
      },
      "8": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "9": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "10": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "11": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "12": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 80
        }
      },
      "13": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "14": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "15": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "16": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "17": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 82
        }
      },
      "18": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 109,
          column: 3
        }
      },
      "19": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "20": {
        start: {
          line: 90,
          column: 33
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "21": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 47
        }
      },
      "22": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "23": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 86
        }
      },
      "24": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "25": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "26": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 82
        }
      },
      "27": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "28": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "29": {
        start: {
          line: 115,
          column: 33
        },
        end: {
          line: 115,
          column: 49
        }
      },
      "30": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 47
        }
      },
      "31": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "32": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 86
        }
      },
      "33": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "34": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 82
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 132
          },
          end: {
            line: 34,
            column: 133
          }
        },
        loc: {
          start: {
            line: 34,
            column: 184
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 67,
            column: 134
          },
          end: {
            line: 67,
            column: 135
          }
        },
        loc: {
          start: {
            line: 67,
            column: 185
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 67
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 132
          },
          end: {
            line: 88,
            column: 133
          }
        },
        loc: {
          start: {
            line: 88,
            column: 183
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 88
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 113,
            column: 107
          },
          end: {
            line: 113,
            column: 108
          }
        },
        loc: {
          start: {
            line: 113,
            column: 143
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 46
          }
        }, {
          start: {
            line: 72,
            column: 50
          },
          end: {
            line: 72,
            column: 74
          }
        }],
        line: 72
      },
      "1": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "2": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\metrics\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\metrics\\route.ts"],
      sourcesContent: ["/**\n * @file Metrics API Route\n * @description \u5904\u7406\u7CFB\u7EDF\u6307\u6807\u76F8\u5173\u7684API\u8BF7\u6C42\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from 'zod';\n\n// \u9A8C\u8BC1\u6A21\u5F0F\nconst metricsQuerySchema = z.object({\n  startTime: z.string().datetime().optional(),\n  endTime: z.string().datetime().optional(),\n  type: z.enum(['performance', 'error', 'usage']).optional(),\n  limit: z.coerce.number().min(1).max(1000).optional().default(100)\n});\n\nconst metricsCreateSchema = z.object({\n  name: z.string().min(1, '\u6307\u6807\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A'),\n  value: z.number(),\n  type: z.enum(['performance', 'error', 'usage']),\n  timestamp: z.string().datetime().optional(),\n  metadata: z.record(z.any()).optional()\n});\n\nconst metricsUpdateSchema = z.object({\n  value: z.number().optional(),\n  metadata: z.record(z.any()).optional()\n});\n\n/**\n * GET /api/metrics - \u83B7\u53D6\u7CFB\u7EDF\u6307\u6807\n */\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet({ query: metricsQuerySchema }),\n  async (req: NextRequest, { validatedQuery, user, requestId }) => {\n    try {\n      // \u6A21\u62DF\u83B7\u53D6\u6307\u6807\u6570\u636E\n      const metrics = {\n        performance: {\n          responseTime: Math.random() * 1000,\n          throughput: Math.random() * 100,\n          errorRate: Math.random() * 0.1\n        },\n        usage: {\n          activeUsers: Math.floor(Math.random() * 1000),\n          apiCalls: Math.floor(Math.random() * 10000),\n          storageUsed: Math.floor(Math.random() * 1000000)\n        },\n        errors: {\n          total: Math.floor(Math.random() * 100),\n          critical: Math.floor(Math.random() * 10),\n          warnings: Math.floor(Math.random() * 50)\n        }\n      };\n      \n      return ApiResponseWrapper.success({\n        metrics,\n        timestamp: new Date().toISOString(),\n        query: validatedQuery\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u83B7\u53D6\u6307\u6807\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n/**\n * POST /api/metrics - \u521B\u5EFA\u65B0\u7684\u6307\u6807\u8BB0\u5F55\n */\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost({ body: metricsCreateSchema }),\n  async (req: NextRequest, { validatedBody, user, requestId }) => {\n    try {\n      const metric = {\n        id: `metric_${Date.now()}`,\n        ...validatedBody,\n        timestamp: validatedBody.timestamp || new Date().toISOString(),\n        userId: user.id,\n        createdAt: new Date().toISOString()\n      };\n      \n      return ApiResponseWrapper.success({\n        metric,\n        message: \"\u6307\u6807\u8BB0\u5F55\u521B\u5EFA\u6210\u529F\"\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u521B\u5EFA\u6307\u6807\u8BB0\u5F55\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n/**\n * PUT /api/metrics - \u66F4\u65B0\u6307\u6807\u8BB0\u5F55\n */\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut({ body: metricsUpdateSchema }),\n  async (req: NextRequest, { validatedBody, user, requestId }) => {\n    try {\n      const { searchParams } = new URL(req.url);\n      const metricId = searchParams.get('id');\n      \n      if (!metricId) {\n        return ApiResponseWrapper.error(\n          \"\u7F3A\u5C11\u6307\u6807ID\u53C2\u6570\",\n          { status: 400 }\n        );\n      }\n      \n      const updatedMetric = {\n        id: metricId,\n        ...validatedBody,\n        updatedAt: new Date().toISOString(),\n        updatedBy: user.id\n      };\n      \n      return ApiResponseWrapper.success({\n        metric: updatedMetric,\n        message: \"\u6307\u6807\u8BB0\u5F55\u66F4\u65B0\u6210\u529F\"\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u66F4\u65B0\u6307\u6807\u8BB0\u5F55\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n/**\n * DELETE /api/metrics - \u5220\u9664\u6307\u6807\u8BB0\u5F55\n */\nexport const DELETE = createApiRoute(\n  RouteConfigs.admin('DELETE'),\n  async (req: NextRequest, { user, requestId }) => {\n    try {\n      const { searchParams } = new URL(req.url);\n      const metricId = searchParams.get('id');\n      \n      if (!metricId) {\n        return ApiResponseWrapper.error(\n          \"\u7F3A\u5C11\u6307\u6807ID\u53C2\u6570\",\n          { status: 400 }\n        );\n      }\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"\u6307\u6807\u8BB0\u5F55\u5DF2\u5220\u9664\",\n        deletedId: metricId\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u5220\u9664\u6307\u6807\u8BB0\u5F55\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "01808c51d6e2e4bd64e2cfb933c2b17ff847e892"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2asuj2vwch = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2asuj2vwch();
cov_2asuj2vwch().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2asuj2vwch().s[1]++;
exports.DELETE = exports.PUT = exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2asuj2vwch().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2asuj2vwch().s[3]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_2asuj2vwch().s[4]++, require("zod"));
// 验证模式
const metricsQuerySchema =
/* istanbul ignore next */
(cov_2asuj2vwch().s[5]++, zod_1.z.object({
  startTime: zod_1.z.string().datetime().optional(),
  endTime: zod_1.z.string().datetime().optional(),
  type: zod_1.z.enum(['performance', 'error', 'usage']).optional(),
  limit: zod_1.z.coerce.number().min(1).max(1000).optional().default(100)
}));
const metricsCreateSchema =
/* istanbul ignore next */
(cov_2asuj2vwch().s[6]++, zod_1.z.object({
  name: zod_1.z.string().min(1, '指标名称不能为空'),
  value: zod_1.z.number(),
  type: zod_1.z.enum(['performance', 'error', 'usage']),
  timestamp: zod_1.z.string().datetime().optional(),
  metadata: zod_1.z.record(zod_1.z.any()).optional()
}));
const metricsUpdateSchema =
/* istanbul ignore next */
(cov_2asuj2vwch().s[7]++, zod_1.z.object({
  value: zod_1.z.number().optional(),
  metadata: zod_1.z.record(zod_1.z.any()).optional()
}));
/**
 * GET /api/metrics - 获取系统指标
 */
/* istanbul ignore next */
cov_2asuj2vwch().s[8]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedGet({
  query: metricsQuerySchema
}), async (req, {
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2asuj2vwch().f[0]++;
  cov_2asuj2vwch().s[9]++;
  try {
    // 模拟获取指标数据
    const metrics =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[10]++, {
      performance: {
        responseTime: Math.random() * 1000,
        throughput: Math.random() * 100,
        errorRate: Math.random() * 0.1
      },
      usage: {
        activeUsers: Math.floor(Math.random() * 1000),
        apiCalls: Math.floor(Math.random() * 10000),
        storageUsed: Math.floor(Math.random() * 1000000)
      },
      errors: {
        total: Math.floor(Math.random() * 100),
        critical: Math.floor(Math.random() * 10),
        warnings: Math.floor(Math.random() * 50)
      }
    });
    /* istanbul ignore next */
    cov_2asuj2vwch().s[11]++;
    return api_helper_1.ApiResponseWrapper.success({
      metrics,
      timestamp: new Date().toISOString(),
      query: validatedQuery
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2asuj2vwch().s[12]++;
    return api_helper_1.ApiResponseWrapper.error("获取指标失败", {
      status: 500
    });
  }
});
/**
 * POST /api/metrics - 创建新的指标记录
 */
/* istanbul ignore next */
cov_2asuj2vwch().s[13]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost({
  body: metricsCreateSchema
}), async (req, {
  validatedBody,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2asuj2vwch().f[1]++;
  cov_2asuj2vwch().s[14]++;
  try {
    const metric =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[15]++, {
      id: `metric_${Date.now()}`,
      ...validatedBody,
      timestamp:
      /* istanbul ignore next */
      (cov_2asuj2vwch().b[0][0]++, validatedBody.timestamp) ||
      /* istanbul ignore next */
      (cov_2asuj2vwch().b[0][1]++, new Date().toISOString()),
      userId: user.id,
      createdAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_2asuj2vwch().s[16]++;
    return api_helper_1.ApiResponseWrapper.success({
      metric,
      message: "指标记录创建成功"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2asuj2vwch().s[17]++;
    return api_helper_1.ApiResponseWrapper.error("创建指标记录失败", {
      status: 500
    });
  }
});
/**
 * PUT /api/metrics - 更新指标记录
 */
/* istanbul ignore next */
cov_2asuj2vwch().s[18]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPut({
  body: metricsUpdateSchema
}), async (req, {
  validatedBody,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2asuj2vwch().f[2]++;
  cov_2asuj2vwch().s[19]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[20]++, new URL(req.url));
    const metricId =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[21]++, searchParams.get('id'));
    /* istanbul ignore next */
    cov_2asuj2vwch().s[22]++;
    if (!metricId) {
      /* istanbul ignore next */
      cov_2asuj2vwch().b[1][0]++;
      cov_2asuj2vwch().s[23]++;
      return api_helper_1.ApiResponseWrapper.error("缺少指标ID参数", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2asuj2vwch().b[1][1]++;
    }
    const updatedMetric =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[24]++, {
      id: metricId,
      ...validatedBody,
      updatedAt: new Date().toISOString(),
      updatedBy: user.id
    });
    /* istanbul ignore next */
    cov_2asuj2vwch().s[25]++;
    return api_helper_1.ApiResponseWrapper.success({
      metric: updatedMetric,
      message: "指标记录更新成功"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2asuj2vwch().s[26]++;
    return api_helper_1.ApiResponseWrapper.error("更新指标记录失败", {
      status: 500
    });
  }
});
/**
 * DELETE /api/metrics - 删除指标记录
 */
/* istanbul ignore next */
cov_2asuj2vwch().s[27]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.admin('DELETE'), async (req, {
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2asuj2vwch().f[3]++;
  cov_2asuj2vwch().s[28]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[29]++, new URL(req.url));
    const metricId =
    /* istanbul ignore next */
    (cov_2asuj2vwch().s[30]++, searchParams.get('id'));
    /* istanbul ignore next */
    cov_2asuj2vwch().s[31]++;
    if (!metricId) {
      /* istanbul ignore next */
      cov_2asuj2vwch().b[2][0]++;
      cov_2asuj2vwch().s[32]++;
      return api_helper_1.ApiResponseWrapper.error("缺少指标ID参数", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2asuj2vwch().b[2][1]++;
    }
    cov_2asuj2vwch().s[33]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      message: "指标记录已删除",
      deletedId: metricId
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2asuj2vwch().s[34]++;
    return api_helper_1.ApiResponseWrapper.error("删除指标记录失败", {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,