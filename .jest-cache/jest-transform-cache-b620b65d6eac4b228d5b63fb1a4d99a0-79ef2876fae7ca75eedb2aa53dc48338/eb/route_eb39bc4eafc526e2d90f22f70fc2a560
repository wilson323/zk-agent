4868dae9089b76e4a08ffd0aaa1dd6cc
"use strict";

/**
 * @file admin\error-monitoring\status\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1xq9t95dvz() {
  var path = "E:\\zk-agent\\app\\api\\admin\\error-monitoring\\status\\route.ts";
  var hash = "649d99c32b551a45d43ccc150a570384254ca4af";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\admin\\error-monitoring\\status\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 65
        }
      },
      "6": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "7": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 81
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "9": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "10": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "11": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 77
        }
      },
      "12": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "13": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "14": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "16": {
        start: {
          line: 55,
          column: 53
        },
        end: {
          line: 61,
          column: 21
        }
      },
      "17": {
        start: {
          line: 63,
          column: 57
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "18": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "19": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "20": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "21": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "22": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 55
        }
      },
      "23": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "24": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 65
        }
      },
      "25": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 139
        }
      },
      "26": {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "27": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "28": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 37
        }
      },
      "29": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 115,
          column: 31
        }
      },
      "30": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "31": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 58
        }
      },
      "32": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 120,
          column: 84
        }
      },
      "33": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 84
        }
      },
      "34": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "35": {
        start: {
          line: 127,
          column: 13
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "36": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 58
        }
      },
      "37": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "38": {
        start: {
          line: 135,
          column: 13
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "39": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 84
        }
      },
      "40": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 84
        }
      },
      "41": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "42": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 146
        }
      },
      "43": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 68
        }
      },
      "44": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 138
        }
      }
    },
    fnMap: {
      "0": {
        name: "getErrorMonitoringStatus",
        decl: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 39
          }
        },
        loc: {
          start: {
            line: 19,
            column: 42
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 55,
            column: 43
          },
          end: {
            line: 55,
            column: 44
          }
        },
        loc: {
          start: {
            line: 55,
            column: 53
          },
          end: {
            line: 61,
            column: 21
          }
        },
        line: 55
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 63,
            column: 48
          }
        },
        loc: {
          start: {
            line: 63,
            column: 57
          },
          end: {
            line: 70,
            column: 17
          }
        },
        line: 63
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 103
          },
          end: {
            line: 94,
            column: 104
          }
        },
        loc: {
          start: {
            line: 94,
            column: 178
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 112,
            column: 105
          },
          end: {
            line: 112,
            column: 106
          }
        },
        loc: {
          start: {
            line: 112,
            column: 180
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 112
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 77,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 77,
            column: 58
          }
        }, {
          start: {
            line: 77,
            column: 62
          },
          end: {
            line: 77,
            column: 63
          }
        }],
        line: 77
      },
      "1": {
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 63
          }
        }, {
          start: {
            line: 78,
            column: 67
          },
          end: {
            line: 78,
            column: 68
          }
        }],
        line: 78
      },
      "2": {
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 51
          }
        }, {
          start: {
            line: 79,
            column: 55
          },
          end: {
            line: 79,
            column: 60
          }
        }],
        line: 79
      },
      "3": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        }],
        line: 116
      },
      "4": {
        loc: {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        }],
        line: 127
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: 144,
            column: 13
          },
          end: {
            line: 146,
            column: 9
          }
        }],
        line: 135
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\admin\\error-monitoring\\status\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\admin\\error-monitoring\\status\\route.ts"],
      sourcesContent: ["/**\n * @file admin\\error-monitoring\\status\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { errorMonitor } from '@/lib/monitoring/error-monitor';\nimport { errorTracker } from '@/lib/monitoring/error-tracker';\nimport { getErrorMonitoringConfig } from '@/lib/config/error-monitoring-config';\n\n/**\n * \u83B7\u53D6\u9519\u8BEF\u76D1\u63A7\u7CFB\u7EDF\u72B6\u6001\n */\nasync function getErrorMonitoringStatus() {\n  try {\n    // \u83B7\u53D6\u9519\u8BEF\u7EDF\u8BA1\n    const errorStats = errorMonitor.getErrorStats();\n    \n    // \u83B7\u53D6\u6D3B\u8DC3\u544A\u8B66\n    const activeAlerts = errorMonitor.getActiveAlerts();\n    \n    // \u83B7\u53D6\u6700\u8FD1\u9519\u8BEF\n    const recentErrors = errorMonitor.getRecentErrors(10);\n    \n    // \u83B7\u53D6\u5065\u5EB7\u68C0\u67E5\u7ED3\u679C\n    const healthCheck = errorMonitor.healthCheck();\n    \n    // \u83B7\u53D6\u914D\u7F6E\u4FE1\u606F\n    const config = getErrorMonitoringConfig();\n    \n    // \u83B7\u53D6\u9519\u8BEF\u8FFD\u8E2A\u5668\u72B6\u6001\n    const trackerStats = errorTracker.getStats();\n    \n    return {\n      status: 'success',\n      data: {\n        monitoring: {\n          isActive: true,\n          config: {\n            interval: config.monitoringInterval,\n            errorRateThreshold: config.alertThresholds.errorRate,\n            criticalErrorThreshold: config.alertThresholds.criticalErrorCount,\n            autoRecoveryEnabled: config.autoRecovery.enabled,\n            notificationsEnabled: config.notifications.enabled\n          }\n        },\n        errorStats: {\n          total: errorStats.total,\n          recentErrors: errorStats.recentErrors,\n          errorRate: errorStats.errorRate,\n          byType: errorStats.byType,\n          bySeverity: errorStats.bySeverity\n        },\n        alerts: {\n          active: activeAlerts.length,\n          list: activeAlerts.map(alert => ({\n            id: alert.id,\n            message: alert.message,\n            severity: alert.severity,\n            timestamp: alert.timestamp,\n            resolved: alert.resolved\n          }))\n        },\n        recentErrors: recentErrors.map(error => ({\n          id: error.id,\n          message: error.message,\n          type: error.type,\n          severity: error.severity,\n          timestamp: error.timestamp,\n          resolved: error.resolved\n        })),\n        healthCheck: {\n          status: healthCheck.status,\n          score: healthCheck.score,\n          issues: healthCheck.issues\n        },\n        tracker: {\n          totalTracked: trackerStats.totalErrors || 0,\n          recentActivity: trackerStats.recentActivity || 0,\n          isActive: trackerStats.isActive || false\n        },\n        timestamp: new Date().toISOString()\n      }\n    };\n  } catch (error) {\n    console.error('Failed to get error monitoring status:', error);\n    throw new Error('Failed to retrieve monitoring status');\n  }\n}\n\n/**\n * GET /api/admin/error-monitoring/status\n * \u83B7\u53D6\u9519\u8BEF\u76D1\u63A7\u7CFB\u7EDF\u72B6\u6001\n */\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const result = await getErrorMonitoringStatus();\n      \n      return ApiResponseWrapper.success(result.data, {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      });\n    } catch (error) {\n      console.error('Error getting monitoring status:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        'Failed to retrieve monitoring status',\n        null\n      );\n    }\n  }\n);\n\n/**\n * POST /api/admin/error-monitoring/status\n * \u91CD\u542F\u9519\u8BEF\u76D1\u63A7\u7CFB\u7EDF\n */\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json();\n      const { action } = body;\n      \n      if (action === 'restart') {\n        // \u505C\u6B62\u76D1\u63A7\n        errorMonitor.stopMonitoring();\n        \n        // \u91CD\u65B0\u542F\u52A8\u76D1\u63A7\n        const config = getErrorMonitoringConfig();\n        errorMonitor.startMonitoring(config.monitoringInterval);\n        \n        return ApiResponseWrapper.success({\n          message: 'Error monitoring system restarted successfully',\n          timestamp: new Date().toISOString()\n        });\n      } else if (action === 'stop') {\n        // \u505C\u6B62\u76D1\u63A7\n        errorMonitor.stopMonitoring();\n        \n        return ApiResponseWrapper.success({\n          message: 'Error monitoring system stopped',\n          timestamp: new Date().toISOString()\n        });\n      } else if (action === 'start') {\n        // \u542F\u52A8\u76D1\u63A7\n        const config = getErrorMonitoringConfig();\n        errorMonitor.startMonitoring(config.monitoringInterval);\n        \n        return ApiResponseWrapper.success({\n          message: 'Error monitoring system started',\n          timestamp: new Date().toISOString()\n        });\n      } else {\n        return ApiResponseWrapper.error(\n          ErrorCode.VALIDATION_ERROR,\n          'Invalid action. Use: start, stop, or restart',\n          null\n        );\n      }\n    } catch (error) {\n      console.error('Failed to control error monitoring:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        'Failed to control monitoring system',\n        null\n      );\n    }\n  }\n);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "649d99c32b551a45d43ccc150a570384254ca4af"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xq9t95dvz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xq9t95dvz();
cov_1xq9t95dvz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xq9t95dvz().s[1]++;
exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1xq9t95dvz().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1xq9t95dvz().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_1xq9t95dvz().s[4]++, require("@/types/core"));
const error_monitor_1 =
/* istanbul ignore next */
(cov_1xq9t95dvz().s[5]++, require("@/lib/monitoring/error-monitor"));
const error_tracker_1 =
/* istanbul ignore next */
(cov_1xq9t95dvz().s[6]++, require("@/lib/monitoring/error-tracker"));
const error_monitoring_config_1 =
/* istanbul ignore next */
(cov_1xq9t95dvz().s[7]++, require("@/lib/config/error-monitoring-config"));
/**
 * 获取错误监控系统状态
 */
async function getErrorMonitoringStatus() {
  /* istanbul ignore next */
  cov_1xq9t95dvz().f[0]++;
  cov_1xq9t95dvz().s[8]++;
  try {
    // 获取错误统计
    const errorStats =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[9]++, error_monitor_1.errorMonitor.getErrorStats());
    // 获取活跃告警
    const activeAlerts =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[10]++, error_monitor_1.errorMonitor.getActiveAlerts());
    // 获取最近错误
    const recentErrors =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[11]++, error_monitor_1.errorMonitor.getRecentErrors(10));
    // 获取健康检查结果
    const healthCheck =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[12]++, error_monitor_1.errorMonitor.healthCheck());
    // 获取配置信息
    const config =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[13]++, (0, error_monitoring_config_1.getErrorMonitoringConfig)());
    // 获取错误追踪器状态
    const trackerStats =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[14]++, error_tracker_1.errorTracker.getStats());
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[15]++;
    return {
      status: 'success',
      data: {
        monitoring: {
          isActive: true,
          config: {
            interval: config.monitoringInterval,
            errorRateThreshold: config.alertThresholds.errorRate,
            criticalErrorThreshold: config.alertThresholds.criticalErrorCount,
            autoRecoveryEnabled: config.autoRecovery.enabled,
            notificationsEnabled: config.notifications.enabled
          }
        },
        errorStats: {
          total: errorStats.total,
          recentErrors: errorStats.recentErrors,
          errorRate: errorStats.errorRate,
          byType: errorStats.byType,
          bySeverity: errorStats.bySeverity
        },
        alerts: {
          active: activeAlerts.length,
          list: activeAlerts.map(alert => {
            /* istanbul ignore next */
            cov_1xq9t95dvz().f[1]++;
            cov_1xq9t95dvz().s[16]++;
            return {
              id: alert.id,
              message: alert.message,
              severity: alert.severity,
              timestamp: alert.timestamp,
              resolved: alert.resolved
            };
          })
        },
        recentErrors: recentErrors.map(error => {
          /* istanbul ignore next */
          cov_1xq9t95dvz().f[2]++;
          cov_1xq9t95dvz().s[17]++;
          return {
            id: error.id,
            message: error.message,
            type: error.type,
            severity: error.severity,
            timestamp: error.timestamp,
            resolved: error.resolved
          };
        }),
        healthCheck: {
          status: healthCheck.status,
          score: healthCheck.score,
          issues: healthCheck.issues
        },
        tracker: {
          totalTracked:
          /* istanbul ignore next */
          (cov_1xq9t95dvz().b[0][0]++, trackerStats.totalErrors) ||
          /* istanbul ignore next */
          (cov_1xq9t95dvz().b[0][1]++, 0),
          recentActivity:
          /* istanbul ignore next */
          (cov_1xq9t95dvz().b[1][0]++, trackerStats.recentActivity) ||
          /* istanbul ignore next */
          (cov_1xq9t95dvz().b[1][1]++, 0),
          isActive:
          /* istanbul ignore next */
          (cov_1xq9t95dvz().b[2][0]++, trackerStats.isActive) ||
          /* istanbul ignore next */
          (cov_1xq9t95dvz().b[2][1]++, false)
        },
        timestamp: new Date().toISOString()
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[18]++;
    console.error('Failed to get error monitoring status:', error);
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[19]++;
    throw new Error('Failed to retrieve monitoring status');
  }
}
/**
 * GET /api/admin/error-monitoring/status
 * 获取错误监控系统状态
 */
/* istanbul ignore next */
cov_1xq9t95dvz().s[20]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1xq9t95dvz().f[3]++;
  cov_1xq9t95dvz().s[21]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[22]++, await getErrorMonitoringStatus());
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[23]++;
    return api_helper_1.ApiResponseWrapper.success(result.data, {
      'Cache-Control': 'no-cache, no-store, must-revalidate',
      'Pragma': 'no-cache',
      'Expires': '0'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[24]++;
    console.error('Error getting monitoring status:', error);
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[25]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to retrieve monitoring status', null);
  }
});
/**
 * POST /api/admin/error-monitoring/status
 * 重启错误监控系统
 */
/* istanbul ignore next */
cov_1xq9t95dvz().s[26]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1xq9t95dvz().f[4]++;
  cov_1xq9t95dvz().s[27]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[28]++, await req.json());
    const {
      action
    } =
    /* istanbul ignore next */
    (cov_1xq9t95dvz().s[29]++, body);
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[30]++;
    if (action === 'restart') {
      /* istanbul ignore next */
      cov_1xq9t95dvz().b[3][0]++;
      cov_1xq9t95dvz().s[31]++;
      // 停止监控
      error_monitor_1.errorMonitor.stopMonitoring();
      // 重新启动监控
      const config =
      /* istanbul ignore next */
      (cov_1xq9t95dvz().s[32]++, (0, error_monitoring_config_1.getErrorMonitoringConfig)());
      /* istanbul ignore next */
      cov_1xq9t95dvz().s[33]++;
      error_monitor_1.errorMonitor.startMonitoring(config.monitoringInterval);
      /* istanbul ignore next */
      cov_1xq9t95dvz().s[34]++;
      return api_helper_1.ApiResponseWrapper.success({
        message: 'Error monitoring system restarted successfully',
        timestamp: new Date().toISOString()
      });
    } else {
      /* istanbul ignore next */
      cov_1xq9t95dvz().b[3][1]++;
      cov_1xq9t95dvz().s[35]++;
      if (action === 'stop') {
        /* istanbul ignore next */
        cov_1xq9t95dvz().b[4][0]++;
        cov_1xq9t95dvz().s[36]++;
        // 停止监控
        error_monitor_1.errorMonitor.stopMonitoring();
        /* istanbul ignore next */
        cov_1xq9t95dvz().s[37]++;
        return api_helper_1.ApiResponseWrapper.success({
          message: 'Error monitoring system stopped',
          timestamp: new Date().toISOString()
        });
      } else {
        /* istanbul ignore next */
        cov_1xq9t95dvz().b[4][1]++;
        cov_1xq9t95dvz().s[38]++;
        if (action === 'start') {
          /* istanbul ignore next */
          cov_1xq9t95dvz().b[5][0]++;
          // 启动监控
          const config =
          /* istanbul ignore next */
          (cov_1xq9t95dvz().s[39]++, (0, error_monitoring_config_1.getErrorMonitoringConfig)());
          /* istanbul ignore next */
          cov_1xq9t95dvz().s[40]++;
          error_monitor_1.errorMonitor.startMonitoring(config.monitoringInterval);
          /* istanbul ignore next */
          cov_1xq9t95dvz().s[41]++;
          return api_helper_1.ApiResponseWrapper.success({
            message: 'Error monitoring system started',
            timestamp: new Date().toISOString()
          });
        } else {
          /* istanbul ignore next */
          cov_1xq9t95dvz().b[5][1]++;
          cov_1xq9t95dvz().s[42]++;
          return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, 'Invalid action. Use: start, stop, or restart', null);
        }
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[43]++;
    console.error('Failed to control error monitoring:', error);
    /* istanbul ignore next */
    cov_1xq9t95dvz().s[44]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to control monitoring system', null);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,