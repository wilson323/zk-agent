56b25929fa5c0d69658156f0d5bdfe7c
"use strict";

/**
 * @file ai-models\[id]\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1q7nkmot50() {
  var path = "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts";
  var hash = "d56363f02972219ab6dc33eb531c44a992b881bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 17,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 68
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "9": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "12": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "13": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 92
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 128
        }
      },
      "16": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "18": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "20": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 128
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 92
          },
          end: {
            line: 14,
            column: 93
          }
        },
        loc: {
          start: {
            line: 14,
            column: 120
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 108
          },
          end: {
            line: 18,
            column: 109
          }
        },
        loc: {
          start: {
            line: 18,
            column: 183
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 114
          },
          end: {
            line: 33,
            column: 115
          }
        },
        loc: {
          start: {
            line: 33,
            column: 189
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 33
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAoE;AACpE,iEAA+D;AAC/D,uDAA4D;AAC5D,uCAAyC;AAI5B,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,EACpC,KAAK,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IACzB,MAAM,KAAK,GAAG,8BAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACjD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACxC,CAAC,CACF,CAAC;AAEW,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EACpD,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAE9B,MAAM,KAAK,GAAG,MAAM,8BAAc,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAErE,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,gBAAgB,EAAE,2BAA2B,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACtG,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,kCAAc,EAClC,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EACvD,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QAEjC,MAAM,8BAAc,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEjD,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,gBAAgB,EAAE,2BAA2B,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACtG,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts"],
      sourcesContent: ["/**\n * @file ai-models\\[id]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute } from '@/lib/middleware/api-route-wrapper';\nimport { aiModelManager } from '@/lib/ai-models/model-manager';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { ErrorCode } from '@/types/core';\nimport { ErrorCode } from '@/types/core';\n\nexport const GET = createApiRoute(\n  { method: 'GET', requireAuth: true },\n  async (_req, { params }) => {\n    const model = aiModelManager.getModel(params.id);\n    return { success: true, data: model };\n  }\n);\n\nexport const PUT = createApiRoute(\n  { method: 'PUT', requireAuth: true, timeout: 60000 },\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      const data = await req.json();\n    \n      const model = await aiModelManager.updateModel(routeParams.id, data);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n        message: \"Model updated successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Failed to update AI model', null, 400);\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  { method: 'DELETE', requireAuth: true, timeout: 60000 },\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      \n      await aiModelManager.deleteModel(routeParams.id);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"Model deleted successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Failed to delete AI model', null, 400);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d56363f02972219ab6dc33eb531c44a992b881bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q7nkmot50 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q7nkmot50();
cov_1q7nkmot50().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1q7nkmot50().s[1]++;
exports.DELETE = exports.PUT = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const model_manager_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[3]++, require("@/lib/ai-models/model-manager"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[4]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[5]++, require("@/types/core"));
/* istanbul ignore next */
cov_1q7nkmot50().s[6]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)({
  method: 'GET',
  requireAuth: true
}, async (_req, {
  params
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[0]++;
  const model =
  /* istanbul ignore next */
  (cov_1q7nkmot50().s[7]++, model_manager_1.aiModelManager.getModel(params.id));
  /* istanbul ignore next */
  cov_1q7nkmot50().s[8]++;
  return {
    success: true,
    data: model
  };
});
/* istanbul ignore next */
cov_1q7nkmot50().s[9]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)({
  method: 'PUT',
  requireAuth: true,
  timeout: 60000
}, async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId,
  params
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[1]++;
  cov_1q7nkmot50().s[10]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[11]++, await params);
    const data =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[12]++, await req.json());
    const model =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[13]++, await model_manager_1.aiModelManager.updateModel(routeParams.id, data));
    /* istanbul ignore next */
    cov_1q7nkmot50().s[14]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: model,
      message: "Model updated successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[15]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, 'Failed to update AI model', null, 400);
  }
});
/* istanbul ignore next */
cov_1q7nkmot50().s[16]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)({
  method: 'DELETE',
  requireAuth: true,
  timeout: 60000
}, async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId,
  params
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[2]++;
  cov_1q7nkmot50().s[17]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[18]++, await params);
    /* istanbul ignore next */
    cov_1q7nkmot50().s[19]++;
    await model_manager_1.aiModelManager.deleteModel(routeParams.id);
    /* istanbul ignore next */
    cov_1q7nkmot50().s[20]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      message: "Model deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[21]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, 'Failed to delete AI model', null, 400);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,