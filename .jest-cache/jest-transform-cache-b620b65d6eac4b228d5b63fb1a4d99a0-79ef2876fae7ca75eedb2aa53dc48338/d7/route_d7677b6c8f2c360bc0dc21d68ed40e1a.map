{"version":3,"names":["cov_8rdum3of1","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","GET","server_1","require","container_1","request","logger","getService","TYPES","Logger","exampleController","ExampleController","info","data","getData","NextResponse","json","success","error","Error","message","status"],"sources":["E:\\zk-agent\\app\\api\\example\\route.ts"],"sourcesContent":["/**\r\n * @file 示例API路由\r\n * @description 展示如何在API路由中使用依赖注入\r\n * @author ZK-Agent Team\r\n * @date 2024-12-20\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getService, TYPES } from '@/lib/di/container';\r\nimport { IExampleService } from '@/lib/services/example-service';\r\nimport { ILogger } from '@/lib/interfaces/logger.interface';\r\nimport { IExampleController } from '@/lib/controllers/example.controller';\r\n\r\n/**\r\n * GET 请求处理\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // 从容器中获取服务\r\n    const logger = getService<ILogger>(TYPES.Logger);\r\n    const exampleController = getService<IExampleController>(TYPES.ExampleController);\r\n    \r\n    logger.info('收到示例API请求');\r\n    \r\n    // 调用控制器方法\r\n    const data = await exampleController.getData();\r\n    \r\n    // 返回响应\r\n    return NextResponse.json({\r\n      success: true,\r\n      data\r\n    });\r\n  } catch (error) {\r\n    // 错误处理\r\n    const logger = getService<ILogger>(TYPES.Logger);\r\n    logger.error('示例API错误', error);\r\n    \r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : '未知错误'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}