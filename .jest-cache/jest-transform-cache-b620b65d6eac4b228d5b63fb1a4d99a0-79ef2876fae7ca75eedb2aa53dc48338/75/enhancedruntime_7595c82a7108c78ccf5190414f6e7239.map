{"version":3,"names":["cov_2127y02m6n","actualCoverage","s","runtime_1","require","middleware_1","tool_registry_1","error_codes_1","version_1","EnhancedAgUIRuntime","AgUIRuntime","constructor","config","f","performanceMetrics","Map","middlewareManager","AgUIMiddlewareManager","toolRegistry","ToolRegistry","enableMiddleware","b","register","LoggingMiddleware","debug","PerformanceMiddleware","securityOptions","SecurityMiddleware","enableBuiltinTools","WeatherTool","WebSearchTool","CADAnalysisTool","PosterGeneratorTool","initialize","setAgent","agent","metadata","protocolVersion","VersionCompatibility","isCompatible","ErrorHandler","createError","AgUIErrorCode","AGENT_INVALID_CONFIG","agentId","id","tool","tools","has","function","name","console","warn","error","handleError","run","input","startTime","Date","now","processedInput","processRun","set","runId","metric","get","endTime","duration","processedError","processError","threadId","executeTool","toolName","argsJson","args","JSON","parse","e","TOOL_INVALID_ARGS","parseError","execute","timestamp","emitEvent","event","processedEvent","processEvent","registerTool","executor","registerMiddleware","middleware","getPerformanceMetrics","result","entries","getAvailableTools","getToolNames","getVersionInfo","getCurrentVersionInfo","healthCheck","details","version","Array","from","middlewares","keys","metrics","Object","length","testEvent","type","data","status","Error","message","String","dispose","clear","exports"],"sources":["E:\\zk-agent\\lib\\ag-ui\\protocol\\enhanced-runtime.ts"],"sourcesContent":["// @ts-nocheck\nimport { AgUIRuntime } from \"./runtime\"\nimport { AgUIMiddlewareManager, LoggingMiddleware, PerformanceMiddleware, SecurityMiddleware } from \"./middleware\"\nimport { ToolRegistry, WeatherTool, WebSearchTool, CADAnalysisTool, PosterGeneratorTool } from \"./tool-registry\"\nimport { AgUIErrorCode, ErrorHandler } from \"./error-codes\"\nimport { VersionCompatibility } from \"./version\"\nimport type { AgUIEvent, RunInput, RunConfig, AgentDefinition } from \"./types\"\n\n/**\n * 增强版AG-UI运行时\n * 集成所有协议特性\n */\nexport class EnhancedAgUIRuntime extends AgUIRuntime {\n  private middlewareManager: AgUIMiddlewareManager\n  private toolRegistry: ToolRegistry\n  private performanceMetrics: Map<string, any> = new Map()\n\n  constructor(config: {\n    threadId: string\n    debug?: boolean\n    apiEndpoint?: string\n    enableMiddleware?: boolean\n    enableBuiltinTools?: boolean\n    securityOptions?: {\n      allowedTools?: string[]\n      maxMessageLength?: number\n      rateLimitPerMinute?: number\n    }\n  }) {\n    super(config)\n\n    // 初始化中间件管理器\n    this.middlewareManager = new AgUIMiddlewareManager()\n\n    // 初始化工具注册表\n    this.toolRegistry = new ToolRegistry()\n\n    // 注册内置中间件\n    if (config.enableMiddleware !== false) {\n      this.middlewareManager.register(new LoggingMiddleware({ debug: config.debug }))\n      this.middlewareManager.register(new PerformanceMiddleware())\n\n      if (config.securityOptions) {\n        this.middlewareManager.register(new SecurityMiddleware(config.securityOptions))\n      }\n    }\n\n    // 注册内置工具\n    if (config.enableBuiltinTools !== false) {\n      this.toolRegistry.register(new WeatherTool())\n      this.toolRegistry.register(new WebSearchTool())\n      this.toolRegistry.register(new CADAnalysisTool())\n      this.toolRegistry.register(new PosterGeneratorTool())\n    }\n\n    // 初始化中间件\n    this.middlewareManager.initialize()\n  }\n\n  /**\n   * 设置智能体（增强版）\n   */\n  setAgent(agent: AgentDefinition): void {\n    try {\n      // 版本兼容性检查\n      if (agent.metadata?.protocolVersion) {\n        if (!VersionCompatibility.isCompatible(agent.metadata.protocolVersion)) {\n          throw ErrorHandler.createError(\n            AgUIErrorCode.AGENT_INVALID_CONFIG,\n            { protocolVersion: agent.metadata.protocolVersion },\n            { agentId: agent.id },\n          )\n        }\n      }\n\n      // 验证工具定义\n      for (const tool of agent.tools) {\n        if (!this.toolRegistry.has(tool.function.name)) {\n          console.warn(`Tool ${tool.function.name} not found in registry`)\n        }\n      }\n\n      super.setAgent(agent)\n    } catch (error) {\n      throw ErrorHandler.handleError(error, { agentId: agent.id })\n    }\n  }\n\n  /**\n   * 执行运行（增强版）\n   */\n  async run(input: RunInput, config?: RunConfig): Promise<void> {\n    const startTime = Date.now()\n\n    try {\n      // 通过中间件处理输入\n      const processedInput = await this.middlewareManager.processRun(input)\n\n      // 记录性能指标\n      this.performanceMetrics.set(input.runId, {\n        startTime,\n        input: processedInput,\n        config,\n      })\n\n      // 执行运行\n      await super.run(processedInput, config)\n\n      // 更新性能指标\n      const metric = this.performanceMetrics.get(input.runId)\n      if (metric) {\n        metric.endTime = Date.now()\n        metric.duration = metric.endTime - metric.startTime\n      }\n    } catch (error) {\n      // 通过中间件处理错误\n      const processedError = this.middlewareManager.processError(ErrorHandler.handleError(error), {\n        runId: input.runId,\n        threadId: input.threadId,\n      })\n\n      if (processedError) {\n        throw processedError\n      }\n    }\n  }\n\n  /**\n   * 执行工具（增强版）\n   */\n  protected async executeTool(toolName: string, argsJson: string): Promise<any> {\n    try {\n      let args: any = {}\n      try {\n        args = JSON.parse(argsJson)\n      } catch (e) {\n        throw ErrorHandler.createError(AgUIErrorCode.TOOL_INVALID_ARGS, { argsJson, parseError: e }, { toolName })\n      }\n\n      // 使用工具注册表执行\n      if (this.toolRegistry.has(toolName)) {\n        return await this.toolRegistry.execute(toolName, args, {\n          threadId: this.config.threadId,\n          timestamp: Date.now(),\n        })\n      }\n\n      // 回退到父类实现\n      return await super.executeTool(toolName, argsJson)\n    } catch (error) {\n      throw ErrorHandler.handleError(error, { toolName, argsJson })\n    }\n  }\n\n  /**\n   * 发送事件（增强版）\n   */\n  protected emitEvent(event: AgUIEvent): void {\n    try {\n      // 通过中间件处理事件\n      const processedEvent = this.middlewareManager.processEvent(event)\n\n      if (processedEvent) {\n        super.emitEvent(processedEvent)\n      }\n    } catch (error) {\n      console.error(\"Error processing event through middleware:\", error)\n      // 即使中间件出错，也要发送原始事件\n      super.emitEvent(event)\n    }\n  }\n\n  /**\n   * 注册自定义工具\n   */\n  registerTool(executor: any): void {\n    this.toolRegistry.register(executor)\n  }\n\n  /**\n   * 注册中间件\n   */\n  registerMiddleware(middleware: any): void {\n    this.middlewareManager.register(middleware)\n  }\n\n  /**\n   * 获取性能指标\n   */\n  getPerformanceMetrics(): Record<string, any> {\n    const result: Record<string, any> = {}\n    for (const [runId, metric] of this.performanceMetrics.entries()) {\n      result[runId] = { ...metric }\n    }\n    return result\n  }\n\n  /**\n   * 获取工具列表\n   */\n  getAvailableTools(): string[] {\n    return this.toolRegistry.getToolNames()\n  }\n\n  /**\n   * 获取版本信息\n   */\n  getVersionInfo() {\n    return VersionCompatibility.getCurrentVersionInfo()\n  }\n\n  /**\n   * 健康检查\n   */\n  async healthCheck(): Promise<{\n    status: \"healthy\" | \"degraded\" | \"unhealthy\"\n    details: Record<string, any>\n  }> {\n    const details: Record<string, any> = {\n      version: VersionCompatibility.getCurrentVersionInfo(),\n      tools: this.toolRegistry.getToolNames(),\n      middleware: Array.from((this.middlewareManager as any).middlewares.keys()),\n      metrics: Object.keys(this.performanceMetrics).length,\n    }\n\n    try {\n      // 测试基本功能\n      const testEvent: AgUIEvent = {\n        type: \"custom\",\n        name: \"health-check\",\n        data: { timestamp: Date.now() },\n        timestamp: Date.now(),\n      }\n\n      this.middlewareManager.processEvent(testEvent)\n\n      details.status = \"healthy\"\n      return { status: \"healthy\", details }\n    } catch (error) {\n      details.error = error instanceof Error ? error.message : String(error)\n      return { status: \"unhealthy\", details }\n    }\n  }\n\n  /**\n   * 清理资源（增强版）\n   */\n  dispose(): void {\n    // 清理中间件\n    this.middlewareManager.dispose()\n\n    // 清理性能指标\n    this.performanceMetrics.clear()\n\n    // 调用父类清理\n    super.dispose()\n  }\n}\n"],"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","ignoreList":[]}