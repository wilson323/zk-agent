31cb45a9503089f7e2af538ebba9a31a
"use strict";

/// <reference lib="dom" />
// @ts-nocheck
/**
 * FastGPT API Client
 * This client handles all interactions with the FastGPT API
 */
/* istanbul ignore next */
function cov_2qyzb78voi() {
  var path = "E:\\zk-agent\\lib\\api\\fastgpt-client.ts";
  var hash = "e5b5e65d808aa3400a7720936a8e166385fd0f3e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\api\\fastgpt-client.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 93
        }
      },
      "2": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "5": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "8": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "9": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 48
        }
      },
      "10": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "11": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "12": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "13": {
        start: {
          line: 52,
          column: 30
        },
        end: {
          line: 52,
          column: 51
        }
      },
      "14": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 94
        }
      },
      "15": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "16": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 62,
          column: 109
        }
      },
      "17": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "18": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 75,
          column: 67
        }
      },
      "19": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 53
        }
      },
      "20": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "21": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 79
        }
      },
      "22": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "23": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 87,
          column: 115
        }
      },
      "24": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "25": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "26": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 82
        }
      },
      "27": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 31
        }
      },
      "28": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 117
        }
      },
      "29": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "30": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "31": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 83
        }
      },
      "32": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 31
        }
      },
      "33": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 117
        }
      },
      "34": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "35": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "36": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 81
        }
      },
      "37": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 31
        }
      },
      "38": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 147,
          column: 73
        }
      },
      "39": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "40": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "41": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "42": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 31
        }
      },
      "43": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 163,
          column: 60
        }
      },
      "44": {
        start: {
          line: 164,
          column: 25
        },
        end: {
          line: 166,
          column: 10
        }
      },
      "45": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "46": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 88
        }
      },
      "47": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 31
        }
      },
      "48": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 179,
          column: 51
        }
      },
      "49": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 189,
          column: 10
        }
      },
      "50": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "51": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 83
        }
      },
      "52": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "53": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 202,
          column: 90
        }
      },
      "54": {
        start: {
          line: 203,
          column: 25
        },
        end: {
          line: 203,
          column: 53
        }
      },
      "55": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "56": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 85
        }
      },
      "57": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 31
        }
      },
      "58": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 216,
          column: 97
        }
      },
      "59": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "60": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "61": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 80
        }
      },
      "62": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 31
        }
      },
      "63": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "64": {
        start: {
          line: 233,
          column: 21
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "65": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "66": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 42
        }
      },
      "67": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 41
        }
      },
      "68": {
        start: {
          line: 244,
          column: 25
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "69": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "70": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 86
        }
      },
      "71": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 31
        }
      },
      "72": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 260,
          column: 57
        }
      },
      "73": {
        start: {
          line: 261,
          column: 25
        },
        end: {
          line: 272,
          column: 10
        }
      },
      "74": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "75": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 90
        }
      },
      "76": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 31
        }
      },
      "77": {
        start: {
          line: 280,
          column: 22
        },
        end: {
          line: 280,
          column: 41
        }
      },
      "78": {
        start: {
          line: 281,
          column: 0
        },
        end: {
          line: 281,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 58
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 42
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 34
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 37
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 75
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 54
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 105
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 124
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 43
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 143
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 37
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 159
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 68
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 175
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 51
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 198
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 50
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 212
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 69
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 228
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 85
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 256
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 60
          }
        }, {
          start: {
            line: 9,
            column: 64
          },
          end: {
            line: 9,
            column: 93
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 55
          }
        }, {
          start: {
            line: 10,
            column: 59
          },
          end: {
            line: 10,
            column: 61
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 12,
            column: 32
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 44
          },
          end: {
            line: 12,
            column: 56
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 41,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 40
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 42
          },
          end: {
            line: 62,
            column: 80
          }
        }, {
          start: {
            line: 62,
            column: 83
          },
          end: {
            line: 62,
            column: 109
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 75,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 14
          },
          end: {
            line: 74,
            column: 79
          }
        }, {
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 67
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 41
          },
          end: {
            line: 85,
            column: 42
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 44
          },
          end: {
            line: 85,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 55
          },
          end: {
            line: 85,
            column: 57
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 59
          },
          end: {
            line: 85,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 68
          },
          end: {
            line: 85,
            column: 73
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 87,
            column: 25
          },
          end: {
            line: 87,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 42
          },
          end: {
            line: 87,
            column: 83
          }
        }, {
          start: {
            line: 87,
            column: 86
          },
          end: {
            line: 87,
            column: 115
          }
        }],
        line: 87
      },
      "13": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "14": {
        loc: {
          start: {
            line: 107,
            column: 25
          },
          end: {
            line: 107,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 42
          },
          end: {
            line: 107,
            column: 84
          }
        }, {
          start: {
            line: 107,
            column: 87
          },
          end: {
            line: 107,
            column: 117
          }
        }],
        line: 107
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 126,
            column: 84
          }
        }, {
          start: {
            line: 126,
            column: 87
          },
          end: {
            line: 126,
            column: 117
          }
        }],
        line: 126
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 147,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 14
          },
          end: {
            line: 146,
            column: 85
          }
        }, {
          start: {
            line: 147,
            column: 14
          },
          end: {
            line: 147,
            column: 73
          }
        }],
        line: 145
      },
      "19": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "20": {
        loc: {
          start: {
            line: 161,
            column: 25
          },
          end: {
            line: 163,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 14
          },
          end: {
            line: 162,
            column: 72
          }
        }, {
          start: {
            line: 163,
            column: 14
          },
          end: {
            line: 163,
            column: 60
          }
        }],
        line: 161
      },
      "21": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "22": {
        loc: {
          start: {
            line: 175,
            column: 41
          },
          end: {
            line: 175,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 175,
            column: 50
          },
          end: {
            line: 175,
            column: 51
          }
        }],
        line: 175
      },
      "23": {
        loc: {
          start: {
            line: 175,
            column: 53
          },
          end: {
            line: 175,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 175,
            column: 64
          },
          end: {
            line: 175,
            column: 66
          }
        }],
        line: 175
      },
      "24": {
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 179,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 14
          },
          end: {
            line: 178,
            column: 63
          }
        }, {
          start: {
            line: 179,
            column: 14
          },
          end: {
            line: 179,
            column: 51
          }
        }],
        line: 177
      },
      "25": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "26": {
        loc: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 202,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 14
          },
          end: {
            line: 201,
            column: 102
          }
        }, {
          start: {
            line: 202,
            column: 14
          },
          end: {
            line: 202,
            column: 90
          }
        }],
        line: 200
      },
      "27": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "28": {
        loc: {
          start: {
            line: 214,
            column: 25
          },
          end: {
            line: 216,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 14
          },
          end: {
            line: 215,
            column: 109
          }
        }, {
          start: {
            line: 216,
            column: 14
          },
          end: {
            line: 216,
            column: 97
          }
        }],
        line: 214
      },
      "29": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "30": {
        loc: {
          start: {
            line: 230,
            column: 25
          },
          end: {
            line: 232,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 14
          },
          end: {
            line: 231,
            column: 70
          }
        }, {
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 58
          }
        }],
        line: 230
      },
      "31": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: 241,
            column: 13
          },
          end: {
            line: 243,
            column: 9
          }
        }],
        line: 238
      },
      "32": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "33": {
        loc: {
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 256,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 256,
            column: 69
          }
        }],
        line: 256
      },
      "34": {
        loc: {
          start: {
            line: 258,
            column: 25
          },
          end: {
            line: 260,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 14
          },
          end: {
            line: 259,
            column: 69
          }
        }, {
          start: {
            line: 260,
            column: 14
          },
          end: {
            line: 260,
            column: 57
          }
        }],
        line: 258
      },
      "35": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\api\\fastgpt-client.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\api\\fastgpt-client.ts"],
      sourcesContent: ["/// <reference lib=\"dom\" />\n// @ts-nocheck\n/**\n * FastGPT API Client\n * This client handles all interactions with the FastGPT API\n */\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_FASTGPT_API_URL || \"https://zktecoaihub.com/api\"\nconst API_KEY = process.env.NEXT_PUBLIC_FASTGPT_API_KEY || \"\"\n\nclass FastGPTClient {\n  private apiKey: string\n  private baseUrl: string\n  private isBrowser: boolean\n\n  constructor(apiKey: string = API_KEY, baseUrl: string = API_BASE_URL) {\n    this.apiKey = apiKey\n    this.baseUrl = baseUrl\n    this.isBrowser = typeof window !== \"undefined\"\n  }\n\n  /**\n   * Set API key\n   */\n  setApiKey(apiKey: string) {\n    this.apiKey = apiKey\n  }\n\n  /**\n   * Set base URL\n   */\n  setBaseUrl(baseUrl: string) {\n    this.baseUrl = baseUrl\n  }\n\n  /**\n   * Get headers for API requests\n   */\n  private getHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.apiKey}`,\n    }\n  }\n\n  /**\n   * Make API request\n   */\n  private async request(endpoint: string, options: RequestInit = {}) {\n    const url = `${this.baseUrl}${endpoint}`\n    const headers = this.getHeaders()\n\n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        ...headers,\n        ...options.headers,\n      },\n    })\n\n    if (!response.ok) {\n      const errorBody = await response.text();\n      throw new Error(`HTTP ${response.status}: ${response.statusText} - ${errorBody}`);\n    }\n\n    return response\n  }\n\n  /**\n   * Chat completions API\n   */\n  async chatCompletions(params: any) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser ? \"/api/fastgpt/api/v1/chat/completions\" : \"/api/v1/chat/completions\"\n\n    return this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify(params),\n    })\n  }\n\n  /**\n   * Get chat initialization data\n   */\n  async getChatInit(appId: string, chatId: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? `/api/fastgpt/api/core/chat/init?appId=${appId}&chatId=${chatId}`\n      : `/api/core/chat/init?appId=${appId}&chatId=${chatId}`\n\n    const response = await this.request(endpoint)\n    if (!response.ok) {\n      throw new Error(`Failed to get chat init: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Get chat history\n   */\n  async getChatHistory(appId: string, offset = 0, pageSize = 20, source = \"api\") {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser ? \"/api/fastgpt/api/core/chat/getHistories\" : \"/api/core/chat/getHistories\"\n\n    const response = await this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        appId,\n        offset,\n        pageSize,\n        source,\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to get chat history: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Update chat history title\n   */\n  async updateChatTitle(appId: string, chatId: string, customTitle: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser ? \"/api/fastgpt/api/core/chat/updateHistory\" : \"/api/core/chat/updateHistory\"\n\n    const response = await this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        appId,\n        chatId,\n        customTitle,\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to update chat title: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Toggle chat pin status\n   */\n  async toggleChatPin(appId: string, chatId: string, top: boolean) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser ? \"/api/fastgpt/api/core/chat/updateHistory\" : \"/api/core/chat/updateHistory\"\n\n    const response = await this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        appId,\n        chatId,\n        top,\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to toggle chat pin: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Delete chat history\n   */\n  async deleteChatHistory(chatId: string, appId: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? `/api/fastgpt/api/core/chat/delHistory?chatId=${chatId}&appId=${appId}`\n      : `/api/core/chat/delHistory?chatId=${chatId}&appId=${appId}`\n\n    const response = await this.request(endpoint, {\n      method: \"DELETE\",\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete chat history: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Clear all chat history\n   */\n  async clearAllChatHistory(appId: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? `/api/fastgpt/api/core/chat/clearHistories?appId=${appId}`\n      : `/api/core/chat/clearHistories?appId=${appId}`\n\n    const response = await this.request(endpoint, {\n      method: \"DELETE\",\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to clear all chat history: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Get chat messages\n   */\n  async getChatMessages(appId: string, chatId: string, offset = 0, pageSize = 20) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? \"/api/fastgpt/api/core/chat/getPaginationRecords\"\n      : \"/api/core/chat/getPaginationRecords\"\n\n    const response = await this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        appId,\n        chatId,\n        offset,\n        pageSize,\n        loadCustomFeedbacks: true,\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to get chat messages: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Get message details\n   */\n  async getMessageDetails(appId: string, chatId: string, dataId: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? `/api/fastgpt/api/core/chat/getResData?appId=${appId}&chatId=${chatId}&dataId=${dataId}`\n      : `/api/core/chat/getResData?appId=${appId}&chatId=${chatId}&dataId=${dataId}`\n\n    const response = await this.request(endpoint)\n\n    if (!response.ok) {\n      throw new Error(`Failed to get message details: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Delete message\n   */\n  async deleteMessage(contentId: string, chatId: string, appId: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? `/api/fastgpt/api/core/chat/item/delete?contentId=${contentId}&chatId=${chatId}&appId=${appId}`\n      : `/api/core/chat/item/delete?contentId=${contentId}&chatId=${chatId}&appId=${appId}`\n\n    const response = await this.request(endpoint, {\n      method: \"DELETE\",\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete message: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Update user feedback\n   */\n  async updateUserFeedback(\n    appId: string,\n    chatId: string,\n    dataId: string,\n    feedback: \"good\" | \"bad\",\n    value: \"yes\" | \"no\",\n  ) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? \"/api/fastgpt/api/core/chat/feedback/updateUserFeedback\"\n      : \"/api/core/chat/feedback/updateUserFeedback\"\n\n    const body: any = {\n      appId,\n      chatId,\n      dataId,\n    }\n\n    if (feedback === \"good\") {\n      body.userGoodFeedback = value\n    } else {\n      body.userBadFeedback = value\n    }\n\n    const response = await this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to update user feedback: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  /**\n   * Get question suggestions\n   */\n  async getQuestionSuggestions(appId: string, chatId: string, model = \"GPT-4o-mini\", customPrompt?: string) {\n    // If in browser, use the proxy endpoint\n    const endpoint = this.isBrowser\n      ? \"/api/fastgpt/api/core/ai/agent/v2/createQuestionGuide\"\n      : \"/api/core/ai/agent/v2/createQuestionGuide\"\n\n    const response = await this.request(endpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        appId,\n        chatId,\n        questionGuide: {\n          open: true,\n          model,\n          customPrompt,\n        },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to get question suggestions: ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n}\n\n// Create a singleton instance\nconst fastGPTClient = new FastGPTClient()\n\nexport default fastGPTClient\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e5b5e65d808aa3400a7720936a8e166385fd0f3e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qyzb78voi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qyzb78voi();
cov_2qyzb78voi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const API_BASE_URL =
/* istanbul ignore next */
(cov_2qyzb78voi().s[1]++,
/* istanbul ignore next */
(cov_2qyzb78voi().b[0][0]++, process.env.NEXT_PUBLIC_FASTGPT_API_URL) ||
/* istanbul ignore next */
(cov_2qyzb78voi().b[0][1]++, "https://zktecoaihub.com/api"));
const API_KEY =
/* istanbul ignore next */
(cov_2qyzb78voi().s[2]++,
/* istanbul ignore next */
(cov_2qyzb78voi().b[1][0]++, process.env.NEXT_PUBLIC_FASTGPT_API_KEY) ||
/* istanbul ignore next */
(cov_2qyzb78voi().b[1][1]++, ""));
class FastGPTClient {
  constructor(apiKey =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[2][0]++, API_KEY), baseUrl =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[3][0]++, API_BASE_URL)) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[0]++;
    cov_2qyzb78voi().s[3]++;
    this.apiKey = apiKey;
    /* istanbul ignore next */
    cov_2qyzb78voi().s[4]++;
    this.baseUrl = baseUrl;
    /* istanbul ignore next */
    cov_2qyzb78voi().s[5]++;
    this.isBrowser = typeof window !== "undefined";
  }
  /**
   * Set API key
   */
  setApiKey(apiKey) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[1]++;
    cov_2qyzb78voi().s[6]++;
    this.apiKey = apiKey;
  }
  /**
   * Set base URL
   */
  setBaseUrl(baseUrl) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[2]++;
    cov_2qyzb78voi().s[7]++;
    this.baseUrl = baseUrl;
  }
  /**
   * Get headers for API requests
   */
  getHeaders() {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[3]++;
    cov_2qyzb78voi().s[8]++;
    return {
      "Content-Type": "application/json",
      Authorization: `Bearer ${this.apiKey}`
    };
  }
  /**
   * Make API request
   */
  async request(endpoint, options =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[4]++;
    const url =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[9]++, `${this.baseUrl}${endpoint}`);
    const headers =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[10]++, this.getHeaders());
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[11]++, await fetch(url, {
      ...options,
      headers: {
        ...headers,
        ...options.headers
      }
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[12]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[5][0]++;
      const errorBody =
      /* istanbul ignore next */
      (cov_2qyzb78voi().s[13]++, await response.text());
      /* istanbul ignore next */
      cov_2qyzb78voi().s[14]++;
      throw new Error(`HTTP ${response.status}: ${response.statusText} - ${errorBody}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[5][1]++;
    }
    cov_2qyzb78voi().s[15]++;
    return response;
  }
  /**
   * Chat completions API
   */
  async chatCompletions(params) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[5]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[16]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[6][0]++, "/api/fastgpt/api/v1/chat/completions") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[6][1]++, "/api/v1/chat/completions"));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[17]++;
    return this.request(endpoint, {
      method: "POST",
      body: JSON.stringify(params)
    });
  }
  /**
   * Get chat initialization data
   */
  async getChatInit(appId, chatId) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[6]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[18]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[7][0]++, `/api/fastgpt/api/core/chat/init?appId=${appId}&chatId=${chatId}`) :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[7][1]++, `/api/core/chat/init?appId=${appId}&chatId=${chatId}`));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[19]++, await this.request(endpoint));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[20]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[8][0]++;
      cov_2qyzb78voi().s[21]++;
      throw new Error(`Failed to get chat init: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[8][1]++;
    }
    cov_2qyzb78voi().s[22]++;
    return response.json();
  }
  /**
   * Get chat history
   */
  async getChatHistory(appId, offset =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[9][0]++, 0), pageSize =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[10][0]++, 20), source =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[11][0]++, "api")) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[7]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[23]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[12][0]++, "/api/fastgpt/api/core/chat/getHistories") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[12][1]++, "/api/core/chat/getHistories"));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[24]++, await this.request(endpoint, {
      method: "POST",
      body: JSON.stringify({
        appId,
        offset,
        pageSize,
        source
      })
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[25]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[13][0]++;
      cov_2qyzb78voi().s[26]++;
      throw new Error(`Failed to get chat history: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[13][1]++;
    }
    cov_2qyzb78voi().s[27]++;
    return response.json();
  }
  /**
   * Update chat history title
   */
  async updateChatTitle(appId, chatId, customTitle) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[8]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[28]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[14][0]++, "/api/fastgpt/api/core/chat/updateHistory") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[14][1]++, "/api/core/chat/updateHistory"));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[29]++, await this.request(endpoint, {
      method: "POST",
      body: JSON.stringify({
        appId,
        chatId,
        customTitle
      })
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[30]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[15][0]++;
      cov_2qyzb78voi().s[31]++;
      throw new Error(`Failed to update chat title: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[15][1]++;
    }
    cov_2qyzb78voi().s[32]++;
    return response.json();
  }
  /**
   * Toggle chat pin status
   */
  async toggleChatPin(appId, chatId, top) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[9]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[33]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[16][0]++, "/api/fastgpt/api/core/chat/updateHistory") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[16][1]++, "/api/core/chat/updateHistory"));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[34]++, await this.request(endpoint, {
      method: "POST",
      body: JSON.stringify({
        appId,
        chatId,
        top
      })
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[35]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[17][0]++;
      cov_2qyzb78voi().s[36]++;
      throw new Error(`Failed to toggle chat pin: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[17][1]++;
    }
    cov_2qyzb78voi().s[37]++;
    return response.json();
  }
  /**
   * Delete chat history
   */
  async deleteChatHistory(chatId, appId) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[10]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[38]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[18][0]++, `/api/fastgpt/api/core/chat/delHistory?chatId=${chatId}&appId=${appId}`) :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[18][1]++, `/api/core/chat/delHistory?chatId=${chatId}&appId=${appId}`));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[39]++, await this.request(endpoint, {
      method: "DELETE"
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[40]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[19][0]++;
      cov_2qyzb78voi().s[41]++;
      throw new Error(`Failed to delete chat history: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[19][1]++;
    }
    cov_2qyzb78voi().s[42]++;
    return response.json();
  }
  /**
   * Clear all chat history
   */
  async clearAllChatHistory(appId) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[11]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[43]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[20][0]++, `/api/fastgpt/api/core/chat/clearHistories?appId=${appId}`) :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[20][1]++, `/api/core/chat/clearHistories?appId=${appId}`));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[44]++, await this.request(endpoint, {
      method: "DELETE"
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[45]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[21][0]++;
      cov_2qyzb78voi().s[46]++;
      throw new Error(`Failed to clear all chat history: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[21][1]++;
    }
    cov_2qyzb78voi().s[47]++;
    return response.json();
  }
  /**
   * Get chat messages
   */
  async getChatMessages(appId, chatId, offset =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[22][0]++, 0), pageSize =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[23][0]++, 20)) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[12]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[48]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[24][0]++, "/api/fastgpt/api/core/chat/getPaginationRecords") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[24][1]++, "/api/core/chat/getPaginationRecords"));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[49]++, await this.request(endpoint, {
      method: "POST",
      body: JSON.stringify({
        appId,
        chatId,
        offset,
        pageSize,
        loadCustomFeedbacks: true
      })
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[50]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[25][0]++;
      cov_2qyzb78voi().s[51]++;
      throw new Error(`Failed to get chat messages: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[25][1]++;
    }
    cov_2qyzb78voi().s[52]++;
    return response.json();
  }
  /**
   * Get message details
   */
  async getMessageDetails(appId, chatId, dataId) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[13]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[53]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[26][0]++, `/api/fastgpt/api/core/chat/getResData?appId=${appId}&chatId=${chatId}&dataId=${dataId}`) :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[26][1]++, `/api/core/chat/getResData?appId=${appId}&chatId=${chatId}&dataId=${dataId}`));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[54]++, await this.request(endpoint));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[55]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[27][0]++;
      cov_2qyzb78voi().s[56]++;
      throw new Error(`Failed to get message details: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[27][1]++;
    }
    cov_2qyzb78voi().s[57]++;
    return response.json();
  }
  /**
   * Delete message
   */
  async deleteMessage(contentId, chatId, appId) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[14]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[58]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[28][0]++, `/api/fastgpt/api/core/chat/item/delete?contentId=${contentId}&chatId=${chatId}&appId=${appId}`) :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[28][1]++, `/api/core/chat/item/delete?contentId=${contentId}&chatId=${chatId}&appId=${appId}`));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[59]++, await this.request(endpoint, {
      method: "DELETE"
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[60]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[29][0]++;
      cov_2qyzb78voi().s[61]++;
      throw new Error(`Failed to delete message: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[29][1]++;
    }
    cov_2qyzb78voi().s[62]++;
    return response.json();
  }
  /**
   * Update user feedback
   */
  async updateUserFeedback(appId, chatId, dataId, feedback, value) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[15]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[63]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[30][0]++, "/api/fastgpt/api/core/chat/feedback/updateUserFeedback") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[30][1]++, "/api/core/chat/feedback/updateUserFeedback"));
    const body =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[64]++, {
      appId,
      chatId,
      dataId
    });
    /* istanbul ignore next */
    cov_2qyzb78voi().s[65]++;
    if (feedback === "good") {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[31][0]++;
      cov_2qyzb78voi().s[66]++;
      body.userGoodFeedback = value;
    } else {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[31][1]++;
      cov_2qyzb78voi().s[67]++;
      body.userBadFeedback = value;
    }
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[68]++, await this.request(endpoint, {
      method: "POST",
      body: JSON.stringify(body)
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[69]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[32][0]++;
      cov_2qyzb78voi().s[70]++;
      throw new Error(`Failed to update user feedback: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[32][1]++;
    }
    cov_2qyzb78voi().s[71]++;
    return response.json();
  }
  /**
   * Get question suggestions
   */
  async getQuestionSuggestions(appId, chatId, model =
  /* istanbul ignore next */
  (cov_2qyzb78voi().b[33][0]++, "GPT-4o-mini"), customPrompt) {
    /* istanbul ignore next */
    cov_2qyzb78voi().f[16]++;
    // If in browser, use the proxy endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[72]++, this.isBrowser ?
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[34][0]++, "/api/fastgpt/api/core/ai/agent/v2/createQuestionGuide") :
    /* istanbul ignore next */
    (cov_2qyzb78voi().b[34][1]++, "/api/core/ai/agent/v2/createQuestionGuide"));
    const response =
    /* istanbul ignore next */
    (cov_2qyzb78voi().s[73]++, await this.request(endpoint, {
      method: "POST",
      body: JSON.stringify({
        appId,
        chatId,
        questionGuide: {
          open: true,
          model,
          customPrompt
        }
      })
    }));
    /* istanbul ignore next */
    cov_2qyzb78voi().s[74]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qyzb78voi().b[35][0]++;
      cov_2qyzb78voi().s[75]++;
      throw new Error(`Failed to get question suggestions: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qyzb78voi().b[35][1]++;
    }
    cov_2qyzb78voi().s[76]++;
    return response.json();
  }
}
// Create a singleton instance
const fastGPTClient =
/* istanbul ignore next */
(cov_2qyzb78voi().s[77]++, new FastGPTClient());
/* istanbul ignore next */
cov_2qyzb78voi().s[78]++;
exports.default = fastGPTClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,