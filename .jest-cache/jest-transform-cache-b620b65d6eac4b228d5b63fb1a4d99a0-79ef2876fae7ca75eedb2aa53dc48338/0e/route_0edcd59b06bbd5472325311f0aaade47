5f9700d8a10a0e0d3307b077a5ccc721
"use strict";

/**
 * @file ai-models\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1i0vq4gill() {
  var path = "E:\\zk-agent\\app\\api\\ai-models\\route.ts";
  var hash = "909e9f1f477604aa2d0b72602e9add740e68a28e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ai-models\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "6": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "8": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "10": {
        start: {
          line: 24,
          column: 43
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "11": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 78
        }
      },
      "13": {
        start: {
          line: 27,
          column: 40
        },
        end: {
          line: 29,
          column: 76
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 58
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 131
        }
      },
      "17": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 59,
          column: 3
        }
      },
      "18": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "19": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 82
        }
      },
      "20": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 55
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "23": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 125
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 130
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 100
          },
          end: {
            line: 22,
            column: 101
          }
        },
        loc: {
          start: {
            line: 22,
            column: 135
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 32
          }
        },
        loc: {
          start: {
            line: 27,
            column: 40
          },
          end: {
            line: 29,
            column: 76
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 129
          },
          end: {
            line: 41,
            column: 130
          }
        },
        loc: {
          start: {
            line: 41,
            column: 163
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 40
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 27,
            column: 46
          }
        }, {
          start: {
            line: 27,
            column: 50
          },
          end: {
            line: 27,
            column: 69
          }
        }, {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 28,
            column: 22
          }
        }, {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 53
          }
        }, {
          start: {
            line: 29,
            column: 13
          },
          end: {
            line: 29,
            column: 33
          }
        }, {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 75
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ai-models\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,uCAAyC;AACzC,iEAA+D;AAC/D,6BAAwB;AASxB,oBAAoB;AACpB,MAAM,cAAc,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvB,QAAQ,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;CAC/C,CAAC,CAAC;AAEU,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE;IAC7C,IAAI,CAAC;QACH,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,cAA0B,CAAC;QAE9D,IAAI,MAAM,GAAG,8BAAc,CAAC,YAAY,EAAE,CAAC;QAE3C,UAAU;QACV,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAC7B,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;YAC9B,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC;YAC1C,CAAC,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CACjE,CAAC;QAEF,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,MAAM,CAAC,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,yBAAyB,EACzB,IAAI,EACJ,GAAG,CACJ,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,EACpD,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;IAC5C,IAAI,CAAC;QACH,cAAc;QACd,MAAM,KAAK,GAAG,MAAM,8BAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAE3D,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;SACpC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAE/C,SAAS;QACT,IAAI,KAAK,YAAY,OAAC,CAAC,QAAQ,EAAE,CAAC;YAChC,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,gBAAgB,EAC1B,oBAAoB,EACpB,IAAI,EACJ,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAS,CAAC,qBAAqB,EAC/B,wBAAwB,EACxB,IAAI,EACJ,GAAG,CACJ,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ai-models\\route.ts"],
      sourcesContent: ["/**\n * @file ai-models\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { aiModelManager } from \"@/lib/ai-models/model-manager\";\nimport { z } from 'zod';\n\n// \u5B9A\u4E49\u67E5\u8BE2\u53C2\u6570\u7C7B\u578B\ninterface GetQuery {\n  type?: string;\n  provider?: string;\n  active?: \"true\" | \"false\";\n}\n\n// \u5B9A\u4E49POST\u8BF7\u6C42\u4F53\u9A8C\u8BC1schema\nconst addModelSchema = z.object({\n  name: z.string().min(1),\n  provider: z.string().min(1),\n  type: z.string().min(1),\n  isActive: z.boolean().optional().default(true)\n});\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { validatedQuery }) => {\n    try {\n      const { type, provider, active } = validatedQuery as GetQuery;\n      \n      let models = aiModelManager.getAllModels();\n      \n      // \u4F18\u5316\u7684\u5355\u6B21\u8FC7\u6EE4\n      models = models.filter(model => \n        (!type || model.type === type) &&\n        (!provider || model.provider === provider) &&\n        (active === undefined || model.isActive === (active === \"true\"))\n      );\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        data: models,\n        total: models.length,\n      });\n    } catch (error) {\n      console.error('Error fetching AI models:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"Failed to get AI models\",\n        null,\n        500\n      );\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost({ body: addModelSchema }),\n  async (req: NextRequest, { validatedBody }) => {\n    try {\n      // \u4F7F\u7528\u5DF2\u9A8C\u8BC1\u7684\u8BF7\u6C42\u4F53\u6570\u636E\n      const model = await aiModelManager.addModel(validatedBody);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n        message: \"Model added successfully\",\n      });\n    } catch (error) {\n      console.error('Error adding AI model:', error);\n      \n      // \u533A\u5206\u9519\u8BEF\u7C7B\u578B\n      if (error instanceof z.ZodError) {\n        return ApiResponseWrapper.error(\n          ErrorCode.VALIDATION_ERROR,\n          \"Invalid input data\",\n          null,\n          400\n        );\n      }\n      \n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        \"Failed to add AI model\",\n        null,\n        500\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "909e9f1f477604aa2d0b72602e9add740e68a28e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1i0vq4gill = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1i0vq4gill();
cov_1i0vq4gill().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1i0vq4gill().s[1]++;
exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1i0vq4gill().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1i0vq4gill().s[3]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_1i0vq4gill().s[4]++, require("@/types/core"));
const model_manager_1 =
/* istanbul ignore next */
(cov_1i0vq4gill().s[5]++, require("@/lib/ai-models/model-manager"));
const zod_1 =
/* istanbul ignore next */
(cov_1i0vq4gill().s[6]++, require("zod"));
// 定义POST请求体验证schema
const addModelSchema =
/* istanbul ignore next */
(cov_1i0vq4gill().s[7]++, zod_1.z.object({
  name: zod_1.z.string().min(1),
  provider: zod_1.z.string().min(1),
  type: zod_1.z.string().min(1),
  isActive: zod_1.z.boolean().optional().default(true)
}));
/* istanbul ignore next */
cov_1i0vq4gill().s[8]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  validatedQuery
}) => {
  /* istanbul ignore next */
  cov_1i0vq4gill().f[0]++;
  cov_1i0vq4gill().s[9]++;
  try {
    const {
      type,
      provider,
      active
    } =
    /* istanbul ignore next */
    (cov_1i0vq4gill().s[10]++, validatedQuery);
    let models =
    /* istanbul ignore next */
    (cov_1i0vq4gill().s[11]++, model_manager_1.aiModelManager.getAllModels());
    // 优化的单次过滤
    /* istanbul ignore next */
    cov_1i0vq4gill().s[12]++;
    models = models.filter(model => {
      /* istanbul ignore next */
      cov_1i0vq4gill().f[1]++;
      cov_1i0vq4gill().s[13]++;
      return (
      /* istanbul ignore next */
      (cov_1i0vq4gill().b[0][0]++, !type) ||
      /* istanbul ignore next */
      (cov_1i0vq4gill().b[0][1]++, model.type === type)) && (
      /* istanbul ignore next */
      (cov_1i0vq4gill().b[0][2]++, !provider) ||
      /* istanbul ignore next */
      (cov_1i0vq4gill().b[0][3]++, model.provider === provider)) && (
      /* istanbul ignore next */
      (cov_1i0vq4gill().b[0][4]++, active === undefined) ||
      /* istanbul ignore next */
      (cov_1i0vq4gill().b[0][5]++, model.isActive === (active === "true")));
    });
    /* istanbul ignore next */
    cov_1i0vq4gill().s[14]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: models,
      total: models.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1i0vq4gill().s[15]++;
    console.error('Error fetching AI models:', error);
    /* istanbul ignore next */
    cov_1i0vq4gill().s[16]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, "Failed to get AI models", null, 500);
  }
});
/* istanbul ignore next */
cov_1i0vq4gill().s[17]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost({
  body: addModelSchema
}), async (req, {
  validatedBody
}) => {
  /* istanbul ignore next */
  cov_1i0vq4gill().f[2]++;
  cov_1i0vq4gill().s[18]++;
  try {
    // 使用已验证的请求体数据
    const model =
    /* istanbul ignore next */
    (cov_1i0vq4gill().s[19]++, await model_manager_1.aiModelManager.addModel(validatedBody));
    /* istanbul ignore next */
    cov_1i0vq4gill().s[20]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: model,
      message: "Model added successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1i0vq4gill().s[21]++;
    console.error('Error adding AI model:', error);
    // 区分错误类型
    /* istanbul ignore next */
    cov_1i0vq4gill().s[22]++;
    if (error instanceof zod_1.z.ZodError) {
      /* istanbul ignore next */
      cov_1i0vq4gill().b[1][0]++;
      cov_1i0vq4gill().s[23]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, "Invalid input data", null, 400);
    } else
    /* istanbul ignore next */
    {
      cov_1i0vq4gill().b[1][1]++;
    }
    cov_1i0vq4gill().s[24]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, "Failed to add AI model", null, 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,