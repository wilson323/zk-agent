{"file":"E:\\zk-agent\\tests\\api\\routes\\sharing.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\tests\\api\\routes\\sharing.test.ts"],"sourcesContent":["/**\r\n * Sharing API路由错误处理测试\r\n * 测试分享功能相关的各种错误场景\r\n */\r\n\r\nimport { NextRequest } from 'next/server';\r\nimport { GET, POST, PUT, DELETE } from '../../../app/api/sharing/route';\r\n// import { GlobalErrorHandler } from '../../../lib/middleware/global-error-handler';\r\n// import { AgentError, AgentErrorType, ErrorSeverity } from '../../../lib/errors/agent-errors';\r\n\r\n// Mock dependencies\r\njest.mock('../../../lib/services/sharing-service', () => ({\r\n  createShare: jest.fn(),\r\n  getShare: jest.fn(),\r\n  updateShare: jest.fn(),\r\n  deleteShare: jest.fn(),\r\n  validateShareToken: jest.fn(),\r\n  generateShareLink: jest.fn(),\r\n  checkSharePermissions: jest.fn(),\r\n  getShareAnalytics: jest.fn(),\r\n  trackShareAccess: jest.fn(),\r\n  validateShareExpiration: jest.fn()\r\n}));\r\n\r\njest.mock('../../../lib/services/content-service', () => ({\r\n  getContent: jest.fn(),\r\n  validateContentAccess: jest.fn(),\r\n  checkContentOwnership: jest.fn(),\r\n  getContentMetadata: jest.fn(),\r\n  validateContentType: jest.fn()\r\n}));\r\n\r\njest.mock('../../../lib/services/notification-service', () => ({\r\n  sendShareNotification: jest.fn(),\r\n  notifyShareAccess: jest.fn(),\r\n  sendShareExpiredNotification: jest.fn()\r\n}));\r\n\r\njest.mock('../../../lib/auth/session', () => ({\r\n  validateSession: jest.fn(),\r\n  getUserPermissions: jest.fn(),\r\n  checkUserAccess: jest.fn()\r\n}));\r\n\r\njest.mock('../../../lib/storage/share-store', () => ({\r\n  storeShare: jest.fn(),\r\n  getShare: jest.fn(),\r\n  updateShare: jest.fn(),\r\n  deleteShare: jest.fn(),\r\n  listShares: jest.fn(),\r\n  cleanupExpiredShares: jest.fn()\r\n}));\r\n\r\njest.mock('../../../lib/security/access-control', () => ({\r\n  validateShareAccess: jest.fn(),\r\n  checkRateLimit: jest.fn(),\r\n  detectSuspiciousActivity: jest.fn(),\r\n  validateIPAccess: jest.fn()\r\n}));\r\n\r\ndescribe('Sharing API Error Handling', () => {\r\n  let errorHandler: any;\r\n\r\n  beforeEach(() => {\r\n    // errorHandler = GlobalErrorHandler.getInstance();\r\n    errorHandler = { errorCount: 0, circuitBreakerOpen: false };\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('GET /api/sharing - Get Share Information', () => {\r\n    it('should handle invalid share token', async () => {\r\n      const { validateShareToken } = require('../../../lib/services/sharing-service');\r\n      validateShareToken.mockRejectedValue(new Error('Invalid or malformed share token'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=invalid-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.message).toContain('Invalid or malformed share token');\r\n    });\r\n\r\n    it('should handle expired share token', async () => {\r\n      const { validateShareExpiration } = require('../../../lib/services/sharing-service');\r\n      validateShareExpiration.mockRejectedValue(new Error('Share token has expired'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=expired-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(410);\r\n      expect(data.error.code).toBe('EXPIRED');\r\n      expect(data.error.message).toContain('Share token has expired');\r\n    });\r\n\r\n    it('should handle share not found', async () => {\r\n      const { getShare } = require('../../../lib/services/sharing-service');\r\n      getShare.mockRejectedValue(new Error('Share not found'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=nonexistent-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(404);\r\n      expect(data.error.code).toBe('NOT_FOUND');\r\n      expect(data.error.message).toContain('Share not found');\r\n    });\r\n\r\n    it('should handle share access denied', async () => {\r\n      const { checkSharePermissions } = require('../../../lib/services/sharing-service');\r\n      checkSharePermissions.mockRejectedValue(new Error('Access denied: insufficient permissions'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=restricted-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(403);\r\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\r\n      expect(data.error.message).toContain('Access denied');\r\n    });\r\n\r\n    it('should handle password protected share without password', async () => {\r\n      const { getShare } = require('../../../lib/services/sharing-service');\r\n      getShare.mockRejectedValue(new Error('Password required for protected share'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=protected-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(401);\r\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\r\n      expect(data.error.message).toContain('Password required');\r\n    });\r\n\r\n    it('should handle incorrect share password', async () => {\r\n      const { validateShareToken } = require('../../../lib/services/sharing-service');\r\n      validateShareToken.mockRejectedValue(new Error('Incorrect password for protected share'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=protected-token&password=wrong');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(401);\r\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\r\n      expect(data.error.message).toContain('Incorrect password');\r\n    });\r\n\r\n    it('should handle share access limit exceeded', async () => {\r\n      const { trackShareAccess } = require('../../../lib/services/sharing-service');\r\n      trackShareAccess.mockRejectedValue(new Error('Share access limit exceeded'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=limited-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(429);\r\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\r\n      expect(data.error.message).toContain('Share access limit exceeded');\r\n    });\r\n\r\n    it('should handle corrupted share content', async () => {\r\n      const { getContent } = require('../../../lib/services/content-service');\r\n      getContent.mockRejectedValue(new Error('Share content is corrupted or unavailable'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=corrupted-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(422);\r\n      expect(data.error.message).toContain('Share content is corrupted');\r\n    });\r\n\r\n    it('should handle sharing service unavailable', async () => {\r\n      const { getShare } = require('../../../lib/services/sharing-service');\r\n      getShare.mockRejectedValue(new Error('Sharing service temporarily unavailable'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=valid-token');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(503);\r\n      expect(data.error.message).toContain('Sharing service temporarily unavailable');\r\n    });\r\n\r\n    it('should handle missing share token parameter', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/sharing');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.message).toContain('Share token is required');\r\n    });\r\n  });\r\n\r\n  describe('POST /api/sharing - Create Share', () => {\r\n    let validShareData: any;\r\n\r\n    beforeEach(() => {\r\n      validShareData = {\r\n        contentId: 'content-123',\r\n        contentType: 'document',\r\n        permissions: ['read'],\r\n        expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\r\n        password: null,\r\n        maxAccess: 10\r\n      };\r\n    });\r\n\r\n    it('should handle missing content ID', async () => {\r\n      const invalidData = { ...validShareData };\r\n      delete invalidData.contentId;\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(invalidData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.details).toContain('contentId');\r\n    });\r\n\r\n    it('should handle content not found', async () => {\r\n      const { getContent } = require('../../../lib/services/content-service');\r\n      getContent.mockRejectedValue(new Error('Content not found'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ ...validShareData, contentId: 'nonexistent-content' }),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(404);\r\n      expect(data.error.code).toBe('NOT_FOUND');\r\n      expect(data.error.message).toContain('Content not found');\r\n    });\r\n\r\n    it('should handle insufficient permissions to share content', async () => {\r\n      const { checkContentOwnership } = require('../../../lib/services/content-service');\r\n      checkContentOwnership.mockRejectedValue(new Error('Insufficient permissions to share this content'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer limited-user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(403);\r\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\r\n      expect(data.error.message).toContain('Insufficient permissions');\r\n    });\r\n\r\n    it('should handle invalid expiration date', async () => {\r\n      const invalidExpirationData = {\r\n        ...validShareData,\r\n        expiresAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString() // Past date\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(invalidExpirationData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.message).toContain('Invalid expiration date');\r\n    });\r\n\r\n    it('should handle weak password for protected share', async () => {\r\n      const weakPasswordData = {\r\n        ...validShareData,\r\n        password: '123' // Too weak\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(weakPasswordData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.message).toContain('Password too weak');\r\n    });\r\n\r\n    it('should handle share limit exceeded for user', async () => {\r\n      const { createShare } = require('../../../lib/services/sharing-service');\r\n      createShare.mockRejectedValue(new Error('Share limit exceeded for user'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(429);\r\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\r\n      expect(data.error.message).toContain('Share limit exceeded');\r\n    });\r\n\r\n    it('should handle share token generation failure', async () => {\r\n      const { generateShareLink } = require('../../../lib/services/sharing-service');\r\n      generateShareLink.mockRejectedValue(new Error('Failed to generate share token'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.error.message).toContain('Failed to generate share token');\r\n    });\r\n\r\n    it('should handle invalid content type for sharing', async () => {\r\n      const { validateContentType } = require('../../../lib/services/content-service');\r\n      validateContentType.mockRejectedValue(new Error('Content type not supported for sharing'));\r\n\r\n      const invalidContentTypeData = {\r\n        ...validShareData,\r\n        contentType: 'unsupported-type'\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(invalidContentTypeData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(415);\r\n      expect(data.error.message).toContain('Content type not supported');\r\n    });\r\n\r\n    it('should handle share storage failure', async () => {\r\n      const { storeShare } = require('../../../lib/storage/share-store');\r\n      storeShare.mockRejectedValue(new Error('Failed to store share: database error'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.error.message).toContain('Failed to store share');\r\n    });\r\n\r\n    it('should handle notification service failure', async () => {\r\n      const { sendShareNotification } = require('../../../lib/services/notification-service');\r\n      sendShareNotification.mockRejectedValue(new Error('Failed to send share notification'));\r\n\r\n      const notificationData = {\r\n        ...validShareData,\r\n        notifyUsers: ['user@example.com']\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(notificationData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.error.message).toContain('Failed to send share notification');\r\n    });\r\n  });\r\n\r\n  describe('PUT /api/sharing - Update Share', () => {\r\n    it('should handle share not found for update', async () => {\r\n      const { getShare } = require('../../../lib/storage/share-store');\r\n      getShare.mockRejectedValue(new Error('Share not found'));\r\n\r\n      const updateData = {\r\n        shareId: 'nonexistent-share',\r\n        expiresAt: new Date(Date.now() + 48 * 60 * 60 * 1000).toISOString()\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await PUT(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(404);\r\n      expect(data.error.code).toBe('NOT_FOUND');\r\n      expect(data.error.message).toContain('Share not found');\r\n    });\r\n\r\n    it('should handle unauthorized share update', async () => {\r\n      const { checkSharePermissions } = require('../../../lib/services/sharing-service');\r\n      checkSharePermissions.mockRejectedValue(new Error('Unauthorized to update this share'));\r\n\r\n      const updateData = {\r\n        shareId: 'share-123',\r\n        maxAccess: 20\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer other-user-token'\r\n        }\r\n      });\r\n\r\n      const response = await PUT(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(403);\r\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\r\n      expect(data.error.message).toContain('Unauthorized to update');\r\n    });\r\n\r\n    it('should handle invalid share update data', async () => {\r\n      const invalidUpdateData = {\r\n        shareId: 'share-123',\r\n        maxAccess: -1, // Invalid value\r\n        expiresAt: 'invalid-date'\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(invalidUpdateData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await PUT(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.message).toContain('Invalid update data');\r\n    });\r\n\r\n    it('should handle concurrent share update conflict', async () => {\r\n      const { updateShare } = require('../../../lib/services/sharing-service');\r\n      updateShare.mockRejectedValue(new Error('Concurrent update detected: share modified by another user'));\r\n\r\n      const updateData = {\r\n        shareId: 'share-123',\r\n        version: 1,\r\n        maxAccess: 15\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await PUT(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(409);\r\n      expect(data.error.code).toBe('CONFLICT');\r\n      expect(data.error.message).toContain('Concurrent update detected');\r\n    });\r\n\r\n    it('should handle share update storage failure', async () => {\r\n      const { updateShare } = require('../../../lib/storage/share-store');\r\n      updateShare.mockRejectedValue(new Error('Failed to update share: storage error'));\r\n\r\n      const updateData = {\r\n        shareId: 'share-123',\r\n        maxAccess: 15\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await PUT(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.error.message).toContain('Failed to update share');\r\n    });\r\n  });\r\n\r\n  describe('DELETE /api/sharing - Delete Share', () => {\r\n    it('should handle share not found for deletion', async () => {\r\n      const { getShare } = require('../../../lib/storage/share-store');\r\n      getShare.mockRejectedValue(new Error('Share not found'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?shareId=nonexistent-share', {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': 'Bearer user-token' }\r\n      });\r\n\r\n      const response = await DELETE(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(404);\r\n      expect(data.error.code).toBe('NOT_FOUND');\r\n      expect(data.error.message).toContain('Share not found');\r\n    });\r\n\r\n    it('should handle unauthorized share deletion', async () => {\r\n      const { checkSharePermissions } = require('../../../lib/services/sharing-service');\r\n      checkSharePermissions.mockRejectedValue(new Error('Unauthorized to delete this share'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?shareId=share-123', {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': 'Bearer other-user-token' }\r\n      });\r\n\r\n      const response = await DELETE(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(403);\r\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\r\n      expect(data.error.message).toContain('Unauthorized to delete');\r\n    });\r\n\r\n    it('should handle share deletion storage failure', async () => {\r\n      const { deleteShare } = require('../../../lib/storage/share-store');\r\n      deleteShare.mockRejectedValue(new Error('Failed to delete share: storage error'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?shareId=share-123', {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': 'Bearer user-token' }\r\n      });\r\n\r\n      const response = await DELETE(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.error.message).toContain('Failed to delete share');\r\n    });\r\n\r\n    it('should handle missing share ID parameter', async () => {\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': 'Bearer user-token' }\r\n      });\r\n\r\n      const response = await DELETE(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('VALIDATION_ERROR');\r\n      expect(data.error.message).toContain('Share ID is required');\r\n    });\r\n  });\r\n\r\n  describe('Security and Access Control', () => {\r\n    it('should handle malicious share data injection', async () => {\r\n      const maliciousData = {\r\n        contentId: '<script>alert(\"xss\")</script>',\r\n        contentType: 'document',\r\n        permissions: ['read', 'execute'] // Suspicious permission\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(maliciousData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(400);\r\n      expect(data.error.code).toBe('SECURITY_VIOLATION');\r\n      expect(data.error.message).toContain('Malicious data detected');\r\n    });\r\n\r\n    it('should handle suspicious share access patterns', async () => {\r\n      const { detectSuspiciousActivity } = require('../../../lib/security/access-control');\r\n      detectSuspiciousActivity.mockRejectedValue(new Error('Suspicious access pattern detected'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=valid-token', {\r\n        headers: { 'X-Forwarded-For': '192.168.1.100' }\r\n      });\r\n\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(403);\r\n      expect(data.error.code).toBe('SECURITY_VIOLATION');\r\n      expect(data.error.message).toContain('Suspicious access pattern');\r\n    });\r\n\r\n    it('should handle IP address restriction violations', async () => {\r\n      const { validateIPAccess } = require('../../../lib/security/access-control');\r\n      validateIPAccess.mockRejectedValue(new Error('Access denied: IP address not allowed'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing?token=restricted-token', {\r\n        headers: { 'X-Forwarded-For': '10.0.0.1' }\r\n      });\r\n\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(403);\r\n      expect(data.error.code).toBe('ACCESS_DENIED');\r\n      expect(data.error.message).toContain('IP address not allowed');\r\n    });\r\n\r\n    it('should handle share rate limiting', async () => {\r\n      const { checkRateLimit } = require('../../../lib/security/access-control');\r\n      checkRateLimit.mockRejectedValue(new Error('Rate limit exceeded for sharing operations'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          contentId: 'content-123',\r\n          contentType: 'document'\r\n        }),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(429);\r\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\r\n      expect(data.error.message).toContain('Rate limit exceeded');\r\n    });\r\n  });\r\n\r\n  describe('Batch Operations and Analytics', () => {\r\n    it('should handle batch share creation with partial failures', async () => {\r\n      const { createShare } = require('../../../lib/services/sharing-service');\r\n      createShare.mockImplementation((data: any) => {\r\n        if (data.contentId === 'invalid-content') {\r\n          throw new Error('Content not found');\r\n        }\r\n        return Promise.resolve({ shareId: 'share-' + data.contentId });\r\n      });\r\n\r\n      const batchData = {\r\n        shares: [\r\n          { contentId: 'content-1', contentType: 'document' },\r\n          { contentId: 'invalid-content', contentType: 'document' },\r\n          { contentId: 'content-3', contentType: 'document' }\r\n        ]\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing/batch', {\r\n        method: 'POST',\r\n        body: JSON.stringify(batchData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(207); // Multi-status\r\n      expect(data.results).toHaveLength(3);\r\n      expect(data.results[1].error).toBeDefined();\r\n    });\r\n\r\n    it('should handle share analytics calculation failure', async () => {\r\n      const { getShareAnalytics } = require('../../../lib/services/sharing-service');\r\n      getShareAnalytics.mockRejectedValue(new Error('Failed to calculate share analytics'));\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing/analytics?shareId=share-123');\r\n      const response = await GET(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(500);\r\n      expect(data.error.message).toContain('Failed to calculate share analytics');\r\n    });\r\n\r\n    it('should handle large batch operation size limit', async () => {\r\n      const largeBatchData = {\r\n        shares: Array(1001).fill({ contentId: 'content-1', contentType: 'document' })\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing/batch', {\r\n        method: 'POST',\r\n        body: JSON.stringify(largeBatchData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(response.status).toBe(413);\r\n      expect(data.error.code).toBe('PAYLOAD_TOO_LARGE');\r\n      expect(data.error.message).toContain('Batch size exceeds limit');\r\n    });\r\n  });\r\n\r\n  describe('Error Recovery and Monitoring', () => {\r\n    it('should provide sharing operation recovery suggestions', async () => {\r\n      const { createShare } = require('../../../lib/services/sharing-service');\r\n      createShare.mockRejectedValue(new Error('Temporary sharing service outage'));\r\n\r\n      const validShareData = {\r\n        contentId: 'content-123',\r\n        contentType: 'document'\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(data.error.recovery).toBeDefined();\r\n      expect(data.error.recovery.suggestions).toContain('Retry share creation');\r\n    });\r\n\r\n    it('should track sharing operation performance', async () => {\r\n      const { createShare } = require('../../../lib/services/sharing-service');\r\n      createShare.mockRejectedValue(new Error('Test error'));\r\n\r\n      const validShareData = {\r\n        contentId: 'content-123',\r\n        contentType: 'document'\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      await POST(request);\r\n\r\n      const stats = errorHandler.getErrorStats();\r\n      expect(stats.errorCount).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should include sharing context in error responses', async () => {\r\n      const { createShare } = require('../../../lib/services/sharing-service');\r\n      createShare.mockRejectedValue(new Error('Test error'));\r\n\r\n      const validShareData = {\r\n        contentId: 'content-123',\r\n        contentType: 'document'\r\n      };\r\n\r\n      const request = new NextRequest('http://localhost:3000/api/sharing', {\r\n        method: 'POST',\r\n        body: JSON.stringify(validShareData),\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer user-token'\r\n        }\r\n      });\r\n\r\n      const response = await POST(request);\r\n      const data = await response.json();\r\n\r\n      expect(data.error.context).toBeDefined();\r\n      expect(data.error.context.operation).toBe('createShare');\r\n      expect(data.error.context.contentId).toBe('content-123');\r\n    });\r\n  });\r\n});"],"version":3}