de4e1e332e70708f8b157d4c89d6bafb
"use strict";

// @ts-nocheck
/**
 * @file Database Connection
 * @description 数据库连接管理和健康检查
 * @author ZK-Agent Team A
 * @date 2024-12-19
 */
/* istanbul ignore next */
function cov_18prcktstb() {
  var path = "E:\\zk-agent\\lib\\database\\connection.ts";
  var hash = "44c0353fd701acba9c48e666d020d641b4398799";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\connection.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 108
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "4": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "5": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "7": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "8": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 72
        }
      },
      "9": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "10": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "11": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "12": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "13": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "14": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 17
        }
      },
      "15": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 71
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 18
        }
      },
      "21": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 35
        }
      },
      "22": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "24": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 54,
          column: 69
        }
      },
      "25": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "26": {
        start: {
          line: 57,
          column: 38
        },
        end: {
          line: 57,
          column: 79
        }
      },
      "27": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "28": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "29": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "31": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 42
        }
      },
      "32": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 79,
          column: 64
        }
      },
      "33": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "34": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "35": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "36": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "37": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "38": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 65
        }
      },
      "39": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 55
        }
      },
      "40": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 75
        }
      },
      "41": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "42": {
        start: {
          line: 111,
          column: 22
        },
        end: {
          line: 111,
          column: 32
        }
      },
      "43": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "44": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 114,
          column: 64
        }
      },
      "45": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 56
        }
      },
      "46": {
        start: {
          line: 118,
          column: 32
        },
        end: {
          line: 118,
          column: 60
        }
      },
      "47": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 120,
          column: 66
        }
      },
      "48": {
        start: {
          line: 122,
          column: 21
        },
        end: {
          line: 122,
          column: 30
        }
      },
      "49": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "50": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 33
        }
      },
      "51": {
        start: {
          line: 126,
          column: 13
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "52": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 32
        }
      },
      "53": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 138,
          column: 10
        }
      },
      "54": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 62
        }
      },
      "55": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "56": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "57": {
        start: {
          line: 180,
          column: 33
        },
        end: {
          line: 180,
          column: 98
        }
      },
      "58": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "59": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 187,
          column: 14
        }
      },
      "60": {
        start: {
          line: 190,
          column: 35
        },
        end: {
          line: 190,
          column: 82
        }
      },
      "61": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 88
        }
      },
      "62": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 197,
          column: 10
        }
      },
      "63": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 69
        }
      },
      "64": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "65": {
        start: {
          line: 210,
          column: 22
        },
        end: {
          line: 210,
          column: 32
        }
      },
      "66": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "67": {
        start: {
          line: 213,
          column: 26
        },
        end: {
          line: 213,
          column: 31
        }
      },
      "68": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "69": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 54
        }
      },
      "70": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 31
        }
      },
      "71": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 63
        }
      },
      "72": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 222,
          column: 32
        }
      },
      "73": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "74": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 32
        }
      },
      "75": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 64
        }
      },
      "76": {
        start: {
          line: 232,
          column: 24
        },
        end: {
          line: 232,
          column: 46
        }
      },
      "77": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "78": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 244,
          column: 10
        }
      },
      "79": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 266,
          column: 5
        }
      },
      "80": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 10
        }
      },
      "81": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 63
        }
      },
      "82": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "83": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "84": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "85": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 64
        }
      },
      "86": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 76
        }
      },
      "87": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 19
        }
      },
      "88": {
        start: {
          line: 281,
          column: 23
        },
        end: {
          line: 281,
          column: 40
        }
      },
      "89": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 35
        }
      },
      "90": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 63
        }
      },
      "91": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 67
        }
      },
      "92": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 20
        }
      },
      "93": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "94": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "95": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 63
        }
      },
      "96": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 51
        }
      },
      "97": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 40
        }
      },
      "98": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 64
        }
      },
      "99": {
        start: {
          line: 304,
          column: 37
        },
        end: {
          line: 304,
          column: 62
        }
      },
      "100": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 47
        }
      },
      "101": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 62
        }
      },
      "102": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 20
        }
      },
      "103": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "104": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "105": {
        start: {
          line: 321,
          column: 26
        },
        end: {
          line: 321,
          column: 69
        }
      },
      "106": {
        start: {
          line: 322,
          column: 27
        },
        end: {
          line: 322,
          column: 58
        }
      },
      "107": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 346,
          column: 14
        }
      },
      "108": {
        start: {
          line: 349,
          column: 23
        },
        end: {
          line: 349,
          column: 54
        }
      },
      "109": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "110": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 68
        }
      },
      "111": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 20
        }
      },
      "112": {
        start: {
          line: 375,
          column: 22
        },
        end: {
          line: 375,
          column: 32
        }
      },
      "113": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 462,
          column: 5
        }
      },
      "114": {
        start: {
          line: 378,
          column: 33
        },
        end: {
          line: 378,
          column: 98
        }
      },
      "115": {
        start: {
          line: 379,
          column: 29
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "116": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "117": {
        start: {
          line: 385,
          column: 28
        },
        end: {
          line: 385,
          column: 64
        }
      },
      "118": {
        start: {
          line: 386,
          column: 27
        },
        end: {
          line: 386,
          column: 62
        }
      },
      "119": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 391,
          column: 14
        }
      },
      "120": {
        start: {
          line: 390,
          column: 52
        },
        end: {
          line: 390,
          column: 107
        }
      },
      "121": {
        start: {
          line: 394,
          column: 35
        },
        end: {
          line: 394,
          column: 66
        }
      },
      "122": {
        start: {
          line: 395,
          column: 33
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "123": {
        start: {
          line: 401,
          column: 28
        },
        end: {
          line: 401,
          column: 62
        }
      },
      "124": {
        start: {
          line: 402,
          column: 26
        },
        end: {
          line: 402,
          column: 29
        }
      },
      "125": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "126": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 29
        }
      },
      "127": {
        start: {
          line: 406,
          column: 13
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "128": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 29
        }
      },
      "129": {
        start: {
          line: 409,
          column: 13
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "130": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 80
        }
      },
      "131": {
        start: {
          line: 412,
          column: 29
        },
        end: {
          line: 414,
          column: 51
        }
      },
      "132": {
        start: {
          line: 415,
          column: 29
        },
        end: {
          line: 415,
          column: 31
        }
      },
      "133": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "134": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 41
        }
      },
      "135": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "136": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 43
        }
      },
      "137": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "138": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 43
        }
      },
      "139": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "140": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 72
        }
      },
      "141": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "142": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 43
        }
      },
      "143": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 440,
          column: 10
        }
      },
      "144": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 77
        }
      },
      "145": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 461,
          column: 10
        }
      },
      "146": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 482,
          column: 5
        }
      },
      "147": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "148": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 91
        }
      },
      "149": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 25
        }
      },
      "150": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 60
        }
      },
      "151": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 68
        }
      },
      "152": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 20
        }
      },
      "153": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 73
        }
      },
      "154": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 21
        }
      },
      "155": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 498,
          column: 5
        }
      },
      "156": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "157": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 70
        }
      },
      "158": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 493,
          column: 77
        }
      },
      "159": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 75
        }
      },
      "160": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 20
        }
      },
      "161": {
        start: {
          line: 501,
          column: 0
        },
        end: {
          line: 514,
          column: 3
        }
      },
      "162": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 513,
          column: 5
        }
      },
      "163": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 509,
          column: 9
        }
      },
      "164": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 70
        }
      },
      "165": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 44
        }
      },
      "166": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 63
        }
      },
      "167": {
        start: {
          line: 515,
          column: 0
        },
        end: {
          line: 531,
          column: 3
        }
      },
      "168": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 530,
          column: 5
        }
      },
      "169": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 72
        }
      },
      "170": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 525,
          column: 9
        }
      },
      "171": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 70
        }
      },
      "172": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 523,
          column: 44
        }
      },
      "173": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 28
        }
      },
      "174": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 64
        }
      },
      "175": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 24
        }
      },
      "176": {
        start: {
          line: 532,
          column: 0
        },
        end: {
          line: 548,
          column: 3
        }
      },
      "177": {
        start: {
          line: 533,
          column: 4
        },
        end: {
          line: 547,
          column: 5
        }
      },
      "178": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 73
        }
      },
      "179": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 542,
          column: 9
        }
      },
      "180": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 70
        }
      },
      "181": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 44
        }
      },
      "182": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 28
        }
      },
      "183": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 64
        }
      },
      "184": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 546,
          column: 24
        }
      },
      "185": {
        start: {
          line: 550,
          column: 28
        },
        end: {
          line: 550,
          column: 60
        }
      },
      "186": {
        start: {
          line: 551,
          column: 0
        },
        end: {
          line: 551,
          column: 130
        }
      },
      "187": {
        start: {
          line: 551,
          column: 84
        },
        end: {
          line: 551,
          column: 124
        }
      },
      "188": {
        start: {
          line: 552,
          column: 0
        },
        end: {
          line: 552,
          column: 162
        }
      },
      "189": {
        start: {
          line: 552,
          column: 100
        },
        end: {
          line: 552,
          column: 156
        }
      },
      "190": {
        start: {
          line: 553,
          column: 0
        },
        end: {
          line: 553,
          column: 140
        }
      },
      "191": {
        start: {
          line: 553,
          column: 89
        },
        end: {
          line: 553,
          column: 134
        }
      },
      "192": {
        start: {
          line: 555,
          column: 0
        },
        end: {
          line: 559,
          column: 1
        }
      },
      "193": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 558,
          column: 7
        }
      },
      "194": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 83
        }
      },
      "195": {
        start: {
          line: 561,
          column: 0
        },
        end: {
          line: 561,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "getPrismaClient",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 24
          }
        },
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "checkDatabaseConnection",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 38
          }
        },
        loc: {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 79
          },
          end: {
            line: 56,
            column: 80
          }
        },
        loc: {
          start: {
            line: 56,
            column: 97
          },
          end: {
            line: 59,
            column: 13
          }
        },
        line: 56
      },
      "3": {
        name: "performDatabaseHealthCheck",
        decl: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 41
          }
        },
        loc: {
          start: {
            line: 110,
            column: 44
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 110
      },
      "4": {
        name: "checkOptimizationStatus",
        decl: {
          start: {
            line: 177,
            column: 15
          },
          end: {
            line: 177,
            column: 38
          }
        },
        loc: {
          start: {
            line: 177,
            column: 41
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 177
      },
      "5": {
        name: "checkDatabaseQueries",
        decl: {
          start: {
            line: 209,
            column: 15
          },
          end: {
            line: 209,
            column: 35
          }
        },
        loc: {
          start: {
            line: 209,
            column: 38
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 209
      },
      "6": {
        name: "checkMigrationStatus",
        decl: {
          start: {
            line: 250,
            column: 15
          },
          end: {
            line: 250,
            column: 35
          }
        },
        loc: {
          start: {
            line: 250,
            column: 38
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 250
      },
      "7": {
        name: "closeDatabaseConnection",
        decl: {
          start: {
            line: 272,
            column: 15
          },
          end: {
            line: 272,
            column: 38
          }
        },
        loc: {
          start: {
            line: 272,
            column: 41
          },
          end: {
            line: 289,
            column: 1
          }
        },
        line: 272
      },
      "8": {
        name: "reconnectDatabase",
        decl: {
          start: {
            line: 294,
            column: 15
          },
          end: {
            line: 294,
            column: 32
          }
        },
        loc: {
          start: {
            line: 294,
            column: 35
          },
          end: {
            line: 312,
            column: 1
          }
        },
        line: 294
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 304,
            column: 27
          }
        },
        loc: {
          start: {
            line: 304,
            column: 37
          },
          end: {
            line: 304,
            column: 62
          }
        },
        line: 304
      },
      "10": {
        name: "getDatabasePoolStatus",
        decl: {
          start: {
            line: 317,
            column: 15
          },
          end: {
            line: 317,
            column: 36
          }
        },
        loc: {
          start: {
            line: 317,
            column: 39
          },
          end: {
            line: 369,
            column: 1
          }
        },
        line: 317
      },
      "11": {
        name: "getDatabasePerformanceOverview",
        decl: {
          start: {
            line: 374,
            column: 15
          },
          end: {
            line: 374,
            column: 45
          }
        },
        loc: {
          start: {
            line: 374,
            column: 48
          },
          end: {
            line: 463,
            column: 1
          }
        },
        line: 374
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 390,
            column: 43
          },
          end: {
            line: 390,
            column: 44
          }
        },
        loc: {
          start: {
            line: 390,
            column: 52
          },
          end: {
            line: 390,
            column: 107
          }
        },
        line: 390
      },
      "13": {
        name: "triggerDatabaseOptimization",
        decl: {
          start: {
            line: 468,
            column: 15
          },
          end: {
            line: 468,
            column: 42
          }
        },
        loc: {
          start: {
            line: 468,
            column: 45
          },
          end: {
            line: 483,
            column: 1
          }
        },
        line: 468
      },
      "14": {
        name: "getDatabasePerformanceReport",
        decl: {
          start: {
            line: 488,
            column: 15
          },
          end: {
            line: 488,
            column: 43
          }
        },
        loc: {
          start: {
            line: 488,
            column: 46
          },
          end: {
            line: 499,
            column: 1
          }
        },
        line: 488
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 501,
            column: 25
          },
          end: {
            line: 501,
            column: 26
          }
        },
        loc: {
          start: {
            line: 501,
            column: 37
          },
          end: {
            line: 514,
            column: 1
          }
        },
        line: 501
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 515,
            column: 21
          },
          end: {
            line: 515,
            column: 22
          }
        },
        loc: {
          start: {
            line: 515,
            column: 33
          },
          end: {
            line: 531,
            column: 1
          }
        },
        line: 515
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 532,
            column: 22
          },
          end: {
            line: 532,
            column: 23
          }
        },
        loc: {
          start: {
            line: 532,
            column: 34
          },
          end: {
            line: 548,
            column: 1
          }
        },
        line: 532
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 551,
            column: 70
          },
          end: {
            line: 551,
            column: 71
          }
        },
        loc: {
          start: {
            line: 551,
            column: 82
          },
          end: {
            line: 551,
            column: 126
          }
        },
        line: 551
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 552,
            column: 86
          },
          end: {
            line: 552,
            column: 87
          }
        },
        loc: {
          start: {
            line: 552,
            column: 98
          },
          end: {
            line: 552,
            column: 158
          }
        },
        line: 552
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 553,
            column: 75
          },
          end: {
            line: 553,
            column: 76
          }
        },
        loc: {
          start: {
            line: 553,
            column: 87
          },
          end: {
            line: 553,
            column: 136
          }
        },
        line: 553
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 556,
            column: 53
          },
          end: {
            line: 556,
            column: 54
          }
        },
        loc: {
          start: {
            line: 556,
            column: 62
          },
          end: {
            line: 558,
            column: 5
          }
        },
        line: 556
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 22
          }
        }, {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 72
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 58
          },
          end: {
            line: 38,
            column: 84
          }
        }, {
          start: {
            line: 38,
            column: 87
          },
          end: {
            line: 38,
            column: 96
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 48
          }
        }, {
          start: {
            line: 58,
            column: 52
          },
          end: {
            line: 58,
            column: 61
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 42
          }
        }, {
          start: {
            line: 80,
            column: 46
          },
          end: {
            line: 80,
            column: 55
          }
        }],
        line: 80
      },
      "7": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 102,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 59
          }
        }, {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 102,
            column: 86
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 128,
            column: 9
          }
        }],
        line: 123
      },
      "10": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 39
          }
        }, {
          start: {
            line: 123,
            column: 43
          },
          end: {
            line: 123,
            column: 60
          }
        }],
        line: 123
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 17
          },
          end: {
            line: 126,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 17
          },
          end: {
            line: 126,
            column: 35
          }
        }, {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 126,
            column: 66
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 147,
            column: 27
          },
          end: {
            line: 147,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 52
          },
          end: {
            line: 147,
            column: 65
          }
        }, {
          start: {
            line: 147,
            column: 68
          },
          end: {
            line: 147,
            column: 89
          }
        }],
        line: 147
      },
      "14": {
        loc: {
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 180,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 180,
            column: 56
          }
        }, {
          start: {
            line: 180,
            column: 60
          },
          end: {
            line: 180,
            column: 98
          }
        }],
        line: 180
      },
      "15": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "16": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "17": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "18": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "19": {
        loc: {
          start: {
            line: 333,
            column: 33
          },
          end: {
            line: 335,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 26
          },
          end: {
            line: 334,
            column: 114
          }
        }, {
          start: {
            line: 335,
            column: 26
          },
          end: {
            line: 335,
            column: 32
          }
        }],
        line: 333
      },
      "20": {
        loc: {
          start: {
            line: 340,
            column: 45
          },
          end: {
            line: 340,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 45
          },
          end: {
            line: 340,
            column: 68
          }
        }, {
          start: {
            line: 340,
            column: 72
          },
          end: {
            line: 340,
            column: 76
          }
        }],
        line: 340
      },
      "21": {
        loc: {
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 68
          }
        }, {
          start: {
            line: 341,
            column: 72
          },
          end: {
            line: 341,
            column: 76
          }
        }],
        line: 341
      },
      "22": {
        loc: {
          start: {
            line: 342,
            column: 28
          },
          end: {
            line: 342,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 47
          },
          end: {
            line: 342,
            column: 48
          }
        }, {
          start: {
            line: 342,
            column: 51
          },
          end: {
            line: 342,
            column: 52
          }
        }],
        line: 342
      },
      "23": {
        loc: {
          start: {
            line: 343,
            column: 45
          },
          end: {
            line: 343,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 45
          },
          end: {
            line: 343,
            column: 72
          }
        }, {
          start: {
            line: 343,
            column: 76
          },
          end: {
            line: 343,
            column: 83
          }
        }],
        line: 343
      },
      "24": {
        loc: {
          start: {
            line: 344,
            column: 42
          },
          end: {
            line: 344,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 42
          },
          end: {
            line: 344,
            column: 66
          }
        }, {
          start: {
            line: 344,
            column: 70
          },
          end: {
            line: 344,
            column: 77
          }
        }],
        line: 344
      },
      "25": {
        loc: {
          start: {
            line: 358,
            column: 32
          },
          end: {
            line: 358,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 32
          },
          end: {
            line: 358,
            column: 55
          }
        }, {
          start: {
            line: 358,
            column: 59
          },
          end: {
            line: 358,
            column: 63
          }
        }],
        line: 358
      },
      "26": {
        loc: {
          start: {
            line: 359,
            column: 24
          },
          end: {
            line: 359,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 43
          },
          end: {
            line: 359,
            column: 44
          }
        }, {
          start: {
            line: 359,
            column: 47
          },
          end: {
            line: 359,
            column: 48
          }
        }],
        line: 359
      },
      "27": {
        loc: {
          start: {
            line: 360,
            column: 22
          },
          end: {
            line: 360,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 41
          },
          end: {
            line: 360,
            column: 86
          }
        }, {
          start: {
            line: 360,
            column: 89
          },
          end: {
            line: 360,
            column: 90
          }
        }],
        line: 360
      },
      "28": {
        loc: {
          start: {
            line: 360,
            column: 50
          },
          end: {
            line: 360,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 50
          },
          end: {
            line: 360,
            column: 73
          }
        }, {
          start: {
            line: 360,
            column: 77
          },
          end: {
            line: 360,
            column: 81
          }
        }],
        line: 360
      },
      "29": {
        loc: {
          start: {
            line: 378,
            column: 33
          },
          end: {
            line: 378,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 33
          },
          end: {
            line: 378,
            column: 56
          }
        }, {
          start: {
            line: 378,
            column: 60
          },
          end: {
            line: 378,
            column: 98
          }
        }],
        line: 378
      },
      "30": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 392,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 392,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "31": {
        loc: {
          start: {
            line: 390,
            column: 52
          },
          end: {
            line: 390,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 52
          },
          end: {
            line: 390,
            column: 78
          }
        }, {
          start: {
            line: 390,
            column: 82
          },
          end: {
            line: 390,
            column: 107
          }
        }],
        line: 390
      },
      "32": {
        loc: {
          start: {
            line: 397,
            column: 30
          },
          end: {
            line: 397,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 397,
            column: 59
          },
          end: {
            line: 397,
            column: 117
          }
        }, {
          start: {
            line: 397,
            column: 120
          },
          end: {
            line: 397,
            column: 122
          }
        }],
        line: 397
      },
      "33": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: 406,
            column: 13
          },
          end: {
            line: 411,
            column: 9
          }
        }],
        line: 403
      },
      "34": {
        loc: {
          start: {
            line: 406,
            column: 13
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 13
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: 409,
            column: 13
          },
          end: {
            line: 411,
            column: 9
          }
        }],
        line: 406
      },
      "35": {
        loc: {
          start: {
            line: 409,
            column: 13
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 13
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "36": {
        loc: {
          start: {
            line: 412,
            column: 29
          },
          end: {
            line: 414,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 49
          },
          end: {
            line: 412,
            column: 60
          }
        }, {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 414,
            column: 51
          }
        }],
        line: 412
      },
      "37": {
        loc: {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 414,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 413,
            column: 32
          },
          end: {
            line: 413,
            column: 38
          }
        }, {
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 414,
            column: 51
          }
        }],
        line: 413
      },
      "38": {
        loc: {
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 414,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 414,
            column: 36
          },
          end: {
            line: 414,
            column: 42
          }
        }, {
          start: {
            line: 414,
            column: 45
          },
          end: {
            line: 414,
            column: 51
          }
        }],
        line: 414
      },
      "39": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "40": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "41": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "42": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "43": {
        loc: {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "44": {
        loc: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "45": {
        loc: {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 470,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 470,
            column: 36
          }
        }, {
          start: {
            line: 470,
            column: 40
          },
          end: {
            line: 470,
            column: 79
          }
        }],
        line: 470
      },
      "46": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "47": {
        loc: {
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        }, {
          start: {
            line: 507,
            column: 13
          },
          end: {
            line: 509,
            column: 9
          }
        }],
        line: 504
      },
      "48": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        }, {
          start: {
            line: 522,
            column: 13
          },
          end: {
            line: 525,
            column: 9
          }
        }],
        line: 519
      },
      "49": {
        loc: {
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        }, {
          start: {
            line: 539,
            column: 13
          },
          end: {
            line: 542,
            column: 9
          }
        }],
        line: 536
      },
      "50": {
        loc: {
          start: {
            line: 555,
            column: 0
          },
          end: {
            line: 559,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 555,
            column: 0
          },
          end: {
            line: 559,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 555
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\connection.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\connection.ts"],
      sourcesContent: ["// @ts-nocheck\r\n/**\r\n * @file Database Connection\r\n * @description \u6570\u636E\u5E93\u8FDE\u63A5\u7BA1\u7406\u548C\u5065\u5EB7\u68C0\u67E5\r\n * @author ZK-Agent Team A\r\n * @date 2024-12-19\r\n */\r\n\r\nimport { PrismaClient } from '@prisma/client'\r\n\r\n// \u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\r\nexport interface DatabaseStatus {\r\n  connected: boolean\r\n  message: string\r\n  timestamp: Date\r\n  version?: string\r\n  latency?: number\r\n  error?: string\r\n  stats?: {\r\n    totalQueries: number\r\n    failedQueries: number\r\n    avgLatency: number\r\n    reconnectAttempts: number\r\n  }\r\n}\r\n\r\n// \u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\u7ED3\u679C\r\nexport interface DatabaseHealthCheck {\r\n  status: 'healthy' | 'unhealthy' | 'degraded'\r\n  checks: {\r\n    connection: DatabaseStatus\r\n    queries: {\r\n      read: boolean\r\n      write: boolean\r\n      latency: number\r\n    }\r\n    migrations: {\r\n      pending: number\r\n      applied: number\r\n    }\r\n    optimization: {\r\n      enabled: boolean\r\n      componentsActive: number\r\n      lastOptimization: Date | null\r\n      recommendations: number\r\n    }\r\n  }\r\n  timestamp: Date\r\n}\r\n\r\n// \u6570\u636E\u5E93\u6027\u80FD\u6982\u89C8\r\nexport interface DatabasePerformanceOverview {\r\n  monitoring: {\r\n    isActive: boolean\r\n    metricsCount: number\r\n    alertsCount: number\r\n  }\r\n  optimization: {\r\n    isActive: boolean\r\n    componentsStatus: Record<string, any>\r\n    recommendations: any[]\r\n  }\r\n  health: {\r\n    score: number\r\n    status: 'excellent' | 'good' | 'fair' | 'poor'\r\n    issues: string[]\r\n  }\r\n  timestamp: Date\r\n}\r\n\r\nimport { enhancedDb, EnhancedDatabaseConnection, ConnectionState } from './enhanced-connection'\r\nimport { databaseMonitor, DatabasePerformanceUtils } from './index'\r\n\r\n// \u5168\u5C40 Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\r\nlet prisma: PrismaClient | null = null\r\n\r\n/**\r\n * \u83B7\u53D6 Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\r\n * @returns {PrismaClient} Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\r\n */\r\nexport function getPrismaClient(): PrismaClient {\r\n  // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u5BA2\u6237\u7AEF\r\n  const enhancedClient = enhancedDb.getClient()\r\n  if (enhancedClient && enhancedDb.isConnected()) {\r\n    return enhancedClient\r\n  }\r\n\r\n  // \u56DE\u9000\u5230\u4F20\u7EDF\u8FDE\u63A5\u65B9\u5F0F\r\n  if (!prisma) {\r\n    prisma = new PrismaClient({\r\n      log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\r\n      errorFormat: 'pretty',\r\n    })\r\n  }\r\n  return prisma\r\n}\r\n\r\n// \u83B7\u53D6Prisma\u5BA2\u6237\u7AEF\u5B9E\u4F8B\r\nexport const prisma = getPrismaClient()\r\n\r\n/**\r\n * \u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\r\n * @returns {Promise<DatabaseStatus>} \u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\r\n */\r\nexport async function checkDatabaseConnection(): Promise<DatabaseStatus> {\r\n  try {\r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\r\n    if (enhancedDb.isConnected()) {\r\n      const stats = enhancedDb.getStats()\r\n      \r\n      // \u6267\u884C\u5065\u5EB7\u68C0\u67E5\u67E5\u8BE2\r\n      const result = await enhancedDb.executeQuery(async (client) => {\r\n        const versionResult = await client.$queryRaw<Array<{ version: string }>>`SELECT version()`\r\n        return versionResult[0]?.version || 'Unknown'\r\n      })\r\n      \r\n      return {\r\n        connected: true,\r\n        message: `Enhanced database connection active (uptime: ${Math.round(stats.uptime / 1000)}s)`,\r\n        version: result,\r\n        timestamp: new Date(),\r\n        stats: {\r\n          totalQueries: stats.totalQueries,\r\n          failedQueries: stats.failedQueries,\r\n          avgLatency: Math.round(stats.avgLatency),\r\n          reconnectAttempts: stats.reconnectAttempts\r\n        }\r\n      }\r\n    }\r\n    \r\n    // \u56DE\u9000\u5230\u4F20\u7EDF\u8FDE\u63A5\u68C0\u67E5\r\n    const client = getPrismaClient()\r\n    await client.$connect()\r\n    \r\n    // \u6267\u884C\u7B80\u5355\u67E5\u8BE2\u6D4B\u8BD5\u8FDE\u63A5\r\n    await client.$queryRaw`SELECT 1`\r\n    \r\n    // \u83B7\u53D6\u6570\u636E\u5E93\u7248\u672C\u4FE1\u606F\r\n    const result = await client.$queryRaw<Array<{ version: string }>>`SELECT version()`\r\n    const version = result[0]?.version || 'Unknown'\r\n    \r\n    return {\r\n      connected: true,\r\n      message: 'Database connection successful (fallback mode)',\r\n      version,\r\n      timestamp: new Date()\r\n    }\r\n  } catch (error) {\r\n    console.error('Database connection failed:', error)\r\n    \r\n    // \u5982\u679C\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u672A\u8FDE\u63A5\uFF0C\u5C1D\u8BD5\u8FDE\u63A5\r\n    if (!enhancedDb.isConnected()) {\r\n      try {\r\n        await enhancedDb.connect()\r\n        return await checkDatabaseConnection() // \u9012\u5F52\u91CD\u8BD5\r\n      } catch (connectError) {\r\n        console.error('Enhanced connection failed:', connectError)\r\n      }\r\n    }\r\n    \r\n    return {\r\n      connected: false,\r\n      message: error instanceof Error ? error.message : 'Unknown database error',\r\n      timestamp: new Date()\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \u6267\u884C\u5B8C\u6574\u7684\u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\r\n */\r\nexport async function performDatabaseHealthCheck(): Promise<DatabaseHealthCheck> {\r\n  const timestamp = new Date()\r\n  \r\n  try {\r\n    // \u68C0\u67E5\u57FA\u672C\u8FDE\u63A5\r\n    const connectionStatus = await checkDatabaseConnection()\r\n    \r\n    // \u68C0\u67E5\u8BFB\u5199\u64CD\u4F5C\r\n    const queryChecks = await checkDatabaseQueries()\r\n    \r\n    // \u68C0\u67E5\u8FC1\u79FB\u72B6\u6001\r\n    const migrationChecks = await checkMigrationStatus()\r\n    \r\n    // \u68C0\u67E5\u6027\u80FD\u4F18\u5316\u72B6\u6001\r\n    const optimizationStatus = await checkOptimizationStatus()\r\n    \r\n    // \u786E\u5B9A\u6574\u4F53\u5065\u5EB7\u72B6\u6001\r\n    let status: DatabaseHealthCheck['status'] = 'healthy'\r\n    \r\n    if (!connectionStatus.connected || !queryChecks.read) {\r\n      status = 'unhealthy'\r\n    } else if (!queryChecks.write || migrationChecks.pending > 0) {\r\n      status = 'degraded'\r\n    }\r\n    \r\n    return {\r\n      status,\r\n      checks: {\r\n        connection: connectionStatus,\r\n        queries: queryChecks,\r\n        migrations: migrationChecks\r\n      },\r\n      optimization: optimizationStatus,\r\n      timestamp\r\n    }\r\n  } catch (error) {\r\n    console.error('Database health check failed:', error)\r\n    \r\n    return {\r\n      status: 'unhealthy',\r\n      checks: {\r\n        connection: {\r\n          connected: false,\r\n          error: error instanceof Error ? error.message : 'Health check failed',\r\n          timestamp\r\n        },\r\n        queries: {\r\n          read: false,\r\n          write: false,\r\n          latency: 0\r\n        },\r\n        migrations: {\r\n          pending: 0,\r\n          applied: 0\r\n        }\r\n      },\r\n      optimization: {\r\n        enabled: false,\r\n        componentsActive: 0,\r\n        lastOptimization: null,\r\n        recommendations: []\r\n      },\r\n      timestamp\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u6570\u636E\u5E93\u67E5\u8BE2\u64CD\u4F5C\r\n */\r\n/**\r\n * \u68C0\u67E5\u6027\u80FD\u4F18\u5316\u72B6\u6001\r\n * @returns {Promise<object>} \u6027\u80FD\u4F18\u5316\u72B6\u6001\u4FE1\u606F\r\n */\r\nasync function checkOptimizationStatus(): Promise<{\r\n  enabled: boolean\r\n  componentsActive: number\r\n  lastOptimization: Date | null\r\n  recommendations: any[]\r\n}> {\r\n  try {\r\n    // \u68C0\u67E5\u6570\u636E\u5E93\u76D1\u63A7\u5668\u662F\u5426\u542F\u7528\r\n    const monitoringActive = databaseMonitor && databaseMonitor.isMonitoring()\r\n    \r\n    if (!monitoringActive) {\r\n      return {\r\n        enabled: false,\r\n        componentsActive: 0,\r\n        lastOptimization: null,\r\n        recommendations: []\r\n      }\r\n    }\r\n    \r\n    // \u83B7\u53D6\u4F18\u5316\u72B6\u6001\r\n    const optimizationStatus = databaseMonitor.getOptimizationStatus()\r\n    const recommendations = databaseMonitor.getOptimizationRecommendations()\r\n    \r\n    return {\r\n      enabled: true,\r\n      componentsActive: Object.values(optimizationStatus.components).filter(Boolean).length,\r\n      lastOptimization: optimizationStatus.lastOptimization,\r\n      recommendations: recommendations.slice(0, 5) // \u9650\u5236\u8FD4\u56DE\u524D5\u4E2A\u5EFA\u8BAE\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to check optimization status:', error)\r\n    return {\r\n      enabled: false,\r\n      componentsActive: 0,\r\n      lastOptimization: null,\r\n      recommendations: []\r\n    }\r\n  }\r\n}\r\n\r\nasync function checkDatabaseQueries(): Promise<{\r\n  read: boolean\r\n  write: boolean\r\n  latency: number\r\n}> {\r\n  const startTime = Date.now()\r\n  \r\n  try {\r\n    // \u6D4B\u8BD5\u8BFB\u64CD\u4F5C\r\n    let readSuccess = false\r\n    try {\r\n      await prisma.$queryRaw`SELECT 1 as test`\r\n      readSuccess = true\r\n    } catch (error) {\r\n      console.error('Database read test failed:', error)\r\n    }\r\n    \r\n    // \u6D4B\u8BD5\u5199\u64CD\u4F5C\uFF08\u5982\u679C\u6709\u6D4B\u8BD5\u8868\u7684\u8BDD\uFF09\r\n    let writeSuccess = false\r\n    try {\r\n      // \u5C1D\u8BD5\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u8BB0\u5F55\u6765\u6D4B\u8BD5\u5199\u64CD\u4F5C\r\n      // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6570\u636E\u5E93schema\u6765\u8C03\u6574\r\n      // \u6682\u65F6\u5047\u8BBE\u5199\u64CD\u4F5C\u6210\u529F\r\n      writeSuccess = true\r\n    } catch (error) {\r\n      console.error('Database write test failed:', error)\r\n    }\r\n    \r\n    const latency = Date.now() - startTime\r\n    \r\n    return {\r\n      read: readSuccess,\r\n      write: writeSuccess,\r\n      latency\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      read: false,\r\n      write: false,\r\n      latency: Date.now() - startTime\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u6570\u636E\u5E93\u8FC1\u79FB\u72B6\u6001\r\n */\r\nasync function checkMigrationStatus(): Promise<{\r\n  pending: number\r\n  applied: number\r\n}> {\r\n  try {\r\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u8FC1\u79FB\u7BA1\u7406\u65B9\u5F0F\u6765\u5B9E\u73B0\r\n    // Prisma\u7684\u8FC1\u79FB\u72B6\u6001\u68C0\u67E5\r\n    \r\n    // \u6682\u65F6\u8FD4\u56DE\u9ED8\u8BA4\u503C\r\n    return {\r\n      pending: 0,\r\n      applied: 0\r\n    }\r\n  } catch (error) {\r\n    console.error('Migration status check failed:', error)\r\n    return {\r\n      pending: 0,\r\n      applied: 0\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \u5173\u95ED\u6570\u636E\u5E93\u8FDE\u63A5\r\n * @returns {Promise<void>}\r\n */\r\nexport async function closeDatabaseConnection(): Promise<void> {\r\n  try {\r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\r\n    if (enhancedDb.isConnected()) {\r\n      await enhancedDb.disconnect()\r\n      console.log('Enhanced database connection closed successfully')\r\n      return\r\n    }\r\n    \r\n    // \u56DE\u9000\u5230\u4F20\u7EDF\u65B9\u5F0F\r\n    const client = getPrismaClient()\r\n    await client.$disconnect()\r\n    console.log('Database connection closed successfully')\r\n  } catch (error) {\r\n    console.error('Error closing database connection:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * \u91CD\u65B0\u8FDE\u63A5\u6570\u636E\u5E93\r\n * @returns {Promise<DatabaseStatus>}\r\n */\r\nexport async function reconnectDatabase(): Promise<DatabaseStatus> {\r\n  try {\r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\r\n    if (enhancedDb.getState() !== ConnectionState.DISCONNECTED) {\r\n      await enhancedDb.reconnect()\r\n      return await checkDatabaseConnection()\r\n    }\r\n    \r\n    // \u56DE\u9000\u5230\u4F20\u7EDF\u91CD\u8FDE\u65B9\u5F0F\r\n    await closeDatabaseConnection()\r\n    \r\n    // \u7B49\u5F85\u4E00\u5C0F\u6BB5\u65F6\u95F4\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n    \r\n    // \u91CD\u65B0\u68C0\u67E5\u8FDE\u63A5\r\n    return await checkDatabaseConnection()\r\n  } catch (error) {\r\n    console.error('Database reconnection failed:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u72B6\u6001\r\n * @returns {Promise<any>} \u8FDE\u63A5\u6C60\u72B6\u6001\u4FE1\u606F\r\n */\r\nexport async function getDatabasePoolStatus(): Promise<any> {\r\n  try {\r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u7EDF\u8BA1\u4FE1\u606F\r\n    if (enhancedDb.isConnected()) {\r\n      const stats = enhancedDb.getStats()\r\n      const status = await checkDatabaseConnection()\r\n      \r\n      return {\r\n        connected: status.connected,\r\n        timestamp: status.timestamp,\r\n        version: status.version,\r\n        enhanced: true,\r\n        connectionState: stats.state,\r\n        uptime: Math.round(stats.uptime / 1000),\r\n        performance: {\r\n          totalQueries: stats.totalQueries,\r\n          failedQueries: stats.failedQueries,\r\n          successRate: stats.totalQueries > 0 \r\n            ? ((stats.totalQueries - stats.failedQueries) / stats.totalQueries * 100).toFixed(2) + '%'\r\n            : '100%',\r\n          avgLatency: Math.round(stats.avgLatency),\r\n          reconnectAttempts: stats.reconnectAttempts\r\n        },\r\n        pool: {\r\n          maxConnections: parseInt(process.env.DB_POOL_MAX || '50'),\r\n          minConnections: parseInt(process.env.DB_POOL_MIN || '10'),\r\n          active: status.connected ? 1 : 0,\r\n          acquireTimeout: parseInt(process.env.DB_POOL_ACQUIRE || '60000'),\r\n          idleTimeout: parseInt(process.env.DB_POOL_IDLE || '20000')\r\n        }\r\n      }\r\n    }\r\n    \r\n    // \u56DE\u9000\u5230\u4F20\u7EDF\u72B6\u6001\u68C0\u67E5\r\n    const status = await checkDatabaseConnection()\r\n    \r\n    return {\r\n      connected: status.connected,\r\n      timestamp: status.timestamp,\r\n      version: status.version,\r\n      latency: status.latency,\r\n      enhanced: false,\r\n      // \u6A21\u62DF\u8FDE\u63A5\u6C60\u4FE1\u606F\uFF08\u5B9E\u9645\u9700\u8981\u6839\u636E\u5177\u4F53\u6570\u636E\u5E93\u9A71\u52A8\u83B7\u53D6\uFF09\r\n      pool: {\r\n        total: parseInt(process.env.DB_POOL_MAX || '10'),\r\n        active: status.connected ? 1 : 0,\r\n        idle: status.connected ? parseInt(process.env.DB_POOL_MAX || '10') - 1 : 0,\r\n        waiting: 0\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to get database pool status:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u6570\u636E\u5E93\u6027\u80FD\u6982\u89C8\r\n * @returns {Promise<DatabasePerformanceOverview>} \u6570\u636E\u5E93\u6027\u80FD\u6982\u89C8\u4FE1\u606F\r\n */\r\nexport async function getDatabasePerformanceOverview(): Promise<DatabasePerformanceOverview> {\r\n  const timestamp = new Date()\r\n  \r\n  try {\r\n    // \u83B7\u53D6\u76D1\u63A7\u72B6\u6001\r\n    const monitoringActive = databaseMonitor && databaseMonitor.isMonitoring()\r\n    let monitoringInfo = {\r\n      isActive: false,\r\n      metricsCount: 0,\r\n      alertsCount: 0\r\n    }\r\n    \r\n    if (monitoringActive) {\r\n      const metrics = databaseMonitor.getMetrics()\r\n      const alerts = databaseMonitor.getAlerts()\r\n      \r\n      monitoringInfo = {\r\n        isActive: true,\r\n        metricsCount: metrics.length,\r\n        alertsCount: alerts.filter(alert => alert.level === 'CRITICAL' || alert.level === 'WARNING').length\r\n      }\r\n    }\r\n    \r\n    // \u83B7\u53D6\u4F18\u5316\u72B6\u6001\r\n    const optimizationStatus = await checkOptimizationStatus()\r\n    const optimizationInfo = {\r\n      isActive: optimizationStatus.enabled,\r\n      componentsStatus: optimizationStatus.enabled ? databaseMonitor.getOptimizationStatus().components : {},\r\n      recommendations: optimizationStatus.recommendations\r\n    }\r\n    \r\n    // \u8BA1\u7B97\u5065\u5EB7\u8BC4\u5206\r\n    const healthCheck = await performDatabaseHealthCheck()\r\n    let healthScore = 100\r\n    \r\n    if (healthCheck.status === 'unhealthy') {\r\n      healthScore = 30\r\n    } else if (healthCheck.status === 'degraded') {\r\n      healthScore = 70\r\n    } else if (monitoringInfo.alertsCount > 0) {\r\n      healthScore = Math.max(50, 100 - (monitoringInfo.alertsCount * 10))\r\n    }\r\n    \r\n    const healthStatus = healthScore >= 90 ? 'excellent' : \r\n                        healthScore >= 70 ? 'good' : \r\n                        healthScore >= 50 ? 'fair' : 'poor'\r\n    \r\n    const healthIssues: string[] = []\r\n    if (!healthCheck.checks.connection.connected) {\r\n      healthIssues.push('\u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25')\r\n    }\r\n    if (!healthCheck.checks.queries.read) {\r\n      healthIssues.push('\u6570\u636E\u5E93\u8BFB\u53D6\u64CD\u4F5C\u5931\u8D25')\r\n    }\r\n    if (!healthCheck.checks.queries.write) {\r\n      healthIssues.push('\u6570\u636E\u5E93\u5199\u5165\u64CD\u4F5C\u5931\u8D25')\r\n    }\r\n    if (monitoringInfo.alertsCount > 0) {\r\n      healthIssues.push(`\u5B58\u5728 ${monitoringInfo.alertsCount} \u4E2A\u6D3B\u8DC3\u544A\u8B66`)\r\n    }\r\n    if (!optimizationStatus.enabled) {\r\n      healthIssues.push('\u6027\u80FD\u4F18\u5316\u7EC4\u4EF6\u672A\u542F\u7528')\r\n    }\r\n    \r\n    return {\r\n      monitoring: monitoringInfo,\r\n      optimization: optimizationInfo,\r\n      health: {\r\n        score: healthScore,\r\n        status: healthStatus,\r\n        issues: healthIssues\r\n      },\r\n      timestamp\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to get database performance overview:', error)\r\n    \r\n    return {\r\n      monitoring: {\r\n        isActive: false,\r\n        metricsCount: 0,\r\n        alertsCount: 0\r\n      },\r\n      optimization: {\r\n        isActive: false,\r\n        componentsStatus: {},\r\n        recommendations: []\r\n      },\r\n      health: {\r\n        score: 0,\r\n        status: 'poor',\r\n        issues: ['\u65E0\u6CD5\u83B7\u53D6\u6027\u80FD\u6982\u89C8\u4FE1\u606F']\r\n      },\r\n      timestamp\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \u89E6\u53D1\u6570\u636E\u5E93\u6027\u80FD\u4F18\u5316\r\n * @returns {Promise<boolean>} \u4F18\u5316\u662F\u5426\u6210\u529F\u89E6\u53D1\r\n */\r\nexport async function triggerDatabaseOptimization(): Promise<boolean> {\r\n  try {\r\n    if (!databaseMonitor || !databaseMonitor.isMonitoring()) {\r\n      console.warn('Database monitoring is not active, cannot trigger optimization')\r\n      return false\r\n    }\r\n    \r\n    // \u89E6\u53D1\u4F18\u5316\r\n    await databaseMonitor.triggerOptimization()\r\n    console.log('Database optimization triggered successfully')\r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to trigger database optimization:', error)\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u6570\u636E\u5E93\u6027\u80FD\u62A5\u544A\r\n * @returns {Promise<any>} \u6027\u80FD\u62A5\u544A\r\n */\r\nexport async function getDatabasePerformanceReport(): Promise<any> {\r\n  try {\r\n    if (!DatabasePerformanceUtils) {\r\n      throw new Error('DatabasePerformanceUtils not available')\r\n    }\r\n    \r\n    return await DatabasePerformanceUtils.getPerformanceReport()\r\n  } catch (error) {\r\n    console.error('Failed to get database performance report:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n// \u8FDB\u7A0B\u9000\u51FA\u65F6\u6E05\u7406\u8FDE\u63A5\r\nprocess.on('beforeExit', async () => {\r\n  try {\r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\r\n    if (enhancedDb.isConnected()) {\r\n      await enhancedDb.gracefulShutdown()\r\n    } else {\r\n      await closeDatabaseConnection()\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during database cleanup:', error)\r\n  }\r\n})\r\n\r\nprocess.on('SIGINT', async () => {\r\n  try {\r\n    console.log('Received SIGINT, initiating graceful shutdown...')\r\n    \r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\r\n    if (enhancedDb.isConnected()) {\r\n      await enhancedDb.gracefulShutdown()\r\n    } else {\r\n      await closeDatabaseConnection()\r\n      process.exit(0)\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during graceful shutdown:', error)\r\n    process.exit(1)\r\n  }\r\n})\r\n\r\nprocess.on('SIGTERM', async () => {\r\n  try {\r\n    console.log('Received SIGTERM, initiating graceful shutdown...')\r\n    \r\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\r\n    if (enhancedDb.isConnected()) {\r\n      await enhancedDb.gracefulShutdown()\r\n    } else {\r\n      await closeDatabaseConnection()\r\n      process.exit(0)\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during graceful shutdown:', error)\r\n    process.exit(1)\r\n  }\r\n})\r\n\r\n// \u5BFC\u51FA\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u5B9E\u4F8B\u548C\u76F8\u5173\u529F\u80FD\r\nexport { \r\n  enhancedDb, \r\n  EnhancedDatabaseConnection, \r\n  ConnectionState,\r\n  // connectDatabase,\r\n  // disconnectDatabase,\r\n  // getDatabaseStats,\r\n  // isDatabaseConnected,\r\n  // executeQuery\r\n} from './enhanced-connection'\r\n\r\n// \u521D\u59CB\u5316\u589E\u5F3A\u6570\u636E\u5E93\u8FDE\u63A5\uFF08\u5982\u679C\u73AF\u5883\u53D8\u91CF\u542F\u7528\uFF09\r\nif (process.env.ENHANCED_DB_CONNECTION === 'true') {\r\n  enhancedDb.connect().catch(error => {\r\n    console.error('Failed to initialize enhanced database connection:', error)\r\n  })\r\n}\r\n\r\n// \u9ED8\u8BA4\u5BFC\u51FAPrisma\u5BA2\u6237\u7AEF\r\nexport default prisma\r\n\r\n// \u5BFC\u51FA\u7C7B\u578B\r\nexport type { DatabaseStatus, DatabaseHealthCheck }"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "44c0353fd701acba9c48e666d020d641b4398799"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18prcktstb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18prcktstb();
cov_18prcktstb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18prcktstb().s[1]++;
exports.ConnectionState = exports.EnhancedDatabaseConnection = exports.enhancedDb = exports.prisma = void 0;
/* istanbul ignore next */
cov_18prcktstb().s[2]++;
exports.getPrismaClient = getPrismaClient;
/* istanbul ignore next */
cov_18prcktstb().s[3]++;
exports.checkDatabaseConnection = checkDatabaseConnection;
/* istanbul ignore next */
cov_18prcktstb().s[4]++;
exports.performDatabaseHealthCheck = performDatabaseHealthCheck;
/* istanbul ignore next */
cov_18prcktstb().s[5]++;
exports.closeDatabaseConnection = closeDatabaseConnection;
/* istanbul ignore next */
cov_18prcktstb().s[6]++;
exports.reconnectDatabase = reconnectDatabase;
/* istanbul ignore next */
cov_18prcktstb().s[7]++;
exports.getDatabasePoolStatus = getDatabasePoolStatus;
/* istanbul ignore next */
cov_18prcktstb().s[8]++;
exports.getDatabasePerformanceOverview = getDatabasePerformanceOverview;
/* istanbul ignore next */
cov_18prcktstb().s[9]++;
exports.triggerDatabaseOptimization = triggerDatabaseOptimization;
/* istanbul ignore next */
cov_18prcktstb().s[10]++;
exports.getDatabasePerformanceReport = getDatabasePerformanceReport;
const client_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[11]++, require("@prisma/client"));
const enhanced_connection_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[12]++, require("./enhanced-connection"));
const index_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[13]++, require("./index"));
// 全局 Prisma 客户端实例
let prisma =
/* istanbul ignore next */
(cov_18prcktstb().s[14]++, null);
/**
 * 获取 Prisma 客户端实例
 * @returns {PrismaClient} Prisma 客户端实例
 */
function getPrismaClient() {
  /* istanbul ignore next */
  cov_18prcktstb().f[0]++;
  // 优先使用增强连接管理器的客户端
  const enhancedClient =
  /* istanbul ignore next */
  (cov_18prcktstb().s[15]++, enhanced_connection_1.enhancedDb.getClient());
  /* istanbul ignore next */
  cov_18prcktstb().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_18prcktstb().b[1][0]++, enhancedClient) &&
  /* istanbul ignore next */
  (cov_18prcktstb().b[1][1]++, enhanced_connection_1.enhancedDb.isConnected())) {
    /* istanbul ignore next */
    cov_18prcktstb().b[0][0]++;
    cov_18prcktstb().s[17]++;
    return enhancedClient;
  } else
  /* istanbul ignore next */
  {
    cov_18prcktstb().b[0][1]++;
  }
  // 回退到传统连接方式
  cov_18prcktstb().s[18]++;
  if (!prisma) {
    /* istanbul ignore next */
    cov_18prcktstb().b[2][0]++;
    cov_18prcktstb().s[19]++;
    prisma = new client_1.PrismaClient({
      log: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[3][0]++, ['query', 'error', 'warn']) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[3][1]++, ['error']),
      errorFormat: 'pretty'
    });
  } else
  /* istanbul ignore next */
  {
    cov_18prcktstb().b[2][1]++;
  }
  cov_18prcktstb().s[20]++;
  return prisma;
}
// 获取Prisma客户端实例
/* istanbul ignore next */
cov_18prcktstb().s[21]++;
exports.prisma = getPrismaClient();
/**
 * 检查数据库连接状态
 * @returns {Promise<DatabaseStatus>} 数据库连接状态
 */
async function checkDatabaseConnection() {
  /* istanbul ignore next */
  cov_18prcktstb().f[1]++;
  cov_18prcktstb().s[22]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[23]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[4][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_18prcktstb().s[24]++, enhanced_connection_1.enhancedDb.getStats());
      // 执行健康检查查询
      const result =
      /* istanbul ignore next */
      (cov_18prcktstb().s[25]++, await enhanced_connection_1.enhancedDb.executeQuery(async client => {
        /* istanbul ignore next */
        cov_18prcktstb().f[2]++;
        const versionResult =
        /* istanbul ignore next */
        (cov_18prcktstb().s[26]++, await client.$queryRaw`SELECT version()`);
        /* istanbul ignore next */
        cov_18prcktstb().s[27]++;
        return /* istanbul ignore next */(cov_18prcktstb().b[5][0]++, versionResult[0]?.version) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[5][1]++, 'Unknown');
      }));
      /* istanbul ignore next */
      cov_18prcktstb().s[28]++;
      return {
        connected: true,
        message: `Enhanced database connection active (uptime: ${Math.round(stats.uptime / 1000)}s)`,
        version: result,
        timestamp: new Date(),
        stats: {
          totalQueries: stats.totalQueries,
          failedQueries: stats.failedQueries,
          avgLatency: Math.round(stats.avgLatency),
          reconnectAttempts: stats.reconnectAttempts
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[4][1]++;
    }
    // 回退到传统连接检查
    const client =
    /* istanbul ignore next */
    (cov_18prcktstb().s[29]++, getPrismaClient());
    /* istanbul ignore next */
    cov_18prcktstb().s[30]++;
    await client.$connect();
    // 执行简单查询测试连接
    /* istanbul ignore next */
    cov_18prcktstb().s[31]++;
    await client.$queryRaw`SELECT 1`;
    // 获取数据库版本信息
    const result =
    /* istanbul ignore next */
    (cov_18prcktstb().s[32]++, await client.$queryRaw`SELECT version()`);
    const version =
    /* istanbul ignore next */
    (cov_18prcktstb().s[33]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[6][0]++, result[0]?.version) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[6][1]++, 'Unknown'));
    /* istanbul ignore next */
    cov_18prcktstb().s[34]++;
    return {
      connected: true,
      message: 'Database connection successful (fallback mode)',
      version,
      timestamp: new Date()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[35]++;
    console.error('Database connection failed:', error);
    // 如果增强连接管理器未连接，尝试连接
    /* istanbul ignore next */
    cov_18prcktstb().s[36]++;
    if (!enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[7][0]++;
      cov_18prcktstb().s[37]++;
      try {
        /* istanbul ignore next */
        cov_18prcktstb().s[38]++;
        await enhanced_connection_1.enhancedDb.connect();
        /* istanbul ignore next */
        cov_18prcktstb().s[39]++;
        return await checkDatabaseConnection(); // 递归重试
      } catch (connectError) {
        /* istanbul ignore next */
        cov_18prcktstb().s[40]++;
        console.error('Enhanced connection failed:', connectError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[7][1]++;
    }
    cov_18prcktstb().s[41]++;
    return {
      connected: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[8][1]++, 'Unknown database error'),
      timestamp: new Date()
    };
  }
}
/**
 * 执行完整的数据库健康检查
 */
async function performDatabaseHealthCheck() {
  /* istanbul ignore next */
  cov_18prcktstb().f[3]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_18prcktstb().s[42]++, new Date());
  /* istanbul ignore next */
  cov_18prcktstb().s[43]++;
  try {
    // 检查基本连接
    const connectionStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[44]++, await checkDatabaseConnection());
    // 检查读写操作
    const queryChecks =
    /* istanbul ignore next */
    (cov_18prcktstb().s[45]++, await checkDatabaseQueries());
    // 检查迁移状态
    const migrationChecks =
    /* istanbul ignore next */
    (cov_18prcktstb().s[46]++, await checkMigrationStatus());
    // 检查性能优化状态
    const optimizationStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[47]++, await checkOptimizationStatus());
    // 确定整体健康状态
    let status =
    /* istanbul ignore next */
    (cov_18prcktstb().s[48]++, 'healthy');
    /* istanbul ignore next */
    cov_18prcktstb().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_18prcktstb().b[10][0]++, !connectionStatus.connected) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[10][1]++, !queryChecks.read)) {
      /* istanbul ignore next */
      cov_18prcktstb().b[9][0]++;
      cov_18prcktstb().s[50]++;
      status = 'unhealthy';
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[9][1]++;
      cov_18prcktstb().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_18prcktstb().b[12][0]++, !queryChecks.write) ||
      /* istanbul ignore next */
      (cov_18prcktstb().b[12][1]++, migrationChecks.pending > 0)) {
        /* istanbul ignore next */
        cov_18prcktstb().b[11][0]++;
        cov_18prcktstb().s[52]++;
        status = 'degraded';
      } else
      /* istanbul ignore next */
      {
        cov_18prcktstb().b[11][1]++;
      }
    }
    /* istanbul ignore next */
    cov_18prcktstb().s[53]++;
    return {
      status,
      checks: {
        connection: connectionStatus,
        queries: queryChecks,
        migrations: migrationChecks
      },
      optimization: optimizationStatus,
      timestamp
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[54]++;
    console.error('Database health check failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[55]++;
    return {
      status: 'unhealthy',
      checks: {
        connection: {
          connected: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[13][0]++, error.message) :
          /* istanbul ignore next */
          (cov_18prcktstb().b[13][1]++, 'Health check failed'),
          timestamp
        },
        queries: {
          read: false,
          write: false,
          latency: 0
        },
        migrations: {
          pending: 0,
          applied: 0
        }
      },
      optimization: {
        enabled: false,
        componentsActive: 0,
        lastOptimization: null,
        recommendations: []
      },
      timestamp
    };
  }
}
/**
 * 检查数据库查询操作
 */
/**
 * 检查性能优化状态
 * @returns {Promise<object>} 性能优化状态信息
 */
async function checkOptimizationStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[4]++;
  cov_18prcktstb().s[56]++;
  try {
    // 检查数据库监控器是否启用
    const monitoringActive =
    /* istanbul ignore next */
    (cov_18prcktstb().s[57]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[14][0]++, index_1.databaseMonitor) &&
    /* istanbul ignore next */
    (cov_18prcktstb().b[14][1]++, index_1.databaseMonitor.isMonitoring()));
    /* istanbul ignore next */
    cov_18prcktstb().s[58]++;
    if (!monitoringActive) {
      /* istanbul ignore next */
      cov_18prcktstb().b[15][0]++;
      cov_18prcktstb().s[59]++;
      return {
        enabled: false,
        componentsActive: 0,
        lastOptimization: null,
        recommendations: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[15][1]++;
    }
    // 获取优化状态
    const optimizationStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[60]++, index_1.databaseMonitor.getOptimizationStatus());
    const recommendations =
    /* istanbul ignore next */
    (cov_18prcktstb().s[61]++, index_1.databaseMonitor.getOptimizationRecommendations());
    /* istanbul ignore next */
    cov_18prcktstb().s[62]++;
    return {
      enabled: true,
      componentsActive: Object.values(optimizationStatus.components).filter(Boolean).length,
      lastOptimization: optimizationStatus.lastOptimization,
      recommendations: recommendations.slice(0, 5) // 限制返回前5个建议
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[63]++;
    console.error('Failed to check optimization status:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[64]++;
    return {
      enabled: false,
      componentsActive: 0,
      lastOptimization: null,
      recommendations: []
    };
  }
}
async function checkDatabaseQueries() {
  /* istanbul ignore next */
  cov_18prcktstb().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_18prcktstb().s[65]++, Date.now());
  /* istanbul ignore next */
  cov_18prcktstb().s[66]++;
  try {
    // 测试读操作
    let readSuccess =
    /* istanbul ignore next */
    (cov_18prcktstb().s[67]++, false);
    /* istanbul ignore next */
    cov_18prcktstb().s[68]++;
    try {
      /* istanbul ignore next */
      cov_18prcktstb().s[69]++;
      await prisma.$queryRaw`SELECT 1 as test`;
      /* istanbul ignore next */
      cov_18prcktstb().s[70]++;
      readSuccess = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18prcktstb().s[71]++;
      console.error('Database read test failed:', error);
    }
    // 测试写操作（如果有测试表的话）
    let writeSuccess =
    /* istanbul ignore next */
    (cov_18prcktstb().s[72]++, false);
    /* istanbul ignore next */
    cov_18prcktstb().s[73]++;
    try {
      /* istanbul ignore next */
      cov_18prcktstb().s[74]++;
      // 尝试创建一个临时记录来测试写操作
      // 这里需要根据实际的数据库schema来调整
      // 暂时假设写操作成功
      writeSuccess = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18prcktstb().s[75]++;
      console.error('Database write test failed:', error);
    }
    const latency =
    /* istanbul ignore next */
    (cov_18prcktstb().s[76]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_18prcktstb().s[77]++;
    return {
      read: readSuccess,
      write: writeSuccess,
      latency
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[78]++;
    return {
      read: false,
      write: false,
      latency: Date.now() - startTime
    };
  }
}
/**
 * 检查数据库迁移状态
 */
async function checkMigrationStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[6]++;
  cov_18prcktstb().s[79]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[80]++;
    // 这里需要根据实际的迁移管理方式来实现
    // Prisma的迁移状态检查
    // 暂时返回默认值
    return {
      pending: 0,
      applied: 0
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[81]++;
    console.error('Migration status check failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[82]++;
    return {
      pending: 0,
      applied: 0
    };
  }
}
/**
 * 关闭数据库连接
 * @returns {Promise<void>}
 */
async function closeDatabaseConnection() {
  /* istanbul ignore next */
  cov_18prcktstb().f[7]++;
  cov_18prcktstb().s[83]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[84]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[16][0]++;
      cov_18prcktstb().s[85]++;
      await enhanced_connection_1.enhancedDb.disconnect();
      /* istanbul ignore next */
      cov_18prcktstb().s[86]++;
      console.log('Enhanced database connection closed successfully');
      /* istanbul ignore next */
      cov_18prcktstb().s[87]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[16][1]++;
    }
    // 回退到传统方式
    const client =
    /* istanbul ignore next */
    (cov_18prcktstb().s[88]++, getPrismaClient());
    /* istanbul ignore next */
    cov_18prcktstb().s[89]++;
    await client.$disconnect();
    /* istanbul ignore next */
    cov_18prcktstb().s[90]++;
    console.log('Database connection closed successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[91]++;
    console.error('Error closing database connection:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[92]++;
    throw error;
  }
}
/**
 * 重新连接数据库
 * @returns {Promise<DatabaseStatus>}
 */
async function reconnectDatabase() {
  /* istanbul ignore next */
  cov_18prcktstb().f[8]++;
  cov_18prcktstb().s[93]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[94]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.getState() !== enhanced_connection_1.ConnectionState.DISCONNECTED) {
      /* istanbul ignore next */
      cov_18prcktstb().b[17][0]++;
      cov_18prcktstb().s[95]++;
      await enhanced_connection_1.enhancedDb.reconnect();
      /* istanbul ignore next */
      cov_18prcktstb().s[96]++;
      return await checkDatabaseConnection();
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[17][1]++;
    }
    // 回退到传统重连方式
    cov_18prcktstb().s[97]++;
    await closeDatabaseConnection();
    // 等待一小段时间
    /* istanbul ignore next */
    cov_18prcktstb().s[98]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_18prcktstb().f[9]++;
      cov_18prcktstb().s[99]++;
      return setTimeout(resolve, 1000);
    });
    // 重新检查连接
    /* istanbul ignore next */
    cov_18prcktstb().s[100]++;
    return await checkDatabaseConnection();
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[101]++;
    console.error('Database reconnection failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[102]++;
    throw error;
  }
}
/**
 * 获取数据库连接池状态
 * @returns {Promise<any>} 连接池状态信息
 */
async function getDatabasePoolStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[10]++;
  cov_18prcktstb().s[103]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[104]++;
    // 优先使用增强连接管理器的统计信息
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[18][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_18prcktstb().s[105]++, enhanced_connection_1.enhancedDb.getStats());
      const status =
      /* istanbul ignore next */
      (cov_18prcktstb().s[106]++, await checkDatabaseConnection());
      /* istanbul ignore next */
      cov_18prcktstb().s[107]++;
      return {
        connected: status.connected,
        timestamp: status.timestamp,
        version: status.version,
        enhanced: true,
        connectionState: stats.state,
        uptime: Math.round(stats.uptime / 1000),
        performance: {
          totalQueries: stats.totalQueries,
          failedQueries: stats.failedQueries,
          successRate: stats.totalQueries > 0 ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[19][0]++, ((stats.totalQueries - stats.failedQueries) / stats.totalQueries * 100).toFixed(2) + '%') :
          /* istanbul ignore next */
          (cov_18prcktstb().b[19][1]++, '100%'),
          avgLatency: Math.round(stats.avgLatency),
          reconnectAttempts: stats.reconnectAttempts
        },
        pool: {
          maxConnections: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[20][0]++, process.env.DB_POOL_MAX) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[20][1]++, '50')),
          minConnections: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[21][0]++, process.env.DB_POOL_MIN) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[21][1]++, '10')),
          active: status.connected ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[22][0]++, 1) :
          /* istanbul ignore next */
          (cov_18prcktstb().b[22][1]++, 0),
          acquireTimeout: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[23][0]++, process.env.DB_POOL_ACQUIRE) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[23][1]++, '60000')),
          idleTimeout: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[24][0]++, process.env.DB_POOL_IDLE) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[24][1]++, '20000'))
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[18][1]++;
    }
    // 回退到传统状态检查
    const status =
    /* istanbul ignore next */
    (cov_18prcktstb().s[108]++, await checkDatabaseConnection());
    /* istanbul ignore next */
    cov_18prcktstb().s[109]++;
    return {
      connected: status.connected,
      timestamp: status.timestamp,
      version: status.version,
      latency: status.latency,
      enhanced: false,
      // 模拟连接池信息（实际需要根据具体数据库驱动获取）
      pool: {
        total: parseInt(
        /* istanbul ignore next */
        (cov_18prcktstb().b[25][0]++, process.env.DB_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[25][1]++, '10')),
        active: status.connected ?
        /* istanbul ignore next */
        (cov_18prcktstb().b[26][0]++, 1) :
        /* istanbul ignore next */
        (cov_18prcktstb().b[26][1]++, 0),
        idle: status.connected ?
        /* istanbul ignore next */
        (cov_18prcktstb().b[27][0]++, parseInt(
        /* istanbul ignore next */
        (cov_18prcktstb().b[28][0]++, process.env.DB_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[28][1]++, '10')) - 1) :
        /* istanbul ignore next */
        (cov_18prcktstb().b[27][1]++, 0),
        waiting: 0
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[110]++;
    console.error('Failed to get database pool status:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[111]++;
    throw error;
  }
}
/**
 * 获取数据库性能概览
 * @returns {Promise<DatabasePerformanceOverview>} 数据库性能概览信息
 */
async function getDatabasePerformanceOverview() {
  /* istanbul ignore next */
  cov_18prcktstb().f[11]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_18prcktstb().s[112]++, new Date());
  /* istanbul ignore next */
  cov_18prcktstb().s[113]++;
  try {
    // 获取监控状态
    const monitoringActive =
    /* istanbul ignore next */
    (cov_18prcktstb().s[114]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[29][0]++, index_1.databaseMonitor) &&
    /* istanbul ignore next */
    (cov_18prcktstb().b[29][1]++, index_1.databaseMonitor.isMonitoring()));
    let monitoringInfo =
    /* istanbul ignore next */
    (cov_18prcktstb().s[115]++, {
      isActive: false,
      metricsCount: 0,
      alertsCount: 0
    });
    /* istanbul ignore next */
    cov_18prcktstb().s[116]++;
    if (monitoringActive) {
      /* istanbul ignore next */
      cov_18prcktstb().b[30][0]++;
      const metrics =
      /* istanbul ignore next */
      (cov_18prcktstb().s[117]++, index_1.databaseMonitor.getMetrics());
      const alerts =
      /* istanbul ignore next */
      (cov_18prcktstb().s[118]++, index_1.databaseMonitor.getAlerts());
      /* istanbul ignore next */
      cov_18prcktstb().s[119]++;
      monitoringInfo = {
        isActive: true,
        metricsCount: metrics.length,
        alertsCount: alerts.filter(alert => {
          /* istanbul ignore next */
          cov_18prcktstb().f[12]++;
          cov_18prcktstb().s[120]++;
          return /* istanbul ignore next */(cov_18prcktstb().b[31][0]++, alert.level === 'CRITICAL') ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[31][1]++, alert.level === 'WARNING');
        }).length
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[30][1]++;
    }
    // 获取优化状态
    const optimizationStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[121]++, await checkOptimizationStatus());
    const optimizationInfo =
    /* istanbul ignore next */
    (cov_18prcktstb().s[122]++, {
      isActive: optimizationStatus.enabled,
      componentsStatus: optimizationStatus.enabled ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[32][0]++, index_1.databaseMonitor.getOptimizationStatus().components) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[32][1]++, {}),
      recommendations: optimizationStatus.recommendations
    });
    // 计算健康评分
    const healthCheck =
    /* istanbul ignore next */
    (cov_18prcktstb().s[123]++, await performDatabaseHealthCheck());
    let healthScore =
    /* istanbul ignore next */
    (cov_18prcktstb().s[124]++, 100);
    /* istanbul ignore next */
    cov_18prcktstb().s[125]++;
    if (healthCheck.status === 'unhealthy') {
      /* istanbul ignore next */
      cov_18prcktstb().b[33][0]++;
      cov_18prcktstb().s[126]++;
      healthScore = 30;
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[33][1]++;
      cov_18prcktstb().s[127]++;
      if (healthCheck.status === 'degraded') {
        /* istanbul ignore next */
        cov_18prcktstb().b[34][0]++;
        cov_18prcktstb().s[128]++;
        healthScore = 70;
      } else {
        /* istanbul ignore next */
        cov_18prcktstb().b[34][1]++;
        cov_18prcktstb().s[129]++;
        if (monitoringInfo.alertsCount > 0) {
          /* istanbul ignore next */
          cov_18prcktstb().b[35][0]++;
          cov_18prcktstb().s[130]++;
          healthScore = Math.max(50, 100 - monitoringInfo.alertsCount * 10);
        } else
        /* istanbul ignore next */
        {
          cov_18prcktstb().b[35][1]++;
        }
      }
    }
    const healthStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[131]++, healthScore >= 90 ?
    /* istanbul ignore next */
    (cov_18prcktstb().b[36][0]++, 'excellent') :
    /* istanbul ignore next */
    (cov_18prcktstb().b[36][1]++, healthScore >= 70 ?
    /* istanbul ignore next */
    (cov_18prcktstb().b[37][0]++, 'good') :
    /* istanbul ignore next */
    (cov_18prcktstb().b[37][1]++, healthScore >= 50 ?
    /* istanbul ignore next */
    (cov_18prcktstb().b[38][0]++, 'fair') :
    /* istanbul ignore next */
    (cov_18prcktstb().b[38][1]++, 'poor'))));
    const healthIssues =
    /* istanbul ignore next */
    (cov_18prcktstb().s[132]++, []);
    /* istanbul ignore next */
    cov_18prcktstb().s[133]++;
    if (!healthCheck.checks.connection.connected) {
      /* istanbul ignore next */
      cov_18prcktstb().b[39][0]++;
      cov_18prcktstb().s[134]++;
      healthIssues.push('数据库连接失败');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[39][1]++;
    }
    cov_18prcktstb().s[135]++;
    if (!healthCheck.checks.queries.read) {
      /* istanbul ignore next */
      cov_18prcktstb().b[40][0]++;
      cov_18prcktstb().s[136]++;
      healthIssues.push('数据库读取操作失败');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[40][1]++;
    }
    cov_18prcktstb().s[137]++;
    if (!healthCheck.checks.queries.write) {
      /* istanbul ignore next */
      cov_18prcktstb().b[41][0]++;
      cov_18prcktstb().s[138]++;
      healthIssues.push('数据库写入操作失败');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[41][1]++;
    }
    cov_18prcktstb().s[139]++;
    if (monitoringInfo.alertsCount > 0) {
      /* istanbul ignore next */
      cov_18prcktstb().b[42][0]++;
      cov_18prcktstb().s[140]++;
      healthIssues.push(`存在 ${monitoringInfo.alertsCount} 个活跃告警`);
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[42][1]++;
    }
    cov_18prcktstb().s[141]++;
    if (!optimizationStatus.enabled) {
      /* istanbul ignore next */
      cov_18prcktstb().b[43][0]++;
      cov_18prcktstb().s[142]++;
      healthIssues.push('性能优化组件未启用');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[43][1]++;
    }
    cov_18prcktstb().s[143]++;
    return {
      monitoring: monitoringInfo,
      optimization: optimizationInfo,
      health: {
        score: healthScore,
        status: healthStatus,
        issues: healthIssues
      },
      timestamp
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[144]++;
    console.error('Failed to get database performance overview:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[145]++;
    return {
      monitoring: {
        isActive: false,
        metricsCount: 0,
        alertsCount: 0
      },
      optimization: {
        isActive: false,
        componentsStatus: {},
        recommendations: []
      },
      health: {
        score: 0,
        status: 'poor',
        issues: ['无法获取性能概览信息']
      },
      timestamp
    };
  }
}
/**
 * 触发数据库性能优化
 * @returns {Promise<boolean>} 优化是否成功触发
 */
async function triggerDatabaseOptimization() {
  /* istanbul ignore next */
  cov_18prcktstb().f[13]++;
  cov_18prcktstb().s[146]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[147]++;
    if (
    /* istanbul ignore next */
    (cov_18prcktstb().b[45][0]++, !index_1.databaseMonitor) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[45][1]++, !index_1.databaseMonitor.isMonitoring())) {
      /* istanbul ignore next */
      cov_18prcktstb().b[44][0]++;
      cov_18prcktstb().s[148]++;
      console.warn('Database monitoring is not active, cannot trigger optimization');
      /* istanbul ignore next */
      cov_18prcktstb().s[149]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[44][1]++;
    }
    // 触发优化
    cov_18prcktstb().s[150]++;
    await index_1.databaseMonitor.triggerOptimization();
    /* istanbul ignore next */
    cov_18prcktstb().s[151]++;
    console.log('Database optimization triggered successfully');
    /* istanbul ignore next */
    cov_18prcktstb().s[152]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[153]++;
    console.error('Failed to trigger database optimization:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[154]++;
    return false;
  }
}
/**
 * 获取数据库性能报告
 * @returns {Promise<any>} 性能报告
 */
async function getDatabasePerformanceReport() {
  /* istanbul ignore next */
  cov_18prcktstb().f[14]++;
  cov_18prcktstb().s[155]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[156]++;
    if (!index_1.DatabasePerformanceUtils) {
      /* istanbul ignore next */
      cov_18prcktstb().b[46][0]++;
      cov_18prcktstb().s[157]++;
      throw new Error('DatabasePerformanceUtils not available');
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[46][1]++;
    }
    cov_18prcktstb().s[158]++;
    return await index_1.DatabasePerformanceUtils.getPerformanceReport();
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[159]++;
    console.error('Failed to get database performance report:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[160]++;
    throw error;
  }
}
// 进程退出时清理连接
/* istanbul ignore next */
cov_18prcktstb().s[161]++;
process.on('beforeExit', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[15]++;
  cov_18prcktstb().s[162]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[163]++;
    // 优先使用增强连接管理器的优雅关闭
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[47][0]++;
      cov_18prcktstb().s[164]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[47][1]++;
      cov_18prcktstb().s[165]++;
      await closeDatabaseConnection();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[166]++;
    console.error('Error during database cleanup:', error);
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[167]++;
process.on('SIGINT', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[16]++;
  cov_18prcktstb().s[168]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[169]++;
    console.log('Received SIGINT, initiating graceful shutdown...');
    // 优先使用增强连接管理器的优雅关闭
    /* istanbul ignore next */
    cov_18prcktstb().s[170]++;
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[48][0]++;
      cov_18prcktstb().s[171]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[48][1]++;
      cov_18prcktstb().s[172]++;
      await closeDatabaseConnection();
      /* istanbul ignore next */
      cov_18prcktstb().s[173]++;
      process.exit(0);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[174]++;
    console.error('Error during graceful shutdown:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[175]++;
    process.exit(1);
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[176]++;
process.on('SIGTERM', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[17]++;
  cov_18prcktstb().s[177]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[178]++;
    console.log('Received SIGTERM, initiating graceful shutdown...');
    // 优先使用增强连接管理器的优雅关闭
    /* istanbul ignore next */
    cov_18prcktstb().s[179]++;
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[49][0]++;
      cov_18prcktstb().s[180]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[49][1]++;
      cov_18prcktstb().s[181]++;
      await closeDatabaseConnection();
      /* istanbul ignore next */
      cov_18prcktstb().s[182]++;
      process.exit(0);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[183]++;
    console.error('Error during graceful shutdown:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[184]++;
    process.exit(1);
  }
});
// 导出增强连接管理器实例和相关功能
var enhanced_connection_2 =
/* istanbul ignore next */
(cov_18prcktstb().s[185]++, require("./enhanced-connection"));
/* istanbul ignore next */
cov_18prcktstb().s[186]++;
Object.defineProperty(exports, "enhancedDb", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[18]++;
    cov_18prcktstb().s[187]++;
    return enhanced_connection_2.enhancedDb;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[188]++;
Object.defineProperty(exports, "EnhancedDatabaseConnection", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[19]++;
    cov_18prcktstb().s[189]++;
    return enhanced_connection_2.EnhancedDatabaseConnection;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[190]++;
Object.defineProperty(exports, "ConnectionState", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[20]++;
    cov_18prcktstb().s[191]++;
    return enhanced_connection_2.ConnectionState;
  }
});
// 初始化增强数据库连接（如果环境变量启用）
/* istanbul ignore next */
cov_18prcktstb().s[192]++;
if (process.env.ENHANCED_DB_CONNECTION === 'true') {
  /* istanbul ignore next */
  cov_18prcktstb().b[50][0]++;
  cov_18prcktstb().s[193]++;
  enhanced_connection_1.enhancedDb.connect().catch(error => {
    /* istanbul ignore next */
    cov_18prcktstb().f[21]++;
    cov_18prcktstb().s[194]++;
    console.error('Failed to initialize enhanced database connection:', error);
  });
} else
/* istanbul ignore next */
{
  cov_18prcktstb().b[50][1]++;
}
// 默认导出Prisma客户端
cov_18prcktstb().s[195]++;
exports.default = prisma;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,