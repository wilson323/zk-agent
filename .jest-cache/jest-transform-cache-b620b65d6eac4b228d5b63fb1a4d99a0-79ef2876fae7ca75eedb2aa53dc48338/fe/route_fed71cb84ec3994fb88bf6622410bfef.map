{"version":3,"names":["cov_1ayimi2q2r","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","zod_1","connection_1","__importDefault","jwt_1","loginSchema","z","object","email","string","password","min","rememberMe","boolean","optional","exports","POST","createApiRoute","RouteConfigs","publicPost","req","params","validatedBody","validatedQuery","user","requestId","foundUser","default","findUnique","where","ApiResponseWrapper","error","status","isPasswordValid","tokens","generateTokenPair","id","role","includes","update","data","updatedAt","Date","usageStats","create","userId","agentType","action","metadata","userAgent","headers","get","ip","catch","console","response","success","avatar","createdAt"],"sources":["E:\\zk-agent\\app\\api\\auth\\login\\route.ts"],"sourcesContent":["/**\n * @file auth\\login\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport prisma from \"@/lib/database/connection\"\nimport { generateTokenPair } from \"@/lib/auth/jwt\"\nimport type { LoginRequest, LoginResponse } from \"@/types/auth\"\n\nconst loginSchema = z.object({\n  email: z.string().email(\"请输入有效的邮箱地址\"),\n  password: z.string().min(1, \"密码不能为空\"),\n  rememberMe: z.boolean().optional(),\n});\n\nexport const POST = createApiRoute(\n  RouteConfigs.publicPost(loginSchema),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const { email, password, rememberMe } = validatedBody;\n  \n    // 查找用户\n    const foundUser = await prisma.user.findUnique({\n      where: { email },\n    });\n  \n    if (!foundUser) {\n      return ApiResponseWrapper.error(\n        \"邮箱或密码错误\",\n        { status: 401 }\n      );\n    }\n  \n    // 临时处理：为了演示目的，使用简单验证\n    // 生产环境中必须使用上面注释的bcrypt验证\n    const isPasswordValid = password === \"demo\" || password === \"admin\" || password === \"test123\";\n    if (!isPasswordValid) {\n      return ApiResponseWrapper.error(\n        \"邮箱或密码错误\",\n        { status: 401 }\n      );\n    }\n  \n    // 生成令牌\n    const tokens = generateTokenPair({\n      id: foundUser.id,\n      email: foundUser.email,\n      role: email.includes(\"admin\") ? \"admin\" : \"user\",\n    });\n  \n    // 更新最后登录时间\n    await prisma.user.update({\n      where: { id: foundUser.id },\n      data: {\n        updatedAt: new Date(),\n      },\n    });\n  \n    // 记录登录日志\n    await prisma.usageStats\n      .create({\n        data: {\n          userId: foundUser.id,\n          agentType: \"auth\",\n          action: \"login\",\n          metadata: {\n            userAgent: req.headers.get(\"user-agent\"),\n            ip: req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\"),\n            rememberMe,\n          },\n        },\n      })\n      .catch((error) => {\n        console.error(\"Failed to log login:\", error);\n      });\n  \n    const response: LoginResponse = {\n      success: true,\n      user: {\n        id: foundUser.id,\n        email: foundUser.email,\n        name: foundUser.name,\n        avatar: foundUser.avatar,\n        role: email.includes(\"admin\") ? \"admin\" : \"user\",\n        createdAt: foundUser.createdAt,\n        updatedAt: foundUser.updatedAt,\n      },\n      tokens,\n    };\n  \n    return ApiResponseWrapper.success(response);\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}