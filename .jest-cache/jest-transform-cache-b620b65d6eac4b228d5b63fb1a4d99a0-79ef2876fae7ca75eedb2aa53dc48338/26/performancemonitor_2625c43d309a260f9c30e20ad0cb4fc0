b3d647ef079c503fa1929b61b60ad034
"use strict";

// @ts-nocheck
/**
 * @file lib/middleware/performance-monitor.ts
 * @description 统一性能监控中间件 - B团队核心组件
 * @author B团队后端架构师
 * @lastUpdate 2024-12-19
 * @performance API响应≤500ms，并发≥1000 QPS
 */
/* istanbul ignore next */
function cov_1sprm22u6r() {
  var path = "E:\\zk-agent\\lib\\middleware\\performance-monitor.ts";
  var hash = "a6b07fbec3dbdca51d62f3b228c74c1a61212fee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\middleware\\performance-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "2": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "3": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 64
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "9": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 67
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "12": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 54
        }
      },
      "13": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "14": {
        start: {
          line: 40,
          column: 34
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "15": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "16": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "17": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "18": {
        start: {
          line: 47,
          column: 33
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "19": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "20": {
        start: {
          line: 50,
          column: 33
        },
        end: {
          line: 50,
          column: 52
        }
      },
      "21": {
        start: {
          line: 51,
          column: 36
        },
        end: {
          line: 51,
          column: 67
        }
      },
      "22": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 117
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 64
        }
      },
      "24": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 73
        }
      },
      "25": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "26": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "27": {
        start: {
          line: 60,
          column: 32
        },
        end: {
          line: 60,
          column: 42
        }
      },
      "28": {
        start: {
          line: 61,
          column: 33
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "29": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 76
        }
      },
      "30": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "31": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 72,
          column: 47
        }
      },
      "32": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "33": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "34": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 94
        }
      },
      "35": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "36": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "37": {
        start: {
          line: 100,
          column: 28
        },
        end: {
          line: 100,
          column: 49
        }
      },
      "38": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "39": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "40": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "41": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 87
        }
      },
      "42": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "43": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "44": {
        start: {
          line: 128,
          column: 30
        },
        end: {
          line: 128,
          column: 62
        }
      },
      "45": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 43
        }
      },
      "46": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "47": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 64
        }
      },
      "48": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "49": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "50": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "51": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "52": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 30
        }
      },
      "53": {
        start: {
          line: 174,
          column: 27
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "54": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 96
        }
      },
      "55": {
        start: {
          line: 176,
          column: 59
        },
        end: {
          line: 176,
          column: 94
        }
      },
      "56": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 182,
          column: 11
        }
      },
      "57": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 30
        }
      },
      "58": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 31
        }
      },
      "59": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 96
        }
      },
      "60": {
        start: {
          line: 191,
          column: 59
        },
        end: {
          line: 191,
          column: 94
        }
      },
      "61": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "62": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 200,
          column: 23
        }
      },
      "63": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 78
        }
      },
      "64": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "65": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "66": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 86
        }
      },
      "67": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "68": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "69": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 86
        }
      },
      "70": {
        start: {
          line: 253,
          column: 30
        },
        end: {
          line: 254,
          column: 56
        }
      },
      "71": {
        start: {
          line: 254,
          column: 25
        },
        end: {
          line: 254,
          column: 55
        }
      },
      "72": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "73": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 261,
          column: 14
        }
      },
      "74": {
        start: {
          line: 263,
          column: 30
        },
        end: {
          line: 263,
          column: 50
        }
      },
      "75": {
        start: {
          line: 264,
          column: 36
        },
        end: {
          line: 264,
          column: 105
        }
      },
      "76": {
        start: {
          line: 264,
          column: 69
        },
        end: {
          line: 264,
          column: 85
        }
      },
      "77": {
        start: {
          line: 265,
          column: 27
        },
        end: {
          line: 265,
          column: 80
        }
      },
      "78": {
        start: {
          line: 265,
          column: 53
        },
        end: {
          line: 265,
          column: 72
        }
      },
      "79": {
        start: {
          line: 266,
          column: 26
        },
        end: {
          line: 266,
          column: 60
        }
      },
      "80": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "81": {
        start: {
          line: 278,
          column: 0
        },
        end: {
          line: 278,
          column: 62
        }
      },
      "82": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 286,
          column: 6
        }
      },
      "83": {
        start: {
          line: 282,
          column: 26
        },
        end: {
          line: 282,
          column: 30
        }
      },
      "84": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 11
        }
      },
      "85": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 16
          }
        },
        loc: {
          start: {
            line: 37,
            column: 43
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 54
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 85
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 97
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 99
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 59
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 135
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 46
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 150
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 23
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 172
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 49
          },
          end: {
            line: 176,
            column: 50
          }
        },
        loc: {
          start: {
            line: 176,
            column: 59
          },
          end: {
            line: 176,
            column: 94
          }
        },
        line: 176
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 187
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 191,
            column: 49
          },
          end: {
            line: 191,
            column: 50
          }
        },
        loc: {
          start: {
            line: 191,
            column: 59
          },
          end: {
            line: 191,
            column: 94
          }
        },
        line: 191
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 197
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 205
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 211
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 55
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 231
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 26
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 252
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 254,
            column: 20
          },
          end: {
            line: 254,
            column: 21
          }
        },
        loc: {
          start: {
            line: 254,
            column: 25
          },
          end: {
            line: 254,
            column: 55
          }
        },
        line: 254
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 264,
            column: 57
          },
          end: {
            line: 264,
            column: 58
          }
        },
        loc: {
          start: {
            line: 264,
            column: 69
          },
          end: {
            line: 264,
            column: 85
          }
        },
        line: 264
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 265,
            column: 48
          },
          end: {
            line: 265,
            column: 49
          }
        },
        loc: {
          start: {
            line: 265,
            column: 53
          },
          end: {
            line: 265,
            column: 72
          }
        },
        line: 265
      },
      "21": {
        name: "withPerformanceMonitoring",
        decl: {
          start: {
            line: 280,
            column: 9
          },
          end: {
            line: 280,
            column: 34
          }
        },
        loc: {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 287,
            column: 1
          }
        },
        line: 280
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 281,
            column: 11
          },
          end: {
            line: 281,
            column: 12
          }
        },
        loc: {
          start: {
            line: 281,
            column: 30
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 281
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 283,
            column: 64
          },
          end: {
            line: 283,
            column: 65
          }
        },
        loc: {
          start: {
            line: 283,
            column: 79
          },
          end: {
            line: 285,
            column: 9
          }
        },
        line: 283
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "2": {
        loc: {
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 56
          }
        }, {
          start: {
            line: 109,
            column: 60
          },
          end: {
            line: 109,
            column: 69
          }
        }],
        line: 109
      },
      "3": {
        loc: {
          start: {
            line: 119,
            column: 25
          },
          end: {
            line: 119,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 72
          },
          end: {
            line: 119,
            column: 78
          }
        }, {
          start: {
            line: 119,
            column: 81
          },
          end: {
            line: 119,
            column: 87
          }
        }],
        line: 119
      },
      "4": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "5": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "6": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "7": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 198,
            column: 54
          }
        }, {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 44
          }
        }, {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 21
          }
        }],
        line: 198
      },
      "8": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\middleware\\performance-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\middleware\\performance-monitor.ts"],
      sourcesContent: ["// @ts-nocheck\n/**\r\n * @file lib/middleware/performance-monitor.ts\r\n * @description \u7EDF\u4E00\u6027\u80FD\u76D1\u63A7\u4E2D\u95F4\u4EF6 - B\u56E2\u961F\u6838\u5FC3\u7EC4\u4EF6\r\n * @author B\u56E2\u961F\u540E\u7AEF\u67B6\u6784\u5E08\r\n * @lastUpdate 2024-12-19\r\n * @performance API\u54CD\u5E94\u2264500ms\uFF0C\u5E76\u53D1\u22651000 QPS\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { Logger } from '@/lib/utils/logger';\r\n\r\ninterface PerformanceMetrics {\r\n  requestId: string;\r\n  method: string;\r\n  url: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  duration: number;\r\n  statusCode: number;\r\n  userAgent?: string;\r\n  ip?: string;\r\n  memoryUsage: NodeJS.MemoryUsage;\r\n  cpuUsage: NodeJS.CpuUsage;\r\n}\r\n\r\ninterface QpsMetrics {\r\n  timestamp: number;\r\n  count: number;\r\n  windowSize: number; // \u65F6\u95F4\u7A97\u53E3\u5927\u5C0F\uFF08\u79D2\uFF09\r\n}\r\n\r\nclass PerformanceMonitor {\r\n  private static instance: PerformanceMonitor;\r\n  private metrics: Map<string, PerformanceMetrics> = new Map();\r\n  private qpsCounter: QpsMetrics[] = [];\r\n  private logger = new Logger('PerformanceMonitor');\r\n  \r\n  // \u6027\u80FD\u9608\u503C\u914D\u7F6E\r\n  private readonly THRESHOLDS = {\r\n    API_RESPONSE_TIME: 500, // 500ms\r\n    QPS_LIMIT: 1000, // 1000 QPS\r\n    MEMORY_LIMIT: 1024 * 1024 * 1024, // 1GB\r\n    CPU_LIMIT: 80, // 80%\r\n  };\r\n\r\n  public static getInstance(): PerformanceMonitor {\r\n    if (!PerformanceMonitor.instance) {\r\n      PerformanceMonitor.instance = new PerformanceMonitor();\r\n    }\r\n    return PerformanceMonitor.instance;\r\n  }\r\n\r\n  /**\r\n   * \u6027\u80FD\u76D1\u63A7\u4E2D\u95F4\u4EF6\r\n   */\r\n  public middleware() {\r\n    return async (\r\n      request: NextRequest,\r\n      handler: (req: NextRequest) => Promise<NextResponse>\r\n    ): Promise<NextResponse> => {\r\n      const requestId = this.generateRequestId();\r\n      const startTime = Date.now();\r\n      const startCpuUsage = process.cpuUsage();\r\n\r\n      // \u8BB0\u5F55\u8BF7\u6C42\u5F00\u59CB\r\n      this.recordRequestStart(requestId, request, startTime);\r\n\r\n      try {\r\n        // \u68C0\u67E5QPS\u9650\u5236\r\n        await this.checkQpsLimit();\r\n\r\n        // \u6267\u884C\u8BF7\u6C42\u5904\u7406\r\n        const response = await handler(request);\r\n\r\n        // \u8BB0\u5F55\u8BF7\u6C42\u5B8C\u6210\r\n        const endTime = Date.now();\r\n        const duration = endTime - startTime;\r\n        const endCpuUsage = process.cpuUsage(startCpuUsage);\r\n\r\n        await this.recordRequestEnd(\r\n          requestId,\r\n          request,\r\n          response,\r\n          startTime,\r\n          endTime,\r\n          duration,\r\n          endCpuUsage\r\n        );\r\n\r\n        // \u6DFB\u52A0\u6027\u80FD\u5934\u90E8\r\n        response.headers.set('X-Request-ID', requestId);\r\n        response.headers.set('X-Response-Time', `${duration}ms`);\r\n        response.headers.set('X-QPS-Current', this.getCurrentQps().toString());\r\n\r\n        return response;\r\n      } catch (error) {\r\n        const endTime = Date.now();\r\n        const duration = endTime - startTime;\r\n\r\n        // \u8BB0\u5F55\u9519\u8BEF\r\n        await this.recordError(requestId, request, error, duration);\r\n        throw error;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5QPS\u9650\u5236\r\n   */\r\n  private async checkQpsLimit(): Promise<void> {\r\n    const currentQps = this.getCurrentQps();\r\n    \r\n    if (currentQps > this.THRESHOLDS.QPS_LIMIT) {\r\n      this.logger.warn('QPS limit exceeded', {\r\n        currentQps,\r\n        limit: this.THRESHOLDS.QPS_LIMIT,\r\n      });\r\n      \r\n      // \u53EF\u4EE5\u9009\u62E9\u629B\u51FA\u9519\u8BEF\u6216\u5B9E\u65BD\u9650\u6D41\r\n      throw new Error(`QPS limit exceeded: ${currentQps}/${this.THRESHOLDS.QPS_LIMIT}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u8BF7\u6C42\u5F00\u59CB\r\n   */\r\n  private recordRequestStart(\r\n    requestId: string,\r\n    request: NextRequest,\r\n    startTime: number\r\n  ): void {\r\n    // \u66F4\u65B0QPS\u8BA1\u6570\u5668\r\n    this.updateQpsCounter();\r\n\r\n    this.logger.info('Request started', {\r\n      requestId,\r\n      method: request.method,\r\n      url: request.url,\r\n      userAgent: request.headers.get('user-agent'),\r\n      ip: this.getClientIp(request),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u8BF7\u6C42\u5B8C\u6210\r\n   */\r\n  private async recordRequestEnd(\r\n    requestId: string,\r\n    request: NextRequest,\r\n    response: NextResponse,\r\n    startTime: number,\r\n    endTime: number,\r\n    duration: number,\r\n    cpuUsage: NodeJS.CpuUsage\r\n  ): Promise<void> {\r\n    const memoryUsage = process.memoryUsage();\r\n    \r\n    const metrics: PerformanceMetrics = {\r\n      requestId,\r\n      method: request.method,\r\n      url: request.url,\r\n      startTime,\r\n      endTime,\r\n      duration,\r\n      statusCode: response.status,\r\n      userAgent: request.headers.get('user-agent') || undefined,\r\n      ip: this.getClientIp(request),\r\n      memoryUsage,\r\n      cpuUsage,\r\n    };\r\n\r\n    // \u5B58\u50A8\u6307\u6807\r\n    this.metrics.set(requestId, metrics);\r\n\r\n    // \u68C0\u67E5\u6027\u80FD\u9608\u503C\r\n    await this.checkPerformanceThresholds(metrics);\r\n\r\n    // \u8BB0\u5F55\u65E5\u5FD7\r\n    const logLevel = duration > this.THRESHOLDS.API_RESPONSE_TIME ? 'warn' : 'info';\r\n    this.logger.log(logLevel, 'Request completed', {\r\n      requestId,\r\n      duration,\r\n      statusCode: response.status,\r\n      memoryUsed: Math.round(memoryUsage.heapUsed / 1024 / 1024), // MB\r\n    });\r\n\r\n    // \u6E05\u7406\u65E7\u6307\u6807\uFF08\u4FDD\u7559\u6700\u8FD11000\u6761\uFF09\r\n    if (this.metrics.size > 1000) {\r\n      const oldestKey = this.metrics.keys().next().value;\r\n      this.metrics.delete(oldestKey);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8BB0\u5F55\u9519\u8BEF\r\n   */\r\n  private async recordError(\r\n    requestId: string,\r\n    request: NextRequest,\r\n    error: any,\r\n    duration: number\r\n  ): Promise<void> {\r\n    this.logger.error('Request failed', {\r\n      requestId,\r\n      method: request.method,\r\n      url: request.url,\r\n      duration,\r\n      error: error.message,\r\n      stack: error.stack,\r\n    });\r\n\r\n    // \u53D1\u9001\u9519\u8BEF\u6307\u6807\u5230\u76D1\u63A7\u7CFB\u7EDF\r\n    await this.sendErrorMetrics(requestId, error, duration);\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u6027\u80FD\u9608\u503C\r\n   */\r\n  private async checkPerformanceThresholds(metrics: PerformanceMetrics): Promise<void> {\r\n    // \u68C0\u67E5\u54CD\u5E94\u65F6\u95F4\r\n    if (metrics.duration > this.THRESHOLDS.API_RESPONSE_TIME) {\r\n      await this.sendAlert('SLOW_RESPONSE', {\r\n        requestId: metrics.requestId,\r\n        duration: metrics.duration,\r\n        threshold: this.THRESHOLDS.API_RESPONSE_TIME,\r\n        url: metrics.url,\r\n      });\r\n    }\r\n\r\n    // \u68C0\u67E5\u5185\u5B58\u4F7F\u7528\r\n    if (metrics.memoryUsage.heapUsed > this.THRESHOLDS.MEMORY_LIMIT) {\r\n      await this.sendAlert('HIGH_MEMORY_USAGE', {\r\n        requestId: metrics.requestId,\r\n        memoryUsed: metrics.memoryUsage.heapUsed,\r\n        threshold: this.THRESHOLDS.MEMORY_LIMIT,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0QPS\u8BA1\u6570\u5668\r\n   */\r\n  private updateQpsCounter(): void {\r\n    const now = Date.now();\r\n    const windowSize = 1000; // 1\u79D2\u7A97\u53E3\r\n    \r\n    // \u6E05\u7406\u8FC7\u671F\u7684\u8BA1\u6570\u5668\r\n    this.qpsCounter = this.qpsCounter.filter(\r\n      metric => now - metric.timestamp < windowSize\r\n    );\r\n    \r\n    // \u6DFB\u52A0\u65B0\u7684\u8BA1\u6570\r\n    this.qpsCounter.push({\r\n      timestamp: now,\r\n      count: 1,\r\n      windowSize,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5F53\u524DQPS\r\n   */\r\n  private getCurrentQps(): number {\r\n    const now = Date.now();\r\n    const windowSize = 1000; // 1\u79D2\u7A97\u53E3\r\n    \r\n    // \u6E05\u7406\u8FC7\u671F\u7684\u8BA1\u6570\u5668\r\n    this.qpsCounter = this.qpsCounter.filter(\r\n      metric => now - metric.timestamp < windowSize\r\n    );\r\n    \r\n    return this.qpsCounter.length;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5BA2\u6237\u7AEFIP\r\n   */\r\n  private getClientIp(request: NextRequest): string {\r\n    return (\r\n      request.headers.get('x-forwarded-for') ||\r\n      request.headers.get('x-real-ip') ||\r\n      'unknown'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \u751F\u6210\u8BF7\u6C42ID\r\n   */\r\n  private generateRequestId(): string {\r\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * \u53D1\u9001\u544A\u8B66\r\n   */\r\n  private async sendAlert(type: string, data: any): Promise<void> {\r\n    try {\r\n      // \u53D1\u9001\u5230\u76D1\u63A7\u7CFB\u7EDF\u6216\u544A\u8B66\u670D\u52A1\r\n      await fetch('/api/admin/alerts', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          type,\r\n          data,\r\n          timestamp: new Date().toISOString(),\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      this.logger.error('Failed to send alert', { type, error: error.message });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u53D1\u9001\u9519\u8BEF\u6307\u6807\r\n   */\r\n  private async sendErrorMetrics(\r\n    requestId: string,\r\n    error: any,\r\n    duration: number\r\n  ): Promise<void> {\r\n    try {\r\n      await fetch('/api/metrics/record', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          type: 'error',\r\n          requestId,\r\n          error: error.message,\r\n          duration,\r\n          timestamp: new Date().toISOString(),\r\n        }),\r\n      });\r\n    } catch (err) {\r\n      this.logger.error('Failed to send error metrics', { error: err.message });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6027\u80FD\u7EDF\u8BA1\r\n   */\r\n  public getPerformanceStats(): any {\r\n    const recentMetrics = Array.from(this.metrics.values())\r\n      .filter(m => Date.now() - m.endTime < 60000); // \u6700\u8FD11\u5206\u949F\r\n\r\n    if (recentMetrics.length === 0) {\r\n      return {\r\n        totalRequests: 0,\r\n        averageResponseTime: 0,\r\n        currentQps: 0,\r\n        errorRate: 0,\r\n      };\r\n    }\r\n\r\n    const totalRequests = recentMetrics.length;\r\n    const averageResponseTime = recentMetrics.reduce((sum, m) => sum + m.duration, 0) / totalRequests;\r\n    const errorCount = recentMetrics.filter(m => m.statusCode >= 400).length;\r\n    const errorRate = (errorCount / totalRequests) * 100;\r\n\r\n    return {\r\n      totalRequests,\r\n      averageResponseTime: Math.round(averageResponseTime),\r\n      currentQps: this.getCurrentQps(),\r\n      errorRate: Math.round(errorRate * 100) / 100,\r\n      memoryUsage: process.memoryUsage(),\r\n      uptime: process.uptime(),\r\n    };\r\n  }\r\n}\r\n\r\n// \u5BFC\u51FA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const performanceMonitor = PerformanceMonitor.getInstance();\r\n\r\n// \u5BFC\u51FA\u4E2D\u95F4\u4EF6\u51FD\u6570\r\nexport function withPerformanceMonitoring<T extends any[]>(\r\n  handler: (...args: T) => Promise<NextResponse>\r\n) {\r\n  return async (...args: T): Promise<NextResponse> => {\r\n    const [request] = args;\r\n    return performanceMonitor.middleware()(request as NextRequest, async (req) => {\r\n      return handler(...args);\r\n    });\r\n  };\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a6b07fbec3dbdca51d62f3b228c74c1a61212fee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sprm22u6r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sprm22u6r();
cov_1sprm22u6r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1sprm22u6r().s[1]++;
exports.performanceMonitor = void 0;
/* istanbul ignore next */
cov_1sprm22u6r().s[2]++;
exports.withPerformanceMonitoring = withPerformanceMonitoring;
const logger_1 =
/* istanbul ignore next */
(cov_1sprm22u6r().s[3]++, require("@/lib/utils/logger"));
class PerformanceMonitor {
  constructor() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[0]++;
    cov_1sprm22u6r().s[4]++;
    this.metrics = new Map();
    /* istanbul ignore next */
    cov_1sprm22u6r().s[5]++;
    this.qpsCounter = [];
    /* istanbul ignore next */
    cov_1sprm22u6r().s[6]++;
    this.logger = new logger_1.Logger('PerformanceMonitor');
    // 性能阈值配置
    /* istanbul ignore next */
    cov_1sprm22u6r().s[7]++;
    this.THRESHOLDS = {
      API_RESPONSE_TIME: 500,
      // 500ms
      QPS_LIMIT: 1000,
      // 1000 QPS
      MEMORY_LIMIT: 1024 * 1024 * 1024,
      // 1GB
      CPU_LIMIT: 80 // 80%
    };
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[1]++;
    cov_1sprm22u6r().s[8]++;
    if (!PerformanceMonitor.instance) {
      /* istanbul ignore next */
      cov_1sprm22u6r().b[0][0]++;
      cov_1sprm22u6r().s[9]++;
      PerformanceMonitor.instance = new PerformanceMonitor();
    } else
    /* istanbul ignore next */
    {
      cov_1sprm22u6r().b[0][1]++;
    }
    cov_1sprm22u6r().s[10]++;
    return PerformanceMonitor.instance;
  }
  /**
   * 性能监控中间件
   */
  middleware() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[2]++;
    cov_1sprm22u6r().s[11]++;
    return async (request, handler) => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[3]++;
      const requestId =
      /* istanbul ignore next */
      (cov_1sprm22u6r().s[12]++, this.generateRequestId());
      const startTime =
      /* istanbul ignore next */
      (cov_1sprm22u6r().s[13]++, Date.now());
      const startCpuUsage =
      /* istanbul ignore next */
      (cov_1sprm22u6r().s[14]++, process.cpuUsage());
      // 记录请求开始
      /* istanbul ignore next */
      cov_1sprm22u6r().s[15]++;
      this.recordRequestStart(requestId, request, startTime);
      /* istanbul ignore next */
      cov_1sprm22u6r().s[16]++;
      try {
        /* istanbul ignore next */
        cov_1sprm22u6r().s[17]++;
        // 检查QPS限制
        await this.checkQpsLimit();
        // 执行请求处理
        const response =
        /* istanbul ignore next */
        (cov_1sprm22u6r().s[18]++, await handler(request));
        // 记录请求完成
        const endTime =
        /* istanbul ignore next */
        (cov_1sprm22u6r().s[19]++, Date.now());
        const duration =
        /* istanbul ignore next */
        (cov_1sprm22u6r().s[20]++, endTime - startTime);
        const endCpuUsage =
        /* istanbul ignore next */
        (cov_1sprm22u6r().s[21]++, process.cpuUsage(startCpuUsage));
        /* istanbul ignore next */
        cov_1sprm22u6r().s[22]++;
        await this.recordRequestEnd(requestId, request, response, startTime, endTime, duration, endCpuUsage);
        // 添加性能头部
        /* istanbul ignore next */
        cov_1sprm22u6r().s[23]++;
        response.headers.set('X-Request-ID', requestId);
        /* istanbul ignore next */
        cov_1sprm22u6r().s[24]++;
        response.headers.set('X-Response-Time', `${duration}ms`);
        /* istanbul ignore next */
        cov_1sprm22u6r().s[25]++;
        response.headers.set('X-QPS-Current', this.getCurrentQps().toString());
        /* istanbul ignore next */
        cov_1sprm22u6r().s[26]++;
        return response;
      } catch (error) {
        const endTime =
        /* istanbul ignore next */
        (cov_1sprm22u6r().s[27]++, Date.now());
        const duration =
        /* istanbul ignore next */
        (cov_1sprm22u6r().s[28]++, endTime - startTime);
        // 记录错误
        /* istanbul ignore next */
        cov_1sprm22u6r().s[29]++;
        await this.recordError(requestId, request, error, duration);
        /* istanbul ignore next */
        cov_1sprm22u6r().s[30]++;
        throw error;
      }
    };
  }
  /**
   * 检查QPS限制
   */
  async checkQpsLimit() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[4]++;
    const currentQps =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[31]++, this.getCurrentQps());
    /* istanbul ignore next */
    cov_1sprm22u6r().s[32]++;
    if (currentQps > this.THRESHOLDS.QPS_LIMIT) {
      /* istanbul ignore next */
      cov_1sprm22u6r().b[1][0]++;
      cov_1sprm22u6r().s[33]++;
      this.logger.warn('QPS limit exceeded', {
        currentQps,
        limit: this.THRESHOLDS.QPS_LIMIT
      });
      // 可以选择抛出错误或实施限流
      /* istanbul ignore next */
      cov_1sprm22u6r().s[34]++;
      throw new Error(`QPS limit exceeded: ${currentQps}/${this.THRESHOLDS.QPS_LIMIT}`);
    } else
    /* istanbul ignore next */
    {
      cov_1sprm22u6r().b[1][1]++;
    }
  }
  /**
   * 记录请求开始
   */
  recordRequestStart(requestId, request, startTime) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[5]++;
    cov_1sprm22u6r().s[35]++;
    // 更新QPS计数器
    this.updateQpsCounter();
    /* istanbul ignore next */
    cov_1sprm22u6r().s[36]++;
    this.logger.info('Request started', {
      requestId,
      method: request.method,
      url: request.url,
      userAgent: request.headers.get('user-agent'),
      ip: this.getClientIp(request)
    });
  }
  /**
   * 记录请求完成
   */
  async recordRequestEnd(requestId, request, response, startTime, endTime, duration, cpuUsage) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[6]++;
    const memoryUsage =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[37]++, process.memoryUsage());
    const metrics =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[38]++, {
      requestId,
      method: request.method,
      url: request.url,
      startTime,
      endTime,
      duration,
      statusCode: response.status,
      userAgent:
      /* istanbul ignore next */
      (cov_1sprm22u6r().b[2][0]++, request.headers.get('user-agent')) ||
      /* istanbul ignore next */
      (cov_1sprm22u6r().b[2][1]++, undefined),
      ip: this.getClientIp(request),
      memoryUsage,
      cpuUsage
    });
    // 存储指标
    /* istanbul ignore next */
    cov_1sprm22u6r().s[39]++;
    this.metrics.set(requestId, metrics);
    // 检查性能阈值
    /* istanbul ignore next */
    cov_1sprm22u6r().s[40]++;
    await this.checkPerformanceThresholds(metrics);
    // 记录日志
    const logLevel =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[41]++, duration > this.THRESHOLDS.API_RESPONSE_TIME ?
    /* istanbul ignore next */
    (cov_1sprm22u6r().b[3][0]++, 'warn') :
    /* istanbul ignore next */
    (cov_1sprm22u6r().b[3][1]++, 'info'));
    /* istanbul ignore next */
    cov_1sprm22u6r().s[42]++;
    this.logger.log(logLevel, 'Request completed', {
      requestId,
      duration,
      statusCode: response.status,
      memoryUsed: Math.round(memoryUsage.heapUsed / 1024 / 1024) // MB
    });
    // 清理旧指标（保留最近1000条）
    /* istanbul ignore next */
    cov_1sprm22u6r().s[43]++;
    if (this.metrics.size > 1000) {
      /* istanbul ignore next */
      cov_1sprm22u6r().b[4][0]++;
      const oldestKey =
      /* istanbul ignore next */
      (cov_1sprm22u6r().s[44]++, this.metrics.keys().next().value);
      /* istanbul ignore next */
      cov_1sprm22u6r().s[45]++;
      this.metrics.delete(oldestKey);
    } else
    /* istanbul ignore next */
    {
      cov_1sprm22u6r().b[4][1]++;
    }
  }
  /**
   * 记录错误
   */
  async recordError(requestId, request, error, duration) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[7]++;
    cov_1sprm22u6r().s[46]++;
    this.logger.error('Request failed', {
      requestId,
      method: request.method,
      url: request.url,
      duration,
      error: error.message,
      stack: error.stack
    });
    // 发送错误指标到监控系统
    /* istanbul ignore next */
    cov_1sprm22u6r().s[47]++;
    await this.sendErrorMetrics(requestId, error, duration);
  }
  /**
   * 检查性能阈值
   */
  async checkPerformanceThresholds(metrics) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[8]++;
    cov_1sprm22u6r().s[48]++;
    // 检查响应时间
    if (metrics.duration > this.THRESHOLDS.API_RESPONSE_TIME) {
      /* istanbul ignore next */
      cov_1sprm22u6r().b[5][0]++;
      cov_1sprm22u6r().s[49]++;
      await this.sendAlert('SLOW_RESPONSE', {
        requestId: metrics.requestId,
        duration: metrics.duration,
        threshold: this.THRESHOLDS.API_RESPONSE_TIME,
        url: metrics.url
      });
    } else
    /* istanbul ignore next */
    {
      cov_1sprm22u6r().b[5][1]++;
    }
    // 检查内存使用
    cov_1sprm22u6r().s[50]++;
    if (metrics.memoryUsage.heapUsed > this.THRESHOLDS.MEMORY_LIMIT) {
      /* istanbul ignore next */
      cov_1sprm22u6r().b[6][0]++;
      cov_1sprm22u6r().s[51]++;
      await this.sendAlert('HIGH_MEMORY_USAGE', {
        requestId: metrics.requestId,
        memoryUsed: metrics.memoryUsage.heapUsed,
        threshold: this.THRESHOLDS.MEMORY_LIMIT
      });
    } else
    /* istanbul ignore next */
    {
      cov_1sprm22u6r().b[6][1]++;
    }
  }
  /**
   * 更新QPS计数器
   */
  updateQpsCounter() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[9]++;
    const now =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[52]++, Date.now());
    const windowSize =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[53]++, 1000); // 1秒窗口
    // 清理过期的计数器
    /* istanbul ignore next */
    cov_1sprm22u6r().s[54]++;
    this.qpsCounter = this.qpsCounter.filter(metric => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[10]++;
      cov_1sprm22u6r().s[55]++;
      return now - metric.timestamp < windowSize;
    });
    // 添加新的计数
    /* istanbul ignore next */
    cov_1sprm22u6r().s[56]++;
    this.qpsCounter.push({
      timestamp: now,
      count: 1,
      windowSize
    });
  }
  /**
   * 获取当前QPS
   */
  getCurrentQps() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[11]++;
    const now =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[57]++, Date.now());
    const windowSize =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[58]++, 1000); // 1秒窗口
    // 清理过期的计数器
    /* istanbul ignore next */
    cov_1sprm22u6r().s[59]++;
    this.qpsCounter = this.qpsCounter.filter(metric => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[12]++;
      cov_1sprm22u6r().s[60]++;
      return now - metric.timestamp < windowSize;
    });
    /* istanbul ignore next */
    cov_1sprm22u6r().s[61]++;
    return this.qpsCounter.length;
  }
  /**
   * 获取客户端IP
   */
  getClientIp(request) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[13]++;
    cov_1sprm22u6r().s[62]++;
    return /* istanbul ignore next */(cov_1sprm22u6r().b[7][0]++, request.headers.get('x-forwarded-for')) ||
    /* istanbul ignore next */
    (cov_1sprm22u6r().b[7][1]++, request.headers.get('x-real-ip')) ||
    /* istanbul ignore next */
    (cov_1sprm22u6r().b[7][2]++, 'unknown');
  }
  /**
   * 生成请求ID
   */
  generateRequestId() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[14]++;
    cov_1sprm22u6r().s[63]++;
    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * 发送告警
   */
  async sendAlert(type, data) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[15]++;
    cov_1sprm22u6r().s[64]++;
    try {
      /* istanbul ignore next */
      cov_1sprm22u6r().s[65]++;
      // 发送到监控系统或告警服务
      await fetch('/api/admin/alerts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type,
          data,
          timestamp: new Date().toISOString()
        })
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1sprm22u6r().s[66]++;
      this.logger.error('Failed to send alert', {
        type,
        error: error.message
      });
    }
  }
  /**
   * 发送错误指标
   */
  async sendErrorMetrics(requestId, error, duration) {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[16]++;
    cov_1sprm22u6r().s[67]++;
    try {
      /* istanbul ignore next */
      cov_1sprm22u6r().s[68]++;
      await fetch('/api/metrics/record', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type: 'error',
          requestId,
          error: error.message,
          duration,
          timestamp: new Date().toISOString()
        })
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1sprm22u6r().s[69]++;
      this.logger.error('Failed to send error metrics', {
        error: err.message
      });
    }
  }
  /**
   * 获取性能统计
   */
  getPerformanceStats() {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[17]++;
    const recentMetrics =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[70]++, Array.from(this.metrics.values()).filter(m => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[18]++;
      cov_1sprm22u6r().s[71]++;
      return Date.now() - m.endTime < 60000;
    })); // 最近1分钟
    /* istanbul ignore next */
    cov_1sprm22u6r().s[72]++;
    if (recentMetrics.length === 0) {
      /* istanbul ignore next */
      cov_1sprm22u6r().b[8][0]++;
      cov_1sprm22u6r().s[73]++;
      return {
        totalRequests: 0,
        averageResponseTime: 0,
        currentQps: 0,
        errorRate: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1sprm22u6r().b[8][1]++;
    }
    const totalRequests =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[74]++, recentMetrics.length);
    const averageResponseTime =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[75]++, recentMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[19]++;
      cov_1sprm22u6r().s[76]++;
      return sum + m.duration;
    }, 0) / totalRequests);
    const errorCount =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[77]++, recentMetrics.filter(m => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[20]++;
      cov_1sprm22u6r().s[78]++;
      return m.statusCode >= 400;
    }).length);
    const errorRate =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[79]++, errorCount / totalRequests * 100);
    /* istanbul ignore next */
    cov_1sprm22u6r().s[80]++;
    return {
      totalRequests,
      averageResponseTime: Math.round(averageResponseTime),
      currentQps: this.getCurrentQps(),
      errorRate: Math.round(errorRate * 100) / 100,
      memoryUsage: process.memoryUsage(),
      uptime: process.uptime()
    };
  }
}
// 导出单例实例
/* istanbul ignore next */
cov_1sprm22u6r().s[81]++;
exports.performanceMonitor = PerformanceMonitor.getInstance();
// 导出中间件函数
function withPerformanceMonitoring(handler) {
  /* istanbul ignore next */
  cov_1sprm22u6r().f[21]++;
  cov_1sprm22u6r().s[82]++;
  return async (...args) => {
    /* istanbul ignore next */
    cov_1sprm22u6r().f[22]++;
    const [request] =
    /* istanbul ignore next */
    (cov_1sprm22u6r().s[83]++, args);
    /* istanbul ignore next */
    cov_1sprm22u6r().s[84]++;
    return exports.performanceMonitor.middleware()(request, async req => {
      /* istanbul ignore next */
      cov_1sprm22u6r().f[23]++;
      cov_1sprm22u6r().s[85]++;
      return handler(...args);
    });
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,