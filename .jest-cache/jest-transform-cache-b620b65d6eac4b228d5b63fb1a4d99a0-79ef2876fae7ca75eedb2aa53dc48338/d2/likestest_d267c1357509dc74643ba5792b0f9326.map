{"file":"E:\\zk-agent\\tests\\api\\routes\\likes.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\tests\\api\\routes\\likes.test.ts"],"sourcesContent":["/**\n * 点赞功能API路由错误处理测试\n * 测试点赞、取消点赞、获取点赞状态等各种错误场景\n */\n\nimport { NextRequest } from 'next/server';\nimport { GET, POST } from '@/app/api/likes/route';\nimport { GlobalErrorHandler } from '@/lib/middleware/global-error-handler';\n// import { AgentError, AgentErrorType, ErrorSeverity } from '@/lib/errors/agent-errors';\n\n// Mock DELETE method for testing\nconst DELETE = jest.fn();\n\n// Mock dependencies\njest.mock('../../../lib/services/likes-manager', () => ({\n  addLike: jest.fn(),\n  removeLike: jest.fn(),\n  getLikeStatus: jest.fn(),\n  getLikeCount: jest.fn(),\n  getUserLikes: jest.fn(),\n  getPopularContent: jest.fn(),\n  validateLikePermissions: jest.fn(),\n  checkLikeLimit: jest.fn()\n}));\n\njest.mock('../../../lib/storage/likes-store', () => ({\n  storeLike: jest.fn(),\n  deleteLike: jest.fn(),\n  getLike: jest.fn(),\n  getLikesByUser: jest.fn(),\n  getLikesByContent: jest.fn(),\n  updateLikeMetadata: jest.fn(),\n  checkLikeExists: jest.fn()\n}));\n\njest.mock('../../../lib/services/content-validator', () => ({\n  validateContentExists: jest.fn(),\n  validateContentType: jest.fn(),\n  checkContentAccess: jest.fn(),\n  validateContentStatus: jest.fn()\n}));\n\njest.mock('../../../lib/auth/session', () => ({\n  validateSession: jest.fn(),\n  getUserId: jest.fn(),\n  checkUserPermissions: jest.fn()\n}));\n\njest.mock('../../../lib/services/notification-manager', () => ({\n  sendLikeNotification: jest.fn(),\n  sendUnlikeNotification: jest.fn()\n}));\n\ndescribe('Likes API Error Handling', () => {\n  let errorHandler: any;\n\n  beforeEach(() => {\n    errorHandler = GlobalErrorHandler.getInstance();\n    jest.clearAllMocks();\n  });\n\n  describe('GET /api/likes - Get Like Status and Count', () => {\n    it('should handle missing content ID', async () => {\n      const request = new NextRequest('http://localhost:3000/api/likes');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.success).toBe(false);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Content ID is required');\n    });\n\n    it('should handle invalid content ID format', async () => {\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=invalid-format');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid content ID format');\n    });\n\n    it('should handle content not found', async () => {\n      const { validateContentExists } = require('../../../lib/services/content-validator');\n      validateContentExists.mockRejectedValue(new Error('Content not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=nonexistent-content');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Content not found');\n    });\n\n    it('should handle content access denied', async () => {\n      const { checkContentAccess } = require('../../../lib/services/content-validator');\n      checkContentAccess.mockRejectedValue(new Error('Access denied to content'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=private-content', {\n        headers: { 'Authorization': 'Bearer user-token' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Access denied to content');\n    });\n\n    it('should handle likes service unavailable', async () => {\n      const { getLikeStatus } = require('../../../lib/services/likes-manager');\n      getLikeStatus.mockRejectedValue(new Error('Likes service temporarily unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Likes service temporarily unavailable');\n    });\n\n    it('should handle likes storage corruption', async () => {\n      const { getLike } = require('../../../lib/storage/likes-store');\n      getLike.mockRejectedValue(new Error('Likes data corruption detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Likes data corruption detected');\n    });\n\n    it('should handle like count calculation error', async () => {\n      const { getLikeCount } = require('../../../lib/services/likes-manager');\n      getLikeCount.mockRejectedValue(new Error('Failed to calculate like count'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123&action=count');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to calculate like count');\n    });\n\n    it('should handle user likes retrieval timeout', async () => {\n      const { getUserLikes } = require('../../../lib/services/likes-manager');\n      getUserLikes.mockRejectedValue(new Error('User likes retrieval timeout'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?userId=user-123&action=user_likes', {\n        headers: { 'Authorization': 'Bearer user-token' }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error.message).toContain('User likes retrieval timeout');\n    });\n\n    it('should handle popular content query failure', async () => {\n      const { getPopularContent } = require('../../../lib/services/likes-manager');\n      getPopularContent.mockRejectedValue(new Error('Popular content query failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?action=popular&limit=10');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Popular content query failed');\n    });\n\n    it('should handle invalid pagination parameters', async () => {\n      const request = new NextRequest('http://localhost:3000/api/likes?action=user_likes&page=-1&limit=0');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid pagination parameters');\n    });\n\n    it('should handle excessive pagination limit', async () => {\n      const request = new NextRequest('http://localhost:3000/api/likes?action=user_likes&limit=10000');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Pagination limit exceeds maximum allowed');\n    });\n  });\n\n  describe('POST /api/likes - Add Like', () => {\n    let validLikeData: any;\n\n    beforeEach(() => {\n      validLikeData = {\n        contentId: 'content-123',\n        contentType: 'post',\n        metadata: {\n          source: 'web',\n          timestamp: new Date().toISOString()\n        }\n      };\n    });\n\n    it('should handle missing content ID in like request', async () => {\n      const invalidData = { ...validLikeData };\n      delete invalidData.contentId;\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(invalidData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.details).toContain('contentId');\n    });\n\n    it('should handle unauthenticated like request', async () => {\n      const { validateSession } = require('../../../lib/auth/session');\n      validateSession.mockRejectedValue(new Error('Authentication required'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('Authentication required');\n    });\n\n    it('should handle content not found for liking', async () => {\n      const { validateContentExists } = require('../../../lib/services/content-validator');\n      validateContentExists.mockRejectedValue(new Error('Content not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify({ ...validLikeData, contentId: 'nonexistent-content' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Content not found');\n    });\n\n    it('should handle content type not allowed for liking', async () => {\n      const { validateContentType } = require('../../../lib/services/content-validator');\n      validateContentType.mockRejectedValue(new Error('Content type not allowed for liking'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify({ ...validLikeData, contentType: 'restricted-type' }),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Content type not allowed for liking');\n    });\n\n    it('should handle already liked content', async () => {\n      const { checkLikeExists } = require('../../../lib/storage/likes-store');\n      checkLikeExists.mockResolvedValue(true);\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.code).toBe('CONFLICT');\n      expect(data.error.message).toContain('Content already liked');\n    });\n\n    it('should handle like limit exceeded', async () => {\n      const { checkLikeLimit } = require('../../../lib/services/likes-manager');\n      checkLikeLimit.mockRejectedValue(new Error('Daily like limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\n      expect(data.error.message).toContain('Daily like limit exceeded');\n    });\n\n    it('should handle insufficient permissions to like content', async () => {\n      const { validateLikePermissions } = require('../../../lib/services/likes-manager');\n      validateLikePermissions.mockRejectedValue(new Error('Insufficient permissions to like this content'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer limited-user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Insufficient permissions');\n    });\n\n    it('should handle like storage failure', async () => {\n      const { storeLike } = require('../../../lib/storage/likes-store');\n      storeLike.mockRejectedValue(new Error('Failed to store like: database write error'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to store like');\n    });\n\n    it('should handle like notification failure', async () => {\n      const { sendLikeNotification } = require('../../../lib/services/notification-manager');\n      sendLikeNotification.mockRejectedValue(new Error('Failed to send like notification'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n\n      // Should not fail the main operation\n      expect(response.status).not.toBe(500);\n    });\n\n    it('should handle content status validation failure', async () => {\n      const { validateContentStatus } = require('../../../lib/services/content-validator');\n      validateContentStatus.mockRejectedValue(new Error('Content is archived and cannot be liked'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Content is archived and cannot be liked');\n    });\n\n    it('should handle self-liking restriction', async () => {\n      const { validateLikePermissions } = require('../../../lib/services/likes-manager');\n      validateLikePermissions.mockRejectedValue(new Error('Cannot like your own content'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer content-owner-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Cannot like your own content');\n    });\n\n    it('should handle concurrent like attempts', async () => {\n      const { addLike } = require('../../../lib/services/likes-manager');\n      addLike.mockRejectedValue(new Error('Concurrent like operation detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Concurrent like operation detected');\n    });\n\n    it('should handle invalid like metadata', async () => {\n      const invalidMetadataData = {\n        ...validLikeData,\n        metadata: {\n          source: 'invalid-source',\n          timestamp: 'invalid-timestamp',\n          maliciousScript: '<script>alert(\"xss\")</script>'\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(invalidMetadataData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid metadata');\n    });\n  });\n\n  describe('DELETE /api/likes - Remove Like', () => {\n    it('should handle missing content ID in unlike request', async () => {\n      // const request = new NextRequest('http://localhost:3000/api/likes', {\n      //   method: 'DELETE'\n      // });\n\n      // // const response = await DELETE(request); // DELETE method not available\n       // const data = await response.json();\n\n      // expect(response.status).toBe(400);\n       // expect(data.error.code).toBe('VALIDATION_ERROR');\n       // expect(data.error.message).toContain('Content ID is required');\n    });\n\n    it('should handle unauthenticated unlike request', async () => {\n      const { validateSession } = require('../../../lib/auth/session');\n      validateSession.mockRejectedValue(new Error('Authentication required'));\n\n      // const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123', {\n      //   method: 'DELETE'\n      // });\n\n      // const response = await DELETE(request); // DELETE method not available\n      // const data = await response.json();\n\n      // expect(response.status).toBe(401);\n       // expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n       // expect(data.error.message).toContain('Authentication required');\n    });\n\n    it('should handle like not found for removal', async () => {\n      const { checkLikeExists } = require('../../../lib/storage/likes-store');\n      checkLikeExists.mockResolvedValue(false);\n\n      // const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123', {\n      //   method: 'DELETE',\n      //   headers: { 'Authorization': 'Bearer user-token' }\n      // });\n\n      // const response = await DELETE(request); // DELETE method not available\n      // const data = await response.json();\n\n      // expect(response.status).toBe(404);\n       // expect(data.error.code).toBe('NOT_FOUND');\n       // expect(data.error.message).toContain('Like not found');\n    });\n\n    it('should handle unauthorized like removal', async () => {\n      const { validateLikePermissions } = require('../../../lib/services/likes-manager');\n      validateLikePermissions.mockRejectedValue(new Error('Cannot remove like: not the original liker'));\n\n      // const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123', {\n      //   method: 'DELETE',\n      //   headers: { 'Authorization': 'Bearer different-user-token' }\n      // });\n\n      // const response = await DELETE(request); // DELETE method not available\n      // const data = await response.json();\n\n      // expect(response.status).toBe(403);\n       // expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n       // expect(data.error.message).toContain('Cannot remove like');\n    });\n\n    it('should handle like removal storage failure', async () => {\n      const { deleteLike } = require('../../../lib/storage/likes-store');\n      deleteLike.mockRejectedValue(new Error('Failed to delete like: database error'));\n\n      // const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123', {\n      //   method: 'DELETE',\n      //   headers: { 'Authorization': 'Bearer user-token' }\n      // });\n\n      // const response = await DELETE(request); // DELETE method not available\n      // const data = await response.json();\n\n      // expect(response.status).toBe(500);\n       // expect(data.error.message).toContain('Failed to delete like');\n    });\n\n    it('should handle unlike notification failure', async () => {\n      const { sendUnlikeNotification } = require('../../../lib/services/notification-manager');\n      sendUnlikeNotification.mockRejectedValue(new Error('Failed to send unlike notification'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer user-token' }\n      });\n\n      const response = await DELETE(request);\n\n      // Should not fail the main operation\n      expect(response.status).not.toBe(500);\n    });\n\n    it('should handle concurrent unlike attempts', async () => {\n      const { removeLike } = require('../../../lib/services/likes-manager');\n      removeLike.mockRejectedValue(new Error('Concurrent unlike operation detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=content-123', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer user-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Concurrent unlike operation detected');\n    });\n\n    it('should handle like removal from archived content', async () => {\n      const { validateContentStatus } = require('../../../lib/services/content-validator');\n      validateContentStatus.mockRejectedValue(new Error('Cannot remove like from archived content'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes?contentId=archived-content', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer user-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Cannot remove like from archived content');\n    });\n  });\n\n  describe('Batch Like Operations', () => {\n    it('should handle batch like with partial failures', async () => {\n      const { addLike } = require('../../../lib/services/likes-manager');\n      addLike.mockImplementation((data: any) => {\n        if (data.contentId === 'invalid-content') {\n          throw new Error('Content not found');\n        }\n        return Promise.resolve({ likeId: 'like-123' });\n      });\n\n      const batchData = {\n        likes: [\n          { contentId: 'content-1', contentType: 'post' },\n          { contentId: 'invalid-content', contentType: 'post' },\n          { contentId: 'content-3', contentType: 'comment' }\n        ]\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes/batch', {\n        method: 'POST',\n        body: JSON.stringify(batchData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(207); // Multi-status\n      expect(data.results).toBeDefined();\n      expect(data.errors).toBeDefined();\n    });\n\n    it('should handle batch unlike with partial failures', async () => {\n      const { removeLike } = require('../../../lib/services/likes-manager');\n      removeLike.mockImplementation((contentId: any) => {\n        if (contentId === 'not-liked-content') {\n          throw new Error('Like not found');\n        }\n        return Promise.resolve();\n      });\n\n      const batchData = {\n        contentIds: ['content-1', 'not-liked-content', 'content-3']\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes/batch', {\n        method: 'DELETE',\n        body: JSON.stringify(batchData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(207); // Multi-status\n      expect(data.results).toBeDefined();\n      expect(data.errors).toBeDefined();\n    });\n\n    it('should handle batch operation size limit exceeded', async () => {\n      const largeBatchData = {\n        likes: Array.from({ length: 1001 }, (_, i) => ({\n          contentId: `content-${i}`,\n          contentType: 'post'\n        }))\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes/batch', {\n        method: 'POST',\n        body: JSON.stringify(largeBatchData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Batch size exceeds maximum allowed');\n    });\n  });\n\n  describe('Like Analytics and Aggregation', () => {\n    it('should handle like analytics calculation failure', async () => {\n      const { getLikeCount } = require('../../../lib/services/likes-manager');\n      getLikeCount.mockRejectedValue(new Error('Analytics calculation failed'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes/analytics?contentId=content-123');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Analytics calculation failed');\n    });\n\n    it('should handle like trend analysis timeout', async () => {\n      const { getPopularContent } = require('../../../lib/services/likes-manager');\n      getPopularContent.mockRejectedValue(new Error('Trend analysis timeout'));\n\n      const request = new NextRequest('http://localhost:3000/api/likes/trends?period=7d');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(504);\n      expect(data.error.message).toContain('Trend analysis timeout');\n    });\n\n    it('should handle invalid analytics parameters', async () => {\n      const request = new NextRequest('http://localhost:3000/api/likes/analytics?period=invalid&groupBy=unknown');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Invalid analytics parameters');\n    });\n  });\n\n  describe('Error Recovery and Monitoring', () => {\n    it('should provide like operation recovery suggestions', async () => {\n      const { addLike } = require('../../../lib/services/likes-manager');\n      addLike.mockRejectedValue(new Error('Temporary likes service outage'));\n\n      const validLikeData = {\n        contentId: 'content-123',\n        contentType: 'post'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(data.error.recovery).toBeDefined();\n      expect(data.error.recovery.suggestions).toContain('Retry like operation');\n    });\n\n    it('should track like operation performance', async () => {\n      const { addLike } = require('../../../lib/services/likes-manager');\n      addLike.mockRejectedValue(new Error('Test error'));\n\n      const validLikeData = {\n        contentId: 'content-123',\n        contentType: 'post'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      await POST(request);\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.likeErrorCount).toBeGreaterThan(0);\n    });\n\n    it('should include like context in error responses', async () => {\n      const { addLike } = require('../../../lib/services/likes-manager');\n      addLike.mockRejectedValue(new Error('Test error'));\n\n      const validLikeData = {\n        contentId: 'content-123',\n        contentType: 'post'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/likes', {\n        method: 'POST',\n        body: JSON.stringify(validLikeData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(data.error.context).toBeDefined();\n      expect(data.error.context.operation).toBe('addLike');\n      expect(data.error.context.contentId).toBe('content-123');\n    });\n  });\n});"],"version":3}