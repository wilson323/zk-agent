dff163d0557e61c219d0b119a96cc70b
"use strict";

/**
 * @file sharing\[shareId]\download\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1m6tpiihze() {
  var path = "E:\\zk-agent\\app\\api\\sharing\\[shareId]\\download\\route.ts";
  var hash = "3e999c21d33da533d618db647501f1e655ea8ab0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\sharing\\[shareId]\\download\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "3": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "6": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "7": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "9": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "10": {
        start: {
          line: 18,
          column: 33
        },
        end: {
          line: 18,
          column: 49
        }
      },
      "11": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 58
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "13": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 103
        }
      },
      "14": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 47
        }
      },
      "15": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 97
        }
      },
      "16": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "17": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 37
        }
      },
      "18": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 55
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 96
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "21": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 104
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 100
          },
          end: {
            line: 15,
            column: 101
          }
        },
        loc: {
          start: {
            line: 15,
            column: 175
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 49
          }
        }, {
          start: {
            line: 19,
            column: 53
          },
          end: {
            line: 19,
            column: 58
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\sharing\\[shareId]\\download\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,wCAAwD;AACxD,0EAAkF;AAClF,uDAA4D;AAC5D,0CAAuC;AACvC,+BAA4B;AAEf,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;QAC3B,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC;QAEnD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,+BAAkB,CAAC,KAAK,CAC7B,2BAA2B,EAC3B,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;QACJ,CAAC;QAED,MAAM,QAAQ,GAAG,SAAS,OAAO,MAAM,CAAC;QACxC,MAAM,QAAQ,GAAG,IAAA,WAAI,EAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE9E,MAAM,UAAU,GAAG,MAAM,IAAA,mBAAQ,EAAC,QAAQ,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,MAAM,EAAE,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,+BAA+B,OAAO,IAAI,MAAM,GAAG,CAAC,CAAC;QAExF,OAAO,IAAI,qBAAY,CAAC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IACnD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gCAAgC,EAChC,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\sharing\\[shareId]\\download\\route.ts"],
      sourcesContent: ["/**\n * @file sharing\\[shareId]\\download\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { readFile } from \"fs/promises\";\nimport { join } from \"path\";\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { shareId } = params;\n      const { searchParams } = new URL(req.url);\n      const format = searchParams.get('format') || \"png\";\n    \n      if (!shareId) {\n        return ApiResponseWrapper.error(\n          \"Missing shareId parameter\",\n          { status: 400 }\n        );\n      }\n    \n      const fileName = `share-${shareId}.png`;\n      const filePath = join(process.cwd(), \"public\", \"uploads\", \"shares\", fileName);\n    \n      const fileBuffer = await readFile(filePath);\n    \n      const headers = new Headers();\n      headers.set(\"Content-Type\", `image/${format}`);\n      headers.set(\"Content-Disposition\", `attachment; filename=\"share-${shareId}.${format}\"`);\n    \n      return new NextResponse(fileBuffer, { headers });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"File not found or access error\",\n        { status: 404 }\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e999c21d33da533d618db647501f1e655ea8ab0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m6tpiihze = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m6tpiihze();
cov_1m6tpiihze().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1m6tpiihze().s[1]++;
exports.GET = void 0;
const server_1 =
/* istanbul ignore next */
(cov_1m6tpiihze().s[2]++, require("next/server"));
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1m6tpiihze().s[3]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1m6tpiihze().s[4]++, require("@/lib/utils/api-helper"));
const promises_1 =
/* istanbul ignore next */
(cov_1m6tpiihze().s[5]++, require("fs/promises"));
const path_1 =
/* istanbul ignore next */
(cov_1m6tpiihze().s[6]++, require("path"));
/* istanbul ignore next */
cov_1m6tpiihze().s[7]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1m6tpiihze().f[0]++;
  cov_1m6tpiihze().s[8]++;
  try {
    const {
      shareId
    } =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[9]++, params);
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[10]++, new URL(req.url));
    const format =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[11]++,
    /* istanbul ignore next */
    (cov_1m6tpiihze().b[0][0]++, searchParams.get('format')) ||
    /* istanbul ignore next */
    (cov_1m6tpiihze().b[0][1]++, "png"));
    /* istanbul ignore next */
    cov_1m6tpiihze().s[12]++;
    if (!shareId) {
      /* istanbul ignore next */
      cov_1m6tpiihze().b[1][0]++;
      cov_1m6tpiihze().s[13]++;
      return api_helper_1.ApiResponseWrapper.error("Missing shareId parameter", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1m6tpiihze().b[1][1]++;
    }
    const fileName =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[14]++, `share-${shareId}.png`);
    const filePath =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[15]++, (0, path_1.join)(process.cwd(), "public", "uploads", "shares", fileName));
    const fileBuffer =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[16]++, await (0, promises_1.readFile)(filePath));
    const headers =
    /* istanbul ignore next */
    (cov_1m6tpiihze().s[17]++, new Headers());
    /* istanbul ignore next */
    cov_1m6tpiihze().s[18]++;
    headers.set("Content-Type", `image/${format}`);
    /* istanbul ignore next */
    cov_1m6tpiihze().s[19]++;
    headers.set("Content-Disposition", `attachment; filename="share-${shareId}.${format}"`);
    /* istanbul ignore next */
    cov_1m6tpiihze().s[20]++;
    return new server_1.NextResponse(fileBuffer, {
      headers
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1m6tpiihze().s[21]++;
    return api_helper_1.ApiResponseWrapper.error("File not found or access error", {
      status: 404
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,