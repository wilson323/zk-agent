{"version":3,"names":["cov_262fnejt7o","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","withGlobalErrorHandler","server_1","require","zod_1","agent_errors_1","api_helper_1","core_1","error_monitor_1","crypto_1","error_tracker_1","client_1","ErrorClassifier","classifyError","error","ZodError","AgentErrorType","AUTHENTICATION_ERROR","severity","ErrorSeverity","LOW","statusCode","userMessage","shouldRetry","AgentError","getStatusCodeFromErrorType","getUserMessageFromError","isRetryableError","code","SERVICE_UNAVAILABLE","HIGH","message","includes","CHAT_API_ERROR","MEDIUM","CRITICAL","statusMap","CAD_FILE_PARSE_ERROR","CAD_FORMAT_UNSUPPORTED","CAD_FILE_CORRUPTED","CAD_ANALYSIS_TIMEOUT","POSTER_GENERATION_FAILED","POSTER_TEMPLATE_ERROR","POSTER_RESOURCE_LIMIT","POSTER_TIMEOUT","CHAT_CONTEXT_LOST","CHAT_RATE_LIMIT","CHAT_MODEL_UNAVAILABLE","AGENT_COMMUNICATION_ERROR","RESOURCE_EXHAUSTED","messageMap","retryableErrors","GlobalErrorHandler","constructor","errorCount","lastErrorTime","circuitBreakerOpen","circuitBreakerTimeout","timeWindowMs","errorThreshold","parseInt","process","env","ERROR_THRESHOLD","getInstance","instance","handleError","request","context","startTime","Date","now","classification","agentError","agentType","originalError","url","method","userAgent","headers","get","recordError","checkTimeWindowAndUpdateStats","openCircuitBreaker","ApiLogger","logError","errorId","sessionId","Math","random","toString","substr","stack","timestamp","createErrorResponse","handlerError","console","NextResponse","json","success","ErrorCode","INTERNAL_SERVER_ERROR","details","toISOString","status","errorCode","mapErrorTypeToCode","isDevelopment","NODE_ENV","errorResponse","retryable","originalMessage","requestId","retryAfter","calculateRetryDelay","String","codeMap","VALIDATION_ERROR","TIMEOUT_ERROR","RATE_LIMIT_ERROR","EXTERNAL_SERVICE_ERROR","delayMap","updateErrorStats","shouldTriggerCircuitBreaker","warn","circuitBreakerResetTimer","clearTimeout","setTimeout","info","errorMonitor","reportError","userId","resolved","source","environment","errorTracker","trackError","LogLevel","ERROR","id","recordingError","isCircuitBreakerOpen","getErrorStats","handler","req","errorHandler","randomUUID","globalErrorHandler"],"sources":["E:\\zk-agent\\lib\\middleware\\global-error-handler.ts"],"sourcesContent":["/**\n * @file Global Error Handler Middleware\n * @description 全局异常处理中间件，统一处理所有API路由的异常\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { ZodError } from 'zod';\nimport { AgentError, ErrorSeverity, AgentErrorType } from '../errors/agent-errors';\nimport { ApiResponseWrapper, ApiLogger } from '../utils/api-helper';\nimport { ErrorCode } from '../../types/core';\nimport { errorMonitor } from '../monitoring/error-monitor';\nimport { randomUUID } from 'crypto';\nimport { Logger } from '../utils/logger';\n// 注释掉不存在的模块导入\n// import { ErrorRecoveryEngine } from '../monitoring/error-recovery-engine';\n// import { ErrorAnalysisEngine } from '../monitoring/error-analysis-engine';\nimport { ErrorCollector } from '../monitoring/error-monitor';\nimport { ErrorTracker } from '../monitoring/error-tracker';\nimport { errorTracker } from '../monitoring/error-tracker';\nimport { LogLevel } from '@prisma/client';\n\n// 错误分类器\nclass ErrorClassifier {\n  static classifyError(error: any): {\n    type: AgentErrorType;\n    severity: ErrorSeverity;\n    statusCode: number;\n    userMessage: string;\n    shouldRetry: boolean;\n  } {\n    // Zod验证错误\n    if (error instanceof ZodError) {\n      return {\n        type: AgentErrorType.AUTHENTICATION_ERROR,\n        severity: ErrorSeverity.LOW,\n        statusCode: 400,\n        userMessage: '请求参数验证失败',\n        shouldRetry: false\n      };\n    }\n\n    // 智能体错误\n    if (error instanceof AgentError) {\n      return {\n        type: error.type,\n        severity: error.severity,\n        statusCode: this.getStatusCodeFromErrorType(error.type),\n        userMessage: this.getUserMessageFromError(error),\n        shouldRetry: this.isRetryableError(error.type)\n      };\n    }\n\n    // 网络错误\n    if (error.code === 'ECONNREFUSED' || error.code === 'ENOTFOUND') {\n      return {\n        type: AgentErrorType.SERVICE_UNAVAILABLE,\n        severity: ErrorSeverity.HIGH,\n        statusCode: 503,\n        userMessage: '服务暂时不可用，请稍后重试',\n        shouldRetry: true\n      };\n    }\n\n    // 超时错误\n    if (error.code === 'ETIMEDOUT' || error.message?.includes('timeout')) {\n      return {\n        type: AgentErrorType.CHAT_API_ERROR,\n        severity: ErrorSeverity.MEDIUM,\n        statusCode: 408,\n        userMessage: '请求超时，请重试',\n        shouldRetry: true\n      };\n    }\n\n    // 权限错误\n    if (error.message?.includes('unauthorized') || error.message?.includes('forbidden')) {\n      return {\n        type: AgentErrorType.AUTHENTICATION_ERROR,\n        severity: ErrorSeverity.MEDIUM,\n        statusCode: 401,\n        userMessage: '身份验证失败',\n        shouldRetry: false\n      };\n    }\n\n    // 默认为内部服务器错误\n    return {\n      type: AgentErrorType.SERVICE_UNAVAILABLE,\n      severity: ErrorSeverity.CRITICAL,\n      statusCode: 500,\n      userMessage: '系统内部错误，我们正在处理',\n      shouldRetry: false\n    };\n  }\n\n  private static getStatusCodeFromErrorType(type: AgentErrorType): number {\n    const statusMap: Record<AgentErrorType, number> = {\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: 400,\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: 415,\n      [AgentErrorType.CAD_FILE_CORRUPTED]: 400,\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: 408,\n      [AgentErrorType.POSTER_GENERATION_FAILED]: 500,\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: 400,\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: 429,\n      [AgentErrorType.POSTER_TIMEOUT]: 408,\n      [AgentErrorType.CHAT_CONTEXT_LOST]: 400,\n      [AgentErrorType.CHAT_API_ERROR]: 502,\n      [AgentErrorType.CHAT_RATE_LIMIT]: 429,\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: 503,\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: 502,\n      [AgentErrorType.RESOURCE_EXHAUSTED]: 503,\n      [AgentErrorType.SERVICE_UNAVAILABLE]: 503,\n      [AgentErrorType.AUTHENTICATION_ERROR]: 401\n    };\n    return statusMap[type] || 500;\n  }\n\n  private static getUserMessageFromError(error: AgentError): string {\n    const messageMap: Record<AgentErrorType, string> = {\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: 'CAD文件解析失败，请检查文件格式',\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: '不支持的CAD文件格式',\n      [AgentErrorType.CAD_FILE_CORRUPTED]: 'CAD文件已损坏，请重新上传',\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: 'CAD分析超时，请稍后重试',\n      [AgentErrorType.POSTER_GENERATION_FAILED]: '海报生成失败，请重试',\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: '海报模板错误',\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: '资源使用超限，请稍后重试',\n      [AgentErrorType.POSTER_TIMEOUT]: '海报生成超时，请重试',\n      [AgentErrorType.CHAT_CONTEXT_LOST]: '对话上下文丢失，请重新开始对话',\n      [AgentErrorType.CHAT_API_ERROR]: '对话服务暂时不可用，请稍后重试',\n      [AgentErrorType.CHAT_RATE_LIMIT]: '请求过于频繁，请稍后重试',\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: '对话模型暂时不可用',\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: '智能体通信错误',\n      [AgentErrorType.RESOURCE_EXHAUSTED]: '系统资源不足，请稍后重试',\n      [AgentErrorType.SERVICE_UNAVAILABLE]: '服务暂时不可用，请稍后重试',\n      [AgentErrorType.AUTHENTICATION_ERROR]: '身份验证失败'\n    };\n    return messageMap[error.type] || error.message;\n  }\n\n  private static isRetryableError(type: AgentErrorType): boolean {\n    const retryableErrors = [\n      AgentErrorType.CAD_ANALYSIS_TIMEOUT,\n      AgentErrorType.POSTER_GENERATION_FAILED,\n      AgentErrorType.POSTER_TIMEOUT,\n      AgentErrorType.CHAT_API_ERROR,\n      AgentErrorType.CHAT_RATE_LIMIT,\n      AgentErrorType.CHAT_MODEL_UNAVAILABLE,\n      AgentErrorType.AGENT_COMMUNICATION_ERROR,\n      AgentErrorType.RESOURCE_EXHAUSTED,\n      AgentErrorType.SERVICE_UNAVAILABLE\n    ];\n    return retryableErrors.includes(type);\n  }\n}\n\n// 全局错误处理器\nexport class GlobalErrorHandler {\n  private static instance: GlobalErrorHandler;\n  private errorCount = 0;\n  private lastErrorTime = 0;\n  private circuitBreakerOpen = false;\n  private readonly circuitBreakerTimeout = 60000; // 1分钟\n  private readonly timeWindowMs = 60000; // 1分钟窗口\n  private readonly errorThreshold = parseInt(process.env.ERROR_THRESHOLD || '50'); // 错误阈值\n  private circuitBreakerResetTimer?: NodeJS.Timeout;\n\n  static getInstance(): GlobalErrorHandler {\n    if (!GlobalErrorHandler.instance) {\n      GlobalErrorHandler.instance = new GlobalErrorHandler();\n    }\n    return GlobalErrorHandler.instance;\n  }\n\n  /**\n   * 处理API错误\n   */\n  async handleError(\n    error: any,\n    request: NextRequest,\n    context?: any\n  ): Promise<NextResponse> {\n    const startTime = Date.now();\n    \n    try {\n      // 错误分类\n      const classification = ErrorClassifier.classifyError(error);\n      \n      // 创建标准化错误对象\n      const agentError = error instanceof AgentError \n        ? error \n        : new AgentError(\n            classification.type,\n            error.message || '未知错误',\n            classification.severity,\n            context?.agentType || 'unknown',\n            {\n              originalError: error,\n              url: request.url,\n              method: request.method,\n              userAgent: request.headers.get('user-agent'),\n              ...context\n            }\n          );\n\n      // 记录到监控系统\n      this.recordError(agentError);\n      \n      // 检查时间窗口并更新错误统计\n      this.checkTimeWindowAndUpdateStats();\n      \n      // 检查是否需要触发熔断器\n      if (this.errorCount >= this.errorThreshold) {\n        this.openCircuitBreaker();\n      }\n      \n      // 详细日志记录\n      ApiLogger.logError('Global error handled', {\n        errorId: agentError.sessionId || `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        type: agentError.type,\n        message: agentError.message,\n        statusCode: classification.statusCode,\n        stack: error.stack,\n        context: agentError.context,\n        timestamp: agentError.timestamp\n      });\n      \n      return this.createErrorResponse(classification, agentError, request);\n\n    } catch (handlerError) {\n      // 错误处理器本身出错的兜底处理\n      console.error('Global error handler failed:', handlerError);\n      \n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            code: ErrorCode.INTERNAL_SERVER_ERROR,\n            message: '系统内部错误',\n            details: null\n          },\n          timestamp: new Date().toISOString()\n        },\n        { status: 500 }\n      );\n    }\n  }\n\n  /**\n   * 创建错误响应\n   */\n  private createErrorResponse(\n    classification: any,\n    error: AgentError,\n    request: NextRequest\n  ): NextResponse {\n    const errorCode = this.mapErrorTypeToCode(classification.type);\n    \n    // 开发环境返回详细错误信息\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    \n    const errorResponse = {\n      success: false,\n      error: {\n        code: errorCode,\n        message: classification.userMessage,\n        type: classification.type,\n        severity: classification.severity,\n        retryable: classification.shouldRetry,\n        details: isDevelopment ? {\n          originalMessage: error.message,\n          stack: error.stack,\n          context: error.context\n        } : null\n      },\n      timestamp: new Date().toISOString(),\n      requestId: error.context?.requestId,\n      ...(classification.shouldRetry && {\n        retryAfter: this.calculateRetryDelay(classification.type)\n      })\n    };\n\n    return NextResponse.json(errorResponse, { \n      status: classification.statusCode,\n      headers: {\n        'X-Error-Type': classification.type,\n        'X-Error-Severity': classification.severity,\n        ...(classification.shouldRetry && {\n          'Retry-After': String(this.calculateRetryDelay(classification.type) / 1000)\n        })\n      }\n    });\n  }\n\n  /**\n   * 映射错误类型到错误代码\n   */\n  private mapErrorTypeToCode(type: AgentErrorType): ErrorCode {\n    const codeMap: Record<AgentErrorType, ErrorCode> = {\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CAD_FILE_CORRUPTED]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: ErrorCode.TIMEOUT_ERROR,\n      [AgentErrorType.POSTER_GENERATION_FAILED]: ErrorCode.INTERNAL_SERVER_ERROR,\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: ErrorCode.RATE_LIMIT_ERROR,\n      [AgentErrorType.POSTER_TIMEOUT]: ErrorCode.TIMEOUT_ERROR,\n      [AgentErrorType.CHAT_CONTEXT_LOST]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CHAT_API_ERROR]: ErrorCode.EXTERNAL_SERVICE_ERROR,\n      [AgentErrorType.CHAT_RATE_LIMIT]: ErrorCode.RATE_LIMIT_ERROR,\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: ErrorCode.SERVICE_UNAVAILABLE,\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: ErrorCode.EXTERNAL_SERVICE_ERROR,\n      [AgentErrorType.RESOURCE_EXHAUSTED]: ErrorCode.SERVICE_UNAVAILABLE,\n      [AgentErrorType.SERVICE_UNAVAILABLE]: ErrorCode.SERVICE_UNAVAILABLE,\n      [AgentErrorType.AUTHENTICATION_ERROR]: ErrorCode.AUTHENTICATION_ERROR\n    };\n    return codeMap[type] || ErrorCode.INTERNAL_SERVER_ERROR;\n  }\n\n  /**\n   * 计算重试延迟\n   */\n  private calculateRetryDelay(type: AgentErrorType): number {\n    const delayMap: Record<AgentErrorType, number> = {\n      // CAD分析错误\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: 5000,\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: 0, // 不重试\n      [AgentErrorType.CAD_FILE_CORRUPTED]: 0, // 不重试\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: 30000,\n      \n      // 海报生成错误\n      [AgentErrorType.POSTER_GENERATION_FAILED]: 10000,\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: 5000,\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: 30000,\n      [AgentErrorType.POSTER_TIMEOUT]: 15000,\n      \n      // 对话智能体错误\n      [AgentErrorType.CHAT_CONTEXT_LOST]: 5000,\n      [AgentErrorType.CHAT_API_ERROR]: 10000,\n      [AgentErrorType.CHAT_RATE_LIMIT]: 60000,\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: 30000,\n      \n      // 系统级错误\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: 15000,\n      [AgentErrorType.RESOURCE_EXHAUSTED]: 120000,\n      [AgentErrorType.SERVICE_UNAVAILABLE]: 60000,\n      [AgentErrorType.AUTHENTICATION_ERROR]: 5000\n    };\n    return delayMap[type] || 5000; // 默认5秒\n  }\n\n  /**\n   * 更新错误统计\n   */\n  private updateErrorStats(): void {\n    // 使用原子操作避免并发问题\n    const now = Date.now();\n    this.errorCount++;\n    this.lastErrorTime = now;\n  }\n\n  /**\n   * 检查时间窗口并更新统计\n   */\n  private checkTimeWindowAndUpdateStats(): void {\n    const now = Date.now();\n    \n    // 检查时间窗口是否过期\n    if (this.lastErrorTime > 0 && now - this.lastErrorTime > this.timeWindowMs) {\n      this.errorCount = 0;\n    }\n    \n    // 更新统计\n    this.errorCount++;\n    this.lastErrorTime = now;\n  }\n\n  /**\n   * 检查是否应该触发熔断器\n   */\n  private shouldTriggerCircuitBreaker(): boolean {\n    const now = Date.now();\n    \n    // 重置计数器（如果超过时间窗口）\n    if (now - this.lastErrorTime > this.timeWindowMs) {\n      this.errorCount = 0;\n      this.lastErrorTime = now; // 修复：更新时间戳\n    }\n    \n    return this.errorCount >= this.errorThreshold;\n  }\n\n  /**\n   * 开启熔断器\n   */\n  private openCircuitBreaker(): void {\n    if (this.circuitBreakerOpen) {\n      return; // 避免重复开启\n    }\n    \n    this.circuitBreakerOpen = true;\n    console.warn('🚨 Circuit breaker opened due to high error rate');\n    \n    // 清除之前的定时器\n    if (this.circuitBreakerResetTimer) {\n      clearTimeout(this.circuitBreakerResetTimer);\n    }\n    \n    // 设置自动恢复\n    this.circuitBreakerResetTimer = setTimeout(() => {\n      this.circuitBreakerOpen = false;\n      this.errorCount = 0;\n      this.lastErrorTime = 0;\n      console.info('✅ Circuit breaker closed, service restored');\n    }, this.circuitBreakerTimeout);\n  }\n\n  /**\n   * 记录错误到监控系统\n   */\n  private recordError(error: AgentError): void {\n    try {\n      // 集成错误监控系统\n      const errorId = error.sessionId || `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      errorMonitor.reportError(error, {\n        stack: error.stack || '',\n        timestamp: error.timestamp,\n        context: {\n          ...error.context,\n          userAgent: error.context?.userAgent || 'unknown',\n          url: error.context?.url || 'unknown',\n          userId: error.context?.userId || 'anonymous'\n        },\n        resolved: false,\n        errorId: errorId,\n        source: 'global-error-handler',\n        environment: process.env.NODE_ENV || 'development'\n      });\n\n      // 同时记录到错误追踪器\n      errorTracker.trackError(error, LogLevel.ERROR, {\n        sessionId: error.sessionId,\n        timestamp: new Date(),\n        ...error.context\n      });\n\n      // 保留控制台输出用于开发调试\n      if (process.env.NODE_ENV === 'development') {\n        console.error('Error recorded:', {\n          id: errorId,\n          type: error.type,\n          message: error.message,\n          timestamp: error.timestamp\n        });\n      }\n    } catch (recordingError) {\n      // 如果错误记录本身失败，至少输出到控制台\n      console.error('Failed to record error:', recordingError);\n      console.error('Original error:', error);\n    }\n  }\n\n\n\n  /**\n   * 检查熔断器状态\n   */\n  isCircuitBreakerOpen(): boolean {\n    return this.circuitBreakerOpen;\n  }\n  \n  /**\n   * 获取错误统计\n   */\n  getErrorStats() {\n    return {\n      errorCount: this.errorCount,\n      lastErrorTime: this.lastErrorTime,\n      circuitBreakerOpen: this.circuitBreakerOpen,\n      errorThreshold: this.errorThreshold,\n      timeWindowMs: this.timeWindowMs\n    };\n  }\n}\n\n// 中间件包装器\nexport function withGlobalErrorHandler(\n  handler: (req: NextRequest, context?: any) => Promise<NextResponse>\n) {\n  return async (req: NextRequest, context?: any): Promise<NextResponse> => {\n    const errorHandler = GlobalErrorHandler.getInstance();\n    \n    // 检查熔断器状态\n    if (errorHandler.isCircuitBreakerOpen()) {\n      const requestId = randomUUID();\n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            code: ErrorCode.SERVICE_UNAVAILABLE,\n            message: '服务暂时不可用，请稍后重试',\n            type: AgentErrorType.SERVICE_UNAVAILABLE\n          },\n          requestId,\n          timestamp: new Date().toISOString(),\n          retryAfter: 60\n        },\n        { \n          status: 503,\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Request-ID': requestId,\n            'Retry-After': '60'\n          }\n        }\n      );\n    }\n\n    try {\n      return await handler(req, context);\n    } catch (error) {\n      return await errorHandler.handleError(error, req, context);\n    }\n  };\n}\n\n// 导出单例实例\nexport const globalErrorHandler = GlobalErrorHandler.getInstance();"],"mappings":"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","ignoreList":[]}