bc8a37975be5035d790938da724ce248
"use strict";

/**
 * @file auth\logout\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1i85w9xz1h() {
  var path = "E:\\zk-agent\\app\\api\\auth\\logout\\route.ts";
  var hash = "cdc6ca633c5d522a1bb6bfcddea7e8fc6c26e6ce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\logout\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 74
        }
      },
      "7": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "10": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 58
        }
      },
      "11": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 38,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 105
          },
          end: {
            line: 16,
            column: 106
          }
        },
        loc: {
          start: {
            line: 16,
            column: 180
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 19
          },
          end: {
            line: 31,
            column: 20
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 33,
            column: 9
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 58
          }
        }, {
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 27,
            column: 90
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\logout\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE5D,2EAA8C;AAEjC,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,IAAI,EAAE,CAAC;QACT,SAAS;QACT,MAAM,oBAAM,CAAC,UAAU;aACpB,MAAM,CAAC;YACN,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,SAAS,EAAE,MAAM;gBACjB,MAAM,EAAE,QAAQ;gBAChB,QAAQ,EAAE;oBACR,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;oBACxC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;iBACvE;aACF;SACF,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,+BAAkB,CAAC,OAAO,CAAC;QAChC,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,MAAM;KAChB,CAAC,CAAC;AACL,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\logout\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\logout\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { getCurrentUser } from \"@/lib/auth/middleware\"\nimport prisma from \"@/lib/database/connection\"\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    if (user) {\n      // \u8BB0\u5F55\u767B\u51FA\u65E5\u5FD7\n      await prisma.usageStats\n        .create({\n          data: {\n            userId: user.userId,\n            agentType: \"auth\",\n            action: \"logout\",\n            metadata: {\n              userAgent: req.headers.get(\"user-agent\"),\n              ip: req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\"),\n            },\n          },\n        })\n        .catch((error) => {\n          console.error(\"Failed to log logout:\", error);\n        });\n    }\n\n    return ApiResponseWrapper.success({\n      success: true,\n      message: \"\u767B\u51FA\u6210\u529F\",\n    });\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cdc6ca633c5d522a1bb6bfcddea7e8fc6c26e6ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1i85w9xz1h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1i85w9xz1h();
var __importDefault =
/* istanbul ignore next */
(cov_1i85w9xz1h().s[0]++,
/* istanbul ignore next */
(cov_1i85w9xz1h().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1i85w9xz1h().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1i85w9xz1h().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1i85w9xz1h().f[0]++;
  cov_1i85w9xz1h().s[1]++;
  return /* istanbul ignore next */(cov_1i85w9xz1h().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1i85w9xz1h().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1i85w9xz1h().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1i85w9xz1h().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1i85w9xz1h().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1i85w9xz1h().s[3]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1i85w9xz1h().s[4]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1i85w9xz1h().s[5]++, require("@/lib/utils/api-helper"));
const connection_1 =
/* istanbul ignore next */
(cov_1i85w9xz1h().s[6]++, __importDefault(require("@/lib/database/connection")));
/* istanbul ignore next */
cov_1i85w9xz1h().s[7]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1i85w9xz1h().f[1]++;
  cov_1i85w9xz1h().s[8]++;
  if (user) {
    /* istanbul ignore next */
    cov_1i85w9xz1h().b[3][0]++;
    cov_1i85w9xz1h().s[9]++;
    // 记录登出日志
    await connection_1.default.usageStats.create({
      data: {
        userId: user.userId,
        agentType: "auth",
        action: "logout",
        metadata: {
          userAgent: req.headers.get("user-agent"),
          ip:
          /* istanbul ignore next */
          (cov_1i85w9xz1h().b[4][0]++, req.headers.get("x-forwarded-for")) ||
          /* istanbul ignore next */
          (cov_1i85w9xz1h().b[4][1]++, req.headers.get("x-real-ip"))
        }
      }
    }).catch(error => {
      /* istanbul ignore next */
      cov_1i85w9xz1h().f[2]++;
      cov_1i85w9xz1h().s[10]++;
      console.error("Failed to log logout:", error);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1i85w9xz1h().b[3][1]++;
  }
  cov_1i85w9xz1h().s[11]++;
  return api_helper_1.ApiResponseWrapper.success({
    success: true,
    message: "登出成功"
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,