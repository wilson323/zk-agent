c1522a79e92c6f0a839ce5bddd3a176e
"use strict";

/**
 * @file fastgpt\init-chat\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1xob4kg1ea() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts";
  var hash = "81d282c1ae27bb8ca9d3b4db024f7a32e6856f6a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 86
        },
        end: {
          line: 15,
          column: 100
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "9": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 90
        }
      },
      "10": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "11": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "12": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "14": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 110
        }
      },
      "15": {
        start: {
          line: 41,
          column: 65
        },
        end: {
          line: 41,
          column: 108
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 123
        }
      },
      "17": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 61
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 93
          },
          end: {
            line: 13,
            column: 94
          }
        },
        loc: {
          start: {
            line: 13,
            column: 122
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 58
          },
          end: {
            line: 41,
            column: 59
          }
        },
        loc: {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 108
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 50
          }
        }, {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 61
          }
        }, {
          start: {
            line: 19,
            column: 65
          },
          end: {
            line: 19,
            column: 90
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 23,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 14
          },
          end: {
            line: 22,
            column: 105
          }
        }, {
          start: {
            line: 23,
            column: 14
          },
          end: {
            line: 23,
            column: 42
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 21
          }
        }, {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 26,
            column: 34
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 24
          }
        }, {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 40
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 28
          }
        }, {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 48
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 25
          }
        }, {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 48
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 81
          }
        }, {
          start: {
            line: 42,
            column: 85
          },
          end: {
            line: 42,
            column: 104
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,0DAA4D;AAC5D,uDAA4D;AAC5D,kEAA8D;AAEjD,QAAA,IAAI,GAAG,IAAA,0BAAc,EAChC,4BAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;IAC1B,IAAI,CAAC;QACH,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAA;QAE5F,mDAAmD;QACnD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAA;QAE1C,sCAAsC;QACtC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,OAAO,IAAI,yBAAyB,CAAA;QAElF,oCAAoC;QACpC,MAAM,QAAQ,GAAG,QAAQ;YACvB,CAAC,CAAC,kBAAkB,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,mBAAmB;YAC7F,CAAC,CAAC,GAAG,MAAM,mBAAmB,CAAA;QAEhC,yCAAyC;QACzC,MAAM,cAAc,GAAG;YACrB,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC;YACvB,GAAG,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC;YAC7B,GAAG,CAAC,YAAY,IAAI,EAAE,YAAY,EAAE,CAAC;YACrC,GAAG,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;SACtC,CAAA;QAED,sCAAsC;QACtC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,QAAQ,EAAE;YACrC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,UAAU,MAAM,EAAE;aAClC;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;SACrC,CAAC,CAAA;QAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAA;YAClG,OAAO,+BAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,IAAI,mBAAmB,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAA;QACnG,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QAClC,OAAO,+BAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACzC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA;IAC/D,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\init-chat\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async ({ validatedBody }) => {\n    try {\n      const { model, agent_id, knowledge_id, user: userParam, baseUrl, useProxy } = _validatedBody\n    \n      // Use server-side environment variable for API key\n      const apiKey = process.env.FASTGPT_API_KEY\n    \n      // Use server-side or provided API URL\n      const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\"\n    \n      // Determine the actual API endpoint\n      const endpoint = useProxy\n        ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/chat/init`\n        : `${apiUrl}/api/v1/chat/init`\n    \n      // Prepare the request to the FastGPT API\n      const fastGPTRequest = {\n        ...(model && { model }),\n        ...(agent_id && { agent_id }),\n        ...(knowledge_id && { knowledge_id }),\n        ...(userParam && { user: userParam }),\n      }\n    \n      // Make the request to the FastGPT API\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify(fastGPTRequest),\n      })\n    \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }))\n        return ApiResponseWrapper.error(errorData.error?.message || 'FastGPT API error', response.status)\n      }\n    \n      const data = await response.json()\n      return ApiResponseWrapper.success(data)\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500)\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81d282c1ae27bb8ca9d3b4db024f7a32e6856f6a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xob4kg1ea = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xob4kg1ea();
cov_1xob4kg1ea().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xob4kg1ea().s[1]++;
exports.POST = void 0;
const api_route_1 =
/* istanbul ignore next */
(cov_1xob4kg1ea().s[2]++, require("@/lib/middleware/api-route"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1xob4kg1ea().s[3]++, require("@/lib/utils/api-helper"));
const route_configs_1 =
/* istanbul ignore next */
(cov_1xob4kg1ea().s[4]++, require("@/lib/middleware/route-configs"));
/* istanbul ignore next */
cov_1xob4kg1ea().s[5]++;
exports.POST = (0, api_route_1.createApiRoute)(route_configs_1.RouteConfigs.protectedPost(), async ({
  validatedBody
}) => {
  /* istanbul ignore next */
  cov_1xob4kg1ea().f[0]++;
  cov_1xob4kg1ea().s[6]++;
  try {
    const {
      model,
      agent_id,
      knowledge_id,
      user: userParam,
      baseUrl,
      useProxy
    } =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[7]++, _validatedBody);
    // Use server-side environment variable for API key
    const apiKey =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[8]++, process.env.FASTGPT_API_KEY);
    // Use server-side or provided API URL
    const apiUrl =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[9]++,
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[0][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[0][1]++, baseUrl) ||
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[0][2]++, "https://zktecoaihub.com"));
    // Determine the actual API endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[10]++, useProxy ?
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[1][0]++, `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\/\//, ""))}/api/v1/chat/init`) :
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[1][1]++, `${apiUrl}/api/v1/chat/init`));
    // Prepare the request to the FastGPT API
    const fastGPTRequest =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[11]++, {
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[2][0]++, model) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[2][1]++, {
        model
      })),
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[3][0]++, agent_id) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[3][1]++, {
        agent_id
      })),
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[4][0]++, knowledge_id) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[4][1]++, {
        knowledge_id
      })),
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[5][0]++, userParam) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[5][1]++, {
        user: userParam
      }))
    });
    // Make the request to the FastGPT API
    const response =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[12]++, await fetch(endpoint, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify(fastGPTRequest)
    }));
    /* istanbul ignore next */
    cov_1xob4kg1ea().s[13]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xob4kg1ea().b[6][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1xob4kg1ea().s[14]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1xob4kg1ea().f[1]++;
        cov_1xob4kg1ea().s[15]++;
        return {
          error: {
            message: response.statusText
          }
        };
      }));
      /* istanbul ignore next */
      cov_1xob4kg1ea().s[16]++;
      return api_helper_1.ApiResponseWrapper.error(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[7][0]++, errorData.error?.message) ||
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[7][1]++, 'FastGPT API error'), response.status);
    } else
    /* istanbul ignore next */
    {
      cov_1xob4kg1ea().b[6][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[17]++, await response.json());
    /* istanbul ignore next */
    cov_1xob4kg1ea().s[18]++;
    return api_helper_1.ApiResponseWrapper.success(data);
  } catch (error) {
    /* istanbul ignore next */
    cov_1xob4kg1ea().s[19]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,