{"version":3,"names":["cov_1xob4kg1ea","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_1","require","api_helper_1","route_configs_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","validatedBody","model","agent_id","knowledge_id","user","userParam","baseUrl","useProxy","_validatedBody","apiKey","process","env","FASTGPT_API_KEY","apiUrl","FASTGPT_API_URL","endpoint","encodeURIComponent","replace","fastGPTRequest","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","errorData","json","catch","error","message","statusText","ApiResponseWrapper","status","data","success"],"sources":["E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts"],"sourcesContent":["/**\n * @file fastgpt\\init-chat\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async ({ validatedBody }) => {\n    try {\n      const { model, agent_id, knowledge_id, user: userParam, baseUrl, useProxy } = _validatedBody\n    \n      // Use server-side environment variable for API key\n      const apiKey = process.env.FASTGPT_API_KEY\n    \n      // Use server-side or provided API URL\n      const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\"\n    \n      // Determine the actual API endpoint\n      const endpoint = useProxy\n        ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/chat/init`\n        : `${apiUrl}/api/v1/chat/init`\n    \n      // Prepare the request to the FastGPT API\n      const fastGPTRequest = {\n        ...(model && { model }),\n        ...(agent_id && { agent_id }),\n        ...(knowledge_id && { knowledge_id }),\n        ...(userParam && { user: userParam }),\n      }\n    \n      // Make the request to the FastGPT API\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify(fastGPTRequest),\n      })\n    \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }))\n        return ApiResponseWrapper.error(errorData.error?.message || 'FastGPT API error', response.status)\n      }\n    \n      const data = await response.json()\n      return ApiResponseWrapper.success(data)\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500)\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}