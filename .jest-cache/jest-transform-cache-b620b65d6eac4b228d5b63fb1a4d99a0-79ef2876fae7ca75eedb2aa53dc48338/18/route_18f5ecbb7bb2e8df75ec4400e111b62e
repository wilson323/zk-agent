041c964c699aaa6a9879ef2ae9fb3166
"use strict";

/**
 * @file fastgpt\init-chat\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1xob4kg1ea() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts";
  var hash = "3acc6bbfc8d85437b1a0e38c59ed8896154a8b89";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "7": {
        start: {
          line: 15,
          column: 86
        },
        end: {
          line: 15,
          column: 90
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "9": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 90
        }
      },
      "10": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "11": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "12": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "14": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 110
        }
      },
      "15": {
        start: {
          line: 41,
          column: 65
        },
        end: {
          line: 41,
          column: 108
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 123
        }
      },
      "17": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 61
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 105
          },
          end: {
            line: 12,
            column: 106
          }
        },
        loc: {
          start: {
            line: 12,
            column: 180
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 58
          },
          end: {
            line: 41,
            column: 59
          }
        },
        loc: {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 108
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 50
          }
        }, {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 61
          }
        }, {
          start: {
            line: 19,
            column: 65
          },
          end: {
            line: 19,
            column: 90
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 23,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 14
          },
          end: {
            line: 22,
            column: 105
          }
        }, {
          start: {
            line: 23,
            column: 14
          },
          end: {
            line: 23,
            column: 42
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 21
          }
        }, {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 26,
            column: 34
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 24
          }
        }, {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 40
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 28
          }
        }, {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 48
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 25
          }
        }, {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 48
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 81
          }
        }, {
          start: {
            line: 42,
            column: 85
          },
          end: {
            line: 42,
            column: 104
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE/C,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAA;QAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAA;QAElF,mDAAmD;QACnD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAA;QAE1C,sCAAsC;QACtC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,OAAO,IAAI,yBAAyB,CAAA;QAElF,oCAAoC;QACpC,MAAM,QAAQ,GAAG,QAAQ;YACvB,CAAC,CAAC,kBAAkB,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,mBAAmB;YAC7F,CAAC,CAAC,GAAG,MAAM,mBAAmB,CAAA;QAEhC,yCAAyC;QACzC,MAAM,cAAc,GAAG;YACrB,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC;YACvB,GAAG,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC;YAC7B,GAAG,CAAC,YAAY,IAAI,EAAE,YAAY,EAAE,CAAC;YACrC,GAAG,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;SACtC,CAAA;QAED,sCAAsC;QACtC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,QAAQ,EAAE;YACrC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,UAAU,MAAM,EAAE;aAClC;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;SACrC,CAAC,CAAA;QAEF,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAA;YAClG,OAAO,+BAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,IAAI,mBAAmB,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAA;QACnG,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QAClC,OAAO,+BAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACzC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA;IAC/D,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\init-chat\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\init-chat\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json()\n      const { model, agent_id, knowledge_id, user: userParam, baseUrl, useProxy } = body\n    \n      // Use server-side environment variable for API key\n      const apiKey = process.env.FASTGPT_API_KEY\n    \n      // Use server-side or provided API URL\n      const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\"\n    \n      // Determine the actual API endpoint\n      const endpoint = useProxy\n        ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/chat/init`\n        : `${apiUrl}/api/v1/chat/init`\n    \n      // Prepare the request to the FastGPT API\n      const fastGPTRequest = {\n        ...(model && { model }),\n        ...(agent_id && { agent_id }),\n        ...(knowledge_id && { knowledge_id }),\n        ...(userParam && { user: userParam }),\n      }\n    \n      // Make the request to the FastGPT API\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify(fastGPTRequest),\n      })\n    \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }))\n        return ApiResponseWrapper.error(errorData.error?.message || 'FastGPT API error', response.status)\n      }\n    \n      const data = await response.json()\n      return ApiResponseWrapper.success(data)\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500)\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3acc6bbfc8d85437b1a0e38c59ed8896154a8b89"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xob4kg1ea = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xob4kg1ea();
cov_1xob4kg1ea().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xob4kg1ea().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1xob4kg1ea().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1xob4kg1ea().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_1xob4kg1ea().s[4]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1xob4kg1ea().f[0]++;
  cov_1xob4kg1ea().s[5]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[6]++, await req.json());
    const {
      model,
      agent_id,
      knowledge_id,
      user: userParam,
      baseUrl,
      useProxy
    } =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[7]++, body);
    // Use server-side environment variable for API key
    const apiKey =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[8]++, process.env.FASTGPT_API_KEY);
    // Use server-side or provided API URL
    const apiUrl =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[9]++,
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[0][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[0][1]++, baseUrl) ||
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[0][2]++, "https://zktecoaihub.com"));
    // Determine the actual API endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[10]++, useProxy ?
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[1][0]++, `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\/\//, ""))}/api/v1/chat/init`) :
    /* istanbul ignore next */
    (cov_1xob4kg1ea().b[1][1]++, `${apiUrl}/api/v1/chat/init`));
    // Prepare the request to the FastGPT API
    const fastGPTRequest =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[11]++, {
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[2][0]++, model) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[2][1]++, {
        model
      })),
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[3][0]++, agent_id) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[3][1]++, {
        agent_id
      })),
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[4][0]++, knowledge_id) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[4][1]++, {
        knowledge_id
      })),
      ...(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[5][0]++, userParam) &&
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[5][1]++, {
        user: userParam
      }))
    });
    // Make the request to the FastGPT API
    const response =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[12]++, await fetch(endpoint, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify(fastGPTRequest)
    }));
    /* istanbul ignore next */
    cov_1xob4kg1ea().s[13]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xob4kg1ea().b[6][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1xob4kg1ea().s[14]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1xob4kg1ea().f[1]++;
        cov_1xob4kg1ea().s[15]++;
        return {
          error: {
            message: response.statusText
          }
        };
      }));
      /* istanbul ignore next */
      cov_1xob4kg1ea().s[16]++;
      return api_helper_1.ApiResponseWrapper.error(
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[7][0]++, errorData.error?.message) ||
      /* istanbul ignore next */
      (cov_1xob4kg1ea().b[7][1]++, 'FastGPT API error'), response.status);
    } else
    /* istanbul ignore next */
    {
      cov_1xob4kg1ea().b[6][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1xob4kg1ea().s[17]++, await response.json());
    /* istanbul ignore next */
    cov_1xob4kg1ea().s[18]++;
    return api_helper_1.ApiResponseWrapper.success(data);
  } catch (error) {
    /* istanbul ignore next */
    cov_1xob4kg1ea().s[19]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXhvYjRrZzFlYSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImFwaV9yb3V0ZV93cmFwcGVyXzEiLCJyZXF1aXJlIiwiYXBpX2hlbHBlcl8xIiwiZXhwb3J0cyIsIlBPU1QiLCJjcmVhdGVBcGlSb3V0ZSIsIlJvdXRlQ29uZmlncyIsInByb3RlY3RlZFBvc3QiLCJyZXEiLCJwYXJhbXMiLCJ2YWxpZGF0ZWRCb2R5IiwidmFsaWRhdGVkUXVlcnkiLCJ1c2VyIiwicmVxdWVzdElkIiwiYm9keSIsImpzb24iLCJtb2RlbCIsImFnZW50X2lkIiwia25vd2xlZGdlX2lkIiwidXNlclBhcmFtIiwiYmFzZVVybCIsInVzZVByb3h5IiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIkZBU1RHUFRfQVBJX0tFWSIsImFwaVVybCIsIkZBU1RHUFRfQVBJX1VSTCIsImVuZHBvaW50IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVwbGFjZSIsImZhc3RHUFRSZXF1ZXN0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiZXJyb3JEYXRhIiwiY2F0Y2giLCJlcnJvciIsIm1lc3NhZ2UiLCJzdGF0dXNUZXh0IiwiQXBpUmVzcG9uc2VXcmFwcGVyIiwic3RhdHVzIiwiZGF0YSIsInN1Y2Nlc3MiXSwic291cmNlcyI6WyJFOlxcemstYWdlbnRcXGFwcFxcYXBpXFxmYXN0Z3B0XFxpbml0LWNoYXRcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgZmFzdGdwdFxcaW5pdC1jaGF0XFxyb3V0ZS50c1xuICogQGRlc2NyaXB0aW9uIE1pZ3JhdGVkIEFQSSByb3V0ZSB3aXRoIGdsb2JhbCBlcnJvciBoYW5kbGluZ1xuICogQGF1dGhvciBaSy1BZ2VudCBUZWFtXG4gKiBAZGF0ZSAyMDI1LTA2LTI1XG4gKi9cblxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGNyZWF0ZUFwaVJvdXRlLCBSb3V0ZUNvbmZpZ3MsIENvbW1vblZhbGlkYXRpb25zIH0gZnJvbSAnQC9saWIvbWlkZGxld2FyZS9hcGktcm91dGUtd3JhcHBlcic7XG5pbXBvcnQgeyBBcGlSZXNwb25zZVdyYXBwZXIgfSBmcm9tICdAL2xpYi91dGlscy9hcGktaGVscGVyJztcblxuZXhwb3J0IGNvbnN0IFBPU1QgPSBjcmVhdGVBcGlSb3V0ZShcbiAgUm91dGVDb25maWdzLnByb3RlY3RlZFBvc3QoKSxcbiAgYXN5bmMgKHJlcTogTmV4dFJlcXVlc3QsIHsgcGFyYW1zLCB2YWxpZGF0ZWRCb2R5LCB2YWxpZGF0ZWRRdWVyeSwgdXNlciwgcmVxdWVzdElkIH0pID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcS5qc29uKClcbiAgICAgIGNvbnN0IHsgbW9kZWwsIGFnZW50X2lkLCBrbm93bGVkZ2VfaWQsIHVzZXI6IHVzZXJQYXJhbSwgYmFzZVVybCwgdXNlUHJveHkgfSA9IGJvZHlcbiAgICBcbiAgICAgIC8vIFVzZSBzZXJ2ZXItc2lkZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBmb3IgQVBJIGtleVxuICAgICAgY29uc3QgYXBpS2V5ID0gcHJvY2Vzcy5lbnYuRkFTVEdQVF9BUElfS0VZXG4gICAgXG4gICAgICAvLyBVc2Ugc2VydmVyLXNpZGUgb3IgcHJvdmlkZWQgQVBJIFVSTFxuICAgICAgY29uc3QgYXBpVXJsID0gcHJvY2Vzcy5lbnYuRkFTVEdQVF9BUElfVVJMIHx8IGJhc2VVcmwgfHwgXCJodHRwczovL3prdGVjb2FpaHViLmNvbVwiXG4gICAgXG4gICAgICAvLyBEZXRlcm1pbmUgdGhlIGFjdHVhbCBBUEkgZW5kcG9pbnRcbiAgICAgIGNvbnN0IGVuZHBvaW50ID0gdXNlUHJveHlcbiAgICAgICAgPyBgL2FwaS9wcm94eT91cmw9JHtlbmNvZGVVUklDb21wb25lbnQoYXBpVXJsLnJlcGxhY2UoL15odHRwcz86XFwvXFwvLywgXCJcIikpfS9hcGkvdjEvY2hhdC9pbml0YFxuICAgICAgICA6IGAke2FwaVVybH0vYXBpL3YxL2NoYXQvaW5pdGBcbiAgICBcbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlcXVlc3QgdG8gdGhlIEZhc3RHUFQgQVBJXG4gICAgICBjb25zdCBmYXN0R1BUUmVxdWVzdCA9IHtcbiAgICAgICAgLi4uKG1vZGVsICYmIHsgbW9kZWwgfSksXG4gICAgICAgIC4uLihhZ2VudF9pZCAmJiB7IGFnZW50X2lkIH0pLFxuICAgICAgICAuLi4oa25vd2xlZGdlX2lkICYmIHsga25vd2xlZGdlX2lkIH0pLFxuICAgICAgICAuLi4odXNlclBhcmFtICYmIHsgdXNlcjogdXNlclBhcmFtIH0pLFxuICAgICAgfVxuICAgIFxuICAgICAgLy8gTWFrZSB0aGUgcmVxdWVzdCB0byB0aGUgRmFzdEdQVCBBUElcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YCxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZmFzdEdQVFJlcXVlc3QpLFxuICAgICAgfSlcbiAgICBcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpLmNhdGNoKCgpID0+ICh7IGVycm9yOiB7IG1lc3NhZ2U6IHJlc3BvbnNlLnN0YXR1c1RleHQgfSB9KSlcbiAgICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5lcnJvcihlcnJvckRhdGEuZXJyb3I/Lm1lc3NhZ2UgfHwgJ0Zhc3RHUFQgQVBJIGVycm9yJywgcmVzcG9uc2Uuc3RhdHVzKVxuICAgICAgfVxuICAgIFxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5zdWNjZXNzKGRhdGEpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBBcGlSZXNwb25zZVdyYXBwZXIuZXJyb3IoJ0ludGVybmFsIHNlcnZlciBlcnJvcicsIDUwMClcbiAgICB9XG4gIH1cbik7XG5cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQVcsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtN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