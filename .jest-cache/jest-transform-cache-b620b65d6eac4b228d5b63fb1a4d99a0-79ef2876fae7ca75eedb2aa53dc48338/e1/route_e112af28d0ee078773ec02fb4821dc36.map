{"version":3,"names":["cov_89a6vcbpp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","connection_1","__importDefault","exports","GET","createApiRoute","RouteConfigs","publicGet","req","params","validatedBody","validatedQuery","user","requestId","totalLikes","default","like","count","today","Date","setHours","todayLikes","where","createdAt","gte","popularItems","groupBy","by","_count","id","orderBy","take","formattedPopularItems","map","item","itemId","itemType","likeCount","ApiResponseWrapper","success","data"],"sources":["E:\\zk-agent\\app\\api\\likes\\stats\\route.ts"],"sourcesContent":["/**\n * @file likes\\stats\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport prisma from \"@/lib/database/connection\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    // 获取总点赞数\n    const totalLikes = await prisma.like.count();\n    \n    // 获取今日点赞数\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const todayLikes = await prisma.like.count({\n      where: {\n        createdAt: {\n          gte: today,\n        },\n      },\n    });\n    \n    // 获取热门项目\n    const popularItems = await prisma.like.groupBy({\n      by: [\"itemId\", \"itemType\"],\n      _count: {\n        id: true,\n      },\n      orderBy: {\n        _count: {\n          id: \"desc\",\n        },\n      },\n      take: 10,\n    });\n    \n    const formattedPopularItems = popularItems.map((item) => ({\n      itemId: item.itemId,\n      itemType: item.itemType,\n      likeCount: item._count.id,\n    }));\n    \n    return ApiResponseWrapper.success({\n      success: true,\n      data: {\n        totalLikes,\n        todayLikes,\n        popularItems: formattedPopularItems,\n      },\n    });\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}