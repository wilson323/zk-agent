{"file":"E:\\zk-agent\\tests\\api\\routes\\shared.test.ts","mappings":"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","names":[],"sources":["E:\\zk-agent\\tests\\api\\routes\\shared.test.ts"],"sourcesContent":["/**\n * 共享功能API路由错误处理测试\n * 测试内容共享、权限管理、链接生成等各种错误场景\n */\n\nimport { NextRequest } from 'next/server';\nimport { GET, POST, PUT, DELETE } from '@/app/api/shared/route';\n// import { GlobalErrorHandler } from '@/lib/middleware/global-error-handler';\n// import { AgentError, AgentErrorType, ErrorSeverity } from '@/lib/errors/agent-errors';\n\n// Mock dependencies\njest.mock('../../../lib/services/sharing-manager', () => ({\n  createShareLink: jest.fn(),\n  validateShareAccess: jest.fn(),\n  updateShareSettings: jest.fn(),\n  revokeShareLink: jest.fn(),\n  getSharedContent: jest.fn(),\n  trackShareActivity: jest.fn(),\n  generateShareToken: jest.fn(),\n  validateShareToken: jest.fn()\n}));\n\njest.mock('../../../lib/storage/content-store', () => ({\n  getContent: jest.fn(),\n  storeSharedContent: jest.fn(),\n  updateContentMetadata: jest.fn(),\n  deleteSharedContent: jest.fn(),\n  checkContentExists: jest.fn(),\n  validateContentAccess: jest.fn()\n}));\n\njest.mock('../../../lib/security/share-security', () => ({\n  validateSharePermissions: jest.fn(),\n  checkShareLimits: jest.fn(),\n  sanitizeShareData: jest.fn(),\n  enforceSharePolicies: jest.fn(),\n  validateExpirationDate: jest.fn(),\n  checkPasswordStrength: jest.fn()\n}));\n\njest.mock('../../../lib/auth/session', () => ({\n  validateSession: jest.fn(),\n  checkUserPermissions: jest.fn(),\n  getUserId: jest.fn()\n}));\n\ndescribe('Shared API Error Handling', () => {\n  let errorHandler: any;\n\n  beforeEach(() => {\n    // errorHandler = GlobalErrorHandler.getInstance();\n    errorHandler = { errorCount: 0, circuitBreakerOpen: false };\n    jest.clearAllMocks();\n  });\n\n  describe('GET /api/shared - Get Shared Content', () => {\n    it('should handle invalid share token', async () => {\n      const { validateShareToken } = require('../../../lib/services/sharing-manager');\n      validateShareToken.mockRejectedValue(new Error('Invalid share token'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=invalid-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.success).toBe(false);\n      expect(data.error.code).toBe('AUTHENTICATION_ERROR');\n      expect(data.error.message).toContain('Invalid share token');\n    });\n\n    it('should handle missing share token', async () => {\n      const request = new NextRequest('http://localhost:3000/api/shared');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.message).toContain('Share token is required');\n    });\n\n    it('should handle expired share link', async () => {\n      const { validateShareAccess } = require('../../../lib/services/sharing-manager');\n      validateShareAccess.mockRejectedValue(new Error('Share link has expired'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=expired-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(410); // Gone\n      expect(data.error.message).toContain('Share link has expired');\n    });\n\n    it('should handle revoked share link', async () => {\n      const { validateShareAccess } = require('../../../lib/services/sharing-manager');\n      validateShareAccess.mockRejectedValue(new Error('Share link has been revoked'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=revoked-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n      expect(data.error.message).toContain('Share link has been revoked');\n    });\n\n    it('should handle shared content not found', async () => {\n      const { getSharedContent } = require('../../../lib/services/sharing-manager');\n      getSharedContent.mockRejectedValue(new Error('Shared content not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=valid-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Shared content not found');\n    });\n\n    it('should handle password-protected share without password', async () => {\n      const { validateShareAccess } = require('../../../lib/services/sharing-manager');\n      validateShareAccess.mockRejectedValue(new Error('Password required for protected share'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=protected-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.message).toContain('Password required for protected share');\n    });\n\n    it('should handle incorrect share password', async () => {\n      const { validateShareAccess } = require('../../../lib/services/sharing-manager');\n      validateShareAccess.mockRejectedValue(new Error('Incorrect share password'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=protected-token&password=wrong');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(401);\n      expect(data.error.message).toContain('Incorrect share password');\n    });\n\n    it('should handle share access limit exceeded', async () => {\n      const { validateShareAccess } = require('../../../lib/services/sharing-manager');\n      validateShareAccess.mockRejectedValue(new Error('Share access limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=limited-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.code).toBe('RATE_LIMIT_ERROR');\n      expect(data.error.message).toContain('Share access limit exceeded');\n    });\n\n    it('should handle corrupted shared content', async () => {\n      const { getSharedContent } = require('../../../lib/services/sharing-manager');\n      getSharedContent.mockRejectedValue(new Error('Shared content is corrupted'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=corrupted-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Shared content is corrupted');\n    });\n\n    it('should handle content storage service unavailable', async () => {\n      const { getContent } = require('../../../lib/storage/content-store');\n      getContent.mockRejectedValue(new Error('Content storage service unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=valid-token');\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Content storage service unavailable');\n    });\n  });\n\n  describe('POST /api/shared - Create Share Link', () => {\n    let validShareData: any;\n\n    beforeEach(() => {\n      validShareData = {\n        contentId: 'content-123',\n        contentType: 'document',\n        permissions: {\n          read: true,\n          download: false,\n          comment: false\n        },\n        settings: {\n          expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days\n          maxAccess: 100,\n          requirePassword: false,\n          allowAnonymous: true\n        }\n      };\n    });\n\n    it('should handle missing content ID', async () => {\n      const invalidData = { ...validShareData };\n      delete invalidData.contentId;\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(invalidData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n      expect(data.error.details).toContain('contentId');\n    });\n\n    it('should handle content not found for sharing', async () => {\n      const { checkContentExists } = require('../../../lib/storage/content-store');\n      checkContentExists.mockRejectedValue(new Error('Content not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Content not found');\n    });\n\n    it('should handle insufficient permissions to share content', async () => {\n      const { validateContentAccess } = require('../../../lib/storage/content-store');\n      validateContentAccess.mockRejectedValue(new Error('Insufficient permissions to share content'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n    });\n\n    it('should handle invalid expiration date', async () => {\n      const { validateExpirationDate } = require('../../../lib/security/share-security');\n      validateExpirationDate.mockRejectedValue(new Error('Invalid expiration date: must be in the future'));\n\n      const invalidExpirationData = {\n        ...validShareData,\n        settings: {\n          ...validShareData.settings,\n          expiresAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString() // Yesterday\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(invalidExpirationData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Invalid expiration date');\n    });\n\n    it('should handle weak password for protected share', async () => {\n      const { checkPasswordStrength } = require('../../../lib/security/share-security');\n      checkPasswordStrength.mockRejectedValue(new Error('Password does not meet security requirements'));\n\n      const weakPasswordData = {\n        ...validShareData,\n        settings: {\n          ...validShareData.settings,\n          requirePassword: true,\n          password: '123'\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(weakPasswordData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Password does not meet security requirements');\n    });\n\n    it('should handle share limit exceeded for user', async () => {\n      const { checkShareLimits } = require('../../../lib/security/share-security');\n      checkShareLimits.mockRejectedValue(new Error('User share limit exceeded'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer user-token'\n        }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(429);\n      expect(data.error.message).toContain('User share limit exceeded');\n    });\n\n    it('should handle share token generation failure', async () => {\n      const { generateShareToken } = require('../../../lib/services/sharing-manager');\n      generateShareToken.mockRejectedValue(new Error('Failed to generate share token'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to generate share token');\n    });\n\n    it('should handle share link creation failure', async () => {\n      const { createShareLink } = require('../../../lib/services/sharing-manager');\n      createShareLink.mockRejectedValue(new Error('Failed to create share link'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to create share link');\n    });\n\n    it('should handle invalid content type for sharing', async () => {\n      const { enforceSharePolicies } = require('../../../lib/security/share-security');\n      enforceSharePolicies.mockRejectedValue(new Error('Content type not allowed for sharing'));\n\n      const invalidTypeData = {\n        ...validShareData,\n        contentType: 'restricted-type'\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(invalidTypeData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Content type not allowed for sharing');\n    });\n  });\n\n  describe('PUT /api/shared - Update Share Settings', () => {\n    let validUpdateData: any;\n\n    beforeEach(() => {\n      validUpdateData = {\n        shareId: 'share-123',\n        settings: {\n          expiresAt: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(), // 14 days\n          maxAccess: 200,\n          requirePassword: true,\n          password: 'new-secure-password-123'\n        }\n      };\n    });\n\n    it('should handle share not found for update', async () => {\n      const { updateShareSettings } = require('../../../lib/services/sharing-manager');\n      updateShareSettings.mockRejectedValue(new Error('Share not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'PUT',\n        body: JSON.stringify({ shareId: 'nonexistent-share', settings: {} }),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Share not found');\n    });\n\n    it('should handle unauthorized share update', async () => {\n      const { validateSharePermissions } = require('../../../lib/security/share-security');\n      validateSharePermissions.mockRejectedValue(new Error('Not authorized to update this share'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'PUT',\n        body: JSON.stringify(validUpdateData),\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer unauthorized-token'\n        }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n    });\n\n    it('should handle invalid share settings update', async () => {\n      const { updateShareSettings } = require('../../../lib/services/sharing-manager');\n      updateShareSettings.mockRejectedValue(new Error('Invalid share settings'));\n\n      const invalidSettings = {\n        shareId: 'share-123',\n        settings: {\n          maxAccess: -1, // Invalid negative value\n          expiresAt: 'invalid-date'\n        }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'PUT',\n        body: JSON.stringify(invalidSettings),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.code).toBe('VALIDATION_ERROR');\n    });\n\n    it('should handle share update conflict', async () => {\n      const { updateShareSettings } = require('../../../lib/services/sharing-manager');\n      updateShareSettings.mockRejectedValue(new Error('Share has been modified by another user'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'PUT',\n        body: JSON.stringify(validUpdateData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(409);\n      expect(data.error.message).toContain('Share has been modified by another user');\n    });\n\n    it('should handle share update service failure', async () => {\n      const { updateShareSettings } = require('../../../lib/services/sharing-manager');\n      updateShareSettings.mockRejectedValue(new Error('Share update service temporarily unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'PUT',\n        body: JSON.stringify(validUpdateData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await PUT(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(503);\n      expect(data.error.message).toContain('Share update service temporarily unavailable');\n    });\n  });\n\n  describe('DELETE /api/shared - Revoke Share Link', () => {\n    it('should handle share not found for revocation', async () => {\n      const { revokeShareLink } = require('../../../lib/services/sharing-manager');\n      revokeShareLink.mockRejectedValue(new Error('Share not found'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?shareId=nonexistent-share', {\n        method: 'DELETE'\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(404);\n      expect(data.error.code).toBe('NOT_FOUND');\n      expect(data.error.message).toContain('Share not found');\n    });\n\n    it('should handle unauthorized share revocation', async () => {\n      const { validateSharePermissions } = require('../../../lib/security/share-security');\n      validateSharePermissions.mockRejectedValue(new Error('Not authorized to revoke this share'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?shareId=share-123', {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer unauthorized-token' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.code).toBe('AUTHORIZATION_ERROR');\n    });\n\n    it('should handle already revoked share', async () => {\n      const { revokeShareLink } = require('../../../lib/services/sharing-manager');\n      revokeShareLink.mockRejectedValue(new Error('Share has already been revoked'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?shareId=revoked-share', {\n        method: 'DELETE'\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(410); // Gone\n      expect(data.error.message).toContain('Share has already been revoked');\n    });\n\n    it('should handle share revocation failure', async () => {\n      const { revokeShareLink } = require('../../../lib/services/sharing-manager');\n      revokeShareLink.mockRejectedValue(new Error('Failed to revoke share link'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?shareId=share-123', {\n        method: 'DELETE'\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(500);\n      expect(data.error.message).toContain('Failed to revoke share link');\n    });\n  });\n\n  describe('Share Activity Tracking', () => {\n    it('should handle activity tracking failure', async () => {\n      const { trackShareActivity } = require('../../../lib/services/sharing-manager');\n      trackShareActivity.mockRejectedValue(new Error('Activity tracking service unavailable'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=valid-token');\n      const response = await GET(request);\n\n      // Should not fail the main request\n      expect(response.status).not.toBe(500);\n    });\n\n    it('should handle activity log storage failure', async () => {\n      const { trackShareActivity } = require('../../../lib/services/sharing-manager');\n      trackShareActivity.mockRejectedValue(new Error('Activity log storage full'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=valid-token');\n      await GET(request);\n\n      // Should continue processing despite logging failure\n      expect(trackShareActivity).toHaveBeenCalled();\n    });\n  });\n\n  describe('Share Security Validation', () => {\n    it('should handle malicious share data', async () => {\n      const { sanitizeShareData } = require('../../../lib/security/share-security');\n      sanitizeShareData.mockRejectedValue(new Error('Malicious content detected in share data'));\n\n      const maliciousData = {\n        contentId: 'content-123',\n        contentType: '<script>alert(\"xss\")</script>',\n        permissions: { read: true }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(maliciousData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(400);\n      expect(data.error.message).toContain('Malicious content detected');\n    });\n\n    it('should handle suspicious share access pattern', async () => {\n      const { enforceSharePolicies } = require('../../../lib/security/share-security');\n      enforceSharePolicies.mockRejectedValue(new Error('Suspicious access pattern detected'));\n\n      const request = new NextRequest('http://localhost:3000/api/shared?token=valid-token', {\n        headers: {\n          'User-Agent': 'Bot/1.0',\n          'X-Forwarded-For': '192.168.1.1, 10.0.0.1, 172.16.0.1'\n        }\n      });\n\n      const response = await GET(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(403);\n      expect(data.error.message).toContain('Suspicious access pattern detected');\n    });\n  });\n\n  describe('Batch Share Operations', () => {\n    it('should handle batch share creation with partial failures', async () => {\n      const { createShareLink } = require('../../../lib/services/sharing-manager');\n      createShareLink.mockImplementation((data: any) => {\n        if (data.contentId === 'invalid-content') {\n          throw new Error('Content not found');\n        }\n        return Promise.resolve({ shareId: 'share-123', token: 'token-123' });\n      });\n\n      const batchData = {\n        shares: [\n          { contentId: 'content-1', contentType: 'document' },\n          { contentId: 'invalid-content', contentType: 'document' },\n          { contentId: 'content-3', contentType: 'image' }\n        ]\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared/batch', {\n        method: 'POST',\n        body: JSON.stringify(batchData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(207); // Multi-status\n      expect(data.results).toBeDefined();\n      expect(data.errors).toBeDefined();\n    });\n\n    it('should handle batch share revocation with partial failures', async () => {\n      const { revokeShareLink } = require('../../../lib/services/sharing-manager');\n      revokeShareLink.mockImplementation((shareId: any) => {\n        if (shareId === 'nonexistent-share') {\n          throw new Error('Share not found');\n        }\n        return Promise.resolve();\n      });\n\n      const batchData = {\n        shareIds: ['share-1', 'nonexistent-share', 'share-3']\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared/batch', {\n        method: 'DELETE',\n        body: JSON.stringify(batchData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await DELETE(request);\n      const data = await response.json();\n\n      expect(response.status).toBe(207); // Multi-status\n      expect(data.results).toBeDefined();\n      expect(data.errors).toBeDefined();\n    });\n  });\n\n  describe('Error Recovery and Monitoring', () => {\n    it('should provide share operation recovery suggestions', async () => {\n      const { createShareLink } = require('../../../lib/services/sharing-manager');\n      createShareLink.mockRejectedValue(new Error('Temporary sharing service outage'));\n\n      const validShareData = {\n        contentId: 'content-123',\n        contentType: 'document',\n        permissions: { read: true }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(data.error.recovery).toBeDefined();\n      expect(data.error.recovery.suggestions).toContain('Retry share creation');\n    });\n\n    it('should track share operation performance', async () => {\n      const { createShareLink } = require('../../../lib/services/sharing-manager');\n      createShareLink.mockRejectedValue(new Error('Test error'));\n\n      const validShareData = {\n        contentId: 'content-123',\n        contentType: 'document',\n        permissions: { read: true }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      await POST(request);\n\n      const stats = errorHandler.getErrorStats();\n      expect(stats.shareErrorCount).toBeGreaterThan(0);\n    });\n\n    it('should include share context in error responses', async () => {\n      const { createShareLink } = require('../../../lib/services/sharing-manager');\n      createShareLink.mockRejectedValue(new Error('Test error'));\n\n      const validShareData = {\n        contentId: 'content-123',\n        contentType: 'document',\n        permissions: { read: true }\n      };\n\n      const request = new NextRequest('http://localhost:3000/api/shared', {\n        method: 'POST',\n        body: JSON.stringify(validShareData),\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const response = await POST(request);\n      const data = await response.json();\n\n      expect(data.error.context).toBeDefined();\n      expect(data.error.context.operation).toBe('createShareLink');\n      expect(data.error.context.contentId).toBe('content-123');\n    });\n  });\n});"],"version":3}