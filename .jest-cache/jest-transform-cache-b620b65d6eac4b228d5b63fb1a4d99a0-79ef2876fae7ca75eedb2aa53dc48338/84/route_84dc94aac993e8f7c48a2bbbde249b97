8a25be4bb3a114290d05785e9bf1d048
"use strict";

/**
 * @file ag-ui\chat\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1fyinqecc7() {
  var path = "E:\\zk-agent\\app\\api\\ag-ui\\chat\\route.ts";
  var hash = "f6c201b1f5d8a5881d7419800475e157061775bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ag-ui\\chat\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "3": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 69
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 169,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "9": {
        start: {
          line: 17,
          column: 85
        },
        end: {
          line: 17,
          column: 89
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "11": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 125
        }
      },
      "12": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 74
        }
      },
      "13": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "15": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 108
        }
      },
      "16": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "17": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "18": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "19": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "20": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "21": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 45
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "25": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "26": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "27": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "28": {
        start: {
          line: 70,
          column: 33
        },
        end: {
          line: 70,
          column: 55
        }
      },
      "29": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 113,
          column: 21
        }
      },
      "30": {
        start: {
          line: 73,
          column: 38
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "31": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "32": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 81,
          column: 39
        }
      },
      "33": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 112,
          column: 25
        }
      },
      "34": {
        start: {
          line: 85,
          column: 45
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "35": {
        start: {
          line: 86,
          column: 47
        },
        end: {
          line: 86,
          column: 80
        }
      },
      "36": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 96,
          column: 29
        }
      },
      "37": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 95,
          column: 43
        }
      },
      "38": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 105,
          column: 29
        }
      },
      "39": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 104,
          column: 43
        }
      },
      "40": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "41": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 82
        }
      },
      "42": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 70
        }
      },
      "43": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 127,
          column: 27
        }
      },
      "44": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "45": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 37
        }
      },
      "46": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 59
        }
      },
      "47": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 145,
          column: 42
        }
      },
      "48": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 55
        }
      },
      "49": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 154,
          column: 23
        }
      },
      "50": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "51": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "52": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 95
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 105
          },
          end: {
            line: 14,
            column: 106
          }
        },
        loc: {
          start: {
            line: 14,
            column: 180
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        loc: {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 66
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        loc: {
          start: {
            line: 121,
            column: 28
          },
          end: {
            line: 135,
            column: 13
          }
        },
        line: 121
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        loc: {
          start: {
            line: 136,
            column: 27
          },
          end: {
            line: 146,
            column: 13
          }
        },
        line: 136
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 147,
            column: 18
          }
        },
        loc: {
          start: {
            line: 147,
            column: 34
          },
          end: {
            line: 156,
            column: 9
          }
        },
        line: 147
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 18
          }
        }, {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 31
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 50
          }
        }, {
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 74
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 69,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 69,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 113,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 113,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 36
          }
        }, {
          start: {
            line: 72,
            column: 40
          },
          end: {
            line: 72,
            column: 61
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 112,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 112,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 44
          }
        }, {
          start: {
            line: 84,
            column: 48
          },
          end: {
            line: 84,
            column: 75
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 96,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 96,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 49
          }
        }, {
          start: {
            line: 88,
            column: 53
          },
          end: {
            line: 88,
            column: 75
          }
        }],
        line: 88
      },
      "12": {
        loc: {
          start: {
            line: 98,
            column: 28
          },
          end: {
            line: 105,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 28
          },
          end: {
            line: 105,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "13": {
        loc: {
          start: {
            line: 98,
            column: 32
          },
          end: {
            line: 98,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 32
          },
          end: {
            line: 98,
            column: 49
          }
        }, {
          start: {
            line: 98,
            column: 53
          },
          end: {
            line: 98,
            column: 80
          }
        }],
        line: 98
      },
      "14": {
        loc: {
          start: {
            line: 141,
            column: 29
          },
          end: {
            line: 141,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 29
          },
          end: {
            line: 141,
            column: 42
          }
        }, {
          start: {
            line: 141,
            column: 46
          },
          end: {
            line: 141,
            column: 61
          }
        }],
        line: 141
      },
      "15": {
        loc: {
          start: {
            line: 151,
            column: 25
          },
          end: {
            line: 151,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 25
          },
          end: {
            line: 151,
            column: 38
          }
        }, {
          start: {
            line: 151,
            column: 42
          },
          end: {
            line: 151,
            column: 76
          }
        }],
        line: 151
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ag-ui\\chat\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ag-ui\\chat\\route.ts"],
      sourcesContent: ["/**\n * @file ag-ui\\chat\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { fetchEventSource } from \"@microsoft/fetch-event-source\"\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body = await req.json()\n      const { appId, chatId, messages, tools, context, variables, systemPrompt } = body\n    \n      // \u9A8C\u8BC1\u5FC5\u8981\u53C2\u6570\n      if (!appId || !messages) {\n        return ApiResponseWrapper.error(\n          \"Missing required parameters: appId and messages\",\n          { status: 400 }\n        )\n      }\n    \n      // \u83B7\u53D6\u73AF\u5883\u53D8\u91CF\n      const apiUrl = process.env.FASTGPT_API_URL || \"/api/proxy/fastgpt\"\n      const apiKey = process.env.FASTGPT_API_KEY\n    \n      if (!apiKey) {\n        return ApiResponseWrapper.error(\n          \"FastGPT API key not configured\",\n          { status: 500 }\n        )\n      }\n    \n        // \u521B\u5EFA\u54CD\u5E94\u6D41\n        const stream = new TransformStream()\n        const writer = stream.writable.getWriter()\n        const encoder = new TextEncoder()\n    \n        // \u751F\u6210\u552F\u4E00ID\n        const threadId = `thread-${Date.now()}`\n        const runId = `run-${Date.now()}`\n        const messageId = `msg-${Date.now()}`\n    \n        // \u53D1\u9001\u8FD0\u884C\u5F00\u59CB\u4E8B\u4EF6\n        await writer.write(\n          encoder.encode(\n            `data: ${JSON.stringify({\n              type: \"RUN_STARTED\",\n              threadId,\n              runId,\n              timestamp: Date.now(),\n            })}\\n\\n`,\n          ),\n        )\n    \n        // \u53D1\u9001\u6D88\u606F\u5F00\u59CB\u4E8B\u4EF6\n        await writer.write(\n          encoder.encode(\n            `data: ${JSON.stringify({\n              type: \"TEXT_MESSAGE_START\",\n              messageId,\n              role: \"assistant\",\n              timestamp: Date.now(),\n            })}\\n\\n`,\n          ),\n        )\n    \n        // \u8C03\u7528FastGPT API\n        fetchEventSource(`${apiUrl}/chat`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${apiKey}`,\n          },\n          body: JSON.stringify({\n            appId,\n            chatId,\n            messages,\n            stream: true,\n            detail: true,\n            system: systemPrompt,\n            variables,\n          }),\n          async onmessage(event) {\n            try {\n              if (event.data === \"[DONE]\") return\n    \n              const data = JSON.parse(event.data)\n    \n              // \u8F6C\u6362\u4E3AAG-UI\u4E8B\u4EF6\u5E76\u5199\u5165\u6D41\n              if (data.choices && data.choices[0].delta) {\n                const delta = data.choices[0].delta\n    \n                // \u5904\u7406\u6587\u672C\u5185\u5BB9\n                if (delta.content) {\n                  await writer.write(\n                    encoder.encode(\n                      `data: ${JSON.stringify({\n                        type: \"TEXT_MESSAGE_CONTENT\",\n                        messageId,\n                        delta: delta.content,\n                        timestamp: Date.now(),\n                      })}\\n\\n`,\n                    ),\n                  )\n                }\n    \n                // \u5904\u7406\u5DE5\u5177\u8C03\u7528\n                if (delta.tool_calls && delta.tool_calls.length > 0) {\n                  const toolCall = delta.tool_calls[0]\n                  const toolCallId = `tool-${toolCall.index}-${runId}`\n    \n                  // \u5DE5\u5177\u8C03\u7528\u5F00\u59CB\n                  if (toolCall.function && toolCall.function.name) {\n                    await writer.write(\n                      encoder.encode(\n                        `data: ${JSON.stringify({\n                          type: \"TOOL_CALL_START\",\n                          toolCallId,\n                          toolCallName: toolCall.function.name,\n                          parentMessageId: messageId,\n                          timestamp: Date.now(),\n                        })}\\n\\n`,\n                      ),\n                    )\n                  }\n    \n                  // \u5DE5\u5177\u8C03\u7528\u53C2\u6570\n                  if (toolCall.function && toolCall.function.arguments) {\n                    await writer.write(\n                      encoder.encode(\n                        `data: ${JSON.stringify({\n                          type: \"TOOL_CALL_ARGS\",\n                          toolCallId,\n                          delta: toolCall.function.arguments,\n                          timestamp: Date.now(),\n                        })}\\n\\n`,\n                      ),\n                    )\n                  }\n    \n                  // \u5DE5\u5177\u8C03\u7528\u7ED3\u675F\n                  await writer.write(\n                    encoder.encode(\n                      `data: ${JSON.stringify({\n                        type: \"TOOL_CALL_END\",\n                        toolCallId,\n                        timestamp: Date.now(),\n                      })}\\n\\n`,\n                    ),\n                  )\n                }\n              }\n    \n              // \u540C\u65F6\u5199\u5165\u539F\u59CB\u6570\u636E\uFF0C\u4FDD\u6301\u517C\u5BB9\u6027\n              await writer.write(encoder.encode(`data: ${event.data}\\n\\n`))\n            } catch (error) {\n              console.error('Error processing message:', error)\n            }\n          },\n          async onclose() {\n            // \u53D1\u9001\u6D88\u606F\u7ED3\u675F\u548C\u8FD0\u884C\u7ED3\u675F\u4E8B\u4EF6\n            await writer.write(\n              encoder.encode(\n                `data: ${JSON.stringify({\n                  type: \"TEXT_MESSAGE_END\",\n                  messageId,\n                  timestamp: Date.now(),\n                })}\\n\\n`,\n              ),\n            )\n    \n            await writer.write(\n              encoder.encode(\n                `data: ${JSON.stringify({\n                  type: \"RUN_FINISHED\",\n                  threadId,\n                  runId,\n                  timestamp: Date.now(),\n                })}\\n\\n`,\n              ),\n            )\n    \n            await writer.close()\n          },\n          onerror(error) {\n            console.error('EventSource error:', error)\n            writer\n              .write(\n                encoder.encode(\n                  `data: ${JSON.stringify({\n                    type: \"RUN_ERROR\",\n                    message: error.message || \"Unknown error\",\n                    code: 500,\n                    timestamp: Date.now(),\n                  })}\\n\\n`,\n                ),\n              )\n              .catch(console.error)\n          },\n        }).catch(async (error) => {\n          console.error('FastGPT API error:', error)\n          await writer.write(\n            encoder.encode(\n              `data: ${JSON.stringify({\n                type: \"RUN_ERROR\",\n                message: error.message || \"Failed to connect to FastGPT API\",\n                code: 500,\n                timestamp: Date.now(),\n              })}\\n\\n`,\n            ),\n          )\n          await writer.close()\n        })\n    \n      // \u8FD4\u56DE\u6D41\u5F0F\u54CD\u5E94\n      return new NextResponse(stream.readable, {\n        headers: {\n          \"Content-Type\": \"text/event-stream\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        },\n      })\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      )\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f6c201b1f5d8a5881d7419800475e157061775bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fyinqecc7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fyinqecc7();
cov_1fyinqecc7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fyinqecc7().s[1]++;
exports.POST = void 0;
const server_1 =
/* istanbul ignore next */
(cov_1fyinqecc7().s[2]++, require("next/server"));
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1fyinqecc7().s[3]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1fyinqecc7().s[4]++, require("@/lib/utils/api-helper"));
const fetch_event_source_1 =
/* istanbul ignore next */
(cov_1fyinqecc7().s[5]++, require("@microsoft/fetch-event-source"));
/* istanbul ignore next */
cov_1fyinqecc7().s[6]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1fyinqecc7().f[0]++;
  cov_1fyinqecc7().s[7]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[8]++, await req.json());
    const {
      appId,
      chatId,
      messages,
      tools,
      context,
      variables,
      systemPrompt
    } =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[9]++, body);
    // 验证必要参数
    /* istanbul ignore next */
    cov_1fyinqecc7().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_1fyinqecc7().b[1][0]++, !appId) ||
    /* istanbul ignore next */
    (cov_1fyinqecc7().b[1][1]++, !messages)) {
      /* istanbul ignore next */
      cov_1fyinqecc7().b[0][0]++;
      cov_1fyinqecc7().s[11]++;
      return api_helper_1.ApiResponseWrapper.error("Missing required parameters: appId and messages", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fyinqecc7().b[0][1]++;
    }
    // 获取环境变量
    const apiUrl =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[12]++,
    /* istanbul ignore next */
    (cov_1fyinqecc7().b[2][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1fyinqecc7().b[2][1]++, "/api/proxy/fastgpt"));
    const apiKey =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[13]++, process.env.FASTGPT_API_KEY);
    /* istanbul ignore next */
    cov_1fyinqecc7().s[14]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_1fyinqecc7().b[3][0]++;
      cov_1fyinqecc7().s[15]++;
      return api_helper_1.ApiResponseWrapper.error("FastGPT API key not configured", {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fyinqecc7().b[3][1]++;
    }
    // 创建响应流
    const stream =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[16]++, new TransformStream());
    const writer =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[17]++, stream.writable.getWriter());
    const encoder =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[18]++, new TextEncoder());
    // 生成唯一ID
    const threadId =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[19]++, `thread-${Date.now()}`);
    const runId =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[20]++, `run-${Date.now()}`);
    const messageId =
    /* istanbul ignore next */
    (cov_1fyinqecc7().s[21]++, `msg-${Date.now()}`);
    // 发送运行开始事件
    /* istanbul ignore next */
    cov_1fyinqecc7().s[22]++;
    await writer.write(encoder.encode(`data: ${JSON.stringify({
      type: "RUN_STARTED",
      threadId,
      runId,
      timestamp: Date.now()
    })}\n\n`));
    // 发送消息开始事件
    /* istanbul ignore next */
    cov_1fyinqecc7().s[23]++;
    await writer.write(encoder.encode(`data: ${JSON.stringify({
      type: "TEXT_MESSAGE_START",
      messageId,
      role: "assistant",
      timestamp: Date.now()
    })}\n\n`));
    // 调用FastGPT API
    /* istanbul ignore next */
    cov_1fyinqecc7().s[24]++;
    (0, fetch_event_source_1.fetchEventSource)(`${apiUrl}/chat`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify({
        appId,
        chatId,
        messages,
        stream: true,
        detail: true,
        system: systemPrompt,
        variables
      }),
      async onmessage(event) {
        /* istanbul ignore next */
        cov_1fyinqecc7().f[1]++;
        cov_1fyinqecc7().s[25]++;
        try {
          /* istanbul ignore next */
          cov_1fyinqecc7().s[26]++;
          if (event.data === "[DONE]") {
            /* istanbul ignore next */
            cov_1fyinqecc7().b[4][0]++;
            cov_1fyinqecc7().s[27]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1fyinqecc7().b[4][1]++;
          }
          const data =
          /* istanbul ignore next */
          (cov_1fyinqecc7().s[28]++, JSON.parse(event.data));
          // 转换为AG-UI事件并写入流
          /* istanbul ignore next */
          cov_1fyinqecc7().s[29]++;
          if (
          /* istanbul ignore next */
          (cov_1fyinqecc7().b[6][0]++, data.choices) &&
          /* istanbul ignore next */
          (cov_1fyinqecc7().b[6][1]++, data.choices[0].delta)) {
            /* istanbul ignore next */
            cov_1fyinqecc7().b[5][0]++;
            const delta =
            /* istanbul ignore next */
            (cov_1fyinqecc7().s[30]++, data.choices[0].delta);
            // 处理文本内容
            /* istanbul ignore next */
            cov_1fyinqecc7().s[31]++;
            if (delta.content) {
              /* istanbul ignore next */
              cov_1fyinqecc7().b[7][0]++;
              cov_1fyinqecc7().s[32]++;
              await writer.write(encoder.encode(`data: ${JSON.stringify({
                type: "TEXT_MESSAGE_CONTENT",
                messageId,
                delta: delta.content,
                timestamp: Date.now()
              })}\n\n`));
            } else
            /* istanbul ignore next */
            {
              cov_1fyinqecc7().b[7][1]++;
            }
            // 处理工具调用
            cov_1fyinqecc7().s[33]++;
            if (
            /* istanbul ignore next */
            (cov_1fyinqecc7().b[9][0]++, delta.tool_calls) &&
            /* istanbul ignore next */
            (cov_1fyinqecc7().b[9][1]++, delta.tool_calls.length > 0)) {
              /* istanbul ignore next */
              cov_1fyinqecc7().b[8][0]++;
              const toolCall =
              /* istanbul ignore next */
              (cov_1fyinqecc7().s[34]++, delta.tool_calls[0]);
              const toolCallId =
              /* istanbul ignore next */
              (cov_1fyinqecc7().s[35]++, `tool-${toolCall.index}-${runId}`);
              // 工具调用开始
              /* istanbul ignore next */
              cov_1fyinqecc7().s[36]++;
              if (
              /* istanbul ignore next */
              (cov_1fyinqecc7().b[11][0]++, toolCall.function) &&
              /* istanbul ignore next */
              (cov_1fyinqecc7().b[11][1]++, toolCall.function.name)) {
                /* istanbul ignore next */
                cov_1fyinqecc7().b[10][0]++;
                cov_1fyinqecc7().s[37]++;
                await writer.write(encoder.encode(`data: ${JSON.stringify({
                  type: "TOOL_CALL_START",
                  toolCallId,
                  toolCallName: toolCall.function.name,
                  parentMessageId: messageId,
                  timestamp: Date.now()
                })}\n\n`));
              } else
              /* istanbul ignore next */
              {
                cov_1fyinqecc7().b[10][1]++;
              }
              // 工具调用参数
              cov_1fyinqecc7().s[38]++;
              if (
              /* istanbul ignore next */
              (cov_1fyinqecc7().b[13][0]++, toolCall.function) &&
              /* istanbul ignore next */
              (cov_1fyinqecc7().b[13][1]++, toolCall.function.arguments)) {
                /* istanbul ignore next */
                cov_1fyinqecc7().b[12][0]++;
                cov_1fyinqecc7().s[39]++;
                await writer.write(encoder.encode(`data: ${JSON.stringify({
                  type: "TOOL_CALL_ARGS",
                  toolCallId,
                  delta: toolCall.function.arguments,
                  timestamp: Date.now()
                })}\n\n`));
              } else
              /* istanbul ignore next */
              {
                cov_1fyinqecc7().b[12][1]++;
              }
              // 工具调用结束
              cov_1fyinqecc7().s[40]++;
              await writer.write(encoder.encode(`data: ${JSON.stringify({
                type: "TOOL_CALL_END",
                toolCallId,
                timestamp: Date.now()
              })}\n\n`));
            } else
            /* istanbul ignore next */
            {
              cov_1fyinqecc7().b[8][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1fyinqecc7().b[5][1]++;
          }
          // 同时写入原始数据，保持兼容性
          cov_1fyinqecc7().s[41]++;
          await writer.write(encoder.encode(`data: ${event.data}\n\n`));
        } catch (error) {
          /* istanbul ignore next */
          cov_1fyinqecc7().s[42]++;
          console.error('Error processing message:', error);
        }
      },
      async onclose() {
        /* istanbul ignore next */
        cov_1fyinqecc7().f[2]++;
        cov_1fyinqecc7().s[43]++;
        // 发送消息结束和运行结束事件
        await writer.write(encoder.encode(`data: ${JSON.stringify({
          type: "TEXT_MESSAGE_END",
          messageId,
          timestamp: Date.now()
        })}\n\n`));
        /* istanbul ignore next */
        cov_1fyinqecc7().s[44]++;
        await writer.write(encoder.encode(`data: ${JSON.stringify({
          type: "RUN_FINISHED",
          threadId,
          runId,
          timestamp: Date.now()
        })}\n\n`));
        /* istanbul ignore next */
        cov_1fyinqecc7().s[45]++;
        await writer.close();
      },
      onerror(error) {
        /* istanbul ignore next */
        cov_1fyinqecc7().f[3]++;
        cov_1fyinqecc7().s[46]++;
        console.error('EventSource error:', error);
        /* istanbul ignore next */
        cov_1fyinqecc7().s[47]++;
        writer.write(encoder.encode(`data: ${JSON.stringify({
          type: "RUN_ERROR",
          message:
          /* istanbul ignore next */
          (cov_1fyinqecc7().b[14][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_1fyinqecc7().b[14][1]++, "Unknown error"),
          code: 500,
          timestamp: Date.now()
        })}\n\n`)).catch(console.error);
      }
    }).catch(async error => {
      /* istanbul ignore next */
      cov_1fyinqecc7().f[4]++;
      cov_1fyinqecc7().s[48]++;
      console.error('FastGPT API error:', error);
      /* istanbul ignore next */
      cov_1fyinqecc7().s[49]++;
      await writer.write(encoder.encode(`data: ${JSON.stringify({
        type: "RUN_ERROR",
        message:
        /* istanbul ignore next */
        (cov_1fyinqecc7().b[15][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1fyinqecc7().b[15][1]++, "Failed to connect to FastGPT API"),
        code: 500,
        timestamp: Date.now()
      })}\n\n`));
      /* istanbul ignore next */
      cov_1fyinqecc7().s[50]++;
      await writer.close();
    });
    // 返回流式响应
    /* istanbul ignore next */
    cov_1fyinqecc7().s[51]++;
    return new server_1.NextResponse(stream.readable, {
      headers: {
        "Content-Type": "text/event-stream",
        "Cache-Control": "no-cache",
        Connection: "keep-alive"
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1fyinqecc7().s[52]++;
    return api_helper_1.ApiResponseWrapper.error("Internal server error", {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,