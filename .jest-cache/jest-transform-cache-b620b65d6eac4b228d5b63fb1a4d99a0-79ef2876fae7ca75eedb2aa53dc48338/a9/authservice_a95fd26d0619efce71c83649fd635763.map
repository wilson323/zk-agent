{"version":3,"names":["cov_4ers7xjov","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","database_1","require","zod_1","password_1","token_1","loginSchema","z","object","email","string","password","min","registerSchema","optional","avatar","changePasswordSchema","oldPassword","newPassword","login","data","user","prisma","findUnique","where","toLowerCase","select","id","role","status","Error","isValidPassword","verifyPassword","update","lastLoginAt","Date","loginCount","increment","accessToken","refreshToken","generateToken","tokens","exports","register","existingUser","hashedPassword","hashPassword","newUser","create","token","payload","verifyToken","userId","newRefreshToken","changePassword","updatedAt"],"sources":["E:\\zk-agent\\lib\\services\\auth-service.ts"],"sourcesContent":["/**\n * @file lib/services/auth-service.ts\n * @description Authentication service for handling user authentication and authorization.\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { prisma } from '@/lib/database';\nimport { z } from 'zod';\nimport { hashPassword, verifyPassword } from '@/lib/auth/password';\nimport { generateToken, verifyToken } from '@/lib/auth/token';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\n\n// Zod validation schema for login\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\n// Zod validation schema for registration\nconst registerSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n});\n\n// Zod validation schema for password change\nconst changePasswordSchema = z.object({\n  oldPassword: z.string(),\n  newPassword: z.string().min(8),\n});\n\n/**\n * Handles user login.\n *\n * @param {object} data - The login data.\n * @returns {Promise<object>} The login result with tokens.\n */\nexport const login = async (data: z.infer<typeof loginSchema>) => {\n  const { email, password } = data;\n\n  const user = await prisma.user.findUnique({\n    where: { email: email.toLowerCase() },\n    select: {\n      id: true,\n      email: true,\n      password: true,\n      name: true,\n      avatar: true,\n      role: true,\n      status: true,\n    },\n  });\n\n  if (!user) {\n    throw new Error('Invalid email or password.');\n  }\n\n  const isValidPassword = await verifyPassword(password, user.password);\n  if (!isValidPassword) {\n    throw new Error('Invalid email or password.');\n  }\n\n  if (user.status !== 'ACTIVE') {\n    throw new Error('Account is not active.');\n  }\n\n  // Update login stats\n  await prisma.user.update({\n    where: { id: user.id },\n    data: {\n      lastLoginAt: new Date(),\n      loginCount: { increment: 1 },\n    },\n  });\n\n  const { accessToken, refreshToken } = await generateToken(user);\n\n  return {\n    user: {\n      id: user.id,\n      email: user.email,\n      name: user.name,\n      avatar: user.avatar,\n      role: user.role,\n    },\n    tokens: { accessToken, refreshToken },\n  };\n};\n\n/**\n * Handles user registration.\n *\n * @param {object} data - The registration data.\n * @returns {Promise<object>} The registration result with tokens.\n */\nexport const register = async (data: z.infer<typeof registerSchema>) => {\n  const { email, password, name, avatar } = data;\n\n  const existingUser = await prisma.user.findUnique({\n    where: { email: email.toLowerCase() },\n  });\n\n  if (existingUser) {\n    throw new Error('User with this email already exists.');\n  }\n\n  const hashedPassword = await hashPassword(password);\n\n  const newUser = await prisma.user.create({\n    data: {\n      email: email.toLowerCase(),\n      password: hashedPassword,\n      name,\n      avatar,\n      role: 'USER',\n      status: 'ACTIVE',\n    },\n    select: {\n      id: true,\n      email: true,\n      name: true,\n      avatar: true,\n      role: true,\n    },\n  });\n\n  const { accessToken, refreshToken } = await generateToken(newUser);\n\n  return {\n    user: newUser,\n    tokens: { accessToken, refreshToken },\n  };\n};\n\n/**\n * Refreshes the access token using a refresh token.\n *\n * @param {string} refreshToken - The refresh token.\n * @returns {Promise<object>} The new tokens.\n */\nexport const refreshToken = async (token: string) => {\n  const payload = await verifyToken(token, 'refresh');\n  if (!payload) {\n    throw new Error('Invalid refresh token.');\n  }\n\n  const user = await prisma.user.findUnique({\n    where: { id: payload.userId },\n    select: {\n      id: true,\n      email: true,\n      name: true,\n      avatar: true,\n      role: true,\n      status: true,\n    },\n  });\n\n  if (!user || user.status !== 'ACTIVE') {\n    throw new Error('User not found or inactive.');\n  }\n\n  const { accessToken, refreshToken: newRefreshToken } = await generateToken(user);\n\n  return { accessToken, refreshToken: newRefreshToken };\n};\n\n/**\n * Changes a user's password.\n *\n * @param {string} userId - The user ID.\n * @param {object} data - The password change data.\n * @returns {Promise<void>}\n */\nexport const changePassword = async (userId: string, data: z.infer<typeof changePasswordSchema>) => {\n  const { oldPassword, newPassword } = data;\n\n  const user = await prisma.user.findUnique({\n    where: { id: userId },\n    select: {\n      id: true,\n      password: true,\n    },\n  });\n\n  if (!user) {\n    throw new Error('User not found.');\n  }\n\n  const isValidPassword = await verifyPassword(oldPassword, user.password);\n  if (!isValidPassword) {\n    throw new Error('Invalid current password.');\n  }\n\n  const hashedPassword = await hashPassword(newPassword);\n\n  await prisma.user.update({\n    where: { id: userId },\n    data: {\n      password: hashedPassword,\n      updatedAt: new Date(),\n    },\n  });\n};"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}