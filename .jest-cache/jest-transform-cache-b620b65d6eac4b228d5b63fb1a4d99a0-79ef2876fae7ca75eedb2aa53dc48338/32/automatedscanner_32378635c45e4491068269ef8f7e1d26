8ed41acbaf3e08a33eacbf97259ce585
"use strict";

/**
 * @file lib/security/automated-scanner.ts
 * @description Automated Security Scanner - CI/CD integration for continuous security scanning
 * @author Security Team
 * @lastUpdate 2024-12-19
 * @security Production-level automated security scanning
 */
/* istanbul ignore next */
function cov_21jrohxkue() {
  var path = "E:\\zk-agent\\lib\\security\\automated-scanner.ts";
  var hash = "6d472f1a12048008a45024f01a4c5e1993c36f38";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\security\\automated-scanner.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "2": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "5": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 68
        }
      },
      "6": {
        start: {
          line: 13,
          column: 51
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "9": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "11": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "13": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "14": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 41,
          column: 4
        }
      },
      "15": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "16": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "18": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "19": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "20": {
        start: {
          line: 29,
          column: 77
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "21": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 22
        }
      },
      "22": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "23": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "24": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "25": {
        start: {
          line: 35,
          column: 35
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "26": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 23
        }
      },
      "27": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "28": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "29": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "30": {
        start: {
          line: 37,
          column: 56
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "31": {
        start: {
          line: 37,
          column: 78
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "32": {
        start: {
          line: 37,
          column: 102
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "33": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "34": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 22
        }
      },
      "35": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 62
        }
      },
      "36": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 160
        }
      },
      "37": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 44,
          column: 46
        }
      },
      "38": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 78
        }
      },
      "39": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "40": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 66
        }
      },
      "41": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 60
        }
      },
      "42": {
        start: {
          line: 49,
          column: 11
        },
        end: {
          line: 49,
          column: 47
        }
      },
      "43": {
        start: {
          line: 50,
          column: 13
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "44": {
        start: {
          line: 51,
          column: 15
        },
        end: {
          line: 51,
          column: 54
        }
      },
      "45": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 37
        }
      },
      "46": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "47": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 37
        }
      },
      "48": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "49": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 40
        }
      },
      "50": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "51": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "52": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "53": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 41
        }
      },
      "54": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 54
        }
      },
      "55": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 53
        }
      },
      "56": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "57": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 73
        }
      },
      "58": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "59": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 75
        }
      },
      "60": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "61": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "62": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 38
        }
      },
      "63": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "64": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "65": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "66": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 21
        }
      },
      "67": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 106,
          column: 54
        }
      },
      "68": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 107,
          column: 53
        }
      },
      "69": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "70": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 73
        }
      },
      "71": {
        start: {
          line: 111,
          column: 22
        },
        end: {
          line: 111,
          column: 42
        }
      },
      "72": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 112,
          column: 36
        }
      },
      "73": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "74": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 30
        }
      },
      "75": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 115,
          column: 32
        }
      },
      "76": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 116,
          column: 32
        }
      },
      "77": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "78": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "79": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 35
        }
      },
      "80": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "81": {
        start: {
          line: 124,
          column: 31
        },
        end: {
          line: 126,
          column: 18
        }
      },
      "82": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 37
        }
      },
      "83": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 31
        }
      },
      "84": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 87
        }
      },
      "85": {
        start: {
          line: 133,
          column: 27
        },
        end: {
          line: 133,
          column: 75
        }
      },
      "86": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "87": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "88": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 55
        }
      },
      "89": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 15
        }
      },
      "90": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 24
        }
      },
      "91": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 171,
          column: 54
        }
      },
      "92": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 53
        }
      },
      "93": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "94": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 73
        }
      },
      "95": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 176,
          column: 42
        }
      },
      "96": {
        start: {
          line: 177,
          column: 29
        },
        end: {
          line: 177,
          column: 31
        }
      },
      "97": {
        start: {
          line: 178,
          column: 25
        },
        end: {
          line: 178,
          column: 27
        }
      },
      "98": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "99": {
        start: {
          line: 181,
          column: 36
        },
        end: {
          line: 183,
          column: 57
        }
      },
      "100": {
        start: {
          line: 181,
          column: 61
        },
        end: {
          line: 183,
          column: 56
        }
      },
      "101": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "102": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 68
        }
      },
      "103": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 79
        }
      },
      "104": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "105": {
        start: {
          line: 190,
          column: 31
        },
        end: {
          line: 190,
          column: 112
        }
      },
      "106": {
        start: {
          line: 192,
          column: 43
        },
        end: {
          line: 192,
          column: 99
        }
      },
      "107": {
        start: {
          line: 192,
          column: 73
        },
        end: {
          line: 192,
          column: 98
        }
      },
      "108": {
        start: {
          line: 193,
          column: 39
        },
        end: {
          line: 193,
          column: 91
        }
      },
      "109": {
        start: {
          line: 193,
          column: 69
        },
        end: {
          line: 193,
          column: 90
        }
      },
      "110": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "111": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 51
        }
      },
      "112": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 199,
          column: 17
        }
      },
      "113": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 105
        }
      },
      "114": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 52
        }
      },
      "115": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 216,
          column: 15
        }
      },
      "116": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "117": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 61
        }
      },
      "118": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 230,
          column: 15
        }
      },
      "119": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 24
        }
      },
      "120": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 48
        }
      },
      "121": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 44
        }
      },
      "122": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "123": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 25
        }
      },
      "124": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 33
        }
      },
      "125": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 37
        }
      },
      "126": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 39
        }
      },
      "127": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 49
        }
      },
      "128": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 20
        }
      },
      "129": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 48
        }
      },
      "130": {
        start: {
          line: 259,
          column: 27
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "131": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 51
        }
      },
      "132": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "133": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 44
        }
      },
      "134": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 166
        }
      },
      "135": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 274,
          column: 11
        }
      },
      "136": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 24
        }
      },
      "137": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 53
        }
      },
      "138": {
        start: {
          line: 287,
          column: 23
        },
        end: {
          line: 287,
          column: 53
        }
      },
      "139": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "140": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "141": {
        start: {
          line: 291,
          column: 30
        },
        end: {
          line: 291,
          column: 55
        }
      },
      "142": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 54
        }
      },
      "143": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 40
        }
      },
      "144": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "145": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 47
        }
      },
      "146": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 169
        }
      },
      "147": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "148": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 20
        }
      },
      "149": {
        start: {
          line: 310,
          column: 23
        },
        end: {
          line: 310,
          column: 53
        }
      },
      "150": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "151": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 68
        }
      },
      "152": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "153": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 57
        }
      },
      "154": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 53
        }
      },
      "155": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 56
        }
      },
      "156": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 58
        }
      },
      "157": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 329,
          column: 44
        }
      },
      "158": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "159": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 35
        }
      },
      "160": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 39
        }
      },
      "161": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 40
        }
      },
      "162": {
        start: {
          line: 334,
          column: 30
        },
        end: {
          line: 334,
          column: 40
        }
      },
      "163": {
        start: {
          line: 335,
          column: 28
        },
        end: {
          line: 335,
          column: 30
        }
      },
      "164": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 30
        }
      },
      "165": {
        start: {
          line: 337,
          column: 31
        },
        end: {
          line: 337,
          column: 32
        }
      },
      "166": {
        start: {
          line: 338,
          column: 31
        },
        end: {
          line: 338,
          column: 32
        }
      },
      "167": {
        start: {
          line: 340,
          column: 32
        },
        end: {
          line: 340,
          column: 73
        }
      },
      "168": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 44
        }
      },
      "169": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "170": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 346,
          column: 17
        }
      },
      "171": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 345,
          column: 26
        }
      },
      "172": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 361,
          column: 17
        }
      },
      "173": {
        start: {
          line: 348,
          column: 36
        },
        end: {
          line: 348,
          column: 72
        }
      },
      "174": {
        start: {
          line: 349,
          column: 35
        },
        end: {
          line: 351,
          column: 22
        }
      },
      "175": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 41
        }
      },
      "176": {
        start: {
          line: 353,
          column: 20
        },
        end: {
          line: 353,
          column: 35
        }
      },
      "177": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 359,
          column: 23
        }
      },
      "178": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 35
        }
      },
      "179": {
        start: {
          line: 364,
          column: 28
        },
        end: {
          line: 364,
          column: 85
        }
      },
      "180": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 34
        }
      },
      "181": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 37
        }
      },
      "182": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 41
        }
      },
      "183": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "184": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 69
        }
      },
      "185": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 43
        }
      },
      "186": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 380,
          column: 15
        }
      },
      "187": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 34
        }
      },
      "188": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 68
        }
      },
      "189": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 41
        }
      },
      "190": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 43
        }
      },
      "191": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 391,
          column: 15
        }
      },
      "192": {
        start: {
          line: 398,
          column: 30
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "193": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 55
        }
      },
      "194": {
        start: {
          line: 414,
          column: 29
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "195": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 53
        }
      },
      "196": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 63
        }
      },
      "197": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 439,
          column: 18
        }
      },
      "198": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 39
        }
      },
      "199": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 46
        }
      },
      "200": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 450,
          column: 9
        }
      },
      "201": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 449,
          column: 13
        }
      },
      "202": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 448,
          column: 44
        }
      },
      "203": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "204": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 19
        }
      },
      "205": {
        start: {
          line: 461,
          column: 25
        },
        end: {
          line: 461,
          column: 66
        }
      },
      "206": {
        start: {
          line: 462,
          column: 22
        },
        end: {
          line: 475,
          column: 20
        }
      },
      "207": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 474,
          column: 13
        }
      },
      "208": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 467,
          column: 19
        }
      },
      "209": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 473,
          column: 19
        }
      },
      "210": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 50
        }
      },
      "211": {
        start: {
          line: 482,
          column: 22
        },
        end: {
          line: 482,
          column: 55
        }
      },
      "212": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "213": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 33
        }
      },
      "214": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 49
        }
      },
      "215": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 79
        }
      },
      "216": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 81
        }
      },
      "217": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "218": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 502,
          column: 13
        }
      },
      "219": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 29
        }
      },
      "220": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 509,
          column: 9
        }
      },
      "221": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 508,
          column: 13
        }
      },
      "222": {
        start: {
          line: 507,
          column: 16
        },
        end: {
          line: 507,
          column: 28
        }
      },
      "223": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 510,
          column: 21
        }
      },
      "224": {
        start: {
          line: 514,
          column: 22
        },
        end: {
          line: 517,
          column: 38
        }
      },
      "225": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 36
        }
      },
      "226": {
        start: {
          line: 521,
          column: 27
        },
        end: {
          line: 528,
          column: 9
        }
      },
      "227": {
        start: {
          line: 529,
          column: 29
        },
        end: {
          line: 529,
          column: 30
        }
      },
      "228": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 536,
          column: 11
        }
      },
      "229": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 534,
          column: 15
        }
      },
      "230": {
        start: {
          line: 532,
          column: 16
        },
        end: {
          line: 532,
          column: 35
        }
      },
      "231": {
        start: {
          line: 533,
          column: 16
        },
        end: {
          line: 533,
          column: 49
        }
      },
      "232": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 47
        }
      },
      "233": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 544,
          column: 10
        }
      },
      "234": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 550,
          column: 55
        }
      },
      "235": {
        start: {
          line: 554,
          column: 22
        },
        end: {
          line: 554,
          column: 24
        }
      },
      "236": {
        start: {
          line: 555,
          column: 24
        },
        end: {
          line: 571,
          column: 9
        }
      },
      "237": {
        start: {
          line: 556,
          column: 12
        },
        end: {
          line: 570,
          column: 13
        }
      },
      "238": {
        start: {
          line: 557,
          column: 32
        },
        end: {
          line: 557,
          column: 78
        }
      },
      "239": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 566,
          column: 17
        }
      },
      "240": {
        start: {
          line: 559,
          column: 37
        },
        end: {
          line: 559,
          column: 63
        }
      },
      "241": {
        start: {
          line: 560,
          column: 20
        },
        end: {
          line: 565,
          column: 21
        }
      },
      "242": {
        start: {
          line: 561,
          column: 24
        },
        end: {
          line: 561,
          column: 48
        }
      },
      "243": {
        start: {
          line: 563,
          column: 25
        },
        end: {
          line: 565,
          column: 21
        }
      },
      "244": {
        start: {
          line: 564,
          column: 24
        },
        end: {
          line: 564,
          column: 45
        }
      },
      "245": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 572,
          column: 37
        }
      },
      "246": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 573,
          column: 21
        }
      },
      "247": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 580,
          column: 9
        }
      },
      "248": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 579,
          column: 38
        }
      },
      "249": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 583,
          column: 9
        }
      },
      "250": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 582,
          column: 39
        }
      },
      "251": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 30
        }
      },
      "252": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 593,
          column: 11
        }
      },
      "253": {
        start: {
          line: 596,
          column: 8
        },
        end: {
          line: 625,
          column: 2
        }
      },
      "254": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 646,
          column: 2
        }
      },
      "255": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 681,
          column: 2
        }
      },
      "256": {
        start: {
          line: 684,
          column: 8
        },
        end: {
          line: 699,
          column: 2
        }
      },
      "257": {
        start: {
          line: 702,
          column: 0
        },
        end: {
          line: 702,
          column: 44
        }
      },
      "258": {
        start: {
          line: 704,
          column: 0
        },
        end: {
          line: 704,
          column: 58
        }
      },
      "259": {
        start: {
          line: 706,
          column: 0
        },
        end: {
          line: 706,
          column: 96
        }
      },
      "260": {
        start: {
          line: 707,
          column: 0
        },
        end: {
          line: 707,
          column: 86
        }
      },
      "261": {
        start: {
          line: 708,
          column: 0
        },
        end: {
          line: 708,
          column: 100
        }
      },
      "262": {
        start: {
          line: 709,
          column: 0
        },
        end: {
          line: 709,
          column: 100
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 74
          },
          end: {
            line: 9,
            column: 75
          }
        },
        loc: {
          start: {
            line: 9,
            column: 96
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 13,
            column: 39
          }
        },
        loc: {
          start: {
            line: 13,
            column: 49
          },
          end: {
            line: 13,
            column: 65
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 7
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 20,
            column: 81
          }
        },
        loc: {
          start: {
            line: 20,
            column: 95
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 5
          },
          end: {
            line: 22,
            column: 6
          }
        },
        loc: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 52
          }
        },
        loc: {
          start: {
            line: 25,
            column: 63
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 19
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 26
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 49
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 31,
            column: 9
          }
        },
        line: 27
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 12
          }
        },
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 18
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 53
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 61
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 70
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 56
          }
        },
        loc: {
          start: {
            line: 88,
            column: 64
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 88
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 41
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 105
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 50
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 170
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 181,
            column: 51
          },
          end: {
            line: 181,
            column: 52
          }
        },
        loc: {
          start: {
            line: 181,
            column: 61
          },
          end: {
            line: 183,
            column: 56
          }
        },
        line: 181
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 192,
            column: 68
          },
          end: {
            line: 192,
            column: 69
          }
        },
        loc: {
          start: {
            line: 192,
            column: 73
          },
          end: {
            line: 192,
            column: 98
          }
        },
        line: 192
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 193,
            column: 64
          },
          end: {
            line: 193,
            column: 65
          }
        },
        loc: {
          start: {
            line: 193,
            column: 69
          },
          end: {
            line: 193,
            column: 90
          }
        },
        line: 193
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 237
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 28
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 243
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 35
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 257
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 280
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 46
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 286
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 41
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 309
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 46
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 328
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 31
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 397
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 21
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 435
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 437,
            column: 20
          },
          end: {
            line: 437,
            column: 21
          }
        },
        loc: {
          start: {
            line: 437,
            column: 26
          },
          end: {
            line: 439,
            column: 9
          }
        },
        line: 437
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 26
          },
          end: {
            line: 451,
            column: 5
          }
        },
        line: 445
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 455,
            column: 5
          }
        },
        loc: {
          start: {
            line: 455,
            column: 27
          },
          end: {
            line: 477,
            column: 5
          }
        },
        line: 455
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 462,
            column: 34
          },
          end: {
            line: 462,
            column: 35
          }
        },
        loc: {
          start: {
            line: 462,
            column: 46
          },
          end: {
            line: 475,
            column: 9
          }
        },
        line: 462
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 481,
            column: 4
          },
          end: {
            line: 481,
            column: 5
          }
        },
        loc: {
          start: {
            line: 481,
            column: 31
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 481
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 491,
            column: 4
          },
          end: {
            line: 491,
            column: 5
          }
        },
        loc: {
          start: {
            line: 491,
            column: 20
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 491
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 494,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        },
        loc: {
          start: {
            line: 494,
            column: 23
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 494
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 37
          },
          end: {
            line: 511,
            column: 5
          }
        },
        line: 497
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 38
          },
          end: {
            line: 519,
            column: 5
          }
        },
        line: 512
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 520,
            column: 4
          },
          end: {
            line: 520,
            column: 5
          }
        },
        loc: {
          start: {
            line: 520,
            column: 57
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 520
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 530,
            column: 24
          },
          end: {
            line: 530,
            column: 25
          }
        },
        loc: {
          start: {
            line: 530,
            column: 34
          },
          end: {
            line: 536,
            column: 9
          }
        },
        line: 530
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 531,
            column: 38
          },
          end: {
            line: 531,
            column: 39
          }
        },
        loc: {
          start: {
            line: 531,
            column: 51
          },
          end: {
            line: 534,
            column: 13
          }
        },
        line: 531
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        loc: {
          start: {
            line: 546,
            column: 41
          },
          end: {
            line: 551,
            column: 5
          }
        },
        line: 546
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 552,
            column: 4
          },
          end: {
            line: 552,
            column: 5
          }
        },
        loc: {
          start: {
            line: 552,
            column: 41
          },
          end: {
            line: 574,
            column: 5
          }
        },
        line: 552
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 555,
            column: 24
          },
          end: {
            line: 555,
            column: 25
          }
        },
        loc: {
          start: {
            line: 555,
            column: 39
          },
          end: {
            line: 571,
            column: 9
          }
        },
        line: 555
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 575,
            column: 4
          },
          end: {
            line: 575,
            column: 5
          }
        },
        loc: {
          start: {
            line: 575,
            column: 36
          },
          end: {
            line: 585,
            column: 5
          }
        },
        line: 575
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        },
        loc: {
          start: {
            line: 586,
            column: 52
          },
          end: {
            line: 594,
            column: 5
          }
        },
        line: 586
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 595,
            column: 4
          },
          end: {
            line: 595,
            column: 5
          }
        },
        loc: {
          start: {
            line: 595,
            column: 33
          },
          end: {
            line: 626,
            column: 5
          }
        },
        line: 595
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 627,
            column: 4
          },
          end: {
            line: 627,
            column: 5
          }
        },
        loc: {
          start: {
            line: 627,
            column: 29
          },
          end: {
            line: 647,
            column: 5
          }
        },
        line: 627
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 648,
            column: 4
          },
          end: {
            line: 648,
            column: 5
          }
        },
        loc: {
          start: {
            line: 648,
            column: 32
          },
          end: {
            line: 682,
            column: 5
          }
        },
        line: 648
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 683,
            column: 4
          },
          end: {
            line: 683,
            column: 5
          }
        },
        loc: {
          start: {
            line: 683,
            column: 34
          },
          end: {
            line: 700,
            column: 5
          }
        },
        line: 683
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 19,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 27
          }
        }, {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 9,
            column: 51
          }
        }, {
          start: {
            line: 9,
            column: 57
          },
          end: {
            line: 19,
            column: 2
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 57
          },
          end: {
            line: 19,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 74
          },
          end: {
            line: 16,
            column: 1
          }
        }, {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 19,
            column: 1
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 13
          }
        }, {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 84
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 47
          }
        }, {
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 12,
            column: 84
          }
        }],
        line: 12
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 12,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 12,
            column: 63
          }
        }, {
          start: {
            line: 12,
            column: 67
          },
          end: {
            line: 12,
            column: 84
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "8": {
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 24,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 30
          }
        }, {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 20,
            column: 57
          }
        }, {
          start: {
            line: 20,
            column: 63
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 20
      },
      "9": {
        loc: {
          start: {
            line: 20,
            column: 63
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 22,
            column: 1
          }
        }, {
          start: {
            line: 22,
            column: 5
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 20
      },
      "10": {
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 41,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 24
          }
        }, {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 41,
            column: 4
          }
        }],
        line: 25
      },
      "11": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 44
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 31,
            column: 9
          }
        }],
        line: 27
      },
      "12": {
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "13": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "14": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 15
          }
        }, {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 33
          }
        }],
        line: 35
      },
      "15": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "16": {
        loc: {
          start: {
            line: 37,
            column: 78
          },
          end: {
            line: 37,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 78
          },
          end: {
            line: 37,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "17": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "18": {
        loc: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 70,
            column: 37
          }
        }],
        line: 70
      },
      "19": {
        loc: {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 41
          }
        }, {
          start: {
            line: 71,
            column: 45
          },
          end: {
            line: 71,
            column: 54
          }
        }],
        line: 71
      },
      "20": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "21": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "22": {
        loc: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 44
          }
        }, {
          start: {
            line: 84,
            column: 48
          },
          end: {
            line: 84,
            column: 56
          }
        }],
        line: 84
      },
      "23": {
        loc: {
          start: {
            line: 105,
            column: 27
          },
          end: {
            line: 105,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 39
          }
        }],
        line: 105
      },
      "24": {
        loc: {
          start: {
            line: 106,
            column: 25
          },
          end: {
            line: 106,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 25
          },
          end: {
            line: 106,
            column: 41
          }
        }, {
          start: {
            line: 106,
            column: 45
          },
          end: {
            line: 106,
            column: 54
          }
        }],
        line: 106
      },
      "25": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "26": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "27": {
        loc: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 43
          }
        }, {
          start: {
            line: 125,
            column: 47
          },
          end: {
            line: 125,
            column: 62
          }
        }],
        line: 125
      },
      "28": {
        loc: {
          start: {
            line: 137,
            column: 26
          },
          end: {
            line: 137,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 35
          },
          end: {
            line: 137,
            column: 79
          }
        }, {
          start: {
            line: 137,
            column: 82
          },
          end: {
            line: 137,
            column: 127
          }
        }],
        line: 137
      },
      "29": {
        loc: {
          start: {
            line: 147,
            column: 27
          },
          end: {
            line: 147,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 37
          }
        }, {
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 41
          }
        }],
        line: 147
      },
      "30": {
        loc: {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 170,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 170,
            column: 48
          }
        }],
        line: 170
      },
      "31": {
        loc: {
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 171,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 171,
            column: 41
          }
        }, {
          start: {
            line: 171,
            column: 45
          },
          end: {
            line: 171,
            column: 54
          }
        }],
        line: 171
      },
      "32": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "33": {
        loc: {
          start: {
            line: 181,
            column: 61
          },
          end: {
            line: 183,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 61
          },
          end: {
            line: 181,
            column: 86
          }
        }, {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 182,
            column: 30
          }
        }, {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 56
          }
        }],
        line: 181
      },
      "34": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "35": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "36": {
        loc: {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "37": {
        loc: {
          start: {
            line: 205,
            column: 26
          },
          end: {
            line: 205,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 35
          },
          end: {
            line: 205,
            column: 79
          }
        }, {
          start: {
            line: 205,
            column: 82
          },
          end: {
            line: 205,
            column: 131
          }
        }],
        line: 205
      },
      "38": {
        loc: {
          start: {
            line: 215,
            column: 27
          },
          end: {
            line: 215,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 36
          },
          end: {
            line: 215,
            column: 37
          }
        }, {
          start: {
            line: 215,
            column: 40
          },
          end: {
            line: 215,
            column: 41
          }
        }],
        line: 215
      },
      "39": {
        loc: {
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 39
          }
        }, {
          start: {
            line: 238,
            column: 43
          },
          end: {
            line: 238,
            column: 47
          }
        }],
        line: 238
      },
      "40": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "41": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 16
          }
        }, {
          start: {
            line: 245,
            column: 20
          },
          end: {
            line: 245,
            column: 44
          }
        }],
        line: 245
      },
      "42": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "43": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 30
          }
        }, {
          start: {
            line: 265,
            column: 34
          },
          end: {
            line: 265,
            column: 53
          }
        }],
        line: 265
      },
      "44": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "45": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "46": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 33
          }
        }, {
          start: {
            line: 295,
            column: 37
          },
          end: {
            line: 295,
            column: 59
          }
        }],
        line: 295
      },
      "47": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "48": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 316,
            column: 57
          }
        }, {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 318,
            column: 53
          }
        }, {
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 320,
            column: 56
          }
        }, {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 322,
            column: 58
          }
        }],
        line: 314
      },
      "49": {
        loc: {
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 346,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 346,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "50": {
        loc: {
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "51": {
        loc: {
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 449,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "52": {
        loc: {
          start: {
            line: 447,
            column: 16
          },
          end: {
            line: 447,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 16
          },
          end: {
            line: 447,
            column: 30
          }
        }, {
          start: {
            line: 447,
            column: 34
          },
          end: {
            line: 447,
            column: 49
          }
        }, {
          start: {
            line: 447,
            column: 53
          },
          end: {
            line: 447,
            column: 88
          }
        }],
        line: 447
      },
      "53": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "54": {
        loc: {
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 483
      },
      "55": {
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 502,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 502,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "56": {
        loc: {
          start: {
            line: 506,
            column: 12
          },
          end: {
            line: 508,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 12
          },
          end: {
            line: 508,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "57": {
        loc: {
          start: {
            line: 542,
            column: 23
          },
          end: {
            line: 542,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 23
          },
          end: {
            line: 542,
            column: 54
          }
        }, {
          start: {
            line: 542,
            column: 58
          },
          end: {
            line: 542,
            column: 59
          }
        }],
        line: 542
      },
      "58": {
        loc: {
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 550,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 66
          }
        }, {
          start: {
            line: 548,
            column: 12
          },
          end: {
            line: 548,
            column: 54
          }
        }, {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 58
          }
        }, {
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 550,
            column: 53
          }
        }],
        line: 547
      },
      "59": {
        loc: {
          start: {
            line: 560,
            column: 20
          },
          end: {
            line: 565,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 20
          },
          end: {
            line: 565,
            column: 21
          }
        }, {
          start: {
            line: 563,
            column: 25
          },
          end: {
            line: 565,
            column: 21
          }
        }],
        line: 560
      },
      "60": {
        loc: {
          start: {
            line: 563,
            column: 25
          },
          end: {
            line: 565,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 563,
            column: 25
          },
          end: {
            line: 565,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 563
      },
      "61": {
        loc: {
          start: {
            line: 563,
            column: 29
          },
          end: {
            line: 563,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 563,
            column: 29
          },
          end: {
            line: 563,
            column: 43
          }
        }, {
          start: {
            line: 563,
            column: 47
          },
          end: {
            line: 563,
            column: 84
          }
        }],
        line: 563
      },
      "62": {
        loc: {
          start: {
            line: 578,
            column: 8
          },
          end: {
            line: 580,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 578,
            column: 8
          },
          end: {
            line: 580,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 578
      },
      "63": {
        loc: {
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 583,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 583,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 581
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0, 0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\security\\automated-scanner.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\security\\automated-scanner.ts"],
      sourcesContent: ["/**\n * @file lib/security/automated-scanner.ts\n * @description Automated Security Scanner - CI/CD integration for continuous security scanning\n * @author Security Team\n * @lastUpdate 2024-12-19\n * @security Production-level automated security scanning\n */\n\nimport { Logger } from '@/lib/utils/logger';\nimport { enhancedCacheManager } from '@/lib/cache/enhanced-cache-manager';\nimport { codeReviewSystem, CodeReviewResult } from './code-review-system';\nimport { securityAuditSystem, SecurityEventType, SecuritySeverity } from './security-audit-system';\nimport { getErrorMessage } from '@/lib/utils/error-handler';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\n\nconst logger = new Logger('AutomatedScanner');\n\n// Scan Configuration\nexport interface ScanConfig {\n  id: string;\n  name: string;\n  enabled: boolean;\n  schedule?: string; // Cron expression\n  includePatterns: string[];\n  excludePatterns: string[];\n  rulesets: string[];\n  thresholds: {\n    critical: number;\n    high: number;\n    medium: number;\n    riskScore: number;\n  };\n  notifications: {\n    email?: string[];\n    webhook?: string;\n    slack?: string;\n  };\n}\n\n// Scan Job\nexport interface ScanJob {\n  id: string;\n  configId: string;\n  status: 'queued' | 'running' | 'completed' | 'failed' | 'cancelled';\n  startedAt?: Date;\n  completedAt?: Date;\n  triggeredBy: 'schedule' | 'commit' | 'manual' | 'api';\n  results?: ScanJobResult;\n  error?: string;\n}\n\n// Scan Job Result\nexport interface ScanJobResult {\n  totalFiles: number;\n  scannedFiles: number;\n  skippedFiles: number;\n  violations: {\n    total: number;\n    critical: number;\n    high: number;\n    medium: number;\n    low: number;\n    info: number;\n  };\n  riskScore: number;\n  duration: number;\n  reportUrl?: string;\n}\n\n// File Change Detection\ninterface FileChange {\n  path: string;\n  type: 'added' | 'modified' | 'deleted';\n  content?: string;\n}\n\nexport class AutomatedScanner {\n  private static instance: AutomatedScanner;\n  private scanConfigs: Map<string, ScanConfig> = new Map();\n  private scanJobs: Map<string, ScanJob> = new Map();\n  private activeScans: Set<string> = new Set();\n  private scheduledScans: Map<string, NodeJS.Timeout> = new Map();\n\n  private constructor() {\n    this.initializeDefaultConfigs();\n    this.startScheduler();\n  }\n\n  public static getInstance(): AutomatedScanner {\n    if (!AutomatedScanner.instance) {\n      AutomatedScanner.instance = new AutomatedScanner();\n    }\n    return AutomatedScanner.instance;\n  }\n\n  /**\n   * Scan repository for security issues\n   */\n  async scanRepository(options: {\n    configId?: string;\n    includePatterns?: string[];\n    excludePatterns?: string[];\n    triggeredBy?: 'schedule' | 'commit' | 'manual' | 'api';\n  } = {}): Promise<string> {\n    const configId = options.configId || 'default';\n    const config = this.scanConfigs.get(configId);\n    \n    if (!config) {\n      throw new Error(`Scan configuration not found: ${configId}`);\n    }\n\n    if (!config.enabled) {\n      throw new Error(`Scan configuration is disabled: ${configId}`);\n    }\n\n    const jobId = this.generateJobId();\n    const job: ScanJob = {\n      id: jobId,\n      configId,\n      status: 'queued',\n      triggeredBy: options.triggeredBy || 'manual',\n    };\n\n    this.scanJobs.set(jobId, job);\n\n    // Start scan asynchronously\n    this.executeScan(jobId, config, options).catch(error => {\n      logger.error('Scan execution failed', {\n        jobId,\n        configId,\n        error: getErrorMessage(error),\n      });\n    });\n\n    logger.info('Repository scan initiated', {\n      jobId,\n      configId,\n      triggeredBy: job.triggeredBy,\n    });\n\n    return jobId;\n  }\n\n  /**\n   * Scan specific files (for CI/CD integration)\n   */\n  async scanFiles(files: Array<{ path: string; content: string }>, options: {\n    configId?: string;\n    rulesets?: string[];\n  } = {}): Promise<{\n    jobId: string;\n    results: CodeReviewResult[];\n    passed: boolean;\n    summary: ScanJobResult;\n  }> {\n    const configId = options.configId || 'default';\n    const config = this.scanConfigs.get(configId);\n    \n    if (!config) {\n      throw new Error(`Scan configuration not found: ${configId}`);\n    }\n\n    const jobId = this.generateJobId();\n    const startTime = Date.now();\n\n    try {\n      const results: CodeReviewResult[] = [];\n      let scannedFiles = 0;\n      let skippedFiles = 0;\n\n      for (const file of files) {\n        // Check if file should be scanned\n        if (!this.shouldScanFile(file.path, config)) {\n          skippedFiles++;\n          continue;\n        }\n\n        // Scan file\n        const result = await codeReviewSystem.scanFile(file.path, file.content, {\n          rules: options.rulesets || config.rulesets,\n        });\n\n        results.push(result);\n        scannedFiles++;\n      }\n\n      // Calculate summary\n      const summary = this.calculateScanSummary(results, files.length, startTime);\n      \n      // Check if scan passed based on thresholds\n      const passed = this.checkThresholds(summary, config.thresholds);\n\n      // Record scan event\n      await securityAuditSystem.recordEvent({\n        type: SecurityEventType.SECURITY_SCAN,\n        severity: passed ? SecuritySeverity.LOW : SecuritySeverity.HIGH,\n        ip: '127.0.0.1',\n        details: {\n          jobId,\n          configId,\n          filesScanned: scannedFiles,\n          violations: summary.violations.total,\n          passed,\n          riskScore: summary.riskScore,\n        },\n        riskScore: passed ? 2 : 8,\n      });\n\n      logger.info('Files scan completed', {\n        jobId,\n        scannedFiles,\n        skippedFiles,\n        violations: summary.violations.total,\n        passed,\n        riskScore: summary.riskScore,\n      });\n\n      return { jobId, results, passed, summary };\n\n    } catch (error) {\n      logger.error('Files scan failed', {\n        jobId,\n        error: getErrorMessage(error),\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Scan changed files (for Git hooks)\n   */\n  async scanChangedFiles(changes: FileChange[], options: {\n    configId?: string;\n    baseBranch?: string;\n  } = {}): Promise<{\n    jobId: string;\n    passed: boolean;\n    blockedFiles: string[];\n    warnings: string[];\n  }> {\n    const configId = options.configId || 'default';\n    const config = this.scanConfigs.get(configId);\n    \n    if (!config) {\n      throw new Error(`Scan configuration not found: ${configId}`);\n    }\n\n    const jobId = this.generateJobId();\n    const blockedFiles: string[] = [];\n    const warnings: string[] = [];\n\n    try {\n      // Filter relevant changes\n      const relevantChanges = changes.filter(change => \n        change.type !== 'deleted' && \n        change.content &&\n        this.shouldScanFile(change.path, config)\n      );\n\n      if (relevantChanges.length === 0) {\n        logger.info('No relevant files to scan', { jobId });\n        return { jobId, passed: true, blockedFiles: [], warnings: [] };\n      }\n\n      // Scan changed files\n      for (const change of relevantChanges) {\n        const result = await codeReviewSystem.scanFile(change.path, change.content!);\n\n        // Check for blocking violations\n        const criticalViolations = result.violations.filter(v => v.severity === 'critical');\n        const highViolations = result.violations.filter(v => v.severity === 'high');\n\n        if (criticalViolations.length > config.thresholds.critical) {\n          blockedFiles.push(change.path);\n        }\n\n        if (highViolations.length > config.thresholds.high) {\n          warnings.push(`${change.path}: ${highViolations.length} high-severity issues found`);\n        }\n      }\n\n      const passed = blockedFiles.length === 0;\n\n      // Record scan event\n      await securityAuditSystem.recordEvent({\n        type: SecurityEventType.SECURITY_SCAN,\n        severity: passed ? SecuritySeverity.LOW : SecuritySeverity.CRITICAL,\n        ip: '127.0.0.1',\n        details: {\n          jobId,\n          configId,\n          changedFiles: relevantChanges.length,\n          blockedFiles: blockedFiles.length,\n          warnings: warnings.length,\n          passed,\n        },\n        riskScore: passed ? 1 : 9,\n      });\n\n      logger.info('Changed files scan completed', {\n        jobId,\n        changedFiles: relevantChanges.length,\n        blockedFiles: blockedFiles.length,\n        warnings: warnings.length,\n        passed,\n      });\n\n      return { jobId, passed, blockedFiles, warnings };\n\n    } catch (error) {\n      logger.error('Changed files scan failed', {\n        jobId,\n        error: getErrorMessage(error),\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Get scan job status\n   */\n  getScanJob(jobId: string): ScanJob | null {\n    return this.scanJobs.get(jobId) || null;\n  }\n\n  /**\n   * Cancel running scan\n   */\n  async cancelScan(jobId: string): Promise<boolean> {\n    const job = this.scanJobs.get(jobId);\n    if (!job || job.status !== 'running') {\n      return false;\n    }\n\n    job.status = 'cancelled';\n    job.completedAt = new Date();\n    this.activeScans.delete(jobId);\n\n    logger.info('Scan cancelled', { jobId });\n    return true;\n  }\n\n  /**\n   * Create or update scan configuration\n   */\n  async createScanConfig(config: Omit<ScanConfig, 'id'>): Promise<string> {\n    const configId = this.generateConfigId();\n    const fullConfig: ScanConfig = {\n      id: configId,\n      ...config,\n    };\n\n    this.scanConfigs.set(configId, fullConfig);\n\n    // Schedule if needed\n    if (fullConfig.enabled && fullConfig.schedule) {\n      this.scheduleConfig(fullConfig);\n    }\n\n    // Cache configuration\n    await enhancedCacheManager.set(\n      `security:scan-config:${configId}`,\n      fullConfig,\n      { ttl: 86400000, tags: ['security', 'scan-config'] }\n    );\n\n    logger.info('Scan configuration created', {\n      configId,\n      name: config.name,\n      enabled: config.enabled,\n    });\n\n    return configId;\n  }\n\n  /**\n   * Get scan configurations\n   */\n  getScanConfigs(): ScanConfig[] {\n    return Array.from(this.scanConfigs.values());\n  }\n\n  /**\n   * Update scan configuration\n   */\n  async updateScanConfig(configId: string, updates: Partial<ScanConfig>): Promise<boolean> {\n    const config = this.scanConfigs.get(configId);\n    if (!config) {\n      return false;\n    }\n\n    const updatedConfig = { ...config, ...updates };\n    this.scanConfigs.set(configId, updatedConfig);\n\n    // Update scheduling\n    this.unscheduleConfig(configId);\n    if (updatedConfig.enabled && updatedConfig.schedule) {\n      this.scheduleConfig(updatedConfig);\n    }\n\n    // Update cache\n    await enhancedCacheManager.set(\n      `security:scan-config:${configId}`,\n      updatedConfig,\n      { ttl: 86400000, tags: ['security', 'scan-config'] }\n    );\n\n    logger.info('Scan configuration updated', {\n      configId,\n      updates: Object.keys(updates),\n    });\n\n    return true;\n  }\n\n  /**\n   * Generate CI/CD integration script\n   */\n  generateCIScript(configId: string, platform: 'github' | 'gitlab' | 'jenkins' | 'generic'): string {\n    const config = this.scanConfigs.get(configId);\n    if (!config) {\n      throw new Error(`Configuration not found: ${configId}`);\n    }\n\n    switch (platform) {\n      case 'github':\n        return this.generateGitHubAction(config);\n      case 'gitlab':\n        return this.generateGitLabCI(config);\n      case 'jenkins':\n        return this.generateJenkinsfile(config);\n      default:\n        return this.generateGenericScript(config);\n    }\n  }\n\n  /**\n   * Private: Execute scan job\n   */\n  private async executeScan(jobId: string, config: ScanConfig, options: any): Promise<void> {\n    const job = this.scanJobs.get(jobId)!;\n    \n    try {\n      job.status = 'running';\n      job.startedAt = new Date();\n      this.activeScans.add(jobId);\n\n      const startTime = Date.now();\n      const results: CodeReviewResult[] = [];\n      let totalFiles = 0;\n      let scannedFiles = 0;\n      let skippedFiles = 0;\n\n      // Discover files to scan\n      const filesToScan = await this.discoverFiles(config, options);\n      totalFiles = filesToScan.length;\n\n      // Scan each file\n      for (const filePath of filesToScan) {\n        if (job.status === 'cancelled') {\n          break;\n        }\n\n        try {\n          const content = await fs.readFile(filePath, 'utf-8');\n          const result = await codeReviewSystem.scanFile(filePath, content, {\n            rules: config.rulesets,\n          });\n          \n          results.push(result);\n          scannedFiles++;\n        } catch (error) {\n          logger.warn('Failed to scan file', {\n            filePath,\n            error: getErrorMessage(error),\n          });\n          skippedFiles++;\n        }\n      }\n\n      // Calculate results\n      const summary = this.calculateScanSummary(results, totalFiles, startTime);\n      \n      job.results = summary;\n      job.status = 'completed';\n      job.completedAt = new Date();\n\n      // Send notifications if thresholds exceeded\n      if (!this.checkThresholds(summary, config.thresholds)) {\n        await this.sendNotifications(config, summary, jobId);\n      }\n\n      this.activeScans.delete(jobId);\n\n      logger.info('Scan job completed', {\n        jobId,\n        configId: config.id,\n        totalFiles,\n        scannedFiles,\n        violations: summary.violations.total,\n        riskScore: summary.riskScore,\n      });\n\n    } catch (error) {\n      job.status = 'failed';\n      job.error = getErrorMessage(error);\n      job.completedAt = new Date();\n      this.activeScans.delete(jobId);\n\n      logger.error('Scan job failed', {\n        jobId,\n        configId: config.id,\n        error: getErrorMessage(error),\n      });\n    }\n  }\n\n  /**\n   * Private: Initialize default configurations\n   */\n  private initializeDefaultConfigs(): void {\n    const defaultConfig: ScanConfig = {\n      id: 'default',\n      name: 'Default Security Scan',\n      enabled: true,\n      includePatterns: ['**/*.ts', '**/*.js', '**/*.tsx', '**/*.jsx'],\n      excludePatterns: ['**/node_modules/**', '**/dist/**', '**/*.test.*', '**/*.spec.*'],\n      rulesets: [],\n      thresholds: {\n        critical: 0,\n        high: 5,\n        medium: 20,\n        riskScore: 7,\n      },\n      notifications: {},\n    };\n\n    this.scanConfigs.set('default', defaultConfig);\n\n    const strictConfig: ScanConfig = {\n      id: 'strict',\n      name: 'Strict Security Scan',\n      enabled: true,\n      includePatterns: ['**/*.ts', '**/*.js', '**/*.tsx', '**/*.jsx', '**/*.py', '**/*.java'],\n      excludePatterns: ['**/node_modules/**', '**/dist/**', '**/*.test.*', '**/*.spec.*'],\n      rulesets: [],\n      thresholds: {\n        critical: 0,\n        high: 0,\n        medium: 10,\n        riskScore: 5,\n      },\n      notifications: {},\n    };\n\n    this.scanConfigs.set('strict', strictConfig);\n\n    logger.info('Default scan configurations initialized');\n  }\n\n  /**\n   * Private: Start scheduler\n   */\n  private startScheduler(): void {\n    // Check for scheduled scans every minute\n    setInterval(() => {\n      this.checkScheduledScans();\n    }, 60000);\n\n    logger.info('Scan scheduler started');\n  }\n\n  /**\n   * Private: Check for scheduled scans\n   */\n  private checkScheduledScans(): void {\n    for (const config of this.scanConfigs.values()) {\n      if (config.enabled && config.schedule && !this.scheduledScans.has(config.id)) {\n        this.scheduleConfig(config);\n      }\n    }\n  }\n\n  /**\n   * Private: Schedule configuration\n   */\n  private scheduleConfig(config: ScanConfig): void {\n    if (!config.schedule) {return;}\n\n    // Simple cron-like scheduling (basic implementation)\n    // In production, use a proper cron library like node-cron\n    const interval = this.parseCronExpression(config.schedule);\n    \n    const timer = setInterval(async () => {\n      try {\n        await this.scanRepository({\n          configId: config.id,\n          triggeredBy: 'schedule',\n        });\n      } catch (error) {\n        logger.error('Scheduled scan failed', {\n          configId: config.id,\n          error: getErrorMessage(error),\n        });\n      }\n    }, interval);\n\n    this.scheduledScans.set(config.id, timer);\n  }\n\n  /**\n   * Private: Unschedule configuration\n   */\n  private unscheduleConfig(configId: string): void {\n    const timer = this.scheduledScans.get(configId);\n    if (timer) {\n      clearInterval(timer);\n      this.scheduledScans.delete(configId);\n    }\n  }\n\n  /**\n   * Private: Utility methods\n   */\n  private generateJobId(): string {\n    return `scan_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateConfigId(): string {\n    return `config_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private shouldScanFile(filePath: string, config: ScanConfig): boolean {\n    // Check exclude patterns first\n    for (const pattern of config.excludePatterns) {\n      if (this.matchesPattern(filePath, pattern)) {\n        return false;\n      }\n    }\n\n    // Check include patterns\n    for (const pattern of config.includePatterns) {\n      if (this.matchesPattern(filePath, pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private matchesPattern(filePath: string, pattern: string): boolean {\n    // Simple glob pattern matching (basic implementation)\n    const regex = new RegExp(\n      pattern\n        .replace(/\\*\\*/g, '.*')\n        .replace(/\\*/g, '[^/]*')\n        .replace(/\\?/g, '.'),\n      'i'\n    );\n    return regex.test(filePath);\n  }\n\n  private calculateScanSummary(results: CodeReviewResult[], totalFiles: number, startTime: number): ScanJobResult {\n    const violations = {\n      total: 0,\n      critical: 0,\n      high: 0,\n      medium: 0,\n      low: 0,\n      info: 0,\n    };\n\n    let totalRiskScore = 0;\n\n    results.forEach(result => {\n      result.violations.forEach(violation => {\n        violations.total++;\n        violations[violation.severity]++;\n      });\n      totalRiskScore += result.riskScore;\n    });\n\n    return {\n      totalFiles,\n      scannedFiles: results.length,\n      skippedFiles: totalFiles - results.length,\n      violations,\n      riskScore: totalRiskScore / results.length || 0,\n      duration: Date.now() - startTime,\n    };\n  }\n\n  private checkThresholds(summary: ScanJobResult, thresholds: ScanConfig['thresholds']): boolean {\n    return (\n      summary.violations.critical <= thresholds.critical &&\n      summary.violations.high <= thresholds.high &&\n      summary.violations.medium <= thresholds.medium &&\n      summary.riskScore <= thresholds.riskScore\n    );\n  }\n\n  private async discoverFiles(config: ScanConfig, options: any): Promise<string[]> {\n    // Simple file discovery (in production, use a proper glob library)\n    const files: string[] = [];\n    \n    const scanDir = async (dir: string) => {\n      try {\n        const entries = await fs.readdir(dir, { withFileTypes: true });\n        \n        for (const entry of entries) {\n          const fullPath = path.join(dir, entry.name);\n          \n          if (entry.isDirectory()) {\n            await scanDir(fullPath);\n          } else if (entry.isFile() && this.shouldScanFile(fullPath, config)) {\n            files.push(fullPath);\n          }\n        }\n      } catch (error) {\n        // Ignore directories we can't read\n      }\n    };\n\n    await scanDir(process.cwd());\n    return files;\n  }\n\n  private parseCronExpression(expression: string): number {\n    // Simple cron parser (basic implementation)\n    // In production, use a proper cron library\n    if (expression === '0 */6 * * *') {return 6 * 60 * 60 * 1000;} // Every 6 hours\n    if (expression === '0 0 * * *') {return 24 * 60 * 60 * 1000;} // Daily\n    return 60 * 60 * 1000; // Default: hourly\n  }\n\n  private async sendNotifications(config: ScanConfig, summary: ScanJobResult, jobId: string): Promise<void> {\n    // Implement notification sending\n    logger.warn('Security scan thresholds exceeded', {\n      configId: config.id,\n      jobId,\n      violations: summary.violations,\n      riskScore: summary.riskScore,\n    });\n  }\n\n  private generateGitHubAction(config: ScanConfig): string {\n    return `\nname: Security Code Review\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  security-scan:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: '18'\n      - name: Install dependencies\n        run: npm ci\n      - name: Run security scan\n        run: npm run security:scan\n        env:\n          SCAN_CONFIG_ID: ${config.id}\n      - name: Upload results\n        uses: actions/upload-artifact@v3\n        if: always()\n        with:\n          name: security-scan-results\n          path: security-report.json\n`;\n  }\n\n  private generateGitLabCI(config: ScanConfig): string {\n    return `\nsecurity-scan:\n  stage: test\n  image: node:18-alpine\n  script:\n    - npm ci\n    - npm run security:scan\n  variables:\n    SCAN_CONFIG_ID: ${config.id}\n  artifacts:\n    reports:\n      junit: security-report.xml\n    paths:\n      - security-report.json\n  only:\n    - merge_requests\n    - main\n    - develop\n`;\n  }\n\n  private generateJenkinsfile(config: ScanConfig): string {\n    return `\npipeline {\n    agent any\n    environment {\n        SCAN_CONFIG_ID = '${config.id}'\n    }\n    stages {\n        stage('Install Dependencies') {\n            steps {\n                sh 'npm ci'\n            }\n        }\n        stage('Security Scan') {\n            steps {\n                sh 'npm run security:scan'\n            }\n            post {\n                always {\n                    archiveArtifacts artifacts: 'security-report.json', allowEmptyArchive: true\n                    publishHTML([\n                        allowMissing: false,\n                        alwaysLinkToLastBuild: true,\n                        keepAll: true,\n                        reportDir: '.',\n                        reportFiles: 'security-report.html',\n                        reportName: 'Security Scan Report'\n                    ])\n                }\n            }\n        }\n    }\n}\n`;\n  }\n\n  private generateGenericScript(config: ScanConfig): string {\n    return `#!/bin/bash\n# Security scan script for ${config.name}\n\nset -e\n\necho \"Starting security scan...\"\nexport SCAN_CONFIG_ID=\"${config.id}\"\n\n# Install dependencies\nnpm ci\n\n# Run security scan\nnpm run security:scan\n\necho \"Security scan completed\"\n`;\n  }\n}\n\n// Export singleton instance\nexport const automatedScanner = AutomatedScanner.getInstance();\n\n// Export convenience methods\nexport const scanRepository = automatedScanner.scanRepository.bind(automatedScanner);\nexport const scanFiles = automatedScanner.scanFiles.bind(automatedScanner);\nexport const scanChangedFiles = automatedScanner.scanChangedFiles.bind(automatedScanner);\nexport const createScanConfig = automatedScanner.createScanConfig.bind(automatedScanner);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6d472f1a12048008a45024f01a4c5e1993c36f38"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21jrohxkue = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21jrohxkue();
var __createBinding =
/* istanbul ignore next */
(cov_21jrohxkue().s[0]++,
/* istanbul ignore next */
(cov_21jrohxkue().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_21jrohxkue().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_21jrohxkue().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_21jrohxkue().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_21jrohxkue().f[0]++;
  cov_21jrohxkue().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_21jrohxkue().b[2][0]++;
    cov_21jrohxkue().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_21jrohxkue().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_21jrohxkue().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_21jrohxkue().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_21jrohxkue().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_21jrohxkue().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_21jrohxkue().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_21jrohxkue().b[5][1]++,
  /* istanbul ignore next */
  (cov_21jrohxkue().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_21jrohxkue().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_21jrohxkue().b[3][0]++;
    cov_21jrohxkue().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_21jrohxkue().f[1]++;
        cov_21jrohxkue().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_21jrohxkue().b[3][1]++;
  }
  cov_21jrohxkue().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_21jrohxkue().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_21jrohxkue().f[2]++;
  cov_21jrohxkue().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_21jrohxkue().b[7][0]++;
    cov_21jrohxkue().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_21jrohxkue().b[7][1]++;
  }
  cov_21jrohxkue().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_21jrohxkue().s[11]++,
/* istanbul ignore next */
(cov_21jrohxkue().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_21jrohxkue().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_21jrohxkue().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_21jrohxkue().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_21jrohxkue().f[3]++;
  cov_21jrohxkue().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_21jrohxkue().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_21jrohxkue().f[4]++;
  cov_21jrohxkue().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_21jrohxkue().s[14]++,
/* istanbul ignore next */
(cov_21jrohxkue().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_21jrohxkue().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_21jrohxkue().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_21jrohxkue().f[5]++;
  cov_21jrohxkue().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[6]++;
    cov_21jrohxkue().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_21jrohxkue().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_21jrohxkue().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_21jrohxkue().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[17]++, []);
      /* istanbul ignore next */
      cov_21jrohxkue().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_21jrohxkue().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_21jrohxkue().b[12][0]++;
          cov_21jrohxkue().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_21jrohxkue().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_21jrohxkue().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_21jrohxkue().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[8]++;
    cov_21jrohxkue().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_21jrohxkue().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_21jrohxkue().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[13][0]++;
      cov_21jrohxkue().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[26]++, {});
    /* istanbul ignore next */
    cov_21jrohxkue().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[15][0]++;
      cov_21jrohxkue().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_21jrohxkue().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_21jrohxkue().b[16][0]++;
          cov_21jrohxkue().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_21jrohxkue().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[15][1]++;
    }
    cov_21jrohxkue().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_21jrohxkue().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_21jrohxkue().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_21jrohxkue().s[36]++;
exports.createScanConfig = exports.scanChangedFiles = exports.scanFiles = exports.scanRepository = exports.automatedScanner = exports.AutomatedScanner = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_21jrohxkue().s[37]++, require("@/lib/utils/logger"));
const enhanced_cache_manager_1 =
/* istanbul ignore next */
(cov_21jrohxkue().s[38]++, require("@/lib/cache/enhanced-cache-manager"));
const code_review_system_1 =
/* istanbul ignore next */
(cov_21jrohxkue().s[39]++, require("./code-review-system"));
const security_audit_system_1 =
/* istanbul ignore next */
(cov_21jrohxkue().s[40]++, require("./security-audit-system"));
const error_handler_1 =
/* istanbul ignore next */
(cov_21jrohxkue().s[41]++, require("@/lib/utils/error-handler"));
const fs =
/* istanbul ignore next */
(cov_21jrohxkue().s[42]++, __importStar(require("fs/promises")));
const path =
/* istanbul ignore next */
(cov_21jrohxkue().s[43]++, __importStar(require("path")));
const logger =
/* istanbul ignore next */
(cov_21jrohxkue().s[44]++, new logger_1.Logger('AutomatedScanner'));
class AutomatedScanner {
  constructor() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[9]++;
    cov_21jrohxkue().s[45]++;
    this.scanConfigs = new Map();
    /* istanbul ignore next */
    cov_21jrohxkue().s[46]++;
    this.scanJobs = new Map();
    /* istanbul ignore next */
    cov_21jrohxkue().s[47]++;
    this.activeScans = new Set();
    /* istanbul ignore next */
    cov_21jrohxkue().s[48]++;
    this.scheduledScans = new Map();
    /* istanbul ignore next */
    cov_21jrohxkue().s[49]++;
    this.initializeDefaultConfigs();
    /* istanbul ignore next */
    cov_21jrohxkue().s[50]++;
    this.startScheduler();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[10]++;
    cov_21jrohxkue().s[51]++;
    if (!AutomatedScanner.instance) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[17][0]++;
      cov_21jrohxkue().s[52]++;
      AutomatedScanner.instance = new AutomatedScanner();
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[17][1]++;
    }
    cov_21jrohxkue().s[53]++;
    return AutomatedScanner.instance;
  }
  /**
   * Scan repository for security issues
   */
  async scanRepository(options =
  /* istanbul ignore next */
  (cov_21jrohxkue().b[18][0]++, {})) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[11]++;
    const configId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[54]++,
    /* istanbul ignore next */
    (cov_21jrohxkue().b[19][0]++, options.configId) ||
    /* istanbul ignore next */
    (cov_21jrohxkue().b[19][1]++, 'default'));
    const config =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[55]++, this.scanConfigs.get(configId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[56]++;
    if (!config) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[20][0]++;
      cov_21jrohxkue().s[57]++;
      throw new Error(`Scan configuration not found: ${configId}`);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[20][1]++;
    }
    cov_21jrohxkue().s[58]++;
    if (!config.enabled) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[21][0]++;
      cov_21jrohxkue().s[59]++;
      throw new Error(`Scan configuration is disabled: ${configId}`);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[21][1]++;
    }
    const jobId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[60]++, this.generateJobId());
    const job =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[61]++, {
      id: jobId,
      configId,
      status: 'queued',
      triggeredBy:
      /* istanbul ignore next */
      (cov_21jrohxkue().b[22][0]++, options.triggeredBy) ||
      /* istanbul ignore next */
      (cov_21jrohxkue().b[22][1]++, 'manual')
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[62]++;
    this.scanJobs.set(jobId, job);
    // Start scan asynchronously
    /* istanbul ignore next */
    cov_21jrohxkue().s[63]++;
    this.executeScan(jobId, config, options).catch(error => {
      /* istanbul ignore next */
      cov_21jrohxkue().f[12]++;
      cov_21jrohxkue().s[64]++;
      logger.error('Scan execution failed', {
        jobId,
        configId,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[65]++;
    logger.info('Repository scan initiated', {
      jobId,
      configId,
      triggeredBy: job.triggeredBy
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[66]++;
    return jobId;
  }
  /**
   * Scan specific files (for CI/CD integration)
   */
  async scanFiles(files, options =
  /* istanbul ignore next */
  (cov_21jrohxkue().b[23][0]++, {})) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[13]++;
    const configId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[67]++,
    /* istanbul ignore next */
    (cov_21jrohxkue().b[24][0]++, options.configId) ||
    /* istanbul ignore next */
    (cov_21jrohxkue().b[24][1]++, 'default'));
    const config =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[68]++, this.scanConfigs.get(configId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[69]++;
    if (!config) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[25][0]++;
      cov_21jrohxkue().s[70]++;
      throw new Error(`Scan configuration not found: ${configId}`);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[25][1]++;
    }
    const jobId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[71]++, this.generateJobId());
    const startTime =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[72]++, Date.now());
    /* istanbul ignore next */
    cov_21jrohxkue().s[73]++;
    try {
      const results =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[74]++, []);
      let scannedFiles =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[75]++, 0);
      let skippedFiles =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[76]++, 0);
      /* istanbul ignore next */
      cov_21jrohxkue().s[77]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_21jrohxkue().s[78]++;
        // Check if file should be scanned
        if (!this.shouldScanFile(file.path, config)) {
          /* istanbul ignore next */
          cov_21jrohxkue().b[26][0]++;
          cov_21jrohxkue().s[79]++;
          skippedFiles++;
          /* istanbul ignore next */
          cov_21jrohxkue().s[80]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_21jrohxkue().b[26][1]++;
        }
        // Scan file
        const result =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[81]++, await code_review_system_1.codeReviewSystem.scanFile(file.path, file.content, {
          rules:
          /* istanbul ignore next */
          (cov_21jrohxkue().b[27][0]++, options.rulesets) ||
          /* istanbul ignore next */
          (cov_21jrohxkue().b[27][1]++, config.rulesets)
        }));
        /* istanbul ignore next */
        cov_21jrohxkue().s[82]++;
        results.push(result);
        /* istanbul ignore next */
        cov_21jrohxkue().s[83]++;
        scannedFiles++;
      }
      // Calculate summary
      const summary =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[84]++, this.calculateScanSummary(results, files.length, startTime));
      // Check if scan passed based on thresholds
      const passed =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[85]++, this.checkThresholds(summary, config.thresholds));
      // Record scan event
      /* istanbul ignore next */
      cov_21jrohxkue().s[86]++;
      await security_audit_system_1.securityAuditSystem.recordEvent({
        type: security_audit_system_1.SecurityEventType.SECURITY_SCAN,
        severity: passed ?
        /* istanbul ignore next */
        (cov_21jrohxkue().b[28][0]++, security_audit_system_1.SecuritySeverity.LOW) :
        /* istanbul ignore next */
        (cov_21jrohxkue().b[28][1]++, security_audit_system_1.SecuritySeverity.HIGH),
        ip: '127.0.0.1',
        details: {
          jobId,
          configId,
          filesScanned: scannedFiles,
          violations: summary.violations.total,
          passed,
          riskScore: summary.riskScore
        },
        riskScore: passed ?
        /* istanbul ignore next */
        (cov_21jrohxkue().b[29][0]++, 2) :
        /* istanbul ignore next */
        (cov_21jrohxkue().b[29][1]++, 8)
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[87]++;
      logger.info('Files scan completed', {
        jobId,
        scannedFiles,
        skippedFiles,
        violations: summary.violations.total,
        passed,
        riskScore: summary.riskScore
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[88]++;
      return {
        jobId,
        results,
        passed,
        summary
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_21jrohxkue().s[89]++;
      logger.error('Files scan failed', {
        jobId,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[90]++;
      throw error;
    }
  }
  /**
   * Scan changed files (for Git hooks)
   */
  async scanChangedFiles(changes, options =
  /* istanbul ignore next */
  (cov_21jrohxkue().b[30][0]++, {})) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[14]++;
    const configId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[91]++,
    /* istanbul ignore next */
    (cov_21jrohxkue().b[31][0]++, options.configId) ||
    /* istanbul ignore next */
    (cov_21jrohxkue().b[31][1]++, 'default'));
    const config =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[92]++, this.scanConfigs.get(configId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[93]++;
    if (!config) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[32][0]++;
      cov_21jrohxkue().s[94]++;
      throw new Error(`Scan configuration not found: ${configId}`);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[32][1]++;
    }
    const jobId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[95]++, this.generateJobId());
    const blockedFiles =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[96]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[97]++, []);
    /* istanbul ignore next */
    cov_21jrohxkue().s[98]++;
    try {
      // Filter relevant changes
      const relevantChanges =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[99]++, changes.filter(change => {
        /* istanbul ignore next */
        cov_21jrohxkue().f[15]++;
        cov_21jrohxkue().s[100]++;
        return /* istanbul ignore next */(cov_21jrohxkue().b[33][0]++, change.type !== 'deleted') &&
        /* istanbul ignore next */
        (cov_21jrohxkue().b[33][1]++, change.content) &&
        /* istanbul ignore next */
        (cov_21jrohxkue().b[33][2]++, this.shouldScanFile(change.path, config));
      }));
      /* istanbul ignore next */
      cov_21jrohxkue().s[101]++;
      if (relevantChanges.length === 0) {
        /* istanbul ignore next */
        cov_21jrohxkue().b[34][0]++;
        cov_21jrohxkue().s[102]++;
        logger.info('No relevant files to scan', {
          jobId
        });
        /* istanbul ignore next */
        cov_21jrohxkue().s[103]++;
        return {
          jobId,
          passed: true,
          blockedFiles: [],
          warnings: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_21jrohxkue().b[34][1]++;
      }
      // Scan changed files
      cov_21jrohxkue().s[104]++;
      for (const change of relevantChanges) {
        const result =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[105]++, await code_review_system_1.codeReviewSystem.scanFile(change.path, change.content));
        // Check for blocking violations
        const criticalViolations =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[106]++, result.violations.filter(v => {
          /* istanbul ignore next */
          cov_21jrohxkue().f[16]++;
          cov_21jrohxkue().s[107]++;
          return v.severity === 'critical';
        }));
        const highViolations =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[108]++, result.violations.filter(v => {
          /* istanbul ignore next */
          cov_21jrohxkue().f[17]++;
          cov_21jrohxkue().s[109]++;
          return v.severity === 'high';
        }));
        /* istanbul ignore next */
        cov_21jrohxkue().s[110]++;
        if (criticalViolations.length > config.thresholds.critical) {
          /* istanbul ignore next */
          cov_21jrohxkue().b[35][0]++;
          cov_21jrohxkue().s[111]++;
          blockedFiles.push(change.path);
        } else
        /* istanbul ignore next */
        {
          cov_21jrohxkue().b[35][1]++;
        }
        cov_21jrohxkue().s[112]++;
        if (highViolations.length > config.thresholds.high) {
          /* istanbul ignore next */
          cov_21jrohxkue().b[36][0]++;
          cov_21jrohxkue().s[113]++;
          warnings.push(`${change.path}: ${highViolations.length} high-severity issues found`);
        } else
        /* istanbul ignore next */
        {
          cov_21jrohxkue().b[36][1]++;
        }
      }
      const passed =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[114]++, blockedFiles.length === 0);
      // Record scan event
      /* istanbul ignore next */
      cov_21jrohxkue().s[115]++;
      await security_audit_system_1.securityAuditSystem.recordEvent({
        type: security_audit_system_1.SecurityEventType.SECURITY_SCAN,
        severity: passed ?
        /* istanbul ignore next */
        (cov_21jrohxkue().b[37][0]++, security_audit_system_1.SecuritySeverity.LOW) :
        /* istanbul ignore next */
        (cov_21jrohxkue().b[37][1]++, security_audit_system_1.SecuritySeverity.CRITICAL),
        ip: '127.0.0.1',
        details: {
          jobId,
          configId,
          changedFiles: relevantChanges.length,
          blockedFiles: blockedFiles.length,
          warnings: warnings.length,
          passed
        },
        riskScore: passed ?
        /* istanbul ignore next */
        (cov_21jrohxkue().b[38][0]++, 1) :
        /* istanbul ignore next */
        (cov_21jrohxkue().b[38][1]++, 9)
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[116]++;
      logger.info('Changed files scan completed', {
        jobId,
        changedFiles: relevantChanges.length,
        blockedFiles: blockedFiles.length,
        warnings: warnings.length,
        passed
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[117]++;
      return {
        jobId,
        passed,
        blockedFiles,
        warnings
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_21jrohxkue().s[118]++;
      logger.error('Changed files scan failed', {
        jobId,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[119]++;
      throw error;
    }
  }
  /**
   * Get scan job status
   */
  getScanJob(jobId) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[18]++;
    cov_21jrohxkue().s[120]++;
    return /* istanbul ignore next */(cov_21jrohxkue().b[39][0]++, this.scanJobs.get(jobId)) ||
    /* istanbul ignore next */
    (cov_21jrohxkue().b[39][1]++, null);
  }
  /**
   * Cancel running scan
   */
  async cancelScan(jobId) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[19]++;
    const job =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[121]++, this.scanJobs.get(jobId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_21jrohxkue().b[41][0]++, !job) ||
    /* istanbul ignore next */
    (cov_21jrohxkue().b[41][1]++, job.status !== 'running')) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[40][0]++;
      cov_21jrohxkue().s[123]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[40][1]++;
    }
    cov_21jrohxkue().s[124]++;
    job.status = 'cancelled';
    /* istanbul ignore next */
    cov_21jrohxkue().s[125]++;
    job.completedAt = new Date();
    /* istanbul ignore next */
    cov_21jrohxkue().s[126]++;
    this.activeScans.delete(jobId);
    /* istanbul ignore next */
    cov_21jrohxkue().s[127]++;
    logger.info('Scan cancelled', {
      jobId
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[128]++;
    return true;
  }
  /**
   * Create or update scan configuration
   */
  async createScanConfig(config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[20]++;
    const configId =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[129]++, this.generateConfigId());
    const fullConfig =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[130]++, {
      id: configId,
      ...config
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[131]++;
    this.scanConfigs.set(configId, fullConfig);
    // Schedule if needed
    /* istanbul ignore next */
    cov_21jrohxkue().s[132]++;
    if (
    /* istanbul ignore next */
    (cov_21jrohxkue().b[43][0]++, fullConfig.enabled) &&
    /* istanbul ignore next */
    (cov_21jrohxkue().b[43][1]++, fullConfig.schedule)) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[42][0]++;
      cov_21jrohxkue().s[133]++;
      this.scheduleConfig(fullConfig);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[42][1]++;
    }
    // Cache configuration
    cov_21jrohxkue().s[134]++;
    await enhanced_cache_manager_1.enhancedCacheManager.set(`security:scan-config:${configId}`, fullConfig, {
      ttl: 86400000,
      tags: ['security', 'scan-config']
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[135]++;
    logger.info('Scan configuration created', {
      configId,
      name: config.name,
      enabled: config.enabled
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[136]++;
    return configId;
  }
  /**
   * Get scan configurations
   */
  getScanConfigs() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[21]++;
    cov_21jrohxkue().s[137]++;
    return Array.from(this.scanConfigs.values());
  }
  /**
   * Update scan configuration
   */
  async updateScanConfig(configId, updates) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[22]++;
    const config =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[138]++, this.scanConfigs.get(configId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[139]++;
    if (!config) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[44][0]++;
      cov_21jrohxkue().s[140]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[44][1]++;
    }
    const updatedConfig =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[141]++, {
      ...config,
      ...updates
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[142]++;
    this.scanConfigs.set(configId, updatedConfig);
    // Update scheduling
    /* istanbul ignore next */
    cov_21jrohxkue().s[143]++;
    this.unscheduleConfig(configId);
    /* istanbul ignore next */
    cov_21jrohxkue().s[144]++;
    if (
    /* istanbul ignore next */
    (cov_21jrohxkue().b[46][0]++, updatedConfig.enabled) &&
    /* istanbul ignore next */
    (cov_21jrohxkue().b[46][1]++, updatedConfig.schedule)) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[45][0]++;
      cov_21jrohxkue().s[145]++;
      this.scheduleConfig(updatedConfig);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[45][1]++;
    }
    // Update cache
    cov_21jrohxkue().s[146]++;
    await enhanced_cache_manager_1.enhancedCacheManager.set(`security:scan-config:${configId}`, updatedConfig, {
      ttl: 86400000,
      tags: ['security', 'scan-config']
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[147]++;
    logger.info('Scan configuration updated', {
      configId,
      updates: Object.keys(updates)
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[148]++;
    return true;
  }
  /**
   * Generate CI/CD integration script
   */
  generateCIScript(configId, platform) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[23]++;
    const config =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[149]++, this.scanConfigs.get(configId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[150]++;
    if (!config) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[47][0]++;
      cov_21jrohxkue().s[151]++;
      throw new Error(`Configuration not found: ${configId}`);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[47][1]++;
    }
    cov_21jrohxkue().s[152]++;
    switch (platform) {
      case 'github':
        /* istanbul ignore next */
        cov_21jrohxkue().b[48][0]++;
        cov_21jrohxkue().s[153]++;
        return this.generateGitHubAction(config);
      case 'gitlab':
        /* istanbul ignore next */
        cov_21jrohxkue().b[48][1]++;
        cov_21jrohxkue().s[154]++;
        return this.generateGitLabCI(config);
      case 'jenkins':
        /* istanbul ignore next */
        cov_21jrohxkue().b[48][2]++;
        cov_21jrohxkue().s[155]++;
        return this.generateJenkinsfile(config);
      default:
        /* istanbul ignore next */
        cov_21jrohxkue().b[48][3]++;
        cov_21jrohxkue().s[156]++;
        return this.generateGenericScript(config);
    }
  }
  /**
   * Private: Execute scan job
   */
  async executeScan(jobId, config, options) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[24]++;
    const job =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[157]++, this.scanJobs.get(jobId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[158]++;
    try {
      /* istanbul ignore next */
      cov_21jrohxkue().s[159]++;
      job.status = 'running';
      /* istanbul ignore next */
      cov_21jrohxkue().s[160]++;
      job.startedAt = new Date();
      /* istanbul ignore next */
      cov_21jrohxkue().s[161]++;
      this.activeScans.add(jobId);
      const startTime =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[162]++, Date.now());
      const results =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[163]++, []);
      let totalFiles =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[164]++, 0);
      let scannedFiles =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[165]++, 0);
      let skippedFiles =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[166]++, 0);
      // Discover files to scan
      const filesToScan =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[167]++, await this.discoverFiles(config, options));
      /* istanbul ignore next */
      cov_21jrohxkue().s[168]++;
      totalFiles = filesToScan.length;
      // Scan each file
      /* istanbul ignore next */
      cov_21jrohxkue().s[169]++;
      for (const filePath of filesToScan) {
        /* istanbul ignore next */
        cov_21jrohxkue().s[170]++;
        if (job.status === 'cancelled') {
          /* istanbul ignore next */
          cov_21jrohxkue().b[49][0]++;
          cov_21jrohxkue().s[171]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_21jrohxkue().b[49][1]++;
        }
        cov_21jrohxkue().s[172]++;
        try {
          const content =
          /* istanbul ignore next */
          (cov_21jrohxkue().s[173]++, await fs.readFile(filePath, 'utf-8'));
          const result =
          /* istanbul ignore next */
          (cov_21jrohxkue().s[174]++, await code_review_system_1.codeReviewSystem.scanFile(filePath, content, {
            rules: config.rulesets
          }));
          /* istanbul ignore next */
          cov_21jrohxkue().s[175]++;
          results.push(result);
          /* istanbul ignore next */
          cov_21jrohxkue().s[176]++;
          scannedFiles++;
        } catch (error) {
          /* istanbul ignore next */
          cov_21jrohxkue().s[177]++;
          logger.warn('Failed to scan file', {
            filePath,
            error: (0, error_handler_1.getErrorMessage)(error)
          });
          /* istanbul ignore next */
          cov_21jrohxkue().s[178]++;
          skippedFiles++;
        }
      }
      // Calculate results
      const summary =
      /* istanbul ignore next */
      (cov_21jrohxkue().s[179]++, this.calculateScanSummary(results, totalFiles, startTime));
      /* istanbul ignore next */
      cov_21jrohxkue().s[180]++;
      job.results = summary;
      /* istanbul ignore next */
      cov_21jrohxkue().s[181]++;
      job.status = 'completed';
      /* istanbul ignore next */
      cov_21jrohxkue().s[182]++;
      job.completedAt = new Date();
      // Send notifications if thresholds exceeded
      /* istanbul ignore next */
      cov_21jrohxkue().s[183]++;
      if (!this.checkThresholds(summary, config.thresholds)) {
        /* istanbul ignore next */
        cov_21jrohxkue().b[50][0]++;
        cov_21jrohxkue().s[184]++;
        await this.sendNotifications(config, summary, jobId);
      } else
      /* istanbul ignore next */
      {
        cov_21jrohxkue().b[50][1]++;
      }
      cov_21jrohxkue().s[185]++;
      this.activeScans.delete(jobId);
      /* istanbul ignore next */
      cov_21jrohxkue().s[186]++;
      logger.info('Scan job completed', {
        jobId,
        configId: config.id,
        totalFiles,
        scannedFiles,
        violations: summary.violations.total,
        riskScore: summary.riskScore
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_21jrohxkue().s[187]++;
      job.status = 'failed';
      /* istanbul ignore next */
      cov_21jrohxkue().s[188]++;
      job.error = (0, error_handler_1.getErrorMessage)(error);
      /* istanbul ignore next */
      cov_21jrohxkue().s[189]++;
      job.completedAt = new Date();
      /* istanbul ignore next */
      cov_21jrohxkue().s[190]++;
      this.activeScans.delete(jobId);
      /* istanbul ignore next */
      cov_21jrohxkue().s[191]++;
      logger.error('Scan job failed', {
        jobId,
        configId: config.id,
        error: (0, error_handler_1.getErrorMessage)(error)
      });
    }
  }
  /**
   * Private: Initialize default configurations
   */
  initializeDefaultConfigs() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[25]++;
    const defaultConfig =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[192]++, {
      id: 'default',
      name: 'Default Security Scan',
      enabled: true,
      includePatterns: ['**/*.ts', '**/*.js', '**/*.tsx', '**/*.jsx'],
      excludePatterns: ['**/node_modules/**', '**/dist/**', '**/*.test.*', '**/*.spec.*'],
      rulesets: [],
      thresholds: {
        critical: 0,
        high: 5,
        medium: 20,
        riskScore: 7
      },
      notifications: {}
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[193]++;
    this.scanConfigs.set('default', defaultConfig);
    const strictConfig =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[194]++, {
      id: 'strict',
      name: 'Strict Security Scan',
      enabled: true,
      includePatterns: ['**/*.ts', '**/*.js', '**/*.tsx', '**/*.jsx', '**/*.py', '**/*.java'],
      excludePatterns: ['**/node_modules/**', '**/dist/**', '**/*.test.*', '**/*.spec.*'],
      rulesets: [],
      thresholds: {
        critical: 0,
        high: 0,
        medium: 10,
        riskScore: 5
      },
      notifications: {}
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[195]++;
    this.scanConfigs.set('strict', strictConfig);
    /* istanbul ignore next */
    cov_21jrohxkue().s[196]++;
    logger.info('Default scan configurations initialized');
  }
  /**
   * Private: Start scheduler
   */
  startScheduler() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[26]++;
    cov_21jrohxkue().s[197]++;
    // Check for scheduled scans every minute
    setInterval(() => {
      /* istanbul ignore next */
      cov_21jrohxkue().f[27]++;
      cov_21jrohxkue().s[198]++;
      this.checkScheduledScans();
    }, 60000);
    /* istanbul ignore next */
    cov_21jrohxkue().s[199]++;
    logger.info('Scan scheduler started');
  }
  /**
   * Private: Check for scheduled scans
   */
  checkScheduledScans() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[28]++;
    cov_21jrohxkue().s[200]++;
    for (const config of this.scanConfigs.values()) {
      /* istanbul ignore next */
      cov_21jrohxkue().s[201]++;
      if (
      /* istanbul ignore next */
      (cov_21jrohxkue().b[52][0]++, config.enabled) &&
      /* istanbul ignore next */
      (cov_21jrohxkue().b[52][1]++, config.schedule) &&
      /* istanbul ignore next */
      (cov_21jrohxkue().b[52][2]++, !this.scheduledScans.has(config.id))) {
        /* istanbul ignore next */
        cov_21jrohxkue().b[51][0]++;
        cov_21jrohxkue().s[202]++;
        this.scheduleConfig(config);
      } else
      /* istanbul ignore next */
      {
        cov_21jrohxkue().b[51][1]++;
      }
    }
  }
  /**
   * Private: Schedule configuration
   */
  scheduleConfig(config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[29]++;
    cov_21jrohxkue().s[203]++;
    if (!config.schedule) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[53][0]++;
      cov_21jrohxkue().s[204]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[53][1]++;
    }
    // Simple cron-like scheduling (basic implementation)
    // In production, use a proper cron library like node-cron
    const interval =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[205]++, this.parseCronExpression(config.schedule));
    const timer =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[206]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_21jrohxkue().f[30]++;
      cov_21jrohxkue().s[207]++;
      try {
        /* istanbul ignore next */
        cov_21jrohxkue().s[208]++;
        await this.scanRepository({
          configId: config.id,
          triggeredBy: 'schedule'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_21jrohxkue().s[209]++;
        logger.error('Scheduled scan failed', {
          configId: config.id,
          error: (0, error_handler_1.getErrorMessage)(error)
        });
      }
    }, interval));
    /* istanbul ignore next */
    cov_21jrohxkue().s[210]++;
    this.scheduledScans.set(config.id, timer);
  }
  /**
   * Private: Unschedule configuration
   */
  unscheduleConfig(configId) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[31]++;
    const timer =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[211]++, this.scheduledScans.get(configId));
    /* istanbul ignore next */
    cov_21jrohxkue().s[212]++;
    if (timer) {
      /* istanbul ignore next */
      cov_21jrohxkue().b[54][0]++;
      cov_21jrohxkue().s[213]++;
      clearInterval(timer);
      /* istanbul ignore next */
      cov_21jrohxkue().s[214]++;
      this.scheduledScans.delete(configId);
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[54][1]++;
    }
  }
  /**
   * Private: Utility methods
   */
  generateJobId() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[32]++;
    cov_21jrohxkue().s[215]++;
    return `scan_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateConfigId() {
    /* istanbul ignore next */
    cov_21jrohxkue().f[33]++;
    cov_21jrohxkue().s[216]++;
    return `config_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  shouldScanFile(filePath, config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[34]++;
    cov_21jrohxkue().s[217]++;
    // Check exclude patterns first
    for (const pattern of config.excludePatterns) {
      /* istanbul ignore next */
      cov_21jrohxkue().s[218]++;
      if (this.matchesPattern(filePath, pattern)) {
        /* istanbul ignore next */
        cov_21jrohxkue().b[55][0]++;
        cov_21jrohxkue().s[219]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_21jrohxkue().b[55][1]++;
      }
    }
    // Check include patterns
    /* istanbul ignore next */
    cov_21jrohxkue().s[220]++;
    for (const pattern of config.includePatterns) {
      /* istanbul ignore next */
      cov_21jrohxkue().s[221]++;
      if (this.matchesPattern(filePath, pattern)) {
        /* istanbul ignore next */
        cov_21jrohxkue().b[56][0]++;
        cov_21jrohxkue().s[222]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_21jrohxkue().b[56][1]++;
      }
    }
    /* istanbul ignore next */
    cov_21jrohxkue().s[223]++;
    return false;
  }
  matchesPattern(filePath, pattern) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[35]++;
    // Simple glob pattern matching (basic implementation)
    const regex =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[224]++, new RegExp(pattern.replace(/\*\*/g, '.*').replace(/\*/g, '[^/]*').replace(/\?/g, '.'), 'i'));
    /* istanbul ignore next */
    cov_21jrohxkue().s[225]++;
    return regex.test(filePath);
  }
  calculateScanSummary(results, totalFiles, startTime) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[36]++;
    const violations =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[226]++, {
      total: 0,
      critical: 0,
      high: 0,
      medium: 0,
      low: 0,
      info: 0
    });
    let totalRiskScore =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[227]++, 0);
    /* istanbul ignore next */
    cov_21jrohxkue().s[228]++;
    results.forEach(result => {
      /* istanbul ignore next */
      cov_21jrohxkue().f[37]++;
      cov_21jrohxkue().s[229]++;
      result.violations.forEach(violation => {
        /* istanbul ignore next */
        cov_21jrohxkue().f[38]++;
        cov_21jrohxkue().s[230]++;
        violations.total++;
        /* istanbul ignore next */
        cov_21jrohxkue().s[231]++;
        violations[violation.severity]++;
      });
      /* istanbul ignore next */
      cov_21jrohxkue().s[232]++;
      totalRiskScore += result.riskScore;
    });
    /* istanbul ignore next */
    cov_21jrohxkue().s[233]++;
    return {
      totalFiles,
      scannedFiles: results.length,
      skippedFiles: totalFiles - results.length,
      violations,
      riskScore:
      /* istanbul ignore next */
      (cov_21jrohxkue().b[57][0]++, totalRiskScore / results.length) ||
      /* istanbul ignore next */
      (cov_21jrohxkue().b[57][1]++, 0),
      duration: Date.now() - startTime
    };
  }
  checkThresholds(summary, thresholds) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[39]++;
    cov_21jrohxkue().s[234]++;
    return /* istanbul ignore next */(cov_21jrohxkue().b[58][0]++, summary.violations.critical <= thresholds.critical) &&
    /* istanbul ignore next */
    (cov_21jrohxkue().b[58][1]++, summary.violations.high <= thresholds.high) &&
    /* istanbul ignore next */
    (cov_21jrohxkue().b[58][2]++, summary.violations.medium <= thresholds.medium) &&
    /* istanbul ignore next */
    (cov_21jrohxkue().b[58][3]++, summary.riskScore <= thresholds.riskScore);
  }
  async discoverFiles(config, options) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[40]++;
    // Simple file discovery (in production, use a proper glob library)
    const files =
    /* istanbul ignore next */
    (cov_21jrohxkue().s[235]++, []);
    /* istanbul ignore next */
    cov_21jrohxkue().s[236]++;
    const scanDir = async dir => {
      /* istanbul ignore next */
      cov_21jrohxkue().f[41]++;
      cov_21jrohxkue().s[237]++;
      try {
        const entries =
        /* istanbul ignore next */
        (cov_21jrohxkue().s[238]++, await fs.readdir(dir, {
          withFileTypes: true
        }));
        /* istanbul ignore next */
        cov_21jrohxkue().s[239]++;
        for (const entry of entries) {
          const fullPath =
          /* istanbul ignore next */
          (cov_21jrohxkue().s[240]++, path.join(dir, entry.name));
          /* istanbul ignore next */
          cov_21jrohxkue().s[241]++;
          if (entry.isDirectory()) {
            /* istanbul ignore next */
            cov_21jrohxkue().b[59][0]++;
            cov_21jrohxkue().s[242]++;
            await scanDir(fullPath);
          } else {
            /* istanbul ignore next */
            cov_21jrohxkue().b[59][1]++;
            cov_21jrohxkue().s[243]++;
            if (
            /* istanbul ignore next */
            (cov_21jrohxkue().b[61][0]++, entry.isFile()) &&
            /* istanbul ignore next */
            (cov_21jrohxkue().b[61][1]++, this.shouldScanFile(fullPath, config))) {
              /* istanbul ignore next */
              cov_21jrohxkue().b[60][0]++;
              cov_21jrohxkue().s[244]++;
              files.push(fullPath);
            } else
            /* istanbul ignore next */
            {
              cov_21jrohxkue().b[60][1]++;
            }
          }
        }
      } catch (error) {
        // Ignore directories we can't read
      }
    };
    /* istanbul ignore next */
    cov_21jrohxkue().s[245]++;
    await scanDir(process.cwd());
    /* istanbul ignore next */
    cov_21jrohxkue().s[246]++;
    return files;
  }
  parseCronExpression(expression) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[42]++;
    cov_21jrohxkue().s[247]++;
    // Simple cron parser (basic implementation)
    // In production, use a proper cron library
    if (expression === '0 */6 * * *') {
      /* istanbul ignore next */
      cov_21jrohxkue().b[62][0]++;
      cov_21jrohxkue().s[248]++;
      return 6 * 60 * 60 * 1000;
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[62][1]++;
    } // Every 6 hours
    cov_21jrohxkue().s[249]++;
    if (expression === '0 0 * * *') {
      /* istanbul ignore next */
      cov_21jrohxkue().b[63][0]++;
      cov_21jrohxkue().s[250]++;
      return 24 * 60 * 60 * 1000;
    } else
    /* istanbul ignore next */
    {
      cov_21jrohxkue().b[63][1]++;
    } // Daily
    cov_21jrohxkue().s[251]++;
    return 60 * 60 * 1000; // Default: hourly
  }
  async sendNotifications(config, summary, jobId) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[43]++;
    cov_21jrohxkue().s[252]++;
    // Implement notification sending
    logger.warn('Security scan thresholds exceeded', {
      configId: config.id,
      jobId,
      violations: summary.violations,
      riskScore: summary.riskScore
    });
  }
  generateGitHubAction(config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[44]++;
    cov_21jrohxkue().s[253]++;
    return `
name: Security Code Review
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Run security scan
        run: npm run security:scan
        env:
          SCAN_CONFIG_ID: ${config.id}
      - name: Upload results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-scan-results
          path: security-report.json
`;
  }
  generateGitLabCI(config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[45]++;
    cov_21jrohxkue().s[254]++;
    return `
security-scan:
  stage: test
  image: node:18-alpine
  script:
    - npm ci
    - npm run security:scan
  variables:
    SCAN_CONFIG_ID: ${config.id}
  artifacts:
    reports:
      junit: security-report.xml
    paths:
      - security-report.json
  only:
    - merge_requests
    - main
    - develop
`;
  }
  generateJenkinsfile(config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[46]++;
    cov_21jrohxkue().s[255]++;
    return `
pipeline {
    agent any
    environment {
        SCAN_CONFIG_ID = '${config.id}'
    }
    stages {
        stage('Install Dependencies') {
            steps {
                sh 'npm ci'
            }
        }
        stage('Security Scan') {
            steps {
                sh 'npm run security:scan'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'security-report.json', allowEmptyArchive: true
                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: '.',
                        reportFiles: 'security-report.html',
                        reportName: 'Security Scan Report'
                    ])
                }
            }
        }
    }
}
`;
  }
  generateGenericScript(config) {
    /* istanbul ignore next */
    cov_21jrohxkue().f[47]++;
    cov_21jrohxkue().s[256]++;
    return `#!/bin/bash
# Security scan script for ${config.name}

set -e

echo "Starting security scan..."
export SCAN_CONFIG_ID="${config.id}"

# Install dependencies
npm ci

# Run security scan
npm run security:scan

echo "Security scan completed"
`;
  }
}
/* istanbul ignore next */
cov_21jrohxkue().s[257]++;
exports.AutomatedScanner = AutomatedScanner;
// Export singleton instance
/* istanbul ignore next */
cov_21jrohxkue().s[258]++;
exports.automatedScanner = AutomatedScanner.getInstance();
// Export convenience methods
/* istanbul ignore next */
cov_21jrohxkue().s[259]++;
exports.scanRepository = exports.automatedScanner.scanRepository.bind(exports.automatedScanner);
/* istanbul ignore next */
cov_21jrohxkue().s[260]++;
exports.scanFiles = exports.automatedScanner.scanFiles.bind(exports.automatedScanner);
/* istanbul ignore next */
cov_21jrohxkue().s[261]++;
exports.scanChangedFiles = exports.automatedScanner.scanChangedFiles.bind(exports.automatedScanner);
/* istanbul ignore next */
cov_21jrohxkue().s[262]++;
exports.createScanConfig = exports.automatedScanner.createScanConfig.bind(exports.automatedScanner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,