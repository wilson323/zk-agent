{"version":3,"names":["cov_11cdykyf3r","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createApiRoute","zod_1","require","global_error_handler_1","api_helper_1","rateLimitStore","Map","config","handler","withGlobalErrorHandler","req","routeParams","startTime","Date","now","requestId","generateRequestId","method","ApiResponseWrapper","methodNotAllowed","timeout","timeoutPromise","Promise","_","reject","setTimeout","Error","race","processRequest","rateLimit","rateLimitResult","checkRateLimit","allowed","rateLimitExceeded","resetTime","user","requireAuth","authenticateRequest","unauthorized","validatedBody","validatedQuery","validation","body","json","parse","error","z","ZodError","validationError","errors","query","url","URL","queryParams","Object","fromEntries","searchParams","entries","ApiLogger","logRequest","description","id","response","params","duration","logResponse","status","headers","set","clientId","getClientId","windowStart","windowMs","key","value","delete","Math","floor","current","get","count","requests","forwarded","realIp","ip","split","userAgent","Buffer","from","toString","slice","token","replace","email","console","random","substr","CommonValidations","pagination","object","page","string","optional","transform","val","parseInt","limit","sort","order","enum","default","min","search","q","category","fileUpload","any","tags","array","RouteConfigs","publicGet","protectedGet","protectedPost","protectedPut","admin","GET","POST","PUT","DELETE"],"sources":["E:\\zk-agent\\lib\\middleware\\api-route-wrapper.ts"],"sourcesContent":["/**\n * @file API Route Wrapper\n * @description 统一的API路由包装器，集成全局错误处理、验证、日志等功能\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { withGlobalErrorHandler } from './global-error-handler';\nimport { ApiResponseWrapper, ApiLogger } from '@/lib/utils/api-helper';\nimport { validateRequestBody, validateSearchParams } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\n\n// API路由配置接口\ninterface ApiRouteConfig {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  requireAuth?: boolean;\n  rateLimit?: {\n    requests: number;\n    windowMs: number;\n  };\n  validation?: {\n    body?: z.ZodSchema;\n    query?: z.ZodSchema;\n    params?: z.ZodSchema;\n  };\n  timeout?: number;\n  description?: string;\n}\n\n// API处理器类型\ntype ApiHandler<T = any> = (\n  req: NextRequest,\n  context: {\n    params?: any;\n    validatedBody?: any;\n    validatedQuery?: any;\n    user?: any;\n    requestId: string;\n  }\n) => Promise<NextResponse<T>>;\n\n// 速率限制存储\nconst rateLimitStore = new Map<string, { count: number; resetTime: number }>();\n\n/**\n * 创建API路由处理器\n */\nexport function createApiRoute<T = any>(\n  config: ApiRouteConfig,\n  handler: ApiHandler<T>\n) {\n  return withGlobalErrorHandler(async (req: NextRequest, routeParams?: any) => {\n    const startTime = Date.now();\n    const requestId = generateRequestId();\n    \n    try {\n      // 1. 方法验证\n      if (req.method !== config.method) {\n        return ApiResponseWrapper.methodNotAllowed(\n          `Method ${req.method} not allowed. Expected ${config.method}`\n        );\n      }\n\n      // 2. 超时控制\n      if (config.timeout) {\n        const timeoutPromise = new Promise<never>((_, reject) => {\n          setTimeout(() => {\n            reject(new Error(`Request timeout after ${config.timeout}ms`));\n          }, config.timeout);\n        });\n        \n        return await Promise.race([\n          processRequest(),\n          timeoutPromise\n        ]);\n      }\n\n      return await processRequest();\n\n      async function processRequest(): Promise<NextResponse<T>> {\n        // 3. 速率限制检查\n        if (config.rateLimit) {\n          const rateLimitResult = checkRateLimit(req, config.rateLimit);\n          if (!rateLimitResult.allowed) {\n            return ApiResponseWrapper.rateLimitExceeded(\n              'Too many requests',\n              rateLimitResult.resetTime\n            );\n          }\n        }\n\n        // 4. 身份验证\n        let user = null;\n        if (config.requireAuth) {\n          user = await authenticateRequest(req);\n          if (!user) {\n            return ApiResponseWrapper.unauthorized('Authentication required');\n          }\n        }\n\n        // 5. 请求验证\n        let validatedBody, validatedQuery;\n        \n        if (config.validation?.body && req.method !== 'GET') {\n          try {\n            const body = await req.json();\n            validatedBody = config.validation.body.parse(body);\n          } catch (error) {\n            if (error instanceof z.ZodError) {\n              return ApiResponseWrapper.validationError(\n                'Request body validation failed',\n                error.errors\n              );\n            }\n            throw error;\n          }\n        }\n\n        if (config.validation?.query) {\n          try {\n            const url = new URL(req.url);\n            const queryParams = Object.fromEntries(url.searchParams.entries());\n            validatedQuery = config.validation.query.parse(queryParams);\n          } catch (error) {\n            if (error instanceof z.ZodError) {\n              return ApiResponseWrapper.validationError(\n                'Query parameters validation failed',\n                error.errors\n              );\n            }\n            throw error;\n          }\n        }\n\n        // 6. 记录请求日志\n        ApiLogger.logRequest(req, {\n          requestId,\n          method: config.method,\n          description: config.description,\n          user: user?.id,\n          validatedBody: validatedBody ? '[VALIDATED]' : undefined,\n          validatedQuery: validatedQuery ? '[VALIDATED]' : undefined\n        });\n\n        // 7. 执行处理器\n        const response = await handler(req, {\n          params: routeParams,\n          validatedBody,\n          validatedQuery,\n          user,\n          requestId\n        });\n\n        // 8. 记录响应日志\n        const duration = Date.now() - startTime;\n        ApiLogger.logResponse(response, {\n          requestId,\n          duration,\n          method: config.method,\n          status: response.status\n        });\n\n        // 9. 添加响应头\n        response.headers.set('X-Request-ID', requestId);\n        response.headers.set('X-Response-Time', `${duration}ms`);\n        \n        return response;\n      }\n    } catch (error) {\n      // 错误会被全局错误处理器捕获\n      throw error;\n    }\n  });\n}\n\n/**\n * 速率限制检查\n */\nfunction checkRateLimit(\n  req: NextRequest,\n  rateLimit: { requests: number; windowMs: number }\n): { allowed: boolean; resetTime?: number } {\n  const clientId = getClientId(req);\n  const now = Date.now();\n  const windowStart = now - rateLimit.windowMs;\n  \n  // 清理过期记录\n  for (const [key, value] of rateLimitStore.entries()) {\n    if (value.resetTime < now) {\n      rateLimitStore.delete(key);\n    }\n  }\n  \n  const key = `${clientId}:${Math.floor(now / rateLimit.windowMs)}`;\n  const current = rateLimitStore.get(key) || { count: 0, resetTime: now + rateLimit.windowMs };\n  \n  if (current.count >= rateLimit.requests) {\n    return { allowed: false, resetTime: current.resetTime };\n  }\n  \n  current.count++;\n  rateLimitStore.set(key, current);\n  \n  return { allowed: true };\n}\n\n/**\n * 获取客户端ID\n */\nfunction getClientId(req: NextRequest): string {\n  // 优先使用真实IP\n  const forwarded = req.headers.get('x-forwarded-for');\n  const realIp = req.headers.get('x-real-ip');\n  const ip = forwarded?.split(',')[0] || realIp || 'unknown';\n  \n  // 结合用户代理创建唯一标识\n  const userAgent = req.headers.get('user-agent') || 'unknown';\n  return `${ip}:${Buffer.from(userAgent).toString('base64').slice(0, 10)}`;\n}\n\n/**\n * 身份验证\n */\nasync function authenticateRequest(req: NextRequest): Promise<any> {\n  try {\n    const token = req.headers.get('authorization')?.replace('Bearer ', '');\n    if (!token) {\n      return null;\n    }\n\n    // 这里应该实现实际的JWT验证逻辑\n    // 暂时返回模拟用户\n    if (token === 'valid-token') {\n      return { id: 'user-1', email: 'user@example.com' };\n    }\n    \n    return null;\n  } catch (error) {\n    console.error('Authentication error:', error);\n    return null;\n  }\n}\n\n/**\n * 生成请求ID\n */\nfunction generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * 常用的验证模式\n */\nexport const CommonValidations = {\n  // 分页参数\n  pagination: z.object({\n    page: z.string().optional().transform(val => val ? parseInt(val) : 1),\n    limit: z.string().optional().transform(val => val ? parseInt(val) : 10),\n    sort: z.string().optional(),\n    order: z.enum(['asc', 'desc']).optional().default('desc')\n  }),\n  \n  // ID参数\n  id: z.object({\n    id: z.string().min(1, 'ID is required')\n  }),\n  \n  // 搜索参数\n  search: z.object({\n    q: z.string().optional(),\n    category: z.string().optional(),\n    status: z.string().optional()\n  }),\n  \n  // 文件上传\n  fileUpload: z.object({\n    file: z.any(),\n    description: z.string().optional(),\n    tags: z.array(z.string()).optional()\n  })\n};\n\n/**\n * 预定义的API路由配置\n */\nexport const RouteConfigs = {\n  // GET路由 - 无需认证\n  publicGet: (validation?: { query?: z.ZodSchema }): ApiRouteConfig => ({\n    method: 'GET',\n    requireAuth: false,\n    validation,\n    timeout: 30000\n  }),\n  \n  // GET路由 - 需要认证\n  protectedGet: (validation?: { query?: z.ZodSchema }): ApiRouteConfig => ({\n    method: 'GET',\n    requireAuth: true,\n    validation,\n    timeout: 30000\n  }),\n  \n  // POST路由 - 需要认证和速率限制\n  protectedPost: (validation?: { body?: z.ZodSchema; query?: z.ZodSchema }): ApiRouteConfig => ({\n    method: 'POST',\n    requireAuth: true,\n    rateLimit: { requests: 100, windowMs: 60000 }, // 每分钟100次\n    validation,\n    timeout: 60000\n  }),\n  \n  // PUT路由 - 需要认证和速率限制\n  protectedPut: (validation?: { body?: z.ZodSchema; query?: z.ZodSchema }): ApiRouteConfig => ({\n    method: 'PUT',\n    requireAuth: true,\n    rateLimit: { requests: 100, windowMs: 60000 }, // 每分钟100次\n    validation,\n    timeout: 60000\n  }),\n  \n  // 文件上传路由\n  fileUpload: (validation?: { body?: z.ZodSchema }): ApiRouteConfig => ({\n    method: 'POST',\n    requireAuth: true,\n    rateLimit: { requests: 20, windowMs: 60000 }, // 每分钟20次\n    validation,\n    timeout: 300000 // 5分钟\n  }),\n  \n  // 管理员路由\n  admin: (method: 'GET' | 'POST' | 'PUT' | 'DELETE', validation?: any): ApiRouteConfig => ({\n    method,\n    requireAuth: true,\n    rateLimit: { requests: 200, windowMs: 60000 },\n    validation,\n    timeout: 60000\n  })\n};\n\n// 导出便捷函数\nexport const GET = (handler: ApiHandler, config?: Partial<ApiRouteConfig>) => \n  createApiRoute({ ...RouteConfigs.publicGet(), ...config }, handler);\n\nexport const POST = (handler: ApiHandler, config?: Partial<ApiRouteConfig>) => \n  createApiRoute({ ...RouteConfigs.protectedPost(), ...config }, handler);\n\nexport const PUT = (handler: ApiHandler, config?: Partial<ApiRouteConfig>) => \n  createApiRoute({ method: 'PUT', requireAuth: true, timeout: 60000, ...config }, handler);\n\nexport const DELETE = (handler: ApiHandler, config?: Partial<ApiRouteConfig>) => \n  createApiRoute({ method: 'DELETE', requireAuth: true, timeout: 30000, ...config }, handler);"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAA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","ignoreList":[]}