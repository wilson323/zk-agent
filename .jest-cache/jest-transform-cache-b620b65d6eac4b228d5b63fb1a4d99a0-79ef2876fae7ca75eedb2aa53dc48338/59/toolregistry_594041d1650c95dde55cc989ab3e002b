bea330752439f65044cd5395e13e93fc
"use strict";

/* istanbul ignore next */
function cov_23yiaks0w0() {
  var path = "E:\\zk-agent\\lib\\ag-ui\\protocol\\tool-registry.ts";
  var hash = "1d14979055990c04d131aac52c3d369c150d3896";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\ag-ui\\protocol\\tool-registry.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 132
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "5": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 72
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "8": {
        start: {
          line: 30,
          column: 79
        },
        end: {
          line: 30,
          column: 121
        }
      },
      "9": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "10": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "11": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 23
        }
      },
      "13": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 45
        }
      },
      "14": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "15": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "17": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "18": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 124
        }
      },
      "19": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "20": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "21": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 45
        }
      },
      "22": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "23": {
        start: {
          line: 84,
          column: 0
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "24": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 34
        }
      },
      "25": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 41
        }
      },
      "26": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "27": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 65
        }
      },
      "28": {
        start: {
          line: 108,
          column: 39
        },
        end: {
          line: 108,
          column: 63
        }
      },
      "29": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 119,
          column: 10
        }
      },
      "30": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 34
        }
      },
      "31": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 33
        }
      },
      "32": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 38
        }
      },
      "33": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "34": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 65
        }
      },
      "35": {
        start: {
          line: 147,
          column: 39
        },
        end: {
          line: 147,
          column: 63
        }
      },
      "36": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "37": {
        start: {
          line: 149,
          column: 22
        },
        end: {
          line: 149,
          column: 37
        }
      },
      "38": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "39": {
        start: {
          line: 150,
          column: 21
        },
        end: {
          line: 150,
          column: 22
        }
      },
      "40": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "41": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 163,
          column: 10
        }
      },
      "42": {
        start: {
          line: 166,
          column: 0
        },
        end: {
          line: 166,
          column: 38
        }
      },
      "43": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 34
        }
      },
      "44": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 42
        }
      },
      "45": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "46": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 66
        }
      },
      "47": {
        start: {
          line: 190,
          column: 39
        },
        end: {
          line: 190,
          column: 64
        }
      },
      "48": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 191,
          column: 56
        }
      },
      "49": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "50": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "51": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 205,
          column: 14
        }
      },
      "52": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "53": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 212,
          column: 14
        }
      },
      "54": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "55": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 219,
          column: 14
        }
      },
      "56": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 22
        }
      },
      "57": {
        start: {
          line: 224,
          column: 0
        },
        end: {
          line: 224,
          column: 42
        }
      },
      "58": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 38
        }
      },
      "59": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 38
        }
      },
      "60": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 255,
          column: 10
        }
      },
      "61": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 66
        }
      },
      "62": {
        start: {
          line: 259,
          column: 39
        },
        end: {
          line: 259,
          column: 64
        }
      },
      "63": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "64": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 276,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 70
          },
          end: {
            line: 30,
            column: 71
          }
        },
        loc: {
          start: {
            line: 30,
            column: 79
          },
          end: {
            line: 30,
            column: 121
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 19
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 74
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 14
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 89
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 24
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 106
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 27
          }
        },
        loc: {
          start: {
            line: 108,
            column: 39
          },
          end: {
            line: 108,
            column: 63
          }
        },
        line: 108
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 18
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 24
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 145
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 147,
            column: 26
          },
          end: {
            line: 147,
            column: 27
          }
        },
        loc: {
          start: {
            line: 147,
            column: 39
          },
          end: {
            line: 147,
            column: 63
          }
        },
        line: 147
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 18
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 171
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 188
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 190,
            column: 26
          },
          end: {
            line: 190,
            column: 27
          }
        },
        loc: {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 190,
            column: 64
          }
        },
        line: 190
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 18
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 229
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 24
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 257
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 27
          }
        },
        loc: {
          start: {
            line: 259,
            column: 39
          },
          end: {
            line: 259,
            column: 64
          }
        },
        line: 259
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 66
          },
          end: {
            line: 56,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 91
          },
          end: {
            line: 56,
            column: 104
          }
        }, {
          start: {
            line: 56,
            column: 107
          },
          end: {
            line: 56,
            column: 120
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 111,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 54
          },
          end: {
            line: 111,
            column: 60
          }
        }, {
          start: {
            line: 111,
            column: 63
          },
          end: {
            line: 111,
            column: 69
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 149,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 149,
            column: 32
          }
        }, {
          start: {
            line: 149,
            column: 36
          },
          end: {
            line: 149,
            column: 37
          }
        }],
        line: 149
      },
      "5": {
        loc: {
          start: {
            line: 191,
            column: 29
          },
          end: {
            line: 191,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 29
          },
          end: {
            line: 191,
            column: 46
          }
        }, {
          start: {
            line: 191,
            column: 50
          },
          end: {
            line: 191,
            column: 56
          }
        }],
        line: 191
      },
      "6": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "7": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 40
          }
        }, {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 197,
            column: 67
          }
        }],
        line: 197
      },
      "8": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "9": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 38
          }
        }, {
          start: {
            line: 207,
            column: 42
          },
          end: {
            line: 207,
            column: 65
          }
        }],
        line: 207
      },
      "10": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "11": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 36
          }
        }, {
          start: {
            line: 214,
            column: 40
          },
          end: {
            line: 214,
            column: 63
          }
        }],
        line: 214
      },
      "12": {
        loc: {
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 29
          }
        }, {
          start: {
            line: 262,
            column: 33
          },
          end: {
            line: 262,
            column: 41
          }
        }],
        line: 262
      },
      "13": {
        loc: {
          start: {
            line: 263,
            column: 18
          },
          end: {
            line: 263,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 18
          },
          end: {
            line: 263,
            column: 27
          }
        }, {
          start: {
            line: 263,
            column: 31
          },
          end: {
            line: 263,
            column: 35
          }
        }],
        line: 263
      },
      "14": {
        loc: {
          start: {
            line: 264,
            column: 20
          },
          end: {
            line: 264,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 20
          },
          end: {
            line: 264,
            column: 31
          }
        }, {
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 264,
            column: 68
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\ag-ui\\protocol\\tool-registry.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\ag-ui\\protocol\\tool-registry.ts"],
      sourcesContent: ["// @ts-nocheck\nimport type { Tool } from \"./types\"\n\n/**\n * \u5DE5\u5177\u6267\u884C\u5668\u63A5\u53E3\n */\nexport interface ToolExecutor {\n  name: string\n  description: string\n  parameters: Record<string, any>\n  execute(args: any, context?: any): Promise<any>\n}\n\n/**\n * \u5DE5\u5177\u6CE8\u518C\u8868\n * \u7BA1\u7406\u6240\u6709\u53EF\u7528\u7684\u5DE5\u5177\n */\nexport class ToolRegistry {\n  private tools: Map<string, ToolExecutor> = new Map()\n  private toolDefinitions: Map<string, Tool> = new Map()\n\n  /**\n   * \u6CE8\u518C\u5DE5\u5177\n   */\n  register(executor: ToolExecutor): void {\n    if (this.tools.has(executor.name)) {\n      throw new Error(`Tool ${executor.name} already registered`)\n    }\n\n    this.tools.set(executor.name, executor)\n\n    // \u521B\u5EFA\u5DE5\u5177\u5B9A\u4E49\n    const toolDefinition: Tool = {\n      type: \"function\",\n      function: {\n        name: executor.name,\n        description: executor.description,\n        parameters: {\n          type: \"object\",\n          properties: executor.parameters,\n          required: Object.keys(executor.parameters).filter((key) => executor.parameters[key].required === true),\n        },\n      },\n    }\n\n    this.toolDefinitions.set(executor.name, toolDefinition)\n  }\n\n  /**\n   * \u6CE8\u9500\u5DE5\u5177\n   */\n  unregister(name: string): boolean {\n    const removed = this.tools.delete(name)\n    this.toolDefinitions.delete(name)\n    return removed\n  }\n\n  /**\n   * \u6267\u884C\u5DE5\u5177\n   */\n  async execute(name: string, args: any, context?: any): Promise<any> {\n    const executor = this.tools.get(name)\n    if (!executor) {\n      throw new Error(`Tool not found: ${name}`)\n    }\n\n    try {\n      return await executor.execute(args, context)\n    } catch (error) {\n      throw new Error(`Tool execution failed for ${name}: ${error instanceof Error ? error.message : String(error)}`)\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u5DE5\u5177\u5B9A\u4E49\n   */\n  getToolDefinition(name: string): Tool | undefined {\n    return this.toolDefinitions.get(name)\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u5DE5\u5177\u5B9A\u4E49\n   */\n  getAllToolDefinitions(): Tool[] {\n    return Array.from(this.toolDefinitions.values())\n  }\n\n  /**\n   * \u83B7\u53D6\u5DE5\u5177\u5217\u8868\n   */\n  getToolNames(): string[] {\n    return Array.from(this.tools.keys())\n  }\n\n  /**\n   * \u68C0\u67E5\u5DE5\u5177\u662F\u5426\u5B58\u5728\n   */\n  has(name: string): boolean {\n    return this.tools.has(name)\n  }\n}\n\n/**\n * \u5185\u7F6E\u5DE5\u5177\uFF1A\u5929\u6C14\u67E5\u8BE2\n */\nexport class WeatherTool implements ToolExecutor {\n  name = \"get_weather\"\n  description = \"\u83B7\u53D6\u6307\u5B9A\u57CE\u5E02\u7684\u5929\u6C14\u4FE1\u606F\"\n  parameters = {\n    location: {\n      type: \"string\",\n      description: \"\u57CE\u5E02\u540D\u79F0\",\n      required: true,\n    },\n    unit: {\n      type: \"string\",\n      description: \"\u6E29\u5EA6\u5355\u4F4D\",\n      enum: [\"celsius\", \"fahrenheit\"],\n      default: \"celsius\",\n    },\n  }\n\n  async execute(args: { location: string; unit?: string }): Promise<any> {\n    // \u6A21\u62DF\u5929\u6C14API\u8C03\u7528\n    await new Promise((resolve) => setTimeout(resolve, 500))\n\n    return {\n      location: args.location,\n      temperature: args.unit === \"fahrenheit\" ? \"72\xB0F\" : \"22\xB0C\",\n      condition: \"\u6674\u5929\",\n      humidity: \"65%\",\n      windSpeed: \"5 km/h\",\n      forecast: [\n        { day: \"\u4ECA\u5929\", high: \"25\xB0C\", low: \"18\xB0C\", condition: \"\u6674\u5929\" },\n        { day: \"\u660E\u5929\", high: \"23\xB0C\", low: \"16\xB0C\", condition: \"\u591A\u4E91\" },\n      ],\n    }\n  }\n}\n\n/**\n * \u5185\u7F6E\u5DE5\u5177\uFF1A\u7F51\u7EDC\u641C\u7D22\n */\nexport class WebSearchTool implements ToolExecutor {\n  name = \"search_web\"\n  description = \"\u5728\u7F51\u7EDC\u4E0A\u641C\u7D22\u4FE1\u606F\"\n  parameters = {\n    query: {\n      type: \"string\",\n      description: \"\u641C\u7D22\u5173\u952E\u8BCD\",\n      required: true,\n    },\n    limit: {\n      type: \"number\",\n      description: \"\u8FD4\u56DE\u7ED3\u679C\u6570\u91CF\",\n      default: 5,\n      minimum: 1,\n      maximum: 20,\n    },\n  }\n\n  async execute(args: { query: string; limit?: number }): Promise<any> {\n    // \u6A21\u62DF\u641C\u7D22API\u8C03\u7528\n    await new Promise((resolve) => setTimeout(resolve, 800))\n\n    const results = []\n    const limit = args.limit || 5\n\n    for (let i = 1; i <= limit; i++) {\n      results.push({\n        title: `\u641C\u7D22\u7ED3\u679C ${i} - ${args.query}`,\n        url: `https://example.com/result-${i}`,\n        snippet: `\u8FD9\u662F\u5173\u4E8E \"${args.query}\" \u7684\u641C\u7D22\u7ED3\u679C\u6458\u8981 ${i}...`,\n        publishedDate: new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString(),\n      })\n    }\n\n    return {\n      query: args.query,\n      totalResults: results.length,\n      results,\n      searchTime: \"0.8s\",\n    }\n  }\n}\n\n/**\n * \u5185\u7F6E\u5DE5\u5177\uFF1ACAD\u5206\u6790\n */\nexport class CADAnalysisTool implements ToolExecutor {\n  name = \"analyze_cad\"\n  description = \"\u5206\u6790CAD\u6587\u4EF6\u5E76\u751F\u6210\u62A5\u544A\"\n  parameters = {\n    fileId: {\n      type: \"string\",\n      description: \"CAD\u6587\u4EF6ID\",\n      required: true,\n    },\n    analysisType: {\n      type: \"string\",\n      description: \"\u5206\u6790\u7C7B\u578B\",\n      enum: [\"structure\", \"devices\", \"risks\", \"full\"],\n      default: \"full\",\n    },\n  }\n\n  async execute(args: { fileId: string; analysisType?: string }): Promise<any> {\n    // \u6A21\u62DFCAD\u5206\u6790\n    await new Promise((resolve) => setTimeout(resolve, 2000))\n\n    const analysisType = args.analysisType || \"full\"\n\n    const result: any = {\n      fileId: args.fileId,\n      analysisType,\n      timestamp: new Date().toISOString(),\n    }\n\n    if (analysisType === \"structure\" || analysisType === \"full\") {\n      result.structure = {\n        totalElements: 156,\n        walls: 24,\n        doors: 8,\n        windows: 12,\n        rooms: 6,\n        area: \"120.5 m\xB2\",\n      }\n    }\n\n    if (analysisType === \"devices\" || analysisType === \"full\") {\n      result.devices = [\n        { type: \"\u95E8\u7981\u8BBE\u5907\", count: 3, locations: [\"\u4E3B\u5165\u53E3\", \"\u4FA7\u95E8\", \"\u540E\u95E8\"] },\n        { type: \"\u6444\u50CF\u5934\", count: 8, locations: [\"\u5404\u697C\u5C42\u8D70\u5ECA\", \"\u51FA\u5165\u53E3\"] },\n        { type: \"\u4F20\u611F\u5668\", count: 15, locations: [\"\u5404\u623F\u95F4\", \"\u8D70\u5ECA\"] },\n      ]\n    }\n\n    if (analysisType === \"risks\" || analysisType === \"full\") {\n      result.risks = [\n        { level: \"\u9AD8\", description: \"\u4E3B\u5165\u53E3\u7F3A\u5C11\u5907\u7528\u7535\u6E90\", recommendation: \"\u5B89\u88C5UPS\u7535\u6E90\" },\n        { level: \"\u4E2D\", description: \"\u90E8\u5206\u533A\u57DF\u76D1\u63A7\u76F2\u533A\", recommendation: \"\u589E\u52A0\u6444\u50CF\u5934\u8986\u76D6\" },\n        { level: \"\u4F4E\", description: \"\u8BBE\u5907\u7EF4\u62A4\u5468\u671F\u8F83\u957F\", recommendation: \"\u7F29\u77ED\u7EF4\u62A4\u95F4\u9694\" },\n      ]\n    }\n\n    return result\n  }\n}\n\n/**\n * \u5185\u7F6E\u5DE5\u5177\uFF1A\u6D77\u62A5\u751F\u6210\n */\nexport class PosterGeneratorTool implements ToolExecutor {\n  name = \"generate_poster\"\n  description = \"\u6839\u636E\u63CF\u8FF0\u751F\u6210\u6D77\u62A5\"\n  parameters = {\n    description: {\n      type: \"string\",\n      description: \"\u6D77\u62A5\u5185\u5BB9\u63CF\u8FF0\",\n      required: true,\n    },\n    style: {\n      type: \"string\",\n      description: \"\u6D77\u62A5\u98CE\u683C\",\n      enum: [\"modern\", \"classic\", \"minimalist\", \"colorful\"],\n      default: \"modern\",\n    },\n    size: {\n      type: \"string\",\n      description: \"\u6D77\u62A5\u5C3A\u5BF8\",\n      enum: [\"A4\", \"A3\", \"1080x1920\", \"1920x1080\"],\n      default: \"A4\",\n    },\n    colors: {\n      type: \"array\",\n      description: \"\u4E3B\u8981\u989C\u8272\",\n      items: { type: \"string\" },\n    },\n  }\n\n  async execute(args: {\n    description: string\n    style?: string\n    size?: string\n    colors?: string[]\n  }): Promise<any> {\n    // \u6A21\u62DF\u6D77\u62A5\u751F\u6210\n    await new Promise((resolve) => setTimeout(resolve, 3000))\n\n    return {\n      description: args.description,\n      style: args.style || \"modern\",\n      size: args.size || \"A4\",\n      colors: args.colors || [\"#6cb33f\", \"#ffffff\", \"#333333\"],\n      imageUrl: `/api/poster/generated/${Date.now()}.jpg`,\n      thumbnailUrl: `/api/poster/thumbnail/${Date.now()}.jpg`,\n      downloadUrl: `/api/poster/download/${Date.now()}.pdf`,\n      metadata: {\n        generatedAt: new Date().toISOString(),\n        processingTime: \"3.2s\",\n        resolution: \"300dpi\",\n      },\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1d14979055990c04d131aac52c3d369c150d3896"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23yiaks0w0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23yiaks0w0();
cov_23yiaks0w0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_23yiaks0w0().s[1]++;
exports.PosterGeneratorTool = exports.CADAnalysisTool = exports.WebSearchTool = exports.WeatherTool = exports.ToolRegistry = void 0;
/**
 * 工具注册表
 * 管理所有可用的工具
 */
class ToolRegistry {
  constructor() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[0]++;
    cov_23yiaks0w0().s[2]++;
    this.tools = new Map();
    /* istanbul ignore next */
    cov_23yiaks0w0().s[3]++;
    this.toolDefinitions = new Map();
  }
  /**
   * 注册工具
   */
  register(executor) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[1]++;
    cov_23yiaks0w0().s[4]++;
    if (this.tools.has(executor.name)) {
      /* istanbul ignore next */
      cov_23yiaks0w0().b[0][0]++;
      cov_23yiaks0w0().s[5]++;
      throw new Error(`Tool ${executor.name} already registered`);
    } else
    /* istanbul ignore next */
    {
      cov_23yiaks0w0().b[0][1]++;
    }
    cov_23yiaks0w0().s[6]++;
    this.tools.set(executor.name, executor);
    // 创建工具定义
    const toolDefinition =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[7]++, {
      type: "function",
      function: {
        name: executor.name,
        description: executor.description,
        parameters: {
          type: "object",
          properties: executor.parameters,
          required: Object.keys(executor.parameters).filter(key => {
            /* istanbul ignore next */
            cov_23yiaks0w0().f[2]++;
            cov_23yiaks0w0().s[8]++;
            return executor.parameters[key].required === true;
          })
        }
      }
    });
    /* istanbul ignore next */
    cov_23yiaks0w0().s[9]++;
    this.toolDefinitions.set(executor.name, toolDefinition);
  }
  /**
   * 注销工具
   */
  unregister(name) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[3]++;
    const removed =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[10]++, this.tools.delete(name));
    /* istanbul ignore next */
    cov_23yiaks0w0().s[11]++;
    this.toolDefinitions.delete(name);
    /* istanbul ignore next */
    cov_23yiaks0w0().s[12]++;
    return removed;
  }
  /**
   * 执行工具
   */
  async execute(name, args, context) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[4]++;
    const executor =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[13]++, this.tools.get(name));
    /* istanbul ignore next */
    cov_23yiaks0w0().s[14]++;
    if (!executor) {
      /* istanbul ignore next */
      cov_23yiaks0w0().b[1][0]++;
      cov_23yiaks0w0().s[15]++;
      throw new Error(`Tool not found: ${name}`);
    } else
    /* istanbul ignore next */
    {
      cov_23yiaks0w0().b[1][1]++;
    }
    cov_23yiaks0w0().s[16]++;
    try {
      /* istanbul ignore next */
      cov_23yiaks0w0().s[17]++;
      return await executor.execute(args, context);
    } catch (error) {
      /* istanbul ignore next */
      cov_23yiaks0w0().s[18]++;
      throw new Error(`Tool execution failed for ${name}: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[2][1]++, String(error))}`);
    }
  }
  /**
   * 获取工具定义
   */
  getToolDefinition(name) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[5]++;
    cov_23yiaks0w0().s[19]++;
    return this.toolDefinitions.get(name);
  }
  /**
   * 获取所有工具定义
   */
  getAllToolDefinitions() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[6]++;
    cov_23yiaks0w0().s[20]++;
    return Array.from(this.toolDefinitions.values());
  }
  /**
   * 获取工具列表
   */
  getToolNames() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[7]++;
    cov_23yiaks0w0().s[21]++;
    return Array.from(this.tools.keys());
  }
  /**
   * 检查工具是否存在
   */
  has(name) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[8]++;
    cov_23yiaks0w0().s[22]++;
    return this.tools.has(name);
  }
}
/* istanbul ignore next */
cov_23yiaks0w0().s[23]++;
exports.ToolRegistry = ToolRegistry;
/**
 * 内置工具：天气查询
 */
class WeatherTool {
  constructor() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[9]++;
    cov_23yiaks0w0().s[24]++;
    this.name = "get_weather";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[25]++;
    this.description = "获取指定城市的天气信息";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[26]++;
    this.parameters = {
      location: {
        type: "string",
        description: "城市名称",
        required: true
      },
      unit: {
        type: "string",
        description: "温度单位",
        enum: ["celsius", "fahrenheit"],
        default: "celsius"
      }
    };
  }
  async execute(args) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[10]++;
    cov_23yiaks0w0().s[27]++;
    // 模拟天气API调用
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_23yiaks0w0().f[11]++;
      cov_23yiaks0w0().s[28]++;
      return setTimeout(resolve, 500);
    });
    /* istanbul ignore next */
    cov_23yiaks0w0().s[29]++;
    return {
      location: args.location,
      temperature: args.unit === "fahrenheit" ?
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[3][0]++, "72°F") :
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[3][1]++, "22°C"),
      condition: "晴天",
      humidity: "65%",
      windSpeed: "5 km/h",
      forecast: [{
        day: "今天",
        high: "25°C",
        low: "18°C",
        condition: "晴天"
      }, {
        day: "明天",
        high: "23°C",
        low: "16°C",
        condition: "多云"
      }]
    };
  }
}
/* istanbul ignore next */
cov_23yiaks0w0().s[30]++;
exports.WeatherTool = WeatherTool;
/**
 * 内置工具：网络搜索
 */
class WebSearchTool {
  constructor() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[12]++;
    cov_23yiaks0w0().s[31]++;
    this.name = "search_web";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[32]++;
    this.description = "在网络上搜索信息";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[33]++;
    this.parameters = {
      query: {
        type: "string",
        description: "搜索关键词",
        required: true
      },
      limit: {
        type: "number",
        description: "返回结果数量",
        default: 5,
        minimum: 1,
        maximum: 20
      }
    };
  }
  async execute(args) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[13]++;
    cov_23yiaks0w0().s[34]++;
    // 模拟搜索API调用
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_23yiaks0w0().f[14]++;
      cov_23yiaks0w0().s[35]++;
      return setTimeout(resolve, 800);
    });
    const results =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[36]++, []);
    const limit =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[37]++,
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[4][0]++, args.limit) ||
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[4][1]++, 5));
    /* istanbul ignore next */
    cov_23yiaks0w0().s[38]++;
    for (let i =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[39]++, 1); i <= limit; i++) {
      /* istanbul ignore next */
      cov_23yiaks0w0().s[40]++;
      results.push({
        title: `搜索结果 ${i} - ${args.query}`,
        url: `https://example.com/result-${i}`,
        snippet: `这是关于 "${args.query}" 的搜索结果摘要 ${i}...`,
        publishedDate: new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString()
      });
    }
    /* istanbul ignore next */
    cov_23yiaks0w0().s[41]++;
    return {
      query: args.query,
      totalResults: results.length,
      results,
      searchTime: "0.8s"
    };
  }
}
/* istanbul ignore next */
cov_23yiaks0w0().s[42]++;
exports.WebSearchTool = WebSearchTool;
/**
 * 内置工具：CAD分析
 */
class CADAnalysisTool {
  constructor() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[15]++;
    cov_23yiaks0w0().s[43]++;
    this.name = "analyze_cad";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[44]++;
    this.description = "分析CAD文件并生成报告";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[45]++;
    this.parameters = {
      fileId: {
        type: "string",
        description: "CAD文件ID",
        required: true
      },
      analysisType: {
        type: "string",
        description: "分析类型",
        enum: ["structure", "devices", "risks", "full"],
        default: "full"
      }
    };
  }
  async execute(args) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[16]++;
    cov_23yiaks0w0().s[46]++;
    // 模拟CAD分析
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_23yiaks0w0().f[17]++;
      cov_23yiaks0w0().s[47]++;
      return setTimeout(resolve, 2000);
    });
    const analysisType =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[48]++,
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[5][0]++, args.analysisType) ||
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[5][1]++, "full"));
    const result =
    /* istanbul ignore next */
    (cov_23yiaks0w0().s[49]++, {
      fileId: args.fileId,
      analysisType,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_23yiaks0w0().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[7][0]++, analysisType === "structure") ||
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[7][1]++, analysisType === "full")) {
      /* istanbul ignore next */
      cov_23yiaks0w0().b[6][0]++;
      cov_23yiaks0w0().s[51]++;
      result.structure = {
        totalElements: 156,
        walls: 24,
        doors: 8,
        windows: 12,
        rooms: 6,
        area: "120.5 m²"
      };
    } else
    /* istanbul ignore next */
    {
      cov_23yiaks0w0().b[6][1]++;
    }
    cov_23yiaks0w0().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[9][0]++, analysisType === "devices") ||
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[9][1]++, analysisType === "full")) {
      /* istanbul ignore next */
      cov_23yiaks0w0().b[8][0]++;
      cov_23yiaks0w0().s[53]++;
      result.devices = [{
        type: "门禁设备",
        count: 3,
        locations: ["主入口", "侧门", "后门"]
      }, {
        type: "摄像头",
        count: 8,
        locations: ["各楼层走廊", "出入口"]
      }, {
        type: "传感器",
        count: 15,
        locations: ["各房间", "走廊"]
      }];
    } else
    /* istanbul ignore next */
    {
      cov_23yiaks0w0().b[8][1]++;
    }
    cov_23yiaks0w0().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[11][0]++, analysisType === "risks") ||
    /* istanbul ignore next */
    (cov_23yiaks0w0().b[11][1]++, analysisType === "full")) {
      /* istanbul ignore next */
      cov_23yiaks0w0().b[10][0]++;
      cov_23yiaks0w0().s[55]++;
      result.risks = [{
        level: "高",
        description: "主入口缺少备用电源",
        recommendation: "安装UPS电源"
      }, {
        level: "中",
        description: "部分区域监控盲区",
        recommendation: "增加摄像头覆盖"
      }, {
        level: "低",
        description: "设备维护周期较长",
        recommendation: "缩短维护间隔"
      }];
    } else
    /* istanbul ignore next */
    {
      cov_23yiaks0w0().b[10][1]++;
    }
    cov_23yiaks0w0().s[56]++;
    return result;
  }
}
/* istanbul ignore next */
cov_23yiaks0w0().s[57]++;
exports.CADAnalysisTool = CADAnalysisTool;
/**
 * 内置工具：海报生成
 */
class PosterGeneratorTool {
  constructor() {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[18]++;
    cov_23yiaks0w0().s[58]++;
    this.name = "generate_poster";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[59]++;
    this.description = "根据描述生成海报";
    /* istanbul ignore next */
    cov_23yiaks0w0().s[60]++;
    this.parameters = {
      description: {
        type: "string",
        description: "海报内容描述",
        required: true
      },
      style: {
        type: "string",
        description: "海报风格",
        enum: ["modern", "classic", "minimalist", "colorful"],
        default: "modern"
      },
      size: {
        type: "string",
        description: "海报尺寸",
        enum: ["A4", "A3", "1080x1920", "1920x1080"],
        default: "A4"
      },
      colors: {
        type: "array",
        description: "主要颜色",
        items: {
          type: "string"
        }
      }
    };
  }
  async execute(args) {
    /* istanbul ignore next */
    cov_23yiaks0w0().f[19]++;
    cov_23yiaks0w0().s[61]++;
    // 模拟海报生成
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_23yiaks0w0().f[20]++;
      cov_23yiaks0w0().s[62]++;
      return setTimeout(resolve, 3000);
    });
    /* istanbul ignore next */
    cov_23yiaks0w0().s[63]++;
    return {
      description: args.description,
      style:
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[12][0]++, args.style) ||
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[12][1]++, "modern"),
      size:
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[13][0]++, args.size) ||
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[13][1]++, "A4"),
      colors:
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[14][0]++, args.colors) ||
      /* istanbul ignore next */
      (cov_23yiaks0w0().b[14][1]++, ["#6cb33f", "#ffffff", "#333333"]),
      imageUrl: `/api/poster/generated/${Date.now()}.jpg`,
      thumbnailUrl: `/api/poster/thumbnail/${Date.now()}.jpg`,
      downloadUrl: `/api/poster/download/${Date.now()}.pdf`,
      metadata: {
        generatedAt: new Date().toISOString(),
        processingTime: "3.2s",
        resolution: "300dpi"
      }
    };
  }
}
/* istanbul ignore next */
cov_23yiaks0w0().s[64]++;
exports.PosterGeneratorTool = PosterGeneratorTool;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjN5aWFrczB3MCIsImFjdHVhbENvdmVyYWdlIiwicyIsIlRvb2xSZWdpc3RyeSIsImNvbnN0cnVjdG9yIiwiZiIsInRvb2xzIiwiTWFwIiwidG9vbERlZmluaXRpb25zIiwicmVnaXN0ZXIiLCJleGVjdXRvciIsImhhcyIsIm5hbWUiLCJiIiwiRXJyb3IiLCJzZXQiLCJ0b29sRGVmaW5pdGlvbiIsInR5cGUiLCJmdW5jdGlvbiIsImRlc2NyaXB0aW9uIiwicGFyYW1ldGVycyIsInByb3BlcnRpZXMiLCJyZXF1aXJlZCIsIk9iamVjdCIsImtleXMiLCJmaWx0ZXIiLCJrZXkiLCJ1bnJlZ2lzdGVyIiwicmVtb3ZlZCIsImRlbGV0ZSIsImV4ZWN1dGUiLCJhcmdzIiwiY29udGV4dCIsImdldCIsImVycm9yIiwibWVzc2FnZSIsIlN0cmluZyIsImdldFRvb2xEZWZpbml0aW9uIiwiZ2V0QWxsVG9vbERlZmluaXRpb25zIiwiQXJyYXkiLCJmcm9tIiwidmFsdWVzIiwiZ2V0VG9vbE5hbWVzIiwiZXhwb3J0cyIsIldlYXRoZXJUb29sIiwibG9jYXRpb24iLCJ1bml0IiwiZW51bSIsImRlZmF1bHQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJ0ZW1wZXJhdHVyZSIsImNvbmRpdGlvbiIsImh1bWlkaXR5Iiwid2luZFNwZWVkIiwiZm9yZWNhc3QiLCJkYXkiLCJoaWdoIiwibG93IiwiV2ViU2VhcmNoVG9vbCIsInF1ZXJ5IiwibGltaXQiLCJtaW5pbXVtIiwibWF4aW11bSIsInJlc3VsdHMiLCJpIiwicHVzaCIsInRpdGxlIiwidXJsIiwic25pcHBldCIsInB1Ymxpc2hlZERhdGUiLCJEYXRlIiwibm93IiwidG9JU09TdHJpbmciLCJ0b3RhbFJlc3VsdHMiLCJsZW5ndGgiLCJzZWFyY2hUaW1lIiwiQ0FEQW5hbHlzaXNUb29sIiwiZmlsZUlkIiwiYW5hbHlzaXNUeXBlIiwicmVzdWx0IiwidGltZXN0YW1wIiwic3RydWN0dXJlIiwidG90YWxFbGVtZW50cyIsIndhbGxzIiwiZG9vcnMiLCJ3aW5kb3dzIiwicm9vbXMiLCJhcmVhIiwiZGV2aWNlcyIsImNvdW50IiwibG9jYXRpb25zIiwicmlza3MiLCJsZXZlbCIsInJlY29tbWVuZGF0aW9uIiwiUG9zdGVyR2VuZXJhdG9yVG9vbCIsInN0eWxlIiwic2l6ZSIsImNvbG9ycyIsIml0ZW1zIiwiaW1hZ2VVcmwiLCJ0aHVtYm5haWxVcmwiLCJkb3dubG9hZFVybCIsIm1ldGFkYXRhIiwiZ2VuZXJhdGVkQXQiLCJwcm9jZXNzaW5nVGltZSIsInJlc29sdXRpb24iXSwic291cmNlcyI6WyJFOlxcemstYWdlbnRcXGxpYlxcYWctdWlcXHByb3RvY29sXFx0b29sLXJlZ2lzdHJ5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgdHlwZSB7IFRvb2wgfSBmcm9tIFwiLi90eXBlc1wiXG5cbi8qKlxuICog5bel5YW35omn6KGM5Zmo5o6l5Y+jXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVG9vbEV4ZWN1dG9yIHtcbiAgbmFtZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmdcbiAgcGFyYW1ldGVyczogUmVjb3JkPHN0cmluZywgYW55PlxuICBleGVjdXRlKGFyZ3M6IGFueSwgY29udGV4dD86IGFueSk6IFByb21pc2U8YW55PlxufVxuXG4vKipcbiAqIOW3peWFt+azqOWGjOihqFxuICog566h55CG5omA5pyJ5Y+v55So55qE5bel5YW3XG4gKi9cbmV4cG9ydCBjbGFzcyBUb29sUmVnaXN0cnkge1xuICBwcml2YXRlIHRvb2xzOiBNYXA8c3RyaW5nLCBUb29sRXhlY3V0b3I+ID0gbmV3IE1hcCgpXG4gIHByaXZhdGUgdG9vbERlZmluaXRpb25zOiBNYXA8c3RyaW5nLCBUb29sPiA9IG5ldyBNYXAoKVxuXG4gIC8qKlxuICAgKiDms6jlhozlt6XlhbdcbiAgICovXG4gIHJlZ2lzdGVyKGV4ZWN1dG9yOiBUb29sRXhlY3V0b3IpOiB2b2lkIHtcbiAgICBpZiAodGhpcy50b29scy5oYXMoZXhlY3V0b3IubmFtZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVG9vbCAke2V4ZWN1dG9yLm5hbWV9IGFscmVhZHkgcmVnaXN0ZXJlZGApXG4gICAgfVxuXG4gICAgdGhpcy50b29scy5zZXQoZXhlY3V0b3IubmFtZSwgZXhlY3V0b3IpXG5cbiAgICAvLyDliJvlu7rlt6XlhbflrprkuYlcbiAgICBjb25zdCB0b29sRGVmaW5pdGlvbjogVG9vbCA9IHtcbiAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIG5hbWU6IGV4ZWN1dG9yLm5hbWUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBleGVjdXRvci5kZXNjcmlwdGlvbixcbiAgICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICAgIHR5cGU6IFwib2JqZWN0XCIsXG4gICAgICAgICAgcHJvcGVydGllczogZXhlY3V0b3IucGFyYW1ldGVycyxcbiAgICAgICAgICByZXF1aXJlZDogT2JqZWN0LmtleXMoZXhlY3V0b3IucGFyYW1ldGVycykuZmlsdGVyKChrZXkpID0+IGV4ZWN1dG9yLnBhcmFtZXRlcnNba2V5XS5yZXF1aXJlZCA9PT0gdHJ1ZSksXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cblxuICAgIHRoaXMudG9vbERlZmluaXRpb25zLnNldChleGVjdXRvci5uYW1lLCB0b29sRGVmaW5pdGlvbilcbiAgfVxuXG4gIC8qKlxuICAgKiDms6jplIDlt6XlhbdcbiAgICovXG4gIHVucmVnaXN0ZXIobmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgY29uc3QgcmVtb3ZlZCA9IHRoaXMudG9vbHMuZGVsZXRlKG5hbWUpXG4gICAgdGhpcy50b29sRGVmaW5pdGlvbnMuZGVsZXRlKG5hbWUpXG4gICAgcmV0dXJuIHJlbW92ZWRcbiAgfVxuXG4gIC8qKlxuICAgKiDmiafooYzlt6XlhbdcbiAgICovXG4gIGFzeW5jIGV4ZWN1dGUobmFtZTogc3RyaW5nLCBhcmdzOiBhbnksIGNvbnRleHQ/OiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIGNvbnN0IGV4ZWN1dG9yID0gdGhpcy50b29scy5nZXQobmFtZSlcbiAgICBpZiAoIWV4ZWN1dG9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRvb2wgbm90IGZvdW5kOiAke25hbWV9YClcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGF3YWl0IGV4ZWN1dG9yLmV4ZWN1dGUoYXJncywgY29udGV4dClcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBUb29sIGV4ZWN1dGlvbiBmYWlsZWQgZm9yICR7bmFtZX06ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpfWApXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluW3peWFt+WumuS5iVxuICAgKi9cbiAgZ2V0VG9vbERlZmluaXRpb24obmFtZTogc3RyaW5nKTogVG9vbCB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMudG9vbERlZmluaXRpb25zLmdldChuYW1lKVxuICB9XG5cbiAgLyoqXG4gICAqIOiOt+WPluaJgOacieW3peWFt+WumuS5iVxuICAgKi9cbiAgZ2V0QWxsVG9vbERlZmluaXRpb25zKCk6IFRvb2xbXSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy50b29sRGVmaW5pdGlvbnMudmFsdWVzKCkpXG4gIH1cblxuICAvKipcbiAgICog6I635Y+W5bel5YW35YiX6KGoXG4gICAqL1xuICBnZXRUb29sTmFtZXMoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMudG9vbHMua2V5cygpKVxuICB9XG5cbiAgLyoqXG4gICAqIOajgOafpeW3peWFt+aYr+WQpuWtmOWcqFxuICAgKi9cbiAgaGFzKG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnRvb2xzLmhhcyhuYW1lKVxuICB9XG59XG5cbi8qKlxuICog5YaF572u5bel5YW377ya5aSp5rCU5p+l6K+iXG4gKi9cbmV4cG9ydCBjbGFzcyBXZWF0aGVyVG9vbCBpbXBsZW1lbnRzIFRvb2xFeGVjdXRvciB7XG4gIG5hbWUgPSBcImdldF93ZWF0aGVyXCJcbiAgZGVzY3JpcHRpb24gPSBcIuiOt+WPluaMh+WumuWfjuW4gueahOWkqeawlOS/oeaBr1wiXG4gIHBhcmFtZXRlcnMgPSB7XG4gICAgbG9jYXRpb246IHtcbiAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCLln47luILlkI3np7BcIixcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIH0sXG4gICAgdW5pdDoge1xuICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIua4qeW6puWNleS9jVwiLFxuICAgICAgZW51bTogW1wiY2Vsc2l1c1wiLCBcImZhaHJlbmhlaXRcIl0sXG4gICAgICBkZWZhdWx0OiBcImNlbHNpdXNcIixcbiAgICB9LFxuICB9XG5cbiAgYXN5bmMgZXhlY3V0ZShhcmdzOiB7IGxvY2F0aW9uOiBzdHJpbmc7IHVuaXQ/OiBzdHJpbmcgfSk6IFByb21pc2U8YW55PiB7XG4gICAgLy8g5qih5ouf5aSp5rCUQVBJ6LCD55SoXG4gICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwKSlcblxuICAgIHJldHVybiB7XG4gICAgICBsb2NhdGlvbjogYXJncy5sb2NhdGlvbixcbiAgICAgIHRlbXBlcmF0dXJlOiBhcmdzLnVuaXQgPT09IFwiZmFocmVuaGVpdFwiID8gXCI3MsKwRlwiIDogXCIyMsKwQ1wiLFxuICAgICAgY29uZGl0aW9uOiBcIuaZtOWkqVwiLFxuICAgICAgaHVtaWRpdHk6IFwiNjUlXCIsXG4gICAgICB3aW5kU3BlZWQ6IFwiNSBrbS9oXCIsXG4gICAgICBmb3JlY2FzdDogW1xuICAgICAgICB7IGRheTogXCLku4rlpKlcIiwgaGlnaDogXCIyNcKwQ1wiLCBsb3c6IFwiMTjCsENcIiwgY29uZGl0aW9uOiBcIuaZtOWkqVwiIH0sXG4gICAgICAgIHsgZGF5OiBcIuaYjuWkqVwiLCBoaWdoOiBcIjIzwrBDXCIsIGxvdzogXCIxNsKwQ1wiLCBjb25kaXRpb246IFwi5aSa5LqRXCIgfSxcbiAgICAgIF0sXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICog5YaF572u5bel5YW377ya572R57uc5pCc57SiXG4gKi9cbmV4cG9ydCBjbGFzcyBXZWJTZWFyY2hUb29sIGltcGxlbWVudHMgVG9vbEV4ZWN1dG9yIHtcbiAgbmFtZSA9IFwic2VhcmNoX3dlYlwiXG4gIGRlc2NyaXB0aW9uID0gXCLlnKjnvZHnu5zkuIrmkJzntKLkv6Hmga9cIlxuICBwYXJhbWV0ZXJzID0ge1xuICAgIHF1ZXJ5OiB7XG4gICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwi5pCc57Si5YWz6ZSu6K+NXCIsXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB9LFxuICAgIGxpbWl0OiB7XG4gICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgZGVzY3JpcHRpb246IFwi6L+U5Zue57uT5p6c5pWw6YePXCIsXG4gICAgICBkZWZhdWx0OiA1LFxuICAgICAgbWluaW11bTogMSxcbiAgICAgIG1heGltdW06IDIwLFxuICAgIH0sXG4gIH1cblxuICBhc3luYyBleGVjdXRlKGFyZ3M6IHsgcXVlcnk6IHN0cmluZzsgbGltaXQ/OiBudW1iZXIgfSk6IFByb21pc2U8YW55PiB7XG4gICAgLy8g5qih5ouf5pCc57SiQVBJ6LCD55SoXG4gICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgODAwKSlcblxuICAgIGNvbnN0IHJlc3VsdHMgPSBbXVxuICAgIGNvbnN0IGxpbWl0ID0gYXJncy5saW1pdCB8fCA1XG5cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBsaW1pdDsgaSsrKSB7XG4gICAgICByZXN1bHRzLnB1c2goe1xuICAgICAgICB0aXRsZTogYOaQnOe0oue7k+aenCAke2l9IC0gJHthcmdzLnF1ZXJ5fWAsXG4gICAgICAgIHVybDogYGh0dHBzOi8vZXhhbXBsZS5jb20vcmVzdWx0LSR7aX1gLFxuICAgICAgICBzbmlwcGV0OiBg6L+Z5piv5YWz5LqOIFwiJHthcmdzLnF1ZXJ5fVwiIOeahOaQnOe0oue7k+aenOaRmOimgSAke2l9Li4uYCxcbiAgICAgICAgcHVibGlzaGVkRGF0ZTogbmV3IERhdGUoRGF0ZS5ub3coKSAtIGkgKiAyNCAqIDYwICogNjAgKiAxMDAwKS50b0lTT1N0cmluZygpLFxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcXVlcnk6IGFyZ3MucXVlcnksXG4gICAgICB0b3RhbFJlc3VsdHM6IHJlc3VsdHMubGVuZ3RoLFxuICAgICAgcmVzdWx0cyxcbiAgICAgIHNlYXJjaFRpbWU6IFwiMC44c1wiLFxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIOWGhee9ruW3peWFt++8mkNBROWIhuaekFxuICovXG5leHBvcnQgY2xhc3MgQ0FEQW5hbHlzaXNUb29sIGltcGxlbWVudHMgVG9vbEV4ZWN1dG9yIHtcbiAgbmFtZSA9IFwiYW5hbHl6ZV9jYWRcIlxuICBkZXNjcmlwdGlvbiA9IFwi5YiG5p6QQ0FE5paH5Lu25bm255Sf5oiQ5oql5ZGKXCJcbiAgcGFyYW1ldGVycyA9IHtcbiAgICBmaWxlSWQ6IHtcbiAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJDQUTmlofku7ZJRFwiLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfSxcbiAgICBhbmFseXNpc1R5cGU6IHtcbiAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCLliIbmnpDnsbvlnotcIixcbiAgICAgIGVudW06IFtcInN0cnVjdHVyZVwiLCBcImRldmljZXNcIiwgXCJyaXNrc1wiLCBcImZ1bGxcIl0sXG4gICAgICBkZWZhdWx0OiBcImZ1bGxcIixcbiAgICB9LFxuICB9XG5cbiAgYXN5bmMgZXhlY3V0ZShhcmdzOiB7IGZpbGVJZDogc3RyaW5nOyBhbmFseXNpc1R5cGU/OiBzdHJpbmcgfSk6IFByb21pc2U8YW55PiB7XG4gICAgLy8g5qih5oufQ0FE5YiG5p6QXG4gICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMjAwMCkpXG5cbiAgICBjb25zdCBhbmFseXNpc1R5cGUgPSBhcmdzLmFuYWx5c2lzVHlwZSB8fCBcImZ1bGxcIlxuXG4gICAgY29uc3QgcmVzdWx0OiBhbnkgPSB7XG4gICAgICBmaWxlSWQ6IGFyZ3MuZmlsZUlkLFxuICAgICAgYW5hbHlzaXNUeXBlLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgfVxuXG4gICAgaWYgKGFuYWx5c2lzVHlwZSA9PT0gXCJzdHJ1Y3R1cmVcIiB8fCBhbmFseXNpc1R5cGUgPT09IFwiZnVsbFwiKSB7XG4gICAgICByZXN1bHQuc3RydWN0dXJlID0ge1xuICAgICAgICB0b3RhbEVsZW1lbnRzOiAxNTYsXG4gICAgICAgIHdhbGxzOiAyNCxcbiAgICAgICAgZG9vcnM6IDgsXG4gICAgICAgIHdpbmRvd3M6IDEyLFxuICAgICAgICByb29tczogNixcbiAgICAgICAgYXJlYTogXCIxMjAuNSBtwrJcIixcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYW5hbHlzaXNUeXBlID09PSBcImRldmljZXNcIiB8fCBhbmFseXNpc1R5cGUgPT09IFwiZnVsbFwiKSB7XG4gICAgICByZXN1bHQuZGV2aWNlcyA9IFtcbiAgICAgICAgeyB0eXBlOiBcIumXqOemgeiuvuWkh1wiLCBjb3VudDogMywgbG9jYXRpb25zOiBbXCLkuLvlhaXlj6NcIiwgXCLkvqfpl6hcIiwgXCLlkI7pl6hcIl0gfSxcbiAgICAgICAgeyB0eXBlOiBcIuaRhOWDj+WktFwiLCBjb3VudDogOCwgbG9jYXRpb25zOiBbXCLlkITmpbzlsYLotbDlu4pcIiwgXCLlh7rlhaXlj6NcIl0gfSxcbiAgICAgICAgeyB0eXBlOiBcIuS8oOaEn+WZqFwiLCBjb3VudDogMTUsIGxvY2F0aW9uczogW1wi5ZCE5oi/6Ze0XCIsIFwi6LWw5buKXCJdIH0sXG4gICAgICBdXG4gICAgfVxuXG4gICAgaWYgKGFuYWx5c2lzVHlwZSA9PT0gXCJyaXNrc1wiIHx8IGFuYWx5c2lzVHlwZSA9PT0gXCJmdWxsXCIpIHtcbiAgICAgIHJlc3VsdC5yaXNrcyA9IFtcbiAgICAgICAgeyBsZXZlbDogXCLpq5hcIiwgZGVzY3JpcHRpb246IFwi5Li75YWl5Y+j57y65bCR5aSH55So55S15rqQXCIsIHJlY29tbWVuZGF0aW9uOiBcIuWuieijhVVQU+eUtea6kFwiIH0sXG4gICAgICAgIHsgbGV2ZWw6IFwi5LitXCIsIGRlc2NyaXB0aW9uOiBcIumDqOWIhuWMuuWfn+ebkeaOp+ebsuWMulwiLCByZWNvbW1lbmRhdGlvbjogXCLlop7liqDmkYTlg4/lpLTopobnm5ZcIiB9LFxuICAgICAgICB7IGxldmVsOiBcIuS9jlwiLCBkZXNjcmlwdGlvbjogXCLorr7lpIfnu7TmiqTlkajmnJ/ovoPplb9cIiwgcmVjb21tZW5kYXRpb246IFwi57yp55+t57u05oqk6Ze06ZqUXCIgfSxcbiAgICAgIF1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cblxuLyoqXG4gKiDlhoXnva7lt6XlhbfvvJrmtbfmiqXnlJ/miJBcbiAqL1xuZXhwb3J0IGNsYXNzIFBvc3RlckdlbmVyYXRvclRvb2wgaW1wbGVtZW50cyBUb29sRXhlY3V0b3Ige1xuICBuYW1lID0gXCJnZW5lcmF0ZV9wb3N0ZXJcIlxuICBkZXNjcmlwdGlvbiA9IFwi5qC55o2u5o+P6L+w55Sf5oiQ5rW35oqlXCJcbiAgcGFyYW1ldGVycyA9IHtcbiAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIua1t+aKpeWGheWuueaPj+i/sFwiLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfSxcbiAgICBzdHlsZToge1xuICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIua1t+aKpemjjuagvFwiLFxuICAgICAgZW51bTogW1wibW9kZXJuXCIsIFwiY2xhc3NpY1wiLCBcIm1pbmltYWxpc3RcIiwgXCJjb2xvcmZ1bFwiXSxcbiAgICAgIGRlZmF1bHQ6IFwibW9kZXJuXCIsXG4gICAgfSxcbiAgICBzaXplOiB7XG4gICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwi5rW35oql5bC65a+4XCIsXG4gICAgICBlbnVtOiBbXCJBNFwiLCBcIkEzXCIsIFwiMTA4MHgxOTIwXCIsIFwiMTkyMHgxMDgwXCJdLFxuICAgICAgZGVmYXVsdDogXCJBNFwiLFxuICAgIH0sXG4gICAgY29sb3JzOiB7XG4gICAgICB0eXBlOiBcImFycmF5XCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCLkuLvopoHpopzoibJcIixcbiAgICAgIGl0ZW1zOiB7IHR5cGU6IFwic3RyaW5nXCIgfSxcbiAgICB9LFxuICB9XG5cbiAgYXN5bmMgZXhlY3V0ZShhcmdzOiB7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZ1xuICAgIHN0eWxlPzogc3RyaW5nXG4gICAgc2l6ZT86IHN0cmluZ1xuICAgIGNvbG9ycz86IHN0cmluZ1tdXG4gIH0pOiBQcm9taXNlPGFueT4ge1xuICAgIC8vIOaooeaLn+a1t+aKpeeUn+aIkFxuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMDApKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBhcmdzLmRlc2NyaXB0aW9uLFxuICAgICAgc3R5bGU6IGFyZ3Muc3R5bGUgfHwgXCJtb2Rlcm5cIixcbiAgICAgIHNpemU6IGFyZ3Muc2l6ZSB8fCBcIkE0XCIsXG4gICAgICBjb2xvcnM6IGFyZ3MuY29sb3JzIHx8IFtcIiM2Y2IzM2ZcIiwgXCIjZmZmZmZmXCIsIFwiIzMzMzMzM1wiXSxcbiAgICAgIGltYWdlVXJsOiBgL2FwaS9wb3N0ZXIvZ2VuZXJhdGVkLyR7RGF0ZS5ub3coKX0uanBnYCxcbiAgICAgIHRodW1ibmFpbFVybDogYC9hcGkvcG9zdGVyL3RodW1ibmFpbC8ke0RhdGUubm93KCl9LmpwZ2AsXG4gICAgICBkb3dubG9hZFVybDogYC9hcGkvcG9zdGVyL2Rvd25sb2FkLyR7RGF0ZS5ub3coKX0ucGRmYCxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIGdlbmVyYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIHByb2Nlc3NpbmdUaW1lOiBcIjMuMnNcIixcbiAgICAgICAgcmVzb2x1dGlvbjogXCIzMDBkcGlcIixcbiAgICAgIH0sXG4gICAgfVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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