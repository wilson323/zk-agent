42be87dc426a5e198779628a0fe28f8f
"use strict";

/**
 * @file poster\config\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_19hnipx1bf() {
  var path = "E:\\zk-agent\\app\\api\\poster\\config\\route.ts";
  var hash = "02c7aa207a26cccb85762116519f7c85257a61eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\poster\\config\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 31
        },
        end: {
          line: 18,
          column: 75
        }
      },
      "10": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "11": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 73
        }
      },
      "12": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "13": {
        start: {
          line: 30,
          column: 33
        },
        end: {
          line: 30,
          column: 84
        }
      },
      "14": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "15": {
        start: {
          line: 36,
          column: 33
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "16": {
        start: {
          line: 37,
          column: 33
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "17": {
        start: {
          line: 38,
          column: 36
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "18": {
        start: {
          line: 39,
          column: 34
        },
        end: {
          line: 43,
          column: 18
        }
      },
      "19": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "20": {
        start: {
          line: 49,
          column: 59
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "21": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 61,
          column: 19
        }
      },
      "22": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 163
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 114
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 100
          },
          end: {
            line: 13,
            column: 101
          }
        },
        loc: {
          start: {
            line: 13,
            column: 175
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 22,
            column: 19
          }
        }, {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 28,
            column: 19
          }
        }, {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 34,
            column: 19
          }
        }, {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 47,
            column: 19
          }
        }, {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 61,
            column: 19
          }
        }, {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 63,
            column: 163
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 38
          }
        }, {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 40,
            column: 51
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 38
          }
        }, {
          start: {
            line: 41,
            column: 42
          },
          end: {
            line: 41,
            column: 51
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 44
          }
        }, {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 57
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\poster\\config\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAC5D,wDAAyD;AAE5C,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,cAAc,EAAE,IAAc,CAAA;QAE3C,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,QAAQ;gBACX,MAAM,MAAM,GAAG,MAAM,0BAAc,CAAC,SAAS,EAAE,CAAA;gBAC/C,OAAO,+BAAkB,CAAC,OAAO,CAAC;oBAChC,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,MAAM;iBACb,CAAC,CAAA;YAEJ,KAAK,OAAO;gBACV,MAAM,KAAK,GAAG,MAAM,0BAAc,CAAC,QAAQ,EAAE,CAAA;gBAC7C,OAAO,+BAAkB,CAAC,OAAO,CAAC;oBAChC,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,KAAK;iBACZ,CAAC,CAAA;YAEJ,KAAK,UAAU;gBACb,MAAM,QAAQ,GAAG,MAAM,0BAAc,CAAC,gBAAgB,EAAE,CAAA;gBACxD,OAAO,+BAAkB,CAAC,OAAO,CAAC;oBAChC,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,QAAQ;iBACf,CAAC,CAAA;YAEJ,KAAK,WAAW;gBACd,MAAM,QAAQ,GAAG,cAAc,EAAE,QAAkB,CAAA;gBACnD,MAAM,QAAQ,GAAG,cAAc,EAAE,QAAkB,CAAA;gBACnD,MAAM,WAAW,GAAG,cAAc,EAAE,WAAqB,CAAA;gBAEzD,MAAM,SAAS,GAAG,MAAM,0BAAc,CAAC,YAAY,CAAC;oBAClD,QAAQ,EAAE,QAAQ,IAAI,SAAS;oBAC/B,QAAQ,EAAE,QAAQ,IAAI,SAAS;oBAC/B,WAAW,EAAE,WAAW,IAAI,SAAS;iBACtC,CAAC,CAAA;gBAEF,OAAO,+BAAkB,CAAC,OAAO,CAAC;oBAChC,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,SAAS;iBAChB,CAAC,CAAA;YAEJ,KAAK,KAAK;gBACR,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;oBAC3D,0BAAc,CAAC,SAAS,EAAE;oBAC1B,0BAAc,CAAC,QAAQ,EAAE;oBACzB,0BAAc,CAAC,gBAAgB,EAAE;iBAClC,CAAC,CAAA;gBAEF,OAAO,+BAAkB,CAAC,OAAO,CAAC;oBAChC,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE;wBACJ,MAAM,EAAE,SAAS;wBACjB,KAAK,EAAE,QAAQ;wBACf,QAAQ,EAAE,WAAW;qBACtB;iBACF,CAAC,CAAA;YAEJ;gBACE,OAAO,+BAAkB,CAAC,KAAK,CAC7B,EAAE,OAAO,EAAE,sEAAsE,EAAE,EACnF,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAA;QACL,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,EAAE,OAAO,EAAE,6BAA6B,EAAE,EAC1C,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAA;IACH,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\poster\\config\\route.ts"],
      sourcesContent: ["/**\n * @file poster\\config\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { PosterDatabase } from \"@/lib/database/poster-db\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const type = validatedQuery?.type as string\n      \n      switch (type) {\n        case \"styles\":\n          const styles = await PosterDatabase.getStyles()\n          return ApiResponseWrapper.success({\n            success: true,\n            data: styles,\n          })\n        \n        case \"sizes\":\n          const sizes = await PosterDatabase.getSizes()\n          return ApiResponseWrapper.success({\n            success: true,\n            data: sizes,\n          })\n        \n        case \"palettes\":\n          const palettes = await PosterDatabase.getColorPalettes()\n          return ApiResponseWrapper.success({\n            success: true,\n            data: palettes,\n          })\n        \n        case \"templates\":\n          const category = validatedQuery?.category as string\n          const industry = validatedQuery?.industry as string\n          const productType = validatedQuery?.productType as string\n          \n          const templates = await PosterDatabase.getTemplates({\n            category: category || undefined,\n            industry: industry || undefined,\n            productType: productType || undefined,\n          })\n          \n          return ApiResponseWrapper.success({\n            success: true,\n            data: templates,\n          })\n        \n        case \"all\":\n          const [allStyles, allSizes, allPalettes] = await Promise.all([\n            PosterDatabase.getStyles(),\n            PosterDatabase.getSizes(),\n            PosterDatabase.getColorPalettes(),\n          ])\n          \n          return ApiResponseWrapper.success({\n            success: true,\n            data: {\n              styles: allStyles,\n              sizes: allSizes,\n              palettes: allPalettes,\n            },\n          })\n        \n        default:\n          return ApiResponseWrapper.error(\n            { message: \"Invalid config type. Use: styles, sizes, palettes, templates, or all\" },\n            { status: 400 }\n          )\n      }\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        { message: 'Failed to get poster config' },\n        { status: 500 }\n      )\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "02c7aa207a26cccb85762116519f7c85257a61eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19hnipx1bf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19hnipx1bf();
cov_19hnipx1bf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19hnipx1bf().s[1]++;
exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_19hnipx1bf().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_19hnipx1bf().s[3]++, require("@/lib/utils/api-helper"));
const poster_db_1 =
/* istanbul ignore next */
(cov_19hnipx1bf().s[4]++, require("@/lib/database/poster-db"));
/* istanbul ignore next */
cov_19hnipx1bf().s[5]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_19hnipx1bf().f[0]++;
  cov_19hnipx1bf().s[6]++;
  try {
    const type =
    /* istanbul ignore next */
    (cov_19hnipx1bf().s[7]++, validatedQuery?.type);
    /* istanbul ignore next */
    cov_19hnipx1bf().s[8]++;
    switch (type) {
      case "styles":
        /* istanbul ignore next */
        cov_19hnipx1bf().b[0][0]++;
        const styles =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[9]++, await poster_db_1.PosterDatabase.getStyles());
        /* istanbul ignore next */
        cov_19hnipx1bf().s[10]++;
        return api_helper_1.ApiResponseWrapper.success({
          success: true,
          data: styles
        });
      case "sizes":
        /* istanbul ignore next */
        cov_19hnipx1bf().b[0][1]++;
        const sizes =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[11]++, await poster_db_1.PosterDatabase.getSizes());
        /* istanbul ignore next */
        cov_19hnipx1bf().s[12]++;
        return api_helper_1.ApiResponseWrapper.success({
          success: true,
          data: sizes
        });
      case "palettes":
        /* istanbul ignore next */
        cov_19hnipx1bf().b[0][2]++;
        const palettes =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[13]++, await poster_db_1.PosterDatabase.getColorPalettes());
        /* istanbul ignore next */
        cov_19hnipx1bf().s[14]++;
        return api_helper_1.ApiResponseWrapper.success({
          success: true,
          data: palettes
        });
      case "templates":
        /* istanbul ignore next */
        cov_19hnipx1bf().b[0][3]++;
        const category =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[15]++, validatedQuery?.category);
        const industry =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[16]++, validatedQuery?.industry);
        const productType =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[17]++, validatedQuery?.productType);
        const templates =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[18]++, await poster_db_1.PosterDatabase.getTemplates({
          category:
          /* istanbul ignore next */
          (cov_19hnipx1bf().b[1][0]++, category) ||
          /* istanbul ignore next */
          (cov_19hnipx1bf().b[1][1]++, undefined),
          industry:
          /* istanbul ignore next */
          (cov_19hnipx1bf().b[2][0]++, industry) ||
          /* istanbul ignore next */
          (cov_19hnipx1bf().b[2][1]++, undefined),
          productType:
          /* istanbul ignore next */
          (cov_19hnipx1bf().b[3][0]++, productType) ||
          /* istanbul ignore next */
          (cov_19hnipx1bf().b[3][1]++, undefined)
        }));
        /* istanbul ignore next */
        cov_19hnipx1bf().s[19]++;
        return api_helper_1.ApiResponseWrapper.success({
          success: true,
          data: templates
        });
      case "all":
        /* istanbul ignore next */
        cov_19hnipx1bf().b[0][4]++;
        const [allStyles, allSizes, allPalettes] =
        /* istanbul ignore next */
        (cov_19hnipx1bf().s[20]++, await Promise.all([poster_db_1.PosterDatabase.getStyles(), poster_db_1.PosterDatabase.getSizes(), poster_db_1.PosterDatabase.getColorPalettes()]));
        /* istanbul ignore next */
        cov_19hnipx1bf().s[21]++;
        return api_helper_1.ApiResponseWrapper.success({
          success: true,
          data: {
            styles: allStyles,
            sizes: allSizes,
            palettes: allPalettes
          }
        });
      default:
        /* istanbul ignore next */
        cov_19hnipx1bf().b[0][5]++;
        cov_19hnipx1bf().s[22]++;
        return api_helper_1.ApiResponseWrapper.error({
          message: "Invalid config type. Use: styles, sizes, palettes, templates, or all"
        }, {
          status: 400
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_19hnipx1bf().s[23]++;
    return api_helper_1.ApiResponseWrapper.error({
      message: 'Failed to get poster config'
    }, {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,