{"version":3,"names":["cov_2lrfhptbz","actualCoverage","s","agent_compliance_checker_1","require","conversation_agent_adapter_1","cad_agent_adapter_1","poster_agent_adapter_1","AgentComplianceAudit","constructor","f","reports","Map","auditAllAgents","results","conversationReport","auditConversationAgent","push","set","error","console","cadReport","auditCADAgent","posterReport","auditPosterAgent","overallCompliance","calculateOverallCompliance","timestamp","Date","now","totalAgents","length","compliantAgents","filter","r","isCompliant","overallScore","score","recommendations","generateOverallRecommendations","threadId","adapter","ConversationAgentAdapter","debug","agent","initialize","events","messages","subscription","getEventStream","subscribe","event","messageSubscription","getMessagesStream","msgs","splice","sendMessage","Promise","resolve","setTimeout","unsubscribe","report","AgentComplianceChecker","generateComplianceReport","dispose","CADAgentAdapter","mockCADFile","File","type","analyzeCADFile","PosterAgentAdapter","generatePoster","style","size","colors","b","totalScore","reduce","sum","averageScore","Math","round","every","nonCompliantAgents","lowScoreAgents","commonIssues","findCommonIssues","join","issueCount","allErrors","definitionCompliance","errors","runtimeCompliance","allWarnings","warnings","get","warning","Array","from","entries","count","map","issue","getReport","agentType","getAllReports","values","exportAuditResults","auditData","JSON","stringify","exports"],"sources":["E:\\zk-agent\\lib\\ag-ui\\compliance\\agent-compliance-audit.ts"],"sourcesContent":["// @ts-nocheck\nimport { AgentComplianceChecker, type ComplianceReport } from \"../protocol/agent-compliance-checker\"\nimport { ConversationAgentAdapter } from \"../agents/conversation-agent-adapter\"\nimport { CADAgentAdapter } from \"../agents/cad-agent-adapter\"\nimport { PosterAgentAdapter } from \"../agents/poster-agent-adapter\"\nimport type { AgUIEvent, Message } from \"../protocol/complete-types\"\n\n/**\n * 智能体合规性审计器\n * 检查所有智能体是否遵循AG-UI协议\n */\nexport class AgentComplianceAudit {\n  private reports: Map<string, ComplianceReport> = new Map()\n\n  /**\n   * 审计所有智能体\n   */\n  async auditAllAgents(): Promise<ComplianceAuditResult> {\n    const results: ComplianceReport[] = []\n\n    // 审计对话智能体\n    try {\n      const conversationReport = await this.auditConversationAgent()\n      results.push(conversationReport)\n      this.reports.set(\"conversation\", conversationReport)\n    } catch (error) {\n      console.error(\"Error auditing conversation agent:\", error)\n    }\n\n    // 审计CAD智能体\n    try {\n      const cadReport = await this.auditCADAgent()\n      results.push(cadReport)\n      this.reports.set(\"cad\", cadReport)\n    } catch (error) {\n      console.error(\"Error auditing CAD agent:\", error)\n    }\n\n    // 审计海报智能体\n    try {\n      const posterReport = await this.auditPosterAgent()\n      results.push(posterReport)\n      this.reports.set(\"poster\", posterReport)\n    } catch (error) {\n      console.error(\"Error auditing poster agent:\", error)\n    }\n\n    // 计算总体合规性\n    const overallCompliance = this.calculateOverallCompliance(results)\n\n    return {\n      timestamp: Date.now(),\n      totalAgents: results.length,\n      compliantAgents: results.filter((r) => r.isCompliant).length,\n      overallScore: overallCompliance.score,\n      isCompliant: overallCompliance.isCompliant,\n      reports: results,\n      recommendations: this.generateOverallRecommendations(results),\n    }\n  }\n\n  /**\n   * 审计对话智能体\n   */\n  private async auditConversationAgent(): Promise<ComplianceReport> {\n    const threadId = `audit-conversation-${Date.now()}`\n    const adapter = new ConversationAgentAdapter(threadId, { debug: true })\n\n    try {\n      // 初始化智能体（使用默认配置）\n      const agent = await adapter.initialize(\"test-app-id\", \"test-api-key\")\n\n      // 模拟对话流程\n      const events: AgUIEvent[] = []\n      const messages: Message[] = []\n\n      // 订阅事件\n      const subscription = adapter.getEventStream().subscribe((event) => {\n        events.push(event)\n      })\n\n      // 订阅消息\n      const messageSubscription = adapter.getMessagesStream().subscribe((msgs) => {\n        messages.splice(0, messages.length, ...msgs)\n      })\n\n      // 发送测试消息\n      await adapter.sendMessage(\"你好，这是一个测试消息\")\n\n      // 等待处理完成\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n\n      // 清理订阅\n      subscription.unsubscribe()\n      messageSubscription.unsubscribe()\n\n      // 生成合规性报告\n      const report = AgentComplianceChecker.generateComplianceReport(\"conversation\", agent, events, messages)\n\n      // 清理资源\n      adapter.dispose()\n\n      return report\n    } catch (error) {\n      console.error(\"Error in conversation agent audit:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * 审计CAD智能体\n   */\n  private async auditCADAgent(): Promise<ComplianceReport> {\n    const threadId = `audit-cad-${Date.now()}`\n    const adapter = new CADAgentAdapter(threadId, { debug: true })\n\n    try {\n      // 初始化智能体\n      const agent = await adapter.initialize()\n\n      // 模拟CAD分析流程\n      const events: AgUIEvent[] = []\n      const messages: Message[] = []\n\n      // 订阅事件\n      const subscription = adapter.getEventStream().subscribe((event) => {\n        events.push(event)\n      })\n\n      // 订阅消息\n      const messageSubscription = adapter.getMessagesStream().subscribe((msgs) => {\n        messages.splice(0, messages.length, ...msgs)\n      })\n\n      // 创建模拟CAD文件\n      const mockCADFile = new File([\"mock cad content\"], \"test.dwg\", { type: \"application/dwg\" })\n\n      // 分析CAD文件\n      await adapter.analyzeCADFile(mockCADFile, \"full\")\n\n      // 等待处理完成\n      await new Promise((resolve) => setTimeout(resolve, 3000))\n\n      // 清理订阅\n      subscription.unsubscribe()\n      messageSubscription.unsubscribe()\n\n      // 生成合规性报告\n      const report = AgentComplianceChecker.generateComplianceReport(\"cad\", agent, events, messages)\n\n      // 清理资源\n      adapter.dispose()\n\n      return report\n    } catch (error) {\n      console.error(\"Error in CAD agent audit:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * 审计海报智能体\n   */\n  private async auditPosterAgent(): Promise<ComplianceReport> {\n    const threadId = `audit-poster-${Date.now()}`\n    const adapter = new PosterAgentAdapter(threadId, { debug: true })\n\n    try {\n      // 初始化智能体\n      const agent = await adapter.initialize()\n\n      // 模拟海报生成流程\n      const events: AgUIEvent[] = []\n      const messages: Message[] = []\n\n      // 订阅事件\n      const subscription = adapter.getEventStream().subscribe((event) => {\n        events.push(event)\n      })\n\n      // 订阅消息\n      const messageSubscription = adapter.getMessagesStream().subscribe((msgs) => {\n        messages.splice(0, messages.length, ...msgs)\n      })\n\n      // 生成海报\n      await adapter.generatePoster(\"创建一个现代风格的企业宣传海报\", {\n        style: \"modern\",\n        size: \"A4\",\n        colors: [\"#6cb33f\", \"#ffffff\", \"#333333\"],\n      })\n\n      // 等待处理完成\n      await new Promise((resolve) => setTimeout(resolve, 3000))\n\n      // 清理订阅\n      subscription.unsubscribe()\n      messageSubscription.unsubscribe()\n\n      // 生成合规性报告\n      const report = AgentComplianceChecker.generateComplianceReport(\"poster\", agent, events, messages)\n\n      // 清理资源\n      adapter.dispose()\n\n      return report\n    } catch (error) {\n      console.error(\"Error in poster agent audit:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * 计算总体合规性\n   */\n  private calculateOverallCompliance(reports: ComplianceReport[]): { score: number; isCompliant: boolean } {\n    if (reports.length === 0) {\n      return { score: 0, isCompliant: false }\n    }\n\n    const totalScore = reports.reduce((sum, report) => sum + report.overallScore, 0)\n    const averageScore = Math.round(totalScore / reports.length)\n    const isCompliant = reports.every((report) => report.isCompliant)\n\n    return { score: averageScore, isCompliant }\n  }\n\n  /**\n   * 生成总体建议\n   */\n  private generateOverallRecommendations(reports: ComplianceReport[]): string[] {\n    const recommendations: string[] = []\n\n    const nonCompliantAgents = reports.filter((r) => !r.isCompliant)\n    if (nonCompliantAgents.length > 0) {\n      recommendations.push(`${nonCompliantAgents.length}个智能体不符合AG-UI协议，需要立即修复`)\n    }\n\n    const lowScoreAgents = reports.filter((r) => r.overallScore < 80)\n    if (lowScoreAgents.length > 0) {\n      recommendations.push(`${lowScoreAgents.length}个智能体合规性评分较低，建议优化`)\n    }\n\n    const commonIssues = this.findCommonIssues(reports)\n    if (commonIssues.length > 0) {\n      recommendations.push(`常见问题：${commonIssues.join(\"、\")}`)\n    }\n\n    if (recommendations.length === 0) {\n      recommendations.push(\"所有智能体都符合AG-UI协议，表现良好\")\n    }\n\n    return recommendations\n  }\n\n  /**\n   * 查找常见问题\n   */\n  private findCommonIssues(reports: ComplianceReport[]): string[] {\n    const issueCount: Map<string, number> = new Map()\n\n    for (const report of reports) {\n      const allErrors = [...report.definitionCompliance.errors, ...report.runtimeCompliance.errors]\n      const allWarnings = [...report.definitionCompliance.warnings, ...report.runtimeCompliance.warnings]\n\n      for (const error of allErrors) {\n        issueCount.set(error, (issueCount.get(error) || 0) + 1)\n      }\n\n      for (const warning of allWarnings) {\n        issueCount.set(warning, (issueCount.get(warning) || 0) + 1)\n      }\n    }\n\n    // 返回出现次数超过1次的问题\n    return Array.from(issueCount.entries())\n      .filter(([, count]) => count > 1)\n      .map(([issue]) => issue)\n  }\n\n  /**\n   * 获取审计报告\n   */\n  getReport(agentType: string): ComplianceReport | undefined {\n    return this.reports.get(agentType)\n  }\n\n  /**\n   * 获取所有报告\n   */\n  getAllReports(): ComplianceReport[] {\n    return Array.from(this.reports.values())\n  }\n\n  /**\n   * 导出审计结果\n   */\n  exportAuditResults(): string {\n    const auditData = {\n      timestamp: Date.now(),\n      reports: Array.from(this.reports.entries()).map(([type, report]) => ({\n        agentType: type,\n        ...report,\n      })),\n    }\n\n    return JSON.stringify(auditData, null, 2)\n  }\n}\n\n// 类型定义\nexport interface ComplianceAuditResult {\n  timestamp: number\n  totalAgents: number\n  compliantAgents: number\n  overallScore: number\n  isCompliant: boolean\n  reports: ComplianceReport[]\n  recommendations: string[]\n}\n"],"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","ignoreList":[]}