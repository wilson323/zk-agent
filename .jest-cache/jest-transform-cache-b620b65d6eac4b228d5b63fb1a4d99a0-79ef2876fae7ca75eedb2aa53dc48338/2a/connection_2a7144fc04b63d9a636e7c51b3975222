321f31c6d5208aafe72425e56bd06871
"use strict";

// @ts-nocheck
/**
 * @file Database Connection
 * @description 数据库连接管理和健康检查
 * @author ZK-Agent Team A
 * @date 2024-12-19
 */
/* istanbul ignore next */
function cov_18prcktstb() {
  var path = "E:\\zk-agent\\lib\\database\\connection.ts";
  var hash = "3034bceab3782768244d7ffa4a2d2628fb3e6a49";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\connection.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 243
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "4": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "5": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "7": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "8": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "9": {
        start: {
          line: 18,
          column: 30
        },
        end: {
          line: 18,
          column: 62
        }
      },
      "10": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 17
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 18
        }
      },
      "17": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 35
        }
      },
      "18": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "20": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 50,
          column: 69
        }
      },
      "21": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "22": {
        start: {
          line: 53,
          column: 38
        },
        end: {
          line: 53,
          column: 79
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 62
        }
      },
      "24": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "25": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 32
        }
      },
      "27": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "28": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 64
        }
      },
      "29": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 55
        }
      },
      "30": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 60
        }
      },
      "32": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "33": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "34": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "35": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 55
        }
      },
      "36": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 75
        }
      },
      "37": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "38": {
        start: {
          line: 107,
          column: 22
        },
        end: {
          line: 107,
          column: 32
        }
      },
      "39": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "40": {
        start: {
          line: 110,
          column: 33
        },
        end: {
          line: 110,
          column: 64
        }
      },
      "41": {
        start: {
          line: 112,
          column: 28
        },
        end: {
          line: 112,
          column: 56
        }
      },
      "42": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 60
        }
      },
      "43": {
        start: {
          line: 116,
          column: 21
        },
        end: {
          line: 116,
          column: 30
        }
      },
      "44": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "45": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 33
        }
      },
      "46": {
        start: {
          line: 120,
          column: 13
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "47": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 32
        }
      },
      "48": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 131,
          column: 10
        }
      },
      "49": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 62
        }
      },
      "50": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "51": {
        start: {
          line: 161,
          column: 22
        },
        end: {
          line: 161,
          column: 32
        }
      },
      "52": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "53": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 164,
          column: 31
        }
      },
      "54": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "55": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 54
        }
      },
      "56": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 31
        }
      },
      "57": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 63
        }
      },
      "58": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 173,
          column: 32
        }
      },
      "59": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "60": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 32
        }
      },
      "61": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 64
        }
      },
      "62": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 46
        }
      },
      "63": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "64": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "65": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "66": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "67": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 63
        }
      },
      "68": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "69": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "70": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "71": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 64
        }
      },
      "72": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 76
        }
      },
      "73": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "74": {
        start: {
          line: 232,
          column: 23
        },
        end: {
          line: 232,
          column: 40
        }
      },
      "75": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 35
        }
      },
      "76": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 63
        }
      },
      "77": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 67
        }
      },
      "78": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 20
        }
      },
      "79": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 262,
          column: 5
        }
      },
      "80": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "81": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 63
        }
      },
      "82": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 51
        }
      },
      "83": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 40
        }
      },
      "84": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 64
        }
      },
      "85": {
        start: {
          line: 255,
          column: 37
        },
        end: {
          line: 255,
          column: 62
        }
      },
      "86": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 47
        }
      },
      "87": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 62
        }
      },
      "88": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 20
        }
      },
      "89": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "90": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "91": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 69
        }
      },
      "92": {
        start: {
          line: 273,
          column: 27
        },
        end: {
          line: 273,
          column: 58
        }
      },
      "93": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 297,
          column: 14
        }
      },
      "94": {
        start: {
          line: 300,
          column: 23
        },
        end: {
          line: 300,
          column: 54
        }
      },
      "95": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "96": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 68
        }
      },
      "97": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 20
        }
      },
      "98": {
        start: {
          line: 322,
          column: 0
        },
        end: {
          line: 335,
          column: 3
        }
      },
      "99": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "100": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "101": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 70
        }
      },
      "102": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 44
        }
      },
      "103": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 63
        }
      },
      "104": {
        start: {
          line: 336,
          column: 0
        },
        end: {
          line: 352,
          column: 3
        }
      },
      "105": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 351,
          column: 5
        }
      },
      "106": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 72
        }
      },
      "107": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "108": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 70
        }
      },
      "109": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 44
        }
      },
      "110": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 28
        }
      },
      "111": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 64
        }
      },
      "112": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 24
        }
      },
      "113": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 369,
          column: 3
        }
      },
      "114": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "115": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 73
        }
      },
      "116": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "117": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 70
        }
      },
      "118": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 44
        }
      },
      "119": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 28
        }
      },
      "120": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 64
        }
      },
      "121": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 24
        }
      },
      "122": {
        start: {
          line: 371,
          column: 28
        },
        end: {
          line: 371,
          column: 60
        }
      },
      "123": {
        start: {
          line: 372,
          column: 0
        },
        end: {
          line: 372,
          column: 130
        }
      },
      "124": {
        start: {
          line: 372,
          column: 84
        },
        end: {
          line: 372,
          column: 124
        }
      },
      "125": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 373,
          column: 162
        }
      },
      "126": {
        start: {
          line: 373,
          column: 100
        },
        end: {
          line: 373,
          column: 156
        }
      },
      "127": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 374,
          column: 140
        }
      },
      "128": {
        start: {
          line: 374,
          column: 89
        },
        end: {
          line: 374,
          column: 134
        }
      },
      "129": {
        start: {
          line: 375,
          column: 0
        },
        end: {
          line: 375,
          column: 140
        }
      },
      "130": {
        start: {
          line: 375,
          column: 89
        },
        end: {
          line: 375,
          column: 134
        }
      },
      "131": {
        start: {
          line: 376,
          column: 0
        },
        end: {
          line: 376,
          column: 146
        }
      },
      "132": {
        start: {
          line: 376,
          column: 92
        },
        end: {
          line: 376,
          column: 140
        }
      },
      "133": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 377,
          column: 142
        }
      },
      "134": {
        start: {
          line: 377,
          column: 90
        },
        end: {
          line: 377,
          column: 136
        }
      },
      "135": {
        start: {
          line: 378,
          column: 0
        },
        end: {
          line: 378,
          column: 148
        }
      },
      "136": {
        start: {
          line: 378,
          column: 93
        },
        end: {
          line: 378,
          column: 142
        }
      },
      "137": {
        start: {
          line: 379,
          column: 0
        },
        end: {
          line: 379,
          column: 134
        }
      },
      "138": {
        start: {
          line: 379,
          column: 86
        },
        end: {
          line: 379,
          column: 128
        }
      },
      "139": {
        start: {
          line: 381,
          column: 0
        },
        end: {
          line: 385,
          column: 1
        }
      },
      "140": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 384,
          column: 7
        }
      },
      "141": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 83
        }
      },
      "142": {
        start: {
          line: 387,
          column: 0
        },
        end: {
          line: 387,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "getPrismaClient",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 24
          }
        },
        loc: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "checkDatabaseConnection",
        decl: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 38
          }
        },
        loc: {
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 79
          },
          end: {
            line: 52,
            column: 80
          }
        },
        loc: {
          start: {
            line: 52,
            column: 97
          },
          end: {
            line: 55,
            column: 13
          }
        },
        line: 52
      },
      "3": {
        name: "performDatabaseHealthCheck",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 41
          }
        },
        loc: {
          start: {
            line: 106,
            column: 44
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 106
      },
      "4": {
        name: "checkDatabaseQueries",
        decl: {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 160,
            column: 35
          }
        },
        loc: {
          start: {
            line: 160,
            column: 38
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 160
      },
      "5": {
        name: "checkMigrationStatus",
        decl: {
          start: {
            line: 201,
            column: 15
          },
          end: {
            line: 201,
            column: 35
          }
        },
        loc: {
          start: {
            line: 201,
            column: 38
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 201
      },
      "6": {
        name: "closeDatabaseConnection",
        decl: {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 223,
            column: 38
          }
        },
        loc: {
          start: {
            line: 223,
            column: 41
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 223
      },
      "7": {
        name: "reconnectDatabase",
        decl: {
          start: {
            line: 245,
            column: 15
          },
          end: {
            line: 245,
            column: 32
          }
        },
        loc: {
          start: {
            line: 245,
            column: 35
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 245
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 255,
            column: 26
          },
          end: {
            line: 255,
            column: 27
          }
        },
        loc: {
          start: {
            line: 255,
            column: 37
          },
          end: {
            line: 255,
            column: 62
          }
        },
        line: 255
      },
      "9": {
        name: "getDatabasePoolStatus",
        decl: {
          start: {
            line: 268,
            column: 15
          },
          end: {
            line: 268,
            column: 36
          }
        },
        loc: {
          start: {
            line: 268,
            column: 39
          },
          end: {
            line: 320,
            column: 1
          }
        },
        line: 268
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 322,
            column: 25
          },
          end: {
            line: 322,
            column: 26
          }
        },
        loc: {
          start: {
            line: 322,
            column: 37
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 322
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 336,
            column: 21
          },
          end: {
            line: 336,
            column: 22
          }
        },
        loc: {
          start: {
            line: 336,
            column: 33
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 336
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 353,
            column: 22
          },
          end: {
            line: 353,
            column: 23
          }
        },
        loc: {
          start: {
            line: 353,
            column: 34
          },
          end: {
            line: 369,
            column: 1
          }
        },
        line: 353
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 372,
            column: 70
          },
          end: {
            line: 372,
            column: 71
          }
        },
        loc: {
          start: {
            line: 372,
            column: 82
          },
          end: {
            line: 372,
            column: 126
          }
        },
        line: 372
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 373,
            column: 86
          },
          end: {
            line: 373,
            column: 87
          }
        },
        loc: {
          start: {
            line: 373,
            column: 98
          },
          end: {
            line: 373,
            column: 158
          }
        },
        line: 373
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 374,
            column: 75
          },
          end: {
            line: 374,
            column: 76
          }
        },
        loc: {
          start: {
            line: 374,
            column: 87
          },
          end: {
            line: 374,
            column: 136
          }
        },
        line: 374
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 375,
            column: 75
          },
          end: {
            line: 375,
            column: 76
          }
        },
        loc: {
          start: {
            line: 375,
            column: 87
          },
          end: {
            line: 375,
            column: 136
          }
        },
        line: 375
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 376,
            column: 78
          },
          end: {
            line: 376,
            column: 79
          }
        },
        loc: {
          start: {
            line: 376,
            column: 90
          },
          end: {
            line: 376,
            column: 142
          }
        },
        line: 376
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 377,
            column: 76
          },
          end: {
            line: 377,
            column: 77
          }
        },
        loc: {
          start: {
            line: 377,
            column: 88
          },
          end: {
            line: 377,
            column: 138
          }
        },
        line: 377
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 378,
            column: 79
          },
          end: {
            line: 378,
            column: 80
          }
        },
        loc: {
          start: {
            line: 378,
            column: 91
          },
          end: {
            line: 378,
            column: 144
          }
        },
        line: 378
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 379,
            column: 72
          },
          end: {
            line: 379,
            column: 73
          }
        },
        loc: {
          start: {
            line: 379,
            column: 84
          },
          end: {
            line: 379,
            column: 130
          }
        },
        line: 379
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 382,
            column: 53
          },
          end: {
            line: 382,
            column: 54
          }
        },
        loc: {
          start: {
            line: 382,
            column: 62
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 382
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 22
          }
        }, {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 72
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 58
          },
          end: {
            line: 34,
            column: 84
          }
        }, {
          start: {
            line: 34,
            column: 87
          },
          end: {
            line: 34,
            column: 96
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 48
          }
        }, {
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 54,
            column: 61
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 42
          }
        }, {
          start: {
            line: 76,
            column: 46
          },
          end: {
            line: 76,
            column: 55
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 98,
            column: 21
          },
          end: {
            line: 98,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 46
          },
          end: {
            line: 98,
            column: 59
          }
        }, {
          start: {
            line: 98,
            column: 62
          },
          end: {
            line: 98,
            column: 86
          }
        }],
        line: 98
      },
      "9": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 122,
            column: 9
          }
        }],
        line: 117
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 39
          }
        }, {
          start: {
            line: 117,
            column: 43
          },
          end: {
            line: 117,
            column: 60
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 120,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 120,
            column: 35
          }
        }, {
          start: {
            line: 120,
            column: 39
          },
          end: {
            line: 120,
            column: 66
          }
        }],
        line: 120
      },
      "13": {
        loc: {
          start: {
            line: 140,
            column: 27
          },
          end: {
            line: 140,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 52
          },
          end: {
            line: 140,
            column: 65
          }
        }, {
          start: {
            line: 140,
            column: 68
          },
          end: {
            line: 140,
            column: 89
          }
        }],
        line: 140
      },
      "14": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "15": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "16": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "17": {
        loc: {
          start: {
            line: 284,
            column: 33
          },
          end: {
            line: 286,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 26
          },
          end: {
            line: 285,
            column: 114
          }
        }, {
          start: {
            line: 286,
            column: 26
          },
          end: {
            line: 286,
            column: 32
          }
        }],
        line: 284
      },
      "18": {
        loc: {
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 291,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 291,
            column: 68
          }
        }, {
          start: {
            line: 291,
            column: 72
          },
          end: {
            line: 291,
            column: 76
          }
        }],
        line: 291
      },
      "19": {
        loc: {
          start: {
            line: 292,
            column: 45
          },
          end: {
            line: 292,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 45
          },
          end: {
            line: 292,
            column: 68
          }
        }, {
          start: {
            line: 292,
            column: 72
          },
          end: {
            line: 292,
            column: 76
          }
        }],
        line: 292
      },
      "20": {
        loc: {
          start: {
            line: 293,
            column: 28
          },
          end: {
            line: 293,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 47
          },
          end: {
            line: 293,
            column: 48
          }
        }, {
          start: {
            line: 293,
            column: 51
          },
          end: {
            line: 293,
            column: 52
          }
        }],
        line: 293
      },
      "21": {
        loc: {
          start: {
            line: 294,
            column: 45
          },
          end: {
            line: 294,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 45
          },
          end: {
            line: 294,
            column: 72
          }
        }, {
          start: {
            line: 294,
            column: 76
          },
          end: {
            line: 294,
            column: 83
          }
        }],
        line: 294
      },
      "22": {
        loc: {
          start: {
            line: 295,
            column: 42
          },
          end: {
            line: 295,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 42
          },
          end: {
            line: 295,
            column: 66
          }
        }, {
          start: {
            line: 295,
            column: 70
          },
          end: {
            line: 295,
            column: 77
          }
        }],
        line: 295
      },
      "23": {
        loc: {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 55
          }
        }, {
          start: {
            line: 309,
            column: 59
          },
          end: {
            line: 309,
            column: 63
          }
        }],
        line: 309
      },
      "24": {
        loc: {
          start: {
            line: 310,
            column: 24
          },
          end: {
            line: 310,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 310,
            column: 43
          },
          end: {
            line: 310,
            column: 44
          }
        }, {
          start: {
            line: 310,
            column: 47
          },
          end: {
            line: 310,
            column: 48
          }
        }],
        line: 310
      },
      "25": {
        loc: {
          start: {
            line: 311,
            column: 22
          },
          end: {
            line: 311,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 311,
            column: 41
          },
          end: {
            line: 311,
            column: 86
          }
        }, {
          start: {
            line: 311,
            column: 89
          },
          end: {
            line: 311,
            column: 90
          }
        }],
        line: 311
      },
      "26": {
        loc: {
          start: {
            line: 311,
            column: 50
          },
          end: {
            line: 311,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 50
          },
          end: {
            line: 311,
            column: 73
          }
        }, {
          start: {
            line: 311,
            column: 77
          },
          end: {
            line: 311,
            column: 81
          }
        }],
        line: 311
      },
      "27": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: 328,
            column: 13
          },
          end: {
            line: 330,
            column: 9
          }
        }],
        line: 325
      },
      "28": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: 343,
            column: 13
          },
          end: {
            line: 346,
            column: 9
          }
        }],
        line: 340
      },
      "29": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        }, {
          start: {
            line: 360,
            column: 13
          },
          end: {
            line: 363,
            column: 9
          }
        }],
        line: 357
      },
      "30": {
        loc: {
          start: {
            line: 381,
            column: 0
          },
          end: {
            line: 385,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 0
          },
          end: {
            line: 385,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\connection.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\connection.ts"],
      sourcesContent: ["// @ts-nocheck\n/**\n * @file Database Connection\n * @description \u6570\u636E\u5E93\u8FDE\u63A5\u7BA1\u7406\u548C\u5065\u5EB7\u68C0\u67E5\n * @author ZK-Agent Team A\n * @date 2024-12-19\n */\n\nimport { PrismaClient } from '@prisma/client'\n\n// \u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\nexport interface DatabaseStatus {\n  connected: boolean\n  message: string\n  timestamp: Date\n  version?: string\n  latency?: number\n  error?: string\n  stats?: {\n    totalQueries: number\n    failedQueries: number\n    avgLatency: number\n    reconnectAttempts: number\n  }\n}\n\n// \u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\u7ED3\u679C\nexport interface DatabaseHealthCheck {\n  status: 'healthy' | 'unhealthy' | 'degraded'\n  checks: {\n    connection: DatabaseStatus\n    queries: {\n      read: boolean\n      write: boolean\n      latency: number\n    }\n    migrations: {\n      pending: number\n      applied: number\n    }\n  }\n  timestamp: Date\n}\n\nimport { enhancedDb, EnhancedDatabaseConnection, ConnectionState } from './enhanced-connection'\n\n// \u5168\u5C40 Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\nlet prisma: PrismaClient | null = null\n\n/**\n * \u83B7\u53D6 Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\n * @returns {PrismaClient} Prisma \u5BA2\u6237\u7AEF\u5B9E\u4F8B\n */\nexport function getPrismaClient(): PrismaClient {\n  // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u5BA2\u6237\u7AEF\n  const enhancedClient = enhancedDb.getClient()\n  if (enhancedClient && enhancedDb.isConnected()) {\n    return enhancedClient\n  }\n\n  // \u56DE\u9000\u5230\u4F20\u7EDF\u8FDE\u63A5\u65B9\u5F0F\n  if (!prisma) {\n    prisma = new PrismaClient({\n      log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n      errorFormat: 'pretty',\n    })\n  }\n  return prisma\n}\n\n// \u83B7\u53D6Prisma\u5BA2\u6237\u7AEF\u5B9E\u4F8B\nexport const prisma = getPrismaClient()\n\n/**\n * \u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\n * @returns {Promise<DatabaseStatus>} \u6570\u636E\u5E93\u8FDE\u63A5\u72B6\u6001\n */\nexport async function checkDatabaseConnection(): Promise<DatabaseStatus> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\n    if (enhancedDb.isConnected()) {\n      const stats = enhancedDb.getStats()\n      \n      // \u6267\u884C\u5065\u5EB7\u68C0\u67E5\u67E5\u8BE2\n      const result = await enhancedDb.executeQuery(async (client) => {\n        const versionResult = await client.$queryRaw<Array<{ version: string }>>`SELECT version()`\n        return versionResult[0]?.version || 'Unknown'\n      })\n      \n      return {\n        connected: true,\n        message: `Enhanced database connection active (uptime: ${Math.round(stats.uptime / 1000)}s)`,\n        version: result,\n        timestamp: new Date(),\n        stats: {\n          totalQueries: stats.totalQueries,\n          failedQueries: stats.failedQueries,\n          avgLatency: Math.round(stats.avgLatency),\n          reconnectAttempts: stats.reconnectAttempts\n        }\n      }\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u8FDE\u63A5\u68C0\u67E5\n    const client = getPrismaClient()\n    await client.$connect()\n    \n    // \u6267\u884C\u7B80\u5355\u67E5\u8BE2\u6D4B\u8BD5\u8FDE\u63A5\n    await client.$queryRaw`SELECT 1`\n    \n    // \u83B7\u53D6\u6570\u636E\u5E93\u7248\u672C\u4FE1\u606F\n    const result = await client.$queryRaw<Array<{ version: string }>>`SELECT version()`\n    const version = result[0]?.version || 'Unknown'\n    \n    return {\n      connected: true,\n      message: 'Database connection successful (fallback mode)',\n      version,\n      timestamp: new Date()\n    }\n  } catch (error) {\n    console.error('Database connection failed:', error)\n    \n    // \u5982\u679C\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u672A\u8FDE\u63A5\uFF0C\u5C1D\u8BD5\u8FDE\u63A5\n    if (!enhancedDb.isConnected()) {\n      try {\n        await enhancedDb.connect()\n        return await checkDatabaseConnection() // \u9012\u5F52\u91CD\u8BD5\n      } catch (connectError) {\n        console.error('Enhanced connection failed:', connectError)\n      }\n    }\n    \n    return {\n      connected: false,\n      message: error instanceof Error ? error.message : 'Unknown database error',\n      timestamp: new Date()\n    }\n  }\n}\n\n/**\n * \u6267\u884C\u5B8C\u6574\u7684\u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\n */\nexport async function performDatabaseHealthCheck(): Promise<DatabaseHealthCheck> {\n  const timestamp = new Date()\n  \n  try {\n    // \u68C0\u67E5\u57FA\u672C\u8FDE\u63A5\n    const connectionStatus = await checkDatabaseConnection()\n    \n    // \u68C0\u67E5\u8BFB\u5199\u64CD\u4F5C\n    const queryChecks = await checkDatabaseQueries()\n    \n    // \u68C0\u67E5\u8FC1\u79FB\u72B6\u6001\n    const migrationChecks = await checkMigrationStatus()\n    \n    // \u786E\u5B9A\u6574\u4F53\u5065\u5EB7\u72B6\u6001\n    let status: DatabaseHealthCheck['status'] = 'healthy'\n    \n    if (!connectionStatus.connected || !queryChecks.read) {\n      status = 'unhealthy'\n    } else if (!queryChecks.write || migrationChecks.pending > 0) {\n      status = 'degraded'\n    }\n    \n    return {\n      status,\n      checks: {\n        connection: connectionStatus,\n        queries: queryChecks,\n        migrations: migrationChecks\n      },\n      timestamp\n    }\n  } catch (error) {\n    console.error('Database health check failed:', error)\n    \n    return {\n      status: 'unhealthy',\n      checks: {\n        connection: {\n          connected: false,\n          error: error instanceof Error ? error.message : 'Health check failed',\n          timestamp\n        },\n        queries: {\n          read: false,\n          write: false,\n          latency: 0\n        },\n        migrations: {\n          pending: 0,\n          applied: 0\n        }\n      },\n      timestamp\n    }\n  }\n}\n\n/**\n * \u68C0\u67E5\u6570\u636E\u5E93\u67E5\u8BE2\u64CD\u4F5C\n */\nasync function checkDatabaseQueries(): Promise<{\n  read: boolean\n  write: boolean\n  latency: number\n}> {\n  const startTime = Date.now()\n  \n  try {\n    // \u6D4B\u8BD5\u8BFB\u64CD\u4F5C\n    let readSuccess = false\n    try {\n      await prisma.$queryRaw`SELECT 1 as test`\n      readSuccess = true\n    } catch (error) {\n      console.error('Database read test failed:', error)\n    }\n    \n    // \u6D4B\u8BD5\u5199\u64CD\u4F5C\uFF08\u5982\u679C\u6709\u6D4B\u8BD5\u8868\u7684\u8BDD\uFF09\n    let writeSuccess = false\n    try {\n      // \u5C1D\u8BD5\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u8BB0\u5F55\u6765\u6D4B\u8BD5\u5199\u64CD\u4F5C\n      // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6570\u636E\u5E93schema\u6765\u8C03\u6574\n      // \u6682\u65F6\u5047\u8BBE\u5199\u64CD\u4F5C\u6210\u529F\n      writeSuccess = true\n    } catch (error) {\n      console.error('Database write test failed:', error)\n    }\n    \n    const latency = Date.now() - startTime\n    \n    return {\n      read: readSuccess,\n      write: writeSuccess,\n      latency\n    }\n  } catch (error) {\n    return {\n      read: false,\n      write: false,\n      latency: Date.now() - startTime\n    }\n  }\n}\n\n/**\n * \u68C0\u67E5\u6570\u636E\u5E93\u8FC1\u79FB\u72B6\u6001\n */\nasync function checkMigrationStatus(): Promise<{\n  pending: number\n  applied: number\n}> {\n  try {\n    // \u8FD9\u91CC\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u8FC1\u79FB\u7BA1\u7406\u65B9\u5F0F\u6765\u5B9E\u73B0\n    // Prisma\u7684\u8FC1\u79FB\u72B6\u6001\u68C0\u67E5\n    \n    // \u6682\u65F6\u8FD4\u56DE\u9ED8\u8BA4\u503C\n    return {\n      pending: 0,\n      applied: 0\n    }\n  } catch (error) {\n    console.error('Migration status check failed:', error)\n    return {\n      pending: 0,\n      applied: 0\n    }\n  }\n}\n\n/**\n * \u5173\u95ED\u6570\u636E\u5E93\u8FDE\u63A5\n * @returns {Promise<void>}\n */\nexport async function closeDatabaseConnection(): Promise<void> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.disconnect()\n      console.log('Enhanced database connection closed successfully')\n      return\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u65B9\u5F0F\n    const client = getPrismaClient()\n    await client.$disconnect()\n    console.log('Database connection closed successfully')\n  } catch (error) {\n    console.error('Error closing database connection:', error)\n    throw error\n  }\n}\n\n/**\n * \u91CD\u65B0\u8FDE\u63A5\u6570\u636E\u5E93\n * @returns {Promise<DatabaseStatus>}\n */\nexport async function reconnectDatabase(): Promise<DatabaseStatus> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\n    if (enhancedDb.getState() !== ConnectionState.DISCONNECTED) {\n      await enhancedDb.reconnect()\n      return await checkDatabaseConnection()\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u91CD\u8FDE\u65B9\u5F0F\n    await closeDatabaseConnection()\n    \n    // \u7B49\u5F85\u4E00\u5C0F\u6BB5\u65F6\u95F4\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    \n    // \u91CD\u65B0\u68C0\u67E5\u8FDE\u63A5\n    return await checkDatabaseConnection()\n  } catch (error) {\n    console.error('Database reconnection failed:', error)\n    throw error\n  }\n}\n\n/**\n * \u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u72B6\u6001\n * @returns {Promise<any>} \u8FDE\u63A5\u6C60\u72B6\u6001\u4FE1\u606F\n */\nexport async function getDatabasePoolStatus(): Promise<any> {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u7EDF\u8BA1\u4FE1\u606F\n    if (enhancedDb.isConnected()) {\n      const stats = enhancedDb.getStats()\n      const status = await checkDatabaseConnection()\n      \n      return {\n        connected: status.connected,\n        timestamp: status.timestamp,\n        version: status.version,\n        enhanced: true,\n        connectionState: stats.state,\n        uptime: Math.round(stats.uptime / 1000),\n        performance: {\n          totalQueries: stats.totalQueries,\n          failedQueries: stats.failedQueries,\n          successRate: stats.totalQueries > 0 \n            ? ((stats.totalQueries - stats.failedQueries) / stats.totalQueries * 100).toFixed(2) + '%'\n            : '100%',\n          avgLatency: Math.round(stats.avgLatency),\n          reconnectAttempts: stats.reconnectAttempts\n        },\n        pool: {\n          maxConnections: parseInt(process.env.DB_POOL_MAX || '50'),\n          minConnections: parseInt(process.env.DB_POOL_MIN || '10'),\n          active: status.connected ? 1 : 0,\n          acquireTimeout: parseInt(process.env.DB_POOL_ACQUIRE || '60000'),\n          idleTimeout: parseInt(process.env.DB_POOL_IDLE || '20000')\n        }\n      }\n    }\n    \n    // \u56DE\u9000\u5230\u4F20\u7EDF\u72B6\u6001\u68C0\u67E5\n    const status = await checkDatabaseConnection()\n    \n    return {\n      connected: status.connected,\n      timestamp: status.timestamp,\n      version: status.version,\n      latency: status.latency,\n      enhanced: false,\n      // \u6A21\u62DF\u8FDE\u63A5\u6C60\u4FE1\u606F\uFF08\u5B9E\u9645\u9700\u8981\u6839\u636E\u5177\u4F53\u6570\u636E\u5E93\u9A71\u52A8\u83B7\u53D6\uFF09\n      pool: {\n        total: parseInt(process.env.DB_POOL_MAX || '10'),\n        active: status.connected ? 1 : 0,\n        idle: status.connected ? parseInt(process.env.DB_POOL_MAX || '10') - 1 : 0,\n        waiting: 0\n      }\n    }\n  } catch (error) {\n    console.error('Failed to get database pool status:', error)\n    throw error\n  }\n}\n\n// \u8FDB\u7A0B\u9000\u51FA\u65F6\u6E05\u7406\u8FDE\u63A5\nprocess.on('beforeExit', async () => {\n  try {\n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.gracefulShutdown()\n    } else {\n      await closeDatabaseConnection()\n    }\n  } catch (error) {\n    console.error('Error during database cleanup:', error)\n  }\n})\n\nprocess.on('SIGINT', async () => {\n  try {\n    console.log('Received SIGINT, initiating graceful shutdown...')\n    \n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.gracefulShutdown()\n    } else {\n      await closeDatabaseConnection()\n      process.exit(0)\n    }\n  } catch (error) {\n    console.error('Error during graceful shutdown:', error)\n    process.exit(1)\n  }\n})\n\nprocess.on('SIGTERM', async () => {\n  try {\n    console.log('Received SIGTERM, initiating graceful shutdown...')\n    \n    // \u4F18\u5148\u4F7F\u7528\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u7684\u4F18\u96C5\u5173\u95ED\n    if (enhancedDb.isConnected()) {\n      await enhancedDb.gracefulShutdown()\n    } else {\n      await closeDatabaseConnection()\n      process.exit(0)\n    }\n  } catch (error) {\n    console.error('Error during graceful shutdown:', error)\n    process.exit(1)\n  }\n})\n\n// \u5BFC\u51FA\u589E\u5F3A\u8FDE\u63A5\u7BA1\u7406\u5668\u5B9E\u4F8B\u548C\u76F8\u5173\u529F\u80FD\nexport { \n  enhancedDb, \n  EnhancedDatabaseConnection, \n  ConnectionState,\n  connectDatabase,\n  disconnectDatabase,\n  getDatabaseStats,\n  isDatabaseConnected,\n  executeQuery\n} from './enhanced-connection'\n\n// \u521D\u59CB\u5316\u589E\u5F3A\u6570\u636E\u5E93\u8FDE\u63A5\uFF08\u5982\u679C\u73AF\u5883\u53D8\u91CF\u542F\u7528\uFF09\nif (process.env.ENHANCED_DB_CONNECTION === 'true') {\n  enhancedDb.connect().catch(error => {\n    console.error('Failed to initialize enhanced database connection:', error)\n  })\n}\n\n// \u9ED8\u8BA4\u5BFC\u51FAPrisma\u5BA2\u6237\u7AEF\nexport default prisma\n\n// \u5BFC\u51FA\u7C7B\u578B\nexport type { DatabaseStatus, DatabaseHealthCheck }\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3034bceab3782768244d7ffa4a2d2628fb3e6a49"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18prcktstb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18prcktstb();
cov_18prcktstb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18prcktstb().s[1]++;
exports.executeQuery = exports.isDatabaseConnected = exports.getDatabaseStats = exports.disconnectDatabase = exports.connectDatabase = exports.ConnectionState = exports.EnhancedDatabaseConnection = exports.enhancedDb = exports.prisma = void 0;
/* istanbul ignore next */
cov_18prcktstb().s[2]++;
exports.getPrismaClient = getPrismaClient;
/* istanbul ignore next */
cov_18prcktstb().s[3]++;
exports.checkDatabaseConnection = checkDatabaseConnection;
/* istanbul ignore next */
cov_18prcktstb().s[4]++;
exports.performDatabaseHealthCheck = performDatabaseHealthCheck;
/* istanbul ignore next */
cov_18prcktstb().s[5]++;
exports.closeDatabaseConnection = closeDatabaseConnection;
/* istanbul ignore next */
cov_18prcktstb().s[6]++;
exports.reconnectDatabase = reconnectDatabase;
/* istanbul ignore next */
cov_18prcktstb().s[7]++;
exports.getDatabasePoolStatus = getDatabasePoolStatus;
const client_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[8]++, require("@prisma/client"));
const enhanced_connection_1 =
/* istanbul ignore next */
(cov_18prcktstb().s[9]++, require("./enhanced-connection"));
// 全局 Prisma 客户端实例
let prisma =
/* istanbul ignore next */
(cov_18prcktstb().s[10]++, null);
/**
 * 获取 Prisma 客户端实例
 * @returns {PrismaClient} Prisma 客户端实例
 */
function getPrismaClient() {
  /* istanbul ignore next */
  cov_18prcktstb().f[0]++;
  // 优先使用增强连接管理器的客户端
  const enhancedClient =
  /* istanbul ignore next */
  (cov_18prcktstb().s[11]++, enhanced_connection_1.enhancedDb.getClient());
  /* istanbul ignore next */
  cov_18prcktstb().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_18prcktstb().b[1][0]++, enhancedClient) &&
  /* istanbul ignore next */
  (cov_18prcktstb().b[1][1]++, enhanced_connection_1.enhancedDb.isConnected())) {
    /* istanbul ignore next */
    cov_18prcktstb().b[0][0]++;
    cov_18prcktstb().s[13]++;
    return enhancedClient;
  } else
  /* istanbul ignore next */
  {
    cov_18prcktstb().b[0][1]++;
  }
  // 回退到传统连接方式
  cov_18prcktstb().s[14]++;
  if (!prisma) {
    /* istanbul ignore next */
    cov_18prcktstb().b[2][0]++;
    cov_18prcktstb().s[15]++;
    prisma = new client_1.PrismaClient({
      log: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[3][0]++, ['query', 'error', 'warn']) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[3][1]++, ['error']),
      errorFormat: 'pretty'
    });
  } else
  /* istanbul ignore next */
  {
    cov_18prcktstb().b[2][1]++;
  }
  cov_18prcktstb().s[16]++;
  return prisma;
}
// 获取Prisma客户端实例
/* istanbul ignore next */
cov_18prcktstb().s[17]++;
exports.prisma = getPrismaClient();
/**
 * 检查数据库连接状态
 * @returns {Promise<DatabaseStatus>} 数据库连接状态
 */
async function checkDatabaseConnection() {
  /* istanbul ignore next */
  cov_18prcktstb().f[1]++;
  cov_18prcktstb().s[18]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[19]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[4][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_18prcktstb().s[20]++, enhanced_connection_1.enhancedDb.getStats());
      // 执行健康检查查询
      const result =
      /* istanbul ignore next */
      (cov_18prcktstb().s[21]++, await enhanced_connection_1.enhancedDb.executeQuery(async client => {
        /* istanbul ignore next */
        cov_18prcktstb().f[2]++;
        const versionResult =
        /* istanbul ignore next */
        (cov_18prcktstb().s[22]++, await client.$queryRaw`SELECT version()`);
        /* istanbul ignore next */
        cov_18prcktstb().s[23]++;
        return /* istanbul ignore next */(cov_18prcktstb().b[5][0]++, versionResult[0]?.version) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[5][1]++, 'Unknown');
      }));
      /* istanbul ignore next */
      cov_18prcktstb().s[24]++;
      return {
        connected: true,
        message: `Enhanced database connection active (uptime: ${Math.round(stats.uptime / 1000)}s)`,
        version: result,
        timestamp: new Date(),
        stats: {
          totalQueries: stats.totalQueries,
          failedQueries: stats.failedQueries,
          avgLatency: Math.round(stats.avgLatency),
          reconnectAttempts: stats.reconnectAttempts
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[4][1]++;
    }
    // 回退到传统连接检查
    const client =
    /* istanbul ignore next */
    (cov_18prcktstb().s[25]++, getPrismaClient());
    /* istanbul ignore next */
    cov_18prcktstb().s[26]++;
    await client.$connect();
    // 执行简单查询测试连接
    /* istanbul ignore next */
    cov_18prcktstb().s[27]++;
    await client.$queryRaw`SELECT 1`;
    // 获取数据库版本信息
    const result =
    /* istanbul ignore next */
    (cov_18prcktstb().s[28]++, await client.$queryRaw`SELECT version()`);
    const version =
    /* istanbul ignore next */
    (cov_18prcktstb().s[29]++,
    /* istanbul ignore next */
    (cov_18prcktstb().b[6][0]++, result[0]?.version) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[6][1]++, 'Unknown'));
    /* istanbul ignore next */
    cov_18prcktstb().s[30]++;
    return {
      connected: true,
      message: 'Database connection successful (fallback mode)',
      version,
      timestamp: new Date()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[31]++;
    console.error('Database connection failed:', error);
    // 如果增强连接管理器未连接，尝试连接
    /* istanbul ignore next */
    cov_18prcktstb().s[32]++;
    if (!enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[7][0]++;
      cov_18prcktstb().s[33]++;
      try {
        /* istanbul ignore next */
        cov_18prcktstb().s[34]++;
        await enhanced_connection_1.enhancedDb.connect();
        /* istanbul ignore next */
        cov_18prcktstb().s[35]++;
        return await checkDatabaseConnection(); // 递归重试
      } catch (connectError) {
        /* istanbul ignore next */
        cov_18prcktstb().s[36]++;
        console.error('Enhanced connection failed:', connectError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[7][1]++;
    }
    cov_18prcktstb().s[37]++;
    return {
      connected: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_18prcktstb().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18prcktstb().b[8][1]++, 'Unknown database error'),
      timestamp: new Date()
    };
  }
}
/**
 * 执行完整的数据库健康检查
 */
async function performDatabaseHealthCheck() {
  /* istanbul ignore next */
  cov_18prcktstb().f[3]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_18prcktstb().s[38]++, new Date());
  /* istanbul ignore next */
  cov_18prcktstb().s[39]++;
  try {
    // 检查基本连接
    const connectionStatus =
    /* istanbul ignore next */
    (cov_18prcktstb().s[40]++, await checkDatabaseConnection());
    // 检查读写操作
    const queryChecks =
    /* istanbul ignore next */
    (cov_18prcktstb().s[41]++, await checkDatabaseQueries());
    // 检查迁移状态
    const migrationChecks =
    /* istanbul ignore next */
    (cov_18prcktstb().s[42]++, await checkMigrationStatus());
    // 确定整体健康状态
    let status =
    /* istanbul ignore next */
    (cov_18prcktstb().s[43]++, 'healthy');
    /* istanbul ignore next */
    cov_18prcktstb().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_18prcktstb().b[10][0]++, !connectionStatus.connected) ||
    /* istanbul ignore next */
    (cov_18prcktstb().b[10][1]++, !queryChecks.read)) {
      /* istanbul ignore next */
      cov_18prcktstb().b[9][0]++;
      cov_18prcktstb().s[45]++;
      status = 'unhealthy';
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[9][1]++;
      cov_18prcktstb().s[46]++;
      if (
      /* istanbul ignore next */
      (cov_18prcktstb().b[12][0]++, !queryChecks.write) ||
      /* istanbul ignore next */
      (cov_18prcktstb().b[12][1]++, migrationChecks.pending > 0)) {
        /* istanbul ignore next */
        cov_18prcktstb().b[11][0]++;
        cov_18prcktstb().s[47]++;
        status = 'degraded';
      } else
      /* istanbul ignore next */
      {
        cov_18prcktstb().b[11][1]++;
      }
    }
    /* istanbul ignore next */
    cov_18prcktstb().s[48]++;
    return {
      status,
      checks: {
        connection: connectionStatus,
        queries: queryChecks,
        migrations: migrationChecks
      },
      timestamp
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[49]++;
    console.error('Database health check failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[50]++;
    return {
      status: 'unhealthy',
      checks: {
        connection: {
          connected: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[13][0]++, error.message) :
          /* istanbul ignore next */
          (cov_18prcktstb().b[13][1]++, 'Health check failed'),
          timestamp
        },
        queries: {
          read: false,
          write: false,
          latency: 0
        },
        migrations: {
          pending: 0,
          applied: 0
        }
      },
      timestamp
    };
  }
}
/**
 * 检查数据库查询操作
 */
async function checkDatabaseQueries() {
  /* istanbul ignore next */
  cov_18prcktstb().f[4]++;
  const startTime =
  /* istanbul ignore next */
  (cov_18prcktstb().s[51]++, Date.now());
  /* istanbul ignore next */
  cov_18prcktstb().s[52]++;
  try {
    // 测试读操作
    let readSuccess =
    /* istanbul ignore next */
    (cov_18prcktstb().s[53]++, false);
    /* istanbul ignore next */
    cov_18prcktstb().s[54]++;
    try {
      /* istanbul ignore next */
      cov_18prcktstb().s[55]++;
      await prisma.$queryRaw`SELECT 1 as test`;
      /* istanbul ignore next */
      cov_18prcktstb().s[56]++;
      readSuccess = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18prcktstb().s[57]++;
      console.error('Database read test failed:', error);
    }
    // 测试写操作（如果有测试表的话）
    let writeSuccess =
    /* istanbul ignore next */
    (cov_18prcktstb().s[58]++, false);
    /* istanbul ignore next */
    cov_18prcktstb().s[59]++;
    try {
      /* istanbul ignore next */
      cov_18prcktstb().s[60]++;
      // 尝试创建一个临时记录来测试写操作
      // 这里需要根据实际的数据库schema来调整
      // 暂时假设写操作成功
      writeSuccess = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18prcktstb().s[61]++;
      console.error('Database write test failed:', error);
    }
    const latency =
    /* istanbul ignore next */
    (cov_18prcktstb().s[62]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_18prcktstb().s[63]++;
    return {
      read: readSuccess,
      write: writeSuccess,
      latency
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[64]++;
    return {
      read: false,
      write: false,
      latency: Date.now() - startTime
    };
  }
}
/**
 * 检查数据库迁移状态
 */
async function checkMigrationStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[5]++;
  cov_18prcktstb().s[65]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[66]++;
    // 这里需要根据实际的迁移管理方式来实现
    // Prisma的迁移状态检查
    // 暂时返回默认值
    return {
      pending: 0,
      applied: 0
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[67]++;
    console.error('Migration status check failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[68]++;
    return {
      pending: 0,
      applied: 0
    };
  }
}
/**
 * 关闭数据库连接
 * @returns {Promise<void>}
 */
async function closeDatabaseConnection() {
  /* istanbul ignore next */
  cov_18prcktstb().f[6]++;
  cov_18prcktstb().s[69]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[70]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[14][0]++;
      cov_18prcktstb().s[71]++;
      await enhanced_connection_1.enhancedDb.disconnect();
      /* istanbul ignore next */
      cov_18prcktstb().s[72]++;
      console.log('Enhanced database connection closed successfully');
      /* istanbul ignore next */
      cov_18prcktstb().s[73]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[14][1]++;
    }
    // 回退到传统方式
    const client =
    /* istanbul ignore next */
    (cov_18prcktstb().s[74]++, getPrismaClient());
    /* istanbul ignore next */
    cov_18prcktstb().s[75]++;
    await client.$disconnect();
    /* istanbul ignore next */
    cov_18prcktstb().s[76]++;
    console.log('Database connection closed successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[77]++;
    console.error('Error closing database connection:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[78]++;
    throw error;
  }
}
/**
 * 重新连接数据库
 * @returns {Promise<DatabaseStatus>}
 */
async function reconnectDatabase() {
  /* istanbul ignore next */
  cov_18prcktstb().f[7]++;
  cov_18prcktstb().s[79]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[80]++;
    // 优先使用增强连接管理器
    if (enhanced_connection_1.enhancedDb.getState() !== enhanced_connection_1.ConnectionState.DISCONNECTED) {
      /* istanbul ignore next */
      cov_18prcktstb().b[15][0]++;
      cov_18prcktstb().s[81]++;
      await enhanced_connection_1.enhancedDb.reconnect();
      /* istanbul ignore next */
      cov_18prcktstb().s[82]++;
      return await checkDatabaseConnection();
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[15][1]++;
    }
    // 回退到传统重连方式
    cov_18prcktstb().s[83]++;
    await closeDatabaseConnection();
    // 等待一小段时间
    /* istanbul ignore next */
    cov_18prcktstb().s[84]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_18prcktstb().f[8]++;
      cov_18prcktstb().s[85]++;
      return setTimeout(resolve, 1000);
    });
    // 重新检查连接
    /* istanbul ignore next */
    cov_18prcktstb().s[86]++;
    return await checkDatabaseConnection();
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[87]++;
    console.error('Database reconnection failed:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[88]++;
    throw error;
  }
}
/**
 * 获取数据库连接池状态
 * @returns {Promise<any>} 连接池状态信息
 */
async function getDatabasePoolStatus() {
  /* istanbul ignore next */
  cov_18prcktstb().f[9]++;
  cov_18prcktstb().s[89]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[90]++;
    // 优先使用增强连接管理器的统计信息
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[16][0]++;
      const stats =
      /* istanbul ignore next */
      (cov_18prcktstb().s[91]++, enhanced_connection_1.enhancedDb.getStats());
      const status =
      /* istanbul ignore next */
      (cov_18prcktstb().s[92]++, await checkDatabaseConnection());
      /* istanbul ignore next */
      cov_18prcktstb().s[93]++;
      return {
        connected: status.connected,
        timestamp: status.timestamp,
        version: status.version,
        enhanced: true,
        connectionState: stats.state,
        uptime: Math.round(stats.uptime / 1000),
        performance: {
          totalQueries: stats.totalQueries,
          failedQueries: stats.failedQueries,
          successRate: stats.totalQueries > 0 ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[17][0]++, ((stats.totalQueries - stats.failedQueries) / stats.totalQueries * 100).toFixed(2) + '%') :
          /* istanbul ignore next */
          (cov_18prcktstb().b[17][1]++, '100%'),
          avgLatency: Math.round(stats.avgLatency),
          reconnectAttempts: stats.reconnectAttempts
        },
        pool: {
          maxConnections: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[18][0]++, process.env.DB_POOL_MAX) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[18][1]++, '50')),
          minConnections: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[19][0]++, process.env.DB_POOL_MIN) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[19][1]++, '10')),
          active: status.connected ?
          /* istanbul ignore next */
          (cov_18prcktstb().b[20][0]++, 1) :
          /* istanbul ignore next */
          (cov_18prcktstb().b[20][1]++, 0),
          acquireTimeout: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[21][0]++, process.env.DB_POOL_ACQUIRE) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[21][1]++, '60000')),
          idleTimeout: parseInt(
          /* istanbul ignore next */
          (cov_18prcktstb().b[22][0]++, process.env.DB_POOL_IDLE) ||
          /* istanbul ignore next */
          (cov_18prcktstb().b[22][1]++, '20000'))
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_18prcktstb().b[16][1]++;
    }
    // 回退到传统状态检查
    const status =
    /* istanbul ignore next */
    (cov_18prcktstb().s[94]++, await checkDatabaseConnection());
    /* istanbul ignore next */
    cov_18prcktstb().s[95]++;
    return {
      connected: status.connected,
      timestamp: status.timestamp,
      version: status.version,
      latency: status.latency,
      enhanced: false,
      // 模拟连接池信息（实际需要根据具体数据库驱动获取）
      pool: {
        total: parseInt(
        /* istanbul ignore next */
        (cov_18prcktstb().b[23][0]++, process.env.DB_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[23][1]++, '10')),
        active: status.connected ?
        /* istanbul ignore next */
        (cov_18prcktstb().b[24][0]++, 1) :
        /* istanbul ignore next */
        (cov_18prcktstb().b[24][1]++, 0),
        idle: status.connected ?
        /* istanbul ignore next */
        (cov_18prcktstb().b[25][0]++, parseInt(
        /* istanbul ignore next */
        (cov_18prcktstb().b[26][0]++, process.env.DB_POOL_MAX) ||
        /* istanbul ignore next */
        (cov_18prcktstb().b[26][1]++, '10')) - 1) :
        /* istanbul ignore next */
        (cov_18prcktstb().b[25][1]++, 0),
        waiting: 0
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[96]++;
    console.error('Failed to get database pool status:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[97]++;
    throw error;
  }
}
// 进程退出时清理连接
/* istanbul ignore next */
cov_18prcktstb().s[98]++;
process.on('beforeExit', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[10]++;
  cov_18prcktstb().s[99]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[100]++;
    // 优先使用增强连接管理器的优雅关闭
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[27][0]++;
      cov_18prcktstb().s[101]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[27][1]++;
      cov_18prcktstb().s[102]++;
      await closeDatabaseConnection();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[103]++;
    console.error('Error during database cleanup:', error);
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[104]++;
process.on('SIGINT', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[11]++;
  cov_18prcktstb().s[105]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[106]++;
    console.log('Received SIGINT, initiating graceful shutdown...');
    // 优先使用增强连接管理器的优雅关闭
    /* istanbul ignore next */
    cov_18prcktstb().s[107]++;
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[28][0]++;
      cov_18prcktstb().s[108]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[28][1]++;
      cov_18prcktstb().s[109]++;
      await closeDatabaseConnection();
      /* istanbul ignore next */
      cov_18prcktstb().s[110]++;
      process.exit(0);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[111]++;
    console.error('Error during graceful shutdown:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[112]++;
    process.exit(1);
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[113]++;
process.on('SIGTERM', async () => {
  /* istanbul ignore next */
  cov_18prcktstb().f[12]++;
  cov_18prcktstb().s[114]++;
  try {
    /* istanbul ignore next */
    cov_18prcktstb().s[115]++;
    console.log('Received SIGTERM, initiating graceful shutdown...');
    // 优先使用增强连接管理器的优雅关闭
    /* istanbul ignore next */
    cov_18prcktstb().s[116]++;
    if (enhanced_connection_1.enhancedDb.isConnected()) {
      /* istanbul ignore next */
      cov_18prcktstb().b[29][0]++;
      cov_18prcktstb().s[117]++;
      await enhanced_connection_1.enhancedDb.gracefulShutdown();
    } else {
      /* istanbul ignore next */
      cov_18prcktstb().b[29][1]++;
      cov_18prcktstb().s[118]++;
      await closeDatabaseConnection();
      /* istanbul ignore next */
      cov_18prcktstb().s[119]++;
      process.exit(0);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_18prcktstb().s[120]++;
    console.error('Error during graceful shutdown:', error);
    /* istanbul ignore next */
    cov_18prcktstb().s[121]++;
    process.exit(1);
  }
});
// 导出增强连接管理器实例和相关功能
var enhanced_connection_2 =
/* istanbul ignore next */
(cov_18prcktstb().s[122]++, require("./enhanced-connection"));
/* istanbul ignore next */
cov_18prcktstb().s[123]++;
Object.defineProperty(exports, "enhancedDb", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[13]++;
    cov_18prcktstb().s[124]++;
    return enhanced_connection_2.enhancedDb;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[125]++;
Object.defineProperty(exports, "EnhancedDatabaseConnection", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[14]++;
    cov_18prcktstb().s[126]++;
    return enhanced_connection_2.EnhancedDatabaseConnection;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[127]++;
Object.defineProperty(exports, "ConnectionState", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[15]++;
    cov_18prcktstb().s[128]++;
    return enhanced_connection_2.ConnectionState;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[129]++;
Object.defineProperty(exports, "connectDatabase", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[16]++;
    cov_18prcktstb().s[130]++;
    return enhanced_connection_2.connectDatabase;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[131]++;
Object.defineProperty(exports, "disconnectDatabase", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[17]++;
    cov_18prcktstb().s[132]++;
    return enhanced_connection_2.disconnectDatabase;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[133]++;
Object.defineProperty(exports, "getDatabaseStats", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[18]++;
    cov_18prcktstb().s[134]++;
    return enhanced_connection_2.getDatabaseStats;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[135]++;
Object.defineProperty(exports, "isDatabaseConnected", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[19]++;
    cov_18prcktstb().s[136]++;
    return enhanced_connection_2.isDatabaseConnected;
  }
});
/* istanbul ignore next */
cov_18prcktstb().s[137]++;
Object.defineProperty(exports, "executeQuery", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18prcktstb().f[20]++;
    cov_18prcktstb().s[138]++;
    return enhanced_connection_2.executeQuery;
  }
});
// 初始化增强数据库连接（如果环境变量启用）
/* istanbul ignore next */
cov_18prcktstb().s[139]++;
if (process.env.ENHANCED_DB_CONNECTION === 'true') {
  /* istanbul ignore next */
  cov_18prcktstb().b[30][0]++;
  cov_18prcktstb().s[140]++;
  enhanced_connection_1.enhancedDb.connect().catch(error => {
    /* istanbul ignore next */
    cov_18prcktstb().f[21]++;
    cov_18prcktstb().s[141]++;
    console.error('Failed to initialize enhanced database connection:', error);
  });
} else
/* istanbul ignore next */
{
  cov_18prcktstb().b[30][1]++;
}
// 默认导出Prisma客户端
cov_18prcktstb().s[142]++;
exports.default = prisma;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,