{"version":3,"names":["cov_298htppx0n","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","performanceMiddleware","events_1","require","PerformanceMonitor","EventEmitter","constructor","alertConfig","metrics","isMonitoring","monitoringInterval","maxMetricsHistory","responseTimeThreshold","errorRateThreshold","memoryUsageThreshold","cpuUsageThreshold","startMonitoring","intervalMs","console","warn","log","setInterval","collectSystemMetrics","checkAlerts","cleanupOldMetrics","emit","stopMonitoring","clearInterval","recordRequest","endpoint","method","statusCode","responseTime","metric","timestamp","Date","memoryUsage","process","cpuUsage","activeConnections","getActiveConnections","errorCount","push","message","getStats","timeRangeMs","cutoffTime","now","recentMetrics","filter","m","length","averageResponseTime","p95ResponseTime","p99ResponseTime","requestsPerSecond","errorRate","memoryUsagePercent","cpuUsagePercent","responseTimes","map","sort","a","timeRangeSeconds","reduce","Math","floor","getMemoryUsagePercent","getCpuUsagePercent","getRecentMetrics","count","slice","exportMetrics","format","headers","csvData","toISOString","heapUsed","user","system","row","join","JSON","stringify","stats","toFixed","removeCount","splice","usage","totalMemory","totalmem","rss","totalUsage","min","performanceMonitor","req","res","next","startTime","on","url"],"sources":["E:\\zk-agent\\lib\\monitoring\\performance-monitor.ts"],"sourcesContent":["/**\n * @file Performance Monitor\n * @description 性能监控和指标收集系统\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport { EventEmitter } from 'events'\n\n// 性能指标接口\nexport interface PerformanceMetrics {\n  timestamp: Date\n  endpoint: string\n  method: string\n  statusCode: number\n  responseTime: number\n  memoryUsage: NodeJS.MemoryUsage\n  cpuUsage: NodeJS.CpuUsage\n  activeConnections: number\n  errorCount: number\n}\n\n// 性能统计接口\nexport interface PerformanceStats {\n  averageResponseTime: number\n  p95ResponseTime: number\n  p99ResponseTime: number\n  requestsPerSecond: number\n  errorRate: number\n  memoryUsagePercent: number\n  cpuUsagePercent: number\n}\n\n// 告警配置接口\nexport interface AlertConfig {\n  responseTimeThreshold: number // 响应时间阈值（毫秒）\n  errorRateThreshold: number // 错误率阈值（百分比）\n  memoryUsageThreshold: number // 内存使用率阈值（百分比）\n  cpuUsageThreshold: number // CPU使用率阈值（百分比）\n}\n\n// 性能监控器类\nexport class PerformanceMonitor extends EventEmitter {\n  private metrics: PerformanceMetrics[] = []\n  private alertConfig: AlertConfig\n  private isMonitoring: boolean = false\n  private monitoringInterval: NodeJS.Timeout | null = null\n  private maxMetricsHistory: number = 10000\n\n  constructor(alertConfig?: Partial<AlertConfig>) {\n    super()\n    this.alertConfig = {\n      responseTimeThreshold: 5000, // 5秒\n      errorRateThreshold: 5, // 5%\n      memoryUsageThreshold: 80, // 80%\n      cpuUsageThreshold: 80, // 80%\n      ...alertConfig\n    }\n  }\n\n  /**\n   * 开始性能监控\n   */\n  startMonitoring(intervalMs: number = 60000): void {\n    if (this.isMonitoring) {\n      console.warn('Performance monitoring is already running')\n      return\n    }\n\n    this.isMonitoring = true\n    console.log('Starting performance monitoring...')\n\n    this.monitoringInterval = setInterval(() => {\n      this.collectSystemMetrics()\n      this.checkAlerts()\n      this.cleanupOldMetrics()\n    }, intervalMs)\n\n    this.emit('monitoringStarted')\n  }\n\n  /**\n   * 停止性能监控\n   */\n  stopMonitoring(): void {\n    if (!this.isMonitoring) {\n      return\n    }\n\n    this.isMonitoring = false\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval)\n      this.monitoringInterval = null\n    }\n\n    console.log('Performance monitoring stopped')\n    this.emit('monitoringStopped')\n  }\n\n  /**\n   * 记录请求指标\n   */\n  recordRequest(\n    endpoint: string,\n    method: string,\n    statusCode: number,\n    responseTime: number\n  ): void {\n    const metric: PerformanceMetrics = {\n      timestamp: new Date(),\n      endpoint,\n      method,\n      statusCode,\n      responseTime,\n      memoryUsage: process.memoryUsage(),\n      cpuUsage: process.cpuUsage(),\n      activeConnections: this.getActiveConnections(),\n      errorCount: statusCode >= 400 ? 1 : 0\n    }\n\n    this.metrics.push(metric)\n    this.emit('metricRecorded', metric)\n\n    // 检查是否需要告警\n    if (responseTime > this.alertConfig.responseTimeThreshold) {\n      this.emit('alert', {\n        type: 'HIGH_RESPONSE_TIME',\n        message: `High response time detected: ${responseTime}ms for ${method} ${endpoint}`,\n        metric\n      })\n    }\n\n    if (statusCode >= 500) {\n      this.emit('alert', {\n        type: 'SERVER_ERROR',\n        message: `Server error detected: ${statusCode} for ${method} ${endpoint}`,\n        metric\n      })\n    }\n  }\n\n  /**\n   * 获取性能统计\n   */\n  getStats(timeRangeMs: number = 3600000): PerformanceStats {\n    const cutoffTime = new Date(Date.now() - timeRangeMs)\n    const recentMetrics = this.metrics.filter(m => m.timestamp >= cutoffTime)\n\n    if (recentMetrics.length === 0) {\n      return {\n        averageResponseTime: 0,\n        p95ResponseTime: 0,\n        p99ResponseTime: 0,\n        requestsPerSecond: 0,\n        errorRate: 0,\n        memoryUsagePercent: 0,\n        cpuUsagePercent: 0\n      }\n    }\n\n    const responseTimes = recentMetrics.map(m => m.responseTime).sort((a, b) => a - b)\n    const errorCount = recentMetrics.filter(m => m.errorCount > 0).length\n    const timeRangeSeconds = timeRangeMs / 1000\n\n    return {\n      averageResponseTime: responseTimes.reduce((a, b) => a + b, 0) / responseTimes.length,\n      p95ResponseTime: responseTimes[Math.floor(responseTimes.length * 0.95)] || 0,\n      p99ResponseTime: responseTimes[Math.floor(responseTimes.length * 0.99)] || 0,\n      requestsPerSecond: recentMetrics.length / timeRangeSeconds,\n      errorRate: (errorCount / recentMetrics.length) * 100,\n      memoryUsagePercent: this.getMemoryUsagePercent(),\n      cpuUsagePercent: this.getCpuUsagePercent()\n    }\n  }\n\n  /**\n   * 获取最近的指标\n   */\n  getRecentMetrics(count: number = 100): PerformanceMetrics[] {\n    return this.metrics.slice(-count)\n  }\n\n  /**\n   * 导出指标数据\n   */\n  exportMetrics(format: 'json' | 'csv' = 'json'): string {\n    if (format === 'csv') {\n      const headers = [\n        'timestamp',\n        'endpoint',\n        'method',\n        'statusCode',\n        'responseTime',\n        'memoryUsed',\n        'cpuUsed',\n        'activeConnections',\n        'errorCount'\n      ]\n      \n      const csvData = this.metrics.map(m => [\n        m.timestamp.toISOString(),\n        m.endpoint,\n        m.method,\n        m.statusCode,\n        m.responseTime,\n        m.memoryUsage.heapUsed,\n        m.cpuUsage.user + m.cpuUsage.system,\n        m.activeConnections,\n        m.errorCount\n      ])\n\n      return [headers, ...csvData].map(row => row.join(',')).join('\\n')\n    }\n\n    return JSON.stringify(this.metrics, null, 2)\n  }\n\n  /**\n   * 收集系统指标\n   */\n  private collectSystemMetrics(): void {\n    const memoryUsage = process.memoryUsage()\n    const cpuUsage = process.cpuUsage()\n\n    this.emit('systemMetrics', {\n      timestamp: new Date(),\n      memoryUsage,\n      cpuUsage,\n      activeConnections: this.getActiveConnections()\n    })\n  }\n\n  /**\n   * 检查告警条件\n   */\n  private checkAlerts(): void {\n    const stats = this.getStats(300000) // 最近5分钟\n\n    if (stats.errorRate > this.alertConfig.errorRateThreshold) {\n      this.emit('alert', {\n        type: 'HIGH_ERROR_RATE',\n        message: `High error rate detected: ${stats.errorRate.toFixed(2)}%`,\n        stats\n      })\n    }\n\n    if (stats.memoryUsagePercent > this.alertConfig.memoryUsageThreshold) {\n      this.emit('alert', {\n        type: 'HIGH_MEMORY_USAGE',\n        message: `High memory usage detected: ${stats.memoryUsagePercent.toFixed(2)}%`,\n        stats\n      })\n    }\n\n    if (stats.cpuUsagePercent > this.alertConfig.cpuUsageThreshold) {\n      this.emit('alert', {\n        type: 'HIGH_CPU_USAGE',\n        message: `High CPU usage detected: ${stats.cpuUsagePercent.toFixed(2)}%`,\n        stats\n      })\n    }\n  }\n\n  /**\n   * 清理旧指标\n   */\n  private cleanupOldMetrics(): void {\n    if (this.metrics.length > this.maxMetricsHistory) {\n      const removeCount = this.metrics.length - this.maxMetricsHistory\n      this.metrics.splice(0, removeCount)\n    }\n  }\n\n  /**\n   * 获取活跃连接数\n   */\n  private getActiveConnections(): number {\n    // 这里可以集成实际的连接监控逻辑\n    return 0\n  }\n\n  /**\n   * 获取内存使用率\n   */\n  private getMemoryUsagePercent(): number {\n    const usage = process.memoryUsage()\n    const totalMemory = require('os').totalmem()\n    return (usage.rss / totalMemory) * 100\n  }\n\n  /**\n   * 获取CPU使用率\n   */\n  private getCpuUsagePercent(): number {\n    const usage = process.cpuUsage()\n    const totalUsage = usage.user + usage.system\n    // 简化的CPU使用率计算\n    return Math.min((totalUsage / 1000000) * 100, 100)\n  }\n}\n\n// 全局性能监控实例\nexport const performanceMonitor = new PerformanceMonitor()\n\n// 中间件函数\nexport function performanceMiddleware() {\n  return (req: any, res: any, next: any) => {\n    const startTime = Date.now()\n    \n    res.on('finish', () => {\n      const responseTime = Date.now() - startTime\n      performanceMonitor.recordRequest(\n        req.url || req.path,\n        req.method,\n        res.statusCode,\n        responseTime\n      )\n    })\n    \n    next()\n  }\n}"],"mappings":"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","ignoreList":[]}