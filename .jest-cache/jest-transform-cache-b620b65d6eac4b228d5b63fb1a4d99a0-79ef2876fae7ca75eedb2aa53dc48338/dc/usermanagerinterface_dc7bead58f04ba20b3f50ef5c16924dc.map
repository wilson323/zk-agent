{"version":3,"names":["cov_2la0sm790q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","zod_1","require","exports","createUserSchema","z","object","email","string","name","optional","avatar","role","enum","updateUserSchema","status"],"sources":["E:\\zk-agent\\lib\\interfaces\\user-manager.interface.ts"],"sourcesContent":["/**\n * @file 用户服务接口定义\n * @description 定义用户服务的标准接口，确保类型安全和一致性\n * @author ZK-Agent Team\n * @date 2025-06-29\n */\n\nimport { z } from 'zod';\n\n// Zod a validation schema for creating a user\nexport const createUserSchema = z.object({\n  email: z.string().email(),\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n  role: z.enum(['USER', 'ADMIN']).optional(),\n});\n\n// Zod a validation schema for updating a user\nexport const updateUserSchema = z.object({\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n  role: z.enum(['USER', 'ADMIN']).optional(),\n  status: z.enum(['ACTIVE', 'INACTIVE', 'DELETED']).optional(),\n});\n\nexport interface IUserService {\n  getUsers(options: { where: object; skip: number; limit: number }): Promise<{\n    users: any[];\n    pagination: { total: number; page: number; limit: number };\n  }>;\n  createUser(data: z.infer<typeof createUserSchema>): Promise<any>;\n  getUserById(id: string): Promise<any>;\n  updateUser(id: string, data: z.infer<typeof updateUserSchema>): Promise<any>;\n  deleteUser(id: string): Promise<void>;\n}\n"],"mappings":"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","ignoreList":[]}