{"version":3,"names":["cov_bo9m2mhhn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","image_generation_service_1","template_system_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","body","json","description","trim","length","ApiResponseWrapper","error","status","startTime","Date","now","finalPrompt","templateId","template","templateSystem","getAllTemplates","find","t","id","generationResult","imageGenerationService","generateImage","prompt","style","size","quality","steps","guidance","success","generationTime","result","imageUrl","thumbnailUrl","metadata","palette","aiModel","model","seed","createdAt","fetch","method","headers","JSON","stringify","userId","get","resultImageUrl","console","data"],"sources":["E:\\zk-agent\\app\\api\\poster\\generate\\route.ts"],"sourcesContent":["/**\n * @file poster\\generate\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { imageGenerationService } from \"@/lib/ai/image-generation-service\"\nimport { templateSystem } from \"@/lib/poster/template-system\"\nimport type { PosterGenerationRequest, PosterGenerationResult } from \"@/types/poster\"\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const body: PosterGenerationRequest = await req.json();\n      \n      // 前端校验\n      if (!body.description || body.description.trim().length === 0) {\n        return ApiResponseWrapper.error(\n          \"创意描述不能为空\",\n          { status: 400 }\n        );\n      }\n  \n      if (body.description.length > 2000) {\n        return ApiResponseWrapper.error(\n          \"创意描述过长，请控制在2000字符以内\",\n          { status: 400 }\n        );\n      }\n  \n      const startTime = Date.now();\n  \n      // 如果指定了模板，应用模板\n      let finalPrompt = body.description;\n      if (body.templateId) {\n        const template = templateSystem.getAllTemplates().find((t) => t.id === body.templateId);\n        if (template) {\n          // 结合模板和用户描述\n          finalPrompt = `${body.description}, in the style of ${template.name}, ${template.description}`;\n        }\n      }\n  \n      // 调用AI图像生成服务\n      const generationResult = await imageGenerationService.generateImage({\n        prompt: finalPrompt,\n        style: body.style,\n        size: body.size,\n        quality: 0.9,\n        steps: 30,\n        guidance: 7.5,\n      });\n  \n      if (!generationResult.success) {\n        return ApiResponseWrapper.error(\n          generationResult.error || \"AI生成失败\",\n          { status: 500 }\n        );\n      }\n  \n      const generationTime = Date.now() - startTime;\n  \n      // 构建结果\n      const result: PosterGenerationResult = {\n        id: `poster_${Date.now()}`,\n        imageUrl: generationResult.imageUrl!,\n        thumbnailUrl: generationResult.thumbnailUrl,\n        metadata: {\n          generationTime,\n          style: body.style || \"modern\",\n          size: body.size || \"square\",\n          palette: body.palette || \"brand\",\n          aiModel: generationResult.metadata?.model || \"stable-diffusion-xl\",\n          prompt: finalPrompt,\n          seed: generationResult.metadata?.seed || 0,\n          steps: generationResult.metadata?.steps || 30,\n          guidance: generationResult.metadata?.guidance || 7.5,\n        },\n        createdAt: new Date(),\n      };\n  \n      // 保存到数据库（如果需要）\n      try {\n        await fetch(\"/api/poster/history\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userId: req.headers.get(\"user-id\") || \"anonymous\",\n            description: body.description,\n            style: body.style,\n            size: body.size,\n            palette: body.palette,\n            templateId: body.templateId,\n            resultImageUrl: result.imageUrl,\n            metadata: result.metadata,\n          }),\n        });\n      } catch (error) {\n        // 历史记录保存失败不影响主流程\n        console.error(\"Failed to save poster history:\", error);\n      }\n  \n      return ApiResponseWrapper.success({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Internal server error\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAkBM;IAAAD,aAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,aAAA;AAAAA,aAAA,GAAAoB,CAAA;;;;;;;AAVN,MAAAa,mBAAA;AAAA;AAAA,CAAAjC,aAAA,GAAAoB,CAAA,OAAAc,OAAA;AACA,MAAAC,YAAA;AAAA;AAAA,CAAAnC,aAAA,GAAAoB,CAAA,OAAAc,OAAA;AACA,MAAAE,0BAAA;AAAA;AAAA,CAAApC,aAAA,GAAAoB,CAAA,OAAAc,OAAA;AACA,MAAAG,iBAAA;AAAA;AAAA,CAAArC,aAAA,GAAAoB,CAAA,OAAAc,OAAA;AAA6D;AAAAlC,aAAA,GAAAoB,CAAA;AAGhDkB,OAAA,CAAAC,IAAI,GAAG,IAAAN,mBAAA,CAAAO,cAAc,EAChCP,mBAAA,CAAAQ,YAAY,CAACC,aAAa,EAAE,EAC5B,OAAOC,GAAgB,EAAE;EAAEC,MAAM;EAAEC,aAAa;EAAEC,cAAc;EAAEC,IAAI;EAAEC;AAAS,CAAE,KAAI;EAAA;EAAAhD,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EACrF,IAAI;IACF,MAAM6B,IAAI;IAAA;IAAA,CAAAjD,aAAA,GAAAoB,CAAA,OAA4B,MAAMuB,GAAG,CAACO,IAAI,EAAE;IAEtD;IAAA;IAAAlD,aAAA,GAAAoB,CAAA;IACA;IAAI;IAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAC2B,IAAI,CAACE,WAAW;IAAA;IAAA,CAAAnD,aAAA,GAAAsB,CAAA,UAAI2B,IAAI,CAACE,WAAW,CAACC,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,GAAE;MAAA;MAAArD,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC7D,OAAOe,YAAA,CAAAmB,kBAAkB,CAACC,KAAK,CAC7B,UAAU,EACV;QAAEC,MAAM,EAAE;MAAG,CAAE,CAChB;IACH,CAAC;IAAA;IAAA;MAAAxD,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAED,IAAI6B,IAAI,CAACE,WAAW,CAACE,MAAM,GAAG,IAAI,EAAE;MAAA;MAAArD,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAClC,OAAOe,YAAA,CAAAmB,kBAAkB,CAACC,KAAK,CAC7B,qBAAqB,EACrB;QAAEC,MAAM,EAAE;MAAG,CAAE,CAChB;IACH,CAAC;IAAA;IAAA;MAAAxD,aAAA,GAAAsB,CAAA;IAAA;IAED,MAAMmC,SAAS;IAAA;IAAA,CAAAzD,aAAA,GAAAoB,CAAA,QAAGsC,IAAI,CAACC,GAAG,EAAE;IAE5B;IACA,IAAIC,WAAW;IAAA;IAAA,CAAA5D,aAAA,GAAAoB,CAAA,QAAG6B,IAAI,CAACE,WAAW;IAAC;IAAAnD,aAAA,GAAAoB,CAAA;IACnC,IAAI6B,IAAI,CAACY,UAAU,EAAE;MAAA;MAAA7D,aAAA,GAAAsB,CAAA;MACnB,MAAMwC,QAAQ;MAAA;MAAA,CAAA9D,aAAA,GAAAoB,CAAA,QAAGiB,iBAAA,CAAA0B,cAAc,CAACC,eAAe,EAAE,CAACC,IAAI,CAAEC,CAAC,IAAK;QAAA;QAAAlE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAA8C,CAAC,CAACC,EAAE,KAAKlB,IAAI,CAACY,UAAU;MAAV,CAAU,CAAC;MAAC;MAAA7D,aAAA,GAAAoB,CAAA;MACxF,IAAI0C,QAAQ,EAAE;QAAA;QAAA9D,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACZ;QACAwC,WAAW,GAAG,GAAGX,IAAI,CAACE,WAAW,qBAAqBW,QAAQ,CAACjD,IAAI,KAAKiD,QAAQ,CAACX,WAAW,EAAE;MAChG,CAAC;MAAA;MAAA;QAAAnD,aAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,aAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAM8C,gBAAgB;IAAA;IAAA,CAAApE,aAAA,GAAAoB,CAAA,QAAG,MAAMgB,0BAAA,CAAAiC,sBAAsB,CAACC,aAAa,CAAC;MAClEC,MAAM,EAAEX,WAAW;MACnBY,KAAK,EAAEvB,IAAI,CAACuB,KAAK;MACjBC,IAAI,EAAExB,IAAI,CAACwB,IAAI;MACfC,OAAO,EAAE,GAAG;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX,CAAC;IAAC;IAAA5E,aAAA,GAAAoB,CAAA;IAEH,IAAI,CAACgD,gBAAgB,CAACS,OAAO,EAAE;MAAA;MAAA7E,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC7B,OAAOe,YAAA,CAAAmB,kBAAkB,CAACC,KAAK;MAC7B;MAAA,CAAAvD,aAAA,GAAAsB,CAAA,UAAA8C,gBAAgB,CAACb,KAAK;MAAA;MAAA,CAAAvD,aAAA,GAAAsB,CAAA,UAAI,QAAQ,GAClC;QAAEkC,MAAM,EAAE;MAAG,CAAE,CAChB;IACH,CAAC;IAAA;IAAA;MAAAxD,aAAA,GAAAsB,CAAA;IAAA;IAED,MAAMwD,cAAc;IAAA;IAAA,CAAA9E,aAAA,GAAAoB,CAAA,QAAGsC,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS;IAE7C;IACA,MAAMsB,MAAM;IAAA;IAAA,CAAA/E,aAAA,GAAAoB,CAAA,QAA2B;MACrC+C,EAAE,EAAE,UAAUT,IAAI,CAACC,GAAG,EAAE,EAAE;MAC1BqB,QAAQ,EAAEZ,gBAAgB,CAACY,QAAS;MACpCC,YAAY,EAAEb,gBAAgB,CAACa,YAAY;MAC3CC,QAAQ,EAAE;QACRJ,cAAc;QACdN,KAAK;QAAE;QAAA,CAAAxE,aAAA,GAAAsB,CAAA,UAAA2B,IAAI,CAACuB,KAAK;QAAA;QAAA,CAAAxE,aAAA,GAAAsB,CAAA,UAAI,QAAQ;QAC7BmD,IAAI;QAAE;QAAA,CAAAzE,aAAA,GAAAsB,CAAA,UAAA2B,IAAI,CAACwB,IAAI;QAAA;QAAA,CAAAzE,aAAA,GAAAsB,CAAA,UAAI,QAAQ;QAC3B6D,OAAO;QAAE;QAAA,CAAAnF,aAAA,GAAAsB,CAAA,UAAA2B,IAAI,CAACkC,OAAO;QAAA;QAAA,CAAAnF,aAAA,GAAAsB,CAAA,UAAI,OAAO;QAChC8D,OAAO;QAAE;QAAA,CAAApF,aAAA,GAAAsB,CAAA,WAAA8C,gBAAgB,CAACc,QAAQ,EAAEG,KAAK;QAAA;QAAA,CAAArF,aAAA,GAAAsB,CAAA,WAAI,qBAAqB;QAClEiD,MAAM,EAAEX,WAAW;QACnB0B,IAAI;QAAE;QAAA,CAAAtF,aAAA,GAAAsB,CAAA,WAAA8C,gBAAgB,CAACc,QAAQ,EAAEI,IAAI;QAAA;QAAA,CAAAtF,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC1CqD,KAAK;QAAE;QAAA,CAAA3E,aAAA,GAAAsB,CAAA,WAAA8C,gBAAgB,CAACc,QAAQ,EAAEP,KAAK;QAAA;QAAA,CAAA3E,aAAA,GAAAsB,CAAA,WAAI,EAAE;QAC7CsD,QAAQ;QAAE;QAAA,CAAA5E,aAAA,GAAAsB,CAAA,WAAA8C,gBAAgB,CAACc,QAAQ,EAAEN,QAAQ;QAAA;QAAA,CAAA5E,aAAA,GAAAsB,CAAA,WAAI,GAAG;OACrD;MACDiE,SAAS,EAAE,IAAI7B,IAAI;KACpB;IAED;IAAA;IAAA1D,aAAA,GAAAoB,CAAA;IACA,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF,MAAMoE,KAAK,CAAC,qBAAqB,EAAE;QACjCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;SACjB;QACDzC,IAAI,EAAE0C,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM;UAAE;UAAA,CAAA7F,aAAA,GAAAsB,CAAA,WAAAqB,GAAG,CAAC+C,OAAO,CAACI,GAAG,CAAC,SAAS,CAAC;UAAA;UAAA,CAAA9F,aAAA,GAAAsB,CAAA,WAAI,WAAW;UACjD6B,WAAW,EAAEF,IAAI,CAACE,WAAW;UAC7BqB,KAAK,EAAEvB,IAAI,CAACuB,KAAK;UACjBC,IAAI,EAAExB,IAAI,CAACwB,IAAI;UACfU,OAAO,EAAElC,IAAI,CAACkC,OAAO;UACrBtB,UAAU,EAAEZ,IAAI,CAACY,UAAU;UAC3BkC,cAAc,EAAEhB,MAAM,CAACC,QAAQ;UAC/BE,QAAQ,EAAEH,MAAM,CAACG;SAClB;OACF,CAAC;IACJ,CAAC,CAAC,OAAO3B,KAAK,EAAE;MAAA;MAAAvD,aAAA,GAAAoB,CAAA;MACd;MACA4E,OAAO,CAACzC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;IAAC;IAAAvD,aAAA,GAAAoB,CAAA;IAED,OAAOe,YAAA,CAAAmB,kBAAkB,CAACuB,OAAO,CAAC;MAChCA,OAAO,EAAE,IAAI;MACboB,IAAI,EAAElB;KACP,CAAC;EACJ,CAAC,CAAC,OAAOxB,KAAK,EAAE;IAAA;IAAAvD,aAAA,GAAAoB,CAAA;IACd,OAAOe,YAAA,CAAAmB,kBAAkB,CAACC,KAAK,CAC7B,uBAAuB,EACvB;MAAEC,MAAM,EAAE;IAAG,CAAE,CAChB;EACH;AACF,CAAC,CACF","ignoreList":[]}