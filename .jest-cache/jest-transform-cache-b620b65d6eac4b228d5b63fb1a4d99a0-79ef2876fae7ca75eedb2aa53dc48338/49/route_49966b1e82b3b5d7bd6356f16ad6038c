e443bdf6967c34915ea5ca07a908d97a
"use strict";

/**
 * @file metrics\record\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2lbdklyl7y() {
  var path = "E:\\zk-agent\\app\\api\\metrics\\record\\route.ts";
  var hash = "e6ea360c77846b31fdb38aa9577cbe874e463bbc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\metrics\\record\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "8": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 11
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 57
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 86
        }
      }
    },
    fnMap: {
      "0": {
        name: "recordMetrics",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 28
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "recordToRedis",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 105
          },
          end: {
            line: 21,
            column: 106
          }
        },
        loc: {
          start: {
            line: 21,
            column: 180
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\metrics\\record\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAE5D,mCAAmC;AACnC,KAAK,UAAU,aAAa,CAAC,QAAa;IACxC,+DAA+D;IAC/D,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAC;AAED,KAAK,UAAU,aAAa,CAAC,QAAa;IACxC,0DAA0D;IAC1D,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAC;AAEY,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,cAAc,CAAC;QAE/B,6BAA6B;QAC7B,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;QAE7B,kDAAkD;QAClD,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC;QAE7B,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,+BAA+B;YACxC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,+BAAkB,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;IACnE,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\metrics\\record\\route.ts"],
      sourcesContent: ["/**\n * @file metrics\\record\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\n// Mock functions for demonstration\nasync function recordMetrics(_metrics: any) {\n  // In a real application, this would save metrics to a database\n  return Promise.resolve(true);\n}\n\nasync function recordToRedis(_metrics: any) {\n  // In a real application, this would save metrics to Redis\n  return Promise.resolve(true);\n}\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const metrics = _validatedBody;\n      \n      // Record metrics to database\n      await recordMetrics(metrics);\n      \n      // Record metrics to Redis for real-time analytics\n      await recordToRedis(metrics);\n      \n      return ApiResponseWrapper.success({\n        message: 'Metrics recorded successfully',\n        timestamp: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Error recording metrics:', error);\n      return ApiResponseWrapper.error('Failed to record metrics', 500);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e6ea360c77846b31fdb38aa9577cbe874e463bbc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lbdklyl7y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lbdklyl7y();
cov_2lbdklyl7y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lbdklyl7y().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2lbdklyl7y().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2lbdklyl7y().s[3]++, require("@/lib/utils/api-helper"));
// Mock functions for demonstration
async function recordMetrics(_metrics) {
  /* istanbul ignore next */
  cov_2lbdklyl7y().f[0]++;
  cov_2lbdklyl7y().s[4]++;
  // In a real application, this would save metrics to a database
  return Promise.resolve(true);
}
async function recordToRedis(_metrics) {
  /* istanbul ignore next */
  cov_2lbdklyl7y().f[1]++;
  cov_2lbdklyl7y().s[5]++;
  // In a real application, this would save metrics to Redis
  return Promise.resolve(true);
}
/* istanbul ignore next */
cov_2lbdklyl7y().s[6]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2lbdklyl7y().f[2]++;
  cov_2lbdklyl7y().s[7]++;
  try {
    const metrics =
    /* istanbul ignore next */
    (cov_2lbdklyl7y().s[8]++, _validatedBody);
    // Record metrics to database
    /* istanbul ignore next */
    cov_2lbdklyl7y().s[9]++;
    await recordMetrics(metrics);
    // Record metrics to Redis for real-time analytics
    /* istanbul ignore next */
    cov_2lbdklyl7y().s[10]++;
    await recordToRedis(metrics);
    /* istanbul ignore next */
    cov_2lbdklyl7y().s[11]++;
    return api_helper_1.ApiResponseWrapper.success({
      message: 'Metrics recorded successfully',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2lbdklyl7y().s[12]++;
    console.error('Error recording metrics:', error);
    /* istanbul ignore next */
    cov_2lbdklyl7y().s[13]++;
    return api_helper_1.ApiResponseWrapper.error('Failed to record metrics', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,