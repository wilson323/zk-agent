{"version":3,"names":["cov_tmia3mzuo","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","path_1","uuid_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","params","validatedBody","validatedQuery","user","requestId","formData","get","ApiResponseWrapper","error","status","fileType","split","pop","toLowerCase","allowedTypes","includes","maxSize","size","uniqueId","v4","fileName","uploadDir","join","process","cwd","bytes","arrayBuffer","buffer","Buffer","from","success","uploadedAt","Date","toISOString","id","console"],"sources":["E:\\zk-agent\\app\\api\\cad\\upload\\route.ts"],"sourcesContent":["/**\n * @file cad\\upload\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { join } from \"path\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const formData = await req.formData()\n      const file = formData.get(\"file\") as File\n  \n      if (!file) {\n        return ApiResponseWrapper.error(\"未找到文件\", { status: 400 })\n      }\n  \n      // 检查文件类型\n      const fileType = file.name.split(\".\").pop()?.toLowerCase()\n      const allowedTypes = [\"dxf\", \"dwg\", \"step\", \"stp\", \"iges\", \"igs\"]\n  \n      if (!fileType || !allowedTypes.includes(fileType)) {\n        return ApiResponseWrapper.error(\"不支持的文件类型\", { status: 400 })\n      }\n  \n      // 检查文件大小（最大50MB）\n      const maxSize = 50 * 1024 * 1024\n      if (file.size > maxSize) {\n        return ApiResponseWrapper.error(\"文件过大，最大允许50MB\", { status: 400 })\n      }\n  \n      // 生成唯一文件名\n      const uniqueId = uuidv4()\n      const fileName = `${uniqueId}-${file.name}`\n  \n      // 创建上传目录（如果不存在）\n      const uploadDir = join(process.cwd(), \"uploads\")\n  \n      try {\n        // 将文件保存到服务器（在实际生产环境中，您可能会使用云存储服务）\n        const bytes = await file.arrayBuffer()\n        const buffer = Buffer.from(bytes)\n  \n        // 注意：在Vercel等无状态环境中，这种本地文件存储方式不适用\n        // 实际应用中应使用S3、Azure Blob Storage等云存储服务\n        // 这里仅作为示例\n        // await writeFile(join(uploadDir, fileName), buffer)\n  \n        // 模拟CAD文件解析\n        // 在实际应用中，您需要使用专门的CAD解析库\n  \n        // 返回解析结果\n        return ApiResponseWrapper.success({\n          success: true,\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          uploadedAt: new Date().toISOString(),\n          id: uniqueId,\n          // 这里可以添加更多解析结果\n        })\n      } catch (error) {\n        console.error('文件上传失败:', error)\n        return ApiResponseWrapper.error(\n          \"文件上传失败\",\n          { status: 500 }\n        )\n      }\n    } catch (error) {\n      console.error('处理请求失败:', error)\n      return ApiResponseWrapper.error(\n        \"处理请求失败\",\n        { status: 500 }\n      )\n    }\n  }\n)\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}