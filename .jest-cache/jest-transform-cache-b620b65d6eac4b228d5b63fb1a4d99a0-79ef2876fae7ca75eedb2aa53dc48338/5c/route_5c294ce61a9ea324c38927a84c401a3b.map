{"version":3,"names":["cov_89a6vcbpp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","db_1","exports","GET","createApiRoute","RouteConfigs","publicGet","_req","params","validatedBody","validatedQuery","user","requestId","totalLikes","db","like","count","today","Date","setHours","todayLikes","where","createdAt","gte","popularItems","groupBy","by","_count","id","orderBy","take","formattedPopularItems","map","item","itemId","itemType","likeCount","ApiResponseWrapper","success","error","console"],"sources":["E:\\zk-agent\\app\\api\\likes\\stats\\route.ts"],"sourcesContent":["/**\n * @file likes\\stats\\route.ts\n * @description Likes statistics API route\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { db } from '@/lib/db';\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (_req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      // 获取总点赞数\n      const totalLikes = await db?.like.count() || 0;\n      \n      // 获取今日点赞数\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      const todayLikes = await db?.like.count({\n        where: {\n          createdAt: {\n            gte: today,\n          },\n        },\n      }) || 0;\n      \n      // 获取热门项目\n      const popularItems = await db?.like.groupBy({\n        by: [\"itemId\", \"itemType\"],\n        _count: {\n          id: true,\n        },\n        orderBy: {\n          _count: {\n            id: \"desc\",\n          },\n        },\n        take: 10,\n      }) || [];\n      \n      const formattedPopularItems = popularItems.map((item) => ({\n        itemId: item.itemId,\n        itemType: item.itemType,\n        likeCount: item._count.id,\n      }));\n      \n      return ApiResponseWrapper.success({\n        totalLikes,\n        todayLikes,\n        popularItems: formattedPopularItems,\n      });\n    } catch (error) {\n      console.error('Likes stats error:', error);\n      return ApiResponseWrapper.error(\n        'Internal server error',\n        500\n      );\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}