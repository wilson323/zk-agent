02d8e48cd167340770d7284bd943e185
"use strict";

/**
 * @file health\local\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2ekdm6igac() {
  var path = "E:\\zk-agent\\app\\api\\health\\local\\route.ts";
  var hash = "f7ef6ab357935d44b6359aa14364221f445b5365";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\health\\local\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 69
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "7": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 67
        }
      },
      "8": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 37
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 73
        }
      },
      "10": {
        start: {
          line: 29,
          column: 51
        },
        end: {
          line: 29,
          column: 72
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "12": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "13": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "14": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "16": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "17": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "18": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 51,
          column: 14
        }
      },
      "19": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "21": {
        start: {
          line: 62,
          column: 31
        },
        end: {
          line: 62,
          column: 41
        }
      },
      "22": {
        start: {
          line: 63,
          column: 32
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "23": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "24": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "25": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "26": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 79,
          column: 52
        }
      },
      "27": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "28": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 14
        }
      },
      "29": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "30": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 57
        }
      },
      "31": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "32": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 103,
          column: 14
        }
      },
      "33": {
        start: {
          line: 106,
          column: 27
        },
        end: {
          line: 106,
          column: 93
        }
      },
      "34": {
        start: {
          line: 106,
          column: 66
        },
        end: {
          line: 106,
          column: 92
        }
      },
      "35": {
        start: {
          line: 107,
          column: 27
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "36": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 67
        }
      },
      "37": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "checkDatabaseConnection",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 38
          }
        },
        loc: {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "checkRedisConnection",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 35
          }
        },
        loc: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "checkFilesystemAccess",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 30
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "checkEnvironmentVariables",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 29,
            column: 41
          }
        },
        loc: {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 72
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 88
          },
          end: {
            line: 35,
            column: 89
          }
        },
        loc: {
          start: {
            line: 35,
            column: 100
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 106,
            column: 56
          }
        },
        loc: {
          start: {
            line: 106,
            column: 66
          },
          end: {
            line: 106,
            column: 92
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 38
          },
          end: {
            line: 32,
            column: 92
          }
        }, {
          start: {
            line: 32,
            column: 95
          },
          end: {
            line: 32,
            column: 139
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 48,
            column: 52
          }
        }, {
          start: {
            line: 48,
            column: 55
          },
          end: {
            line: 48,
            column: 66
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 46
          },
          end: {
            line: 65,
            column: 55
          }
        }, {
          start: {
            line: 65,
            column: 58
          },
          end: {
            line: 65,
            column: 69
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 43
          },
          end: {
            line: 81,
            column: 52
          }
        }, {
          start: {
            line: 81,
            column: 55
          },
          end: {
            line: 81,
            column: 66
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 24
          },
          end: {
            line: 95,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 44
          },
          end: {
            line: 95,
            column: 53
          }
        }, {
          start: {
            line: 95,
            column: 56
          },
          end: {
            line: 95,
            column: 67
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 33
          },
          end: {
            line: 108,
            column: 42
          }
        }, {
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 108,
            column: 56
          }
        }],
        line: 108
      },
      "6": {
        loc: {
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 112,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 112,
            column: 52
          }
        }, {
          start: {
            line: 112,
            column: 56
          },
          end: {
            line: 112,
            column: 65
          }
        }],
        line: 112
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\health\\local\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,0DAA4D;AAC5D,uDAA4D;AAC5D,kEAA8D;AAE9D,8BAA8B;AAC9B,KAAK,UAAU,uBAAuB;IACpC,0BAA0B;IAC1B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;AACnE,CAAC;AAED,KAAK,UAAU,oBAAoB;IACjC,uBAAuB;IACvB,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;AAChE,CAAC;AAED,SAAS,qBAAqB;IAC5B,4BAA4B;IAC5B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC;AACjE,CAAC;AAED,SAAS,yBAAyB;IAChC,uCAAuC;IACvC,MAAM,YAAY,GAAG,CAAC,UAAU,CAAC,CAAC;IAClC,MAAM,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACtE,OAAO;QACL,OAAO,EAAE,OAAO,CAAC,MAAM,KAAK,CAAC;QAC7B,OAAO,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,kCAAkC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,4CAA4C;KACpI,CAAC;AACJ,CAAC;AAEY,QAAA,GAAG,GAAG,IAAA,0BAAc,EAC/B,4BAAY,CAAC,SAAS,EAAE,EACxB,KAAK,IAAI,EAAE;IACT,IAAI,CAAC;QACH,MAAM,MAAM,GAAG;YACb,QAAQ,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;YACxD,KAAK,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;YACrD,UAAU,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE;YAC9C,WAAW,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE;SAChD,CAAA;QAED,UAAU;QACV,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YAC1B,MAAM,QAAQ,GAAG,MAAM,uBAAuB,EAAE,CAAA;YAChD,MAAM,CAAC,QAAQ,GAAG;gBAChB,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;gBAClD,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO;aAC9B,CAAA;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,QAAQ,GAAG;gBAChB,MAAM,EAAE,WAAW;gBACnB,OAAO,EAAE,4BAA4B;gBACrC,OAAO,EAAE,CAAC;aACX,CAAA;QACH,CAAC;QAED,YAAY;QACZ,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YAC7B,MAAM,WAAW,GAAG,MAAM,oBAAoB,EAAE,CAAA;YAChD,MAAM,CAAC,KAAK,GAAG;gBACb,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;gBACrD,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,UAAU;aACjC,CAAA;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,GAAG;gBACb,MAAM,EAAE,WAAW;gBACnB,OAAO,EAAE,yBAAyB;gBAClC,OAAO,EAAE,CAAC;aACX,CAAA;QACH,CAAC;QAED,WAAW;QACX,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,qBAAqB,EAAE,CAAA;YACxC,MAAM,CAAC,UAAU,GAAG;gBAClB,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;gBAClD,OAAO,EAAE,QAAQ,CAAC,OAAO;aAC1B,CAAA;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,UAAU,GAAG;gBAClB,MAAM,EAAE,WAAW;gBACnB,OAAO,EAAE,0BAA0B;aACpC,CAAA;QACH,CAAC;QAED,SAAS;QACT,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,yBAAyB,EAAE,CAAA;YAC7C,MAAM,CAAC,WAAW,GAAG;gBACnB,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;gBACnD,OAAO,EAAE,SAAS,CAAC,OAAO;aAC3B,CAAA;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,WAAW,GAAG;gBACnB,MAAM,EAAE,WAAW;gBACnB,OAAO,EAAE,0BAA0B;aACpC,CAAA;QACH,CAAC;QAED,WAAW;QACX,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAC5C,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CACtC,CAAA;QAED,MAAM,UAAU,GAAG;YACjB,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW;YAC5C,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,MAAM;YACN,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;YACxB,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,SAAS;SACtD,CAAA;QAED,OAAO,+BAAkB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;IAC/C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA;IAC/D,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\health\\local\\route.ts"],
      sourcesContent: ["/**\n * @file health\\local\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\n// Mock health check functions\nasync function checkDatabaseConnection() {\n  // Simulate database check\n  return { success: true, message: \"Database connection healthy\" };\n}\n\nasync function checkRedisConnection() {\n  // Simulate Redis check\n  return { success: true, message: \"Redis connection healthy\" };\n}\n\nfunction checkFilesystemAccess() {\n  // Simulate filesystem check\n  return { success: true, message: \"Filesystem access healthy\" };\n}\n\nfunction checkEnvironmentVariables() {\n  // Simulate environment variables check\n  const requiredVars = ['NODE_ENV'];\n  const missing = requiredVars.filter(varName => !process.env[varName]);\n  return {\n    success: missing.length === 0,\n    message: missing.length > 0 ? `Missing environment variables: ${missing.join(', ')}` : \"All required environment variables present\"\n  };\n}\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async () => {\n    try {\n      const checks = {\n        database: { status: \"unknown\", message: \"\", latency: 0 },\n        redis: { status: \"unknown\", message: \"\", latency: 0 },\n        filesystem: { status: \"unknown\", message: \"\" },\n        environment: { status: \"unknown\", message: \"\" },\n      }\n    \n      // \u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5\n      try {\n        const dbStart = Date.now()\n        const dbResult = await checkDatabaseConnection()\n        checks.database = {\n          status: dbResult.success ? \"healthy\" : \"unhealthy\",\n          message: dbResult.message,\n          latency: Date.now() - dbStart,\n        }\n      } catch (error) {\n        checks.database = {\n          status: \"unhealthy\",\n          message: \"Database connection failed\",\n          latency: 0,\n        }\n      }\n    \n      // \u68C0\u67E5Redis\u8FDE\u63A5\n      try {\n        const redisStart = Date.now()\n        const redisResult = await checkRedisConnection()\n        checks.redis = {\n          status: redisResult.success ? \"healthy\" : \"unhealthy\",\n          message: redisResult.message,\n          latency: Date.now() - redisStart,\n        }\n      } catch (error) {\n        checks.redis = {\n          status: \"unhealthy\",\n          message: \"Redis connection failed\",\n          latency: 0,\n        }\n      }\n    \n      // \u68C0\u67E5\u6587\u4EF6\u7CFB\u7EDF\u8BBF\u95EE\n      try {\n        const fsResult = checkFilesystemAccess()\n        checks.filesystem = {\n          status: fsResult.success ? \"healthy\" : \"unhealthy\",\n          message: fsResult.message,\n        }\n      } catch (error) {\n        checks.filesystem = {\n          status: \"unhealthy\",\n          message: \"Filesystem access failed\",\n        }\n      }\n    \n      // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n      try {\n        const envResult = checkEnvironmentVariables()\n        checks.environment = {\n          status: envResult.success ? \"healthy\" : \"unhealthy\",\n          message: envResult.message,\n        }\n      } catch (error) {\n        checks.environment = {\n          status: \"unhealthy\",\n          message: \"Environment check failed\",\n        }\n      }\n    \n      // \u8BA1\u7B97\u603B\u4F53\u5065\u5EB7\u72B6\u6001\n      const allHealthy = Object.values(checks).every(\n        (check) => check.status === \"healthy\"\n      )\n    \n      const healthData = {\n        status: allHealthy ? \"healthy\" : \"unhealthy\",\n        timestamp: new Date().toISOString(),\n        checks,\n        uptime: process.uptime(),\n        version: process.env.npm_package_version || \"unknown\",\n      }\n    \n      return ApiResponseWrapper.success(healthData)\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500)\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f7ef6ab357935d44b6359aa14364221f445b5365"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ekdm6igac = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ekdm6igac();
cov_2ekdm6igac().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ekdm6igac().s[1]++;
exports.GET = void 0;
const api_route_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[2]++, require("@/lib/middleware/api-route"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[3]++, require("@/lib/utils/api-helper"));
const route_configs_1 =
/* istanbul ignore next */
(cov_2ekdm6igac().s[4]++, require("@/lib/middleware/route-configs"));
// Mock health check functions
async function checkDatabaseConnection() {
  /* istanbul ignore next */
  cov_2ekdm6igac().f[0]++;
  cov_2ekdm6igac().s[5]++;
  // Simulate database check
  return {
    success: true,
    message: "Database connection healthy"
  };
}
async function checkRedisConnection() {
  /* istanbul ignore next */
  cov_2ekdm6igac().f[1]++;
  cov_2ekdm6igac().s[6]++;
  // Simulate Redis check
  return {
    success: true,
    message: "Redis connection healthy"
  };
}
function checkFilesystemAccess() {
  /* istanbul ignore next */
  cov_2ekdm6igac().f[2]++;
  cov_2ekdm6igac().s[7]++;
  // Simulate filesystem check
  return {
    success: true,
    message: "Filesystem access healthy"
  };
}
function checkEnvironmentVariables() {
  /* istanbul ignore next */
  cov_2ekdm6igac().f[3]++;
  // Simulate environment variables check
  const requiredVars =
  /* istanbul ignore next */
  (cov_2ekdm6igac().s[8]++, ['NODE_ENV']);
  const missing =
  /* istanbul ignore next */
  (cov_2ekdm6igac().s[9]++, requiredVars.filter(varName => {
    /* istanbul ignore next */
    cov_2ekdm6igac().f[4]++;
    cov_2ekdm6igac().s[10]++;
    return !process.env[varName];
  }));
  /* istanbul ignore next */
  cov_2ekdm6igac().s[11]++;
  return {
    success: missing.length === 0,
    message: missing.length > 0 ?
    /* istanbul ignore next */
    (cov_2ekdm6igac().b[0][0]++, `Missing environment variables: ${missing.join(', ')}`) :
    /* istanbul ignore next */
    (cov_2ekdm6igac().b[0][1]++, "All required environment variables present")
  };
}
/* istanbul ignore next */
cov_2ekdm6igac().s[12]++;
exports.GET = (0, api_route_1.createApiRoute)(route_configs_1.RouteConfigs.publicGet(), async () => {
  /* istanbul ignore next */
  cov_2ekdm6igac().f[5]++;
  cov_2ekdm6igac().s[13]++;
  try {
    const checks =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[14]++, {
      database: {
        status: "unknown",
        message: "",
        latency: 0
      },
      redis: {
        status: "unknown",
        message: "",
        latency: 0
      },
      filesystem: {
        status: "unknown",
        message: ""
      },
      environment: {
        status: "unknown",
        message: ""
      }
    });
    // 检查数据库连接
    /* istanbul ignore next */
    cov_2ekdm6igac().s[15]++;
    try {
      const dbStart =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[16]++, Date.now());
      const dbResult =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[17]++, await checkDatabaseConnection());
      /* istanbul ignore next */
      cov_2ekdm6igac().s[18]++;
      checks.database = {
        status: dbResult.success ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[1][0]++, "healthy") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[1][1]++, "unhealthy"),
        message: dbResult.message,
        latency: Date.now() - dbStart
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[19]++;
      checks.database = {
        status: "unhealthy",
        message: "Database connection failed",
        latency: 0
      };
    }
    // 检查Redis连接
    /* istanbul ignore next */
    cov_2ekdm6igac().s[20]++;
    try {
      const redisStart =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[21]++, Date.now());
      const redisResult =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[22]++, await checkRedisConnection());
      /* istanbul ignore next */
      cov_2ekdm6igac().s[23]++;
      checks.redis = {
        status: redisResult.success ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[2][0]++, "healthy") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[2][1]++, "unhealthy"),
        message: redisResult.message,
        latency: Date.now() - redisStart
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[24]++;
      checks.redis = {
        status: "unhealthy",
        message: "Redis connection failed",
        latency: 0
      };
    }
    // 检查文件系统访问
    /* istanbul ignore next */
    cov_2ekdm6igac().s[25]++;
    try {
      const fsResult =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[26]++, checkFilesystemAccess());
      /* istanbul ignore next */
      cov_2ekdm6igac().s[27]++;
      checks.filesystem = {
        status: fsResult.success ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[3][0]++, "healthy") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[3][1]++, "unhealthy"),
        message: fsResult.message
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[28]++;
      checks.filesystem = {
        status: "unhealthy",
        message: "Filesystem access failed"
      };
    }
    // 检查环境变量
    /* istanbul ignore next */
    cov_2ekdm6igac().s[29]++;
    try {
      const envResult =
      /* istanbul ignore next */
      (cov_2ekdm6igac().s[30]++, checkEnvironmentVariables());
      /* istanbul ignore next */
      cov_2ekdm6igac().s[31]++;
      checks.environment = {
        status: envResult.success ?
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[4][0]++, "healthy") :
        /* istanbul ignore next */
        (cov_2ekdm6igac().b[4][1]++, "unhealthy"),
        message: envResult.message
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ekdm6igac().s[32]++;
      checks.environment = {
        status: "unhealthy",
        message: "Environment check failed"
      };
    }
    // 计算总体健康状态
    const allHealthy =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[33]++, Object.values(checks).every(check => {
      /* istanbul ignore next */
      cov_2ekdm6igac().f[6]++;
      cov_2ekdm6igac().s[34]++;
      return check.status === "healthy";
    }));
    const healthData =
    /* istanbul ignore next */
    (cov_2ekdm6igac().s[35]++, {
      status: allHealthy ?
      /* istanbul ignore next */
      (cov_2ekdm6igac().b[5][0]++, "healthy") :
      /* istanbul ignore next */
      (cov_2ekdm6igac().b[5][1]++, "unhealthy"),
      timestamp: new Date().toISOString(),
      checks,
      uptime: process.uptime(),
      version:
      /* istanbul ignore next */
      (cov_2ekdm6igac().b[6][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_2ekdm6igac().b[6][1]++, "unknown")
    });
    /* istanbul ignore next */
    cov_2ekdm6igac().s[36]++;
    return api_helper_1.ApiResponseWrapper.success(healthData);
  } catch (error) {
    /* istanbul ignore next */
    cov_2ekdm6igac().s[37]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,