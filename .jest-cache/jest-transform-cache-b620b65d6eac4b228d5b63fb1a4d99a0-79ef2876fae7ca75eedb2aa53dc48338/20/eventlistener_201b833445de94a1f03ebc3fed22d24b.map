{"version":3,"names":["cov_1c3lbv7rst","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","AgUIEventListener","react_1","require","events","onTextMessageContent","onTextMessageEnd","onToolCall","onStateChange","onSuggestedQuestions","onFeedbackResult","onLongImageGenerated","onBatchForwardResult","onError","lastProcessedIndexRef","useRef","useEffect","length","current","i","event","messageId","delta","toolCallId","find","e","toolCallName","snapshot","customEvent","value","imageUrl","Error","message","error"],"sources":["E:\\zk-agent\\components\\ag-ui\\event-listener.tsx"],"sourcesContent":["// @ts-nocheck\n\"use client\"\n\nimport { useEffect, useRef } from \"react\"\nimport type { BaseEvent } from \"@/lib/ag-ui/types\"\n\ninterface AgUIEventListenerProps {\n  events: BaseEvent[]\n  onTextMessageContent?: (_messageId: string, _content: string) => void\n  onTextMessageEnd?: (_messageId: string) => void\n  onToolCall?: (_toolCallId: string, _name: string, _args: string) => void\n  onStateChange?: (_state: Record<string, any>) => void\n  onSuggestedQuestions?: (_questions: string[]) => void\n  onFeedbackResult?: (_result: any) => void\n  onLongImageGenerated?: (_imageUrl: string) => void\n  onBatchForwardResult?: (_result: any) => void\n  onError?: (_error: Error) => void\n}\n\nexport function AgUIEventListener({\n  events,\n  onTextMessageContent,\n  onTextMessageEnd,\n  onToolCall,\n  onStateChange,\n  onSuggestedQuestions,\n  onFeedbackResult,\n  onLongImageGenerated,\n  onBatchForwardResult,\n  onError,\n}: AgUIEventListenerProps) {\n  // 使用ref跟踪上次处理的事件索引\n  const lastProcessedIndexRef = useRef(-1)\n\n  useEffect(() => {\n    // 只处理新事件\n    if (events.length <= lastProcessedIndexRef.current + 1) {return}\n\n    // 处理从上次处理位置之后的所有新事件\n    for (let i = lastProcessedIndexRef.current + 1; i < events.length; i++) {\n      const event = events[i]\n\n      try {\n        switch (event.type) {\n          case \"TEXT_MESSAGE_CONTENT\":\n            onTextMessageContent?.((event as any).messageId, (event as any).delta)\n            break\n\n          case \"TEXT_MESSAGE_END\":\n            onTextMessageEnd?.((event as any).messageId)\n            break\n\n          case \"TOOL_CALL_ARGS\":\n            onToolCall?.(\n              (event as any).toolCallId,\n              events.find((e) => e.type === \"TOOL_CALL_START\" && (e as any).toolCallId === (event as any).toolCallId)\n                ? (\n                    events.find(\n                      (e) => e.type === \"TOOL_CALL_START\" && (e as any).toolCallId === (event as any).toolCallId,\n                    ) as any\n                  ).toolCallName\n                : \"unknown\",\n              (event as any).delta,\n            )\n            break\n\n          case \"STATE_SNAPSHOT\":\n            onStateChange?.((event as any).snapshot)\n            break\n\n          case \"CUSTOM\":\n            const customEvent = event as any\n            if (customEvent.name === \"suggested_questions\") {\n              onSuggestedQuestions?.(customEvent.value)\n            } else if (customEvent.name === \"message_feedback\") {\n              onFeedbackResult?.(customEvent.value)\n            } else if (customEvent.name === \"long_image_generated\") {\n              onLongImageGenerated?.(customEvent.value.imageUrl)\n            } else if (customEvent.name === \"batch_forward_completed\") {\n              onBatchForwardResult?.(customEvent.value)\n            }\n            break\n\n          case \"RUN_ERROR\":\n            onError?.(new Error((event as any).message))\n            break\n        }\n      } catch (error) {\n        // console.error(\"Error processing AG-UI event:\", error)\n      }\n    }\n\n    // 更新最后处理的事件索引\n    lastProcessedIndexRef.current = events.length - 1\n  }, [\n    events,\n    onTextMessageContent,\n    onTextMessageEnd,\n    onToolCall,\n    onStateChange,\n    onSuggestedQuestions,\n    onFeedbackResult,\n    onLongImageGenerated,\n    onBatchForwardResult,\n    onError,\n  ])\n\n  // 这个组件不渲染任何内容\n  return null\n}\n"],"mappings":";;AAAA;AACA,YAAY;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,K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","ignoreList":[]}