e95197579c744e7849077c5e0120ff1d
"use strict";

/**
 * @file fastgpt\health\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_6h46r9urt() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\health\\route.ts";
  var hash = "5a09dee8120be02bb76168eeed87c5b64fc45ce8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\health\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 55,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 79
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 88
        }
      },
      "11": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 60
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 100
          },
          end: {
            line: 12,
            column: 101
          }
        },
        loc: {
          start: {
            line: 12,
            column: 175
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 50
          }
        }, {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 16,
            column: 79
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 31
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\health\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE/C,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,kBAAkB;QAClB,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,yBAAyB,CAAC;QACxE,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAE3C,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,+BAAkB,CAAC,KAAK,CAC7B,wBAAwB,EACxB,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,YAAY;QACZ,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,MAAM,gBAAgB,EAAE;YACtD,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACP,eAAe,EAAE,UAAU,MAAM,EAAE;gBACnC,cAAc,EAAE,kBAAkB;aACnC;YACD,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO;SAC3C,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;QAEvC,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC;YAChB,OAAO,+BAAkB,CAAC,OAAO,CAAC;gBAChC,MAAM,EAAE,SAAS;gBACjB,OAAO;gBACP,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,MAAM;gBACN,OAAO,EAAE,OAAO;aACjB,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gBAAgB,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,UAAU,EAAE,EACzD,GAAG,EACH;gBACE,MAAM,EAAE,WAAW;gBACnB,OAAO;gBACP,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACpC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,+BAAkB,CAAC,KAAK,CAC7B,qBAAqB,EACrB,GAAG,EACH;YACE,MAAM,EAAE,OAAO;YACf,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CACF,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\health\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\health\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const startTime = Date.now();\n      \n      // \u68C0\u67E5FastGPT API\u8FDE\u63A5\n      const apiUrl = process.env.FASTGPT_API_URL || 'https://zktecoaihub.com';\n      const apiKey = process.env.FASTGPT_API_KEY;\n  \n      if (!apiKey) {\n        return ApiResponseWrapper.error(\n          'API key not configured',\n          500\n        );\n      }\n  \n      // \u7B80\u5355\u7684\u5065\u5EB7\u68C0\u67E5\u8BF7\u6C42\n      const response = await fetch(`${apiUrl}/api/v1/models`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n        },\n        signal: AbortSignal.timeout(5000), // 5\u79D2\u8D85\u65F6\n      });\n  \n      const latency = Date.now() - startTime;\n  \n      if (response.ok) {\n        return ApiResponseWrapper.success({\n          status: 'healthy',\n          latency,\n          timestamp: new Date().toISOString(),\n          apiUrl,\n          version: '1.0.0',\n        });\n      } else {\n        return ApiResponseWrapper.error(\n          `API returned ${response.status}: ${response.statusText}`,\n          503,\n          {\n            status: 'unhealthy',\n            latency,\n            timestamp: new Date().toISOString(),\n          }\n        );\n      }\n    } catch (error) {\n      console.error('FastGPT health check error:', error);\n      return ApiResponseWrapper.error(\n        'Health check failed',\n        500,\n        {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n        }\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5a09dee8120be02bb76168eeed87c5b64fc45ce8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6h46r9urt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6h46r9urt();
cov_6h46r9urt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6h46r9urt().s[1]++;
exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_6h46r9urt().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_6h46r9urt().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_6h46r9urt().s[4]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_6h46r9urt().f[0]++;
  cov_6h46r9urt().s[5]++;
  try {
    const startTime =
    /* istanbul ignore next */
    (cov_6h46r9urt().s[6]++, Date.now());
    // 检查FastGPT API连接
    const apiUrl =
    /* istanbul ignore next */
    (cov_6h46r9urt().s[7]++,
    /* istanbul ignore next */
    (cov_6h46r9urt().b[0][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_6h46r9urt().b[0][1]++, 'https://zktecoaihub.com'));
    const apiKey =
    /* istanbul ignore next */
    (cov_6h46r9urt().s[8]++, process.env.FASTGPT_API_KEY);
    /* istanbul ignore next */
    cov_6h46r9urt().s[9]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_6h46r9urt().b[1][0]++;
      cov_6h46r9urt().s[10]++;
      return api_helper_1.ApiResponseWrapper.error('API key not configured', 500);
    } else
    /* istanbul ignore next */
    {
      cov_6h46r9urt().b[1][1]++;
    }
    // 简单的健康检查请求
    const response =
    /* istanbul ignore next */
    (cov_6h46r9urt().s[11]++, await fetch(`${apiUrl}/api/v1/models`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json'
      },
      signal: AbortSignal.timeout(5000) // 5秒超时
    }));
    const latency =
    /* istanbul ignore next */
    (cov_6h46r9urt().s[12]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_6h46r9urt().s[13]++;
    if (response.ok) {
      /* istanbul ignore next */
      cov_6h46r9urt().b[2][0]++;
      cov_6h46r9urt().s[14]++;
      return api_helper_1.ApiResponseWrapper.success({
        status: 'healthy',
        latency,
        timestamp: new Date().toISOString(),
        apiUrl,
        version: '1.0.0'
      });
    } else {
      /* istanbul ignore next */
      cov_6h46r9urt().b[2][1]++;
      cov_6h46r9urt().s[15]++;
      return api_helper_1.ApiResponseWrapper.error(`API returned ${response.status}: ${response.statusText}`, 503, {
        status: 'unhealthy',
        latency,
        timestamp: new Date().toISOString()
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_6h46r9urt().s[16]++;
    console.error('FastGPT health check error:', error);
    /* istanbul ignore next */
    cov_6h46r9urt().s[17]++;
    return api_helper_1.ApiResponseWrapper.error('Health check failed', 500, {
      status: 'error',
      timestamp: new Date().toISOString()
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,