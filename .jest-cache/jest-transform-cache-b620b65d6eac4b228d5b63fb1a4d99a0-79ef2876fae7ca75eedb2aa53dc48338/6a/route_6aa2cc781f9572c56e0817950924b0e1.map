{"version":3,"names":["cov_1q7nkmot50","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","model_manager_1","api_helper_1","core_1","exports","GET","createApiRoute","RouteConfigs","protectedGet","_req","params","routeParams","model","aiModelManager","getModel","id","ApiResponseWrapper","success","data","error","ErrorCode","NOT_FOUND","PUT","protectedPut","req","validatedBody","validatedQuery","user","requestId","json","updateModel","message","VALIDATION_ERROR","DELETE","protectedDelete","deleteModel"],"sources":["E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts"],"sourcesContent":["/**\n * @file ai-models\\[id]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { aiModelManager } from '@/lib/ai-models/model-manager';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (_req, { params }) => {\n    try {\n      const routeParams = await params;\n      const model = await aiModelManager.getModel(routeParams.id);\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.NOT_FOUND, 'AI model not found', null, 404);\n    }\n  }\n);\n\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      const data = await req.json();\n    \n      const model = await aiModelManager.updateModel(routeParams.id, data);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n        message: \"Model updated successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Failed to update AI model', null, 400);\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  RouteConfigs.protectedDelete(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      \n      await aiModelManager.deleteModel(routeParams.id);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"Model deleted successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Failed to delete AI model', null, 400);\n    }\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}