f83c0ef29320932de681243e8ecb08b1
"use strict";

/**
 * @file ai-models\[id]\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1q7nkmot50() {
  var path = "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts";
  var hash = "f16c6deddf7bfde18ba4524752afd7dfac2279a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 83
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 114
        }
      },
      "12": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "15": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 37
        }
      },
      "16": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 92
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 128
        }
      },
      "19": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "21": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "23": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "24": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 128
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 103
          },
          end: {
            line: 14,
            column: 104
          }
        },
        loc: {
          start: {
            line: 14,
            column: 131
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 103
          },
          end: {
            line: 27,
            column: 104
          }
        },
        loc: {
          start: {
            line: 27,
            column: 178
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 109
          },
          end: {
            line: 42,
            column: 110
          }
        },
        loc: {
          start: {
            line: 42,
            column: 184
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 42
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,iEAA+D;AAC/D,uDAA4D;AAC5D,uCAAyC;AAE5B,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,YAAY,EAAE,EAC3B,KAAK,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IACzB,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QACjC,MAAM,KAAK,GAAG,MAAM,8BAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAE5D,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,SAAS,EAAE,oBAAoB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACxF,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,YAAY,EAAE,EAC3B,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAE9B,MAAM,KAAK,GAAG,MAAM,8BAAc,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAErE,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,gBAAgB,EAAE,2BAA2B,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACtG,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,kCAAc,EAClC,gCAAY,CAAC,eAAe,EAAE,EAC9B,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QAEjC,MAAM,8BAAc,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEjD,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,gBAAS,CAAC,gBAAgB,EAAE,2BAA2B,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACtG,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts"],
      sourcesContent: ["/**\n * @file ai-models\\[id]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { aiModelManager } from '@/lib/ai-models/model-manager';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (_req, { params }) => {\n    try {\n      const routeParams = await params;\n      const model = await aiModelManager.getModel(routeParams.id);\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.NOT_FOUND, 'AI model not found', null, 404);\n    }\n  }\n);\n\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      const data = await req.json();\n    \n      const model = await aiModelManager.updateModel(routeParams.id, data);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n        message: \"Model updated successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Failed to update AI model', null, 400);\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  RouteConfigs.protectedDelete(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      \n      await aiModelManager.deleteModel(routeParams.id);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"Model deleted successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Failed to delete AI model', null, 400);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f16c6deddf7bfde18ba4524752afd7dfac2279a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q7nkmot50 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q7nkmot50();
cov_1q7nkmot50().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1q7nkmot50().s[1]++;
exports.DELETE = exports.PUT = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const model_manager_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[3]++, require("@/lib/ai-models/model-manager"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[4]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[5]++, require("@/types/core"));
/* istanbul ignore next */
cov_1q7nkmot50().s[6]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedGet(), async (_req, {
  params
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[0]++;
  cov_1q7nkmot50().s[7]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[8]++, await params);
    const model =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[9]++, await model_manager_1.aiModelManager.getModel(routeParams.id));
    /* istanbul ignore next */
    cov_1q7nkmot50().s[10]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: model
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[11]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.NOT_FOUND, 'AI model not found', null, 404);
  }
});
/* istanbul ignore next */
cov_1q7nkmot50().s[12]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPut(), async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId,
  params
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[1]++;
  cov_1q7nkmot50().s[13]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[14]++, await params);
    const data =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[15]++, await req.json());
    const model =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[16]++, await model_manager_1.aiModelManager.updateModel(routeParams.id, data));
    /* istanbul ignore next */
    cov_1q7nkmot50().s[17]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: model,
      message: "Model updated successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[18]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, 'Failed to update AI model', null, 400);
  }
});
/* istanbul ignore next */
cov_1q7nkmot50().s[19]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedDelete(), async (req, {
  validatedBody,
  validatedQuery,
  user,
  requestId,
  params
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[2]++;
  cov_1q7nkmot50().s[20]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[21]++, await params);
    /* istanbul ignore next */
    cov_1q7nkmot50().s[22]++;
    await model_manager_1.aiModelManager.deleteModel(routeParams.id);
    /* istanbul ignore next */
    cov_1q7nkmot50().s[23]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      message: "Model deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[24]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.VALIDATION_ERROR, 'Failed to delete AI model', null, 400);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,