c427bf07b104eae6c5ab4851db4e96a1
"use strict";

/**
 * @file auth\profile\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_2hgj77rtk2() {
  var path = "E:\\zk-agent\\app\\api\\auth\\profile\\route.ts";
  var hash = "db81ddc6215b17c3728a6e302b4f77f283a222ad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\profile\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 35
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 74
        }
      },
      "8": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "10": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "11": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "14": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "15": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "17": {
        start: {
          line: 48,
          column: 18
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "18": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "19": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "20": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 114,
          column: 3
        }
      },
      "21": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "22": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 28
        }
      },
      "24": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 36
        }
      },
      "25": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 91,
          column: 6
        }
      },
      "26": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "27": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "28": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 113,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 100
          },
          end: {
            line: 22,
            column: 101
          }
        },
        loc: {
          start: {
            line: 22,
            column: 175
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 122
          },
          end: {
            line: 67,
            column: 123
          }
        },
        loc: {
          start: {
            line: 67,
            column: 197
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 16
          }
        },
        loc: {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 35
          }
        }, {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 60,
            column: 40
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 20
          },
          end: {
            line: 102,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 20
          },
          end: {
            line: 102,
            column: 54
          }
        }, {
          start: {
            line: 102,
            column: 58
          },
          end: {
            line: 102,
            column: 86
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\profile\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\profile\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\profile\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport prisma from \"@/lib/database/connection\"\nimport { getCurrentUser } from \"@/lib/auth/middleware\"\nimport type { UserProfile } from \"@/types/auth\"\n\nconst updateProfileSchema = z.object({\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n});\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const currentUser = getCurrentUser(req)\n    if (!currentUser) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u672A\u6388\u6743\u8BBF\u95EE\",\n        },\n        { status: 401 },\n      )\n    }\n\n    const foundUser = await prisma.user.findUnique({\n      where: { id: currentUser.userId },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        avatar: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    })\n\n    if (!foundUser) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u7528\u6237\u4E0D\u5B58\u5728\",\n        },\n        { status: 404 },\n      )\n    }\n\n    // \u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u4FE1\u606F\n    const stats = await prisma.usageStats.aggregate({\n      where: { userId: foundUser.id },\n      _count: { id: true },\n    })\n\n    const profile: UserProfile = {\n      id: foundUser.id,\n      email: foundUser.email,\n      name: foundUser.name,\n      avatar: foundUser.avatar,\n      role: currentUser.role,\n      createdAt: foundUser.createdAt,\n      updatedAt: foundUser.updatedAt,\n      loginCount: stats._count.id || 0,\n    }\n\n    return ApiResponseWrapper.success({\n      success: true,\n      data: profile,\n    })\n  }\n);\n\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut(updateProfileSchema),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const currentUser = getCurrentUser(req)\n    if (!currentUser) {\n      return ApiResponseWrapper.success(\n        {\n          success: false,\n          error: \"\u672A\u6388\u6743\u8BBF\u95EE\",\n        },\n        { status: 401 },\n      )\n    }\n\n    const updateData = validatedBody\n\n    // \u66F4\u65B0\u7528\u6237\u8D44\u6599\n    const updatedUser = await prisma.user.update({\n      where: { id: currentUser.userId },\n      data: {\n        ...updateData,\n        updatedAt: new Date(),\n      },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        avatar: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    })\n\n    // \u8BB0\u5F55\u66F4\u65B0\u65E5\u5FD7\n    await prisma.usageStats\n      .create({\n        data: {\n          userId: currentUser.userId,\n          agentType: \"auth\",\n          action: \"update_profile\",\n          metadata: {\n            updatedFields: Object.keys(updateData),\n            userAgent: req.headers.get(\"user-agent\"),\n            ip: req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\"),\n          },\n        },\n      })\n      .catch((error) => {\n        console.error(\"Failed to log profile update:\", error);\n      })\n\n    return ApiResponseWrapper.success({\n      success: true,\n      data: updatedUser,\n      message: \"\u8D44\u6599\u66F4\u65B0\u6210\u529F\",\n    })\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "db81ddc6215b17c3728a6e302b4f77f283a222ad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hgj77rtk2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hgj77rtk2();
var __importDefault =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[0]++,
/* istanbul ignore next */
(cov_2hgj77rtk2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2hgj77rtk2().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2hgj77rtk2().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2hgj77rtk2().f[0]++;
  cov_2hgj77rtk2().s[1]++;
  return /* istanbul ignore next */(cov_2hgj77rtk2().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2hgj77rtk2().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2hgj77rtk2().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2hgj77rtk2().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2hgj77rtk2().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hgj77rtk2().s[3]++;
exports.PUT = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[4]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[5]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[6]++, require("zod"));
const connection_1 =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[7]++, __importDefault(require("@/lib/database/connection")));
const middleware_1 =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[8]++, require("@/lib/auth/middleware"));
const updateProfileSchema =
/* istanbul ignore next */
(cov_2hgj77rtk2().s[9]++, zod_1.z.object({
  name: zod_1.z.string().optional(),
  avatar: zod_1.z.string().optional()
}));
/* istanbul ignore next */
cov_2hgj77rtk2().s[10]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2hgj77rtk2().f[1]++;
  const currentUser =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[11]++, (0, middleware_1.getCurrentUser)(req));
  /* istanbul ignore next */
  cov_2hgj77rtk2().s[12]++;
  if (!currentUser) {
    /* istanbul ignore next */
    cov_2hgj77rtk2().b[3][0]++;
    cov_2hgj77rtk2().s[13]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "未授权访问"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_2hgj77rtk2().b[3][1]++;
  }
  const foundUser =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[14]++, await connection_1.default.user.findUnique({
    where: {
      id: currentUser.userId
    },
    select: {
      id: true,
      email: true,
      name: true,
      avatar: true,
      createdAt: true,
      updatedAt: true
    }
  }));
  /* istanbul ignore next */
  cov_2hgj77rtk2().s[15]++;
  if (!foundUser) {
    /* istanbul ignore next */
    cov_2hgj77rtk2().b[4][0]++;
    cov_2hgj77rtk2().s[16]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "用户不存在"
    }, {
      status: 404
    });
  } else
  /* istanbul ignore next */
  {
    cov_2hgj77rtk2().b[4][1]++;
  }
  // 获取用户统计信息
  const stats =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[17]++, await connection_1.default.usageStats.aggregate({
    where: {
      userId: foundUser.id
    },
    _count: {
      id: true
    }
  }));
  const profile =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[18]++, {
    id: foundUser.id,
    email: foundUser.email,
    name: foundUser.name,
    avatar: foundUser.avatar,
    role: currentUser.role,
    createdAt: foundUser.createdAt,
    updatedAt: foundUser.updatedAt,
    loginCount:
    /* istanbul ignore next */
    (cov_2hgj77rtk2().b[5][0]++, stats._count.id) ||
    /* istanbul ignore next */
    (cov_2hgj77rtk2().b[5][1]++, 0)
  });
  /* istanbul ignore next */
  cov_2hgj77rtk2().s[19]++;
  return api_helper_1.ApiResponseWrapper.success({
    success: true,
    data: profile
  });
});
/* istanbul ignore next */
cov_2hgj77rtk2().s[20]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPut(updateProfileSchema), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_2hgj77rtk2().f[2]++;
  const currentUser =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[21]++, (0, middleware_1.getCurrentUser)(req));
  /* istanbul ignore next */
  cov_2hgj77rtk2().s[22]++;
  if (!currentUser) {
    /* istanbul ignore next */
    cov_2hgj77rtk2().b[6][0]++;
    cov_2hgj77rtk2().s[23]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: false,
      error: "未授权访问"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_2hgj77rtk2().b[6][1]++;
  }
  const updateData =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[24]++, validatedBody);
  // 更新用户资料
  const updatedUser =
  /* istanbul ignore next */
  (cov_2hgj77rtk2().s[25]++, await connection_1.default.user.update({
    where: {
      id: currentUser.userId
    },
    data: {
      ...updateData,
      updatedAt: new Date()
    },
    select: {
      id: true,
      email: true,
      name: true,
      avatar: true,
      createdAt: true,
      updatedAt: true
    }
  }));
  // 记录更新日志
  /* istanbul ignore next */
  cov_2hgj77rtk2().s[26]++;
  await connection_1.default.usageStats.create({
    data: {
      userId: currentUser.userId,
      agentType: "auth",
      action: "update_profile",
      metadata: {
        updatedFields: Object.keys(updateData),
        userAgent: req.headers.get("user-agent"),
        ip:
        /* istanbul ignore next */
        (cov_2hgj77rtk2().b[7][0]++, req.headers.get("x-forwarded-for")) ||
        /* istanbul ignore next */
        (cov_2hgj77rtk2().b[7][1]++, req.headers.get("x-real-ip"))
      }
    }
  }).catch(error => {
    /* istanbul ignore next */
    cov_2hgj77rtk2().f[3]++;
    cov_2hgj77rtk2().s[27]++;
    console.error("Failed to log profile update:", error);
  });
  /* istanbul ignore next */
  cov_2hgj77rtk2().s[28]++;
  return api_helper_1.ApiResponseWrapper.success({
    success: true,
    data: updatedUser,
    message: "资料更新成功"
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,