{"version":3,"names":["cov_2ix8ihkxju","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","LRUCache","constructor","max","cache","Map","get","key","has","value","delete","set","size","Array","from","keys","CADAnalyzer","config","cacheEnabled","resultCache","analysisConfig","analyze","fileBuffer","fileName","onProgress","cacheKey","generateCacheKey","stage","progress","message","step1_parsedStructure","analyzeStructure","step2_detectedDevices","detectDevices","step3_assessedRisks","assessRisks","step4_complianceCheck","checkCompliance","recommendations","generateRecommendations","finalAnalysisResult","id","generateAnalysisId","fileInfo","generateFileId","ArrayBuffer","byteLength","length","detectFileType","uploadedAt","Date","userId","summary","generateSummary","devices","risks","compliance","performance","collectPerformanceMetrics","createdAt","processingTime","error","Error","String","window","console","analyzeBatch","files","onProgressMap","results","MAX_CONCURRENT","chunks","i","push","slice","chunk","Promise","all","map","fileObj","result","buffer","err","errorMsg","parsedGeometry","parseCADGeometry","extractedLayers","extractLayers","identifiedBlocks","identifyBlocks","geometry","layers","blocks","structureMetadata","complexity","calculateComplexity","layerCount","blockCount","estimatedRenderTime","estimateRenderTime","structureData","detectedDevices","surveillanceDetector","detectSurveillanceDevices","accessControlDetector","detectAccessControlDevices","fireSafetyDetector","detectFireSafetyDevices","postProcessedDevices","postProcessDevices","structure","identifiedRisks","securityRisks","assessSecurityRisks","safetyRisks","assessSafetyRisks","complianceRisks","assessComplianceRisks","performanceRisks","assessPerformanceRisks","sortRisksBySeverity","cameraPatterns","alarmPatterns","foundCameras","searchDevicesByPatterns","foundAlarms","processCameraDevices","processAlarmDevices","deviceStats","calculateDeviceStatistics","riskStats","calculateRiskStatistics","overallScore","calculateOverallScore","totalDevices","devicesByCategory","byCategory","totalRisks","risksBySeverity","bySeverity","complianceScore","overallStatus","determineOverallStatus","keyFindings","extractKeyFindings","criticalIssues","critical","recommendationsCount","countRecommendations","fileHash","computeFileHash","configHash","computeConfigHash","isNode","process","versions","node","memoryUsage","heapUsed","cpuUsage","cacheHitRate","calculateCacheHitRate","errorRate","throughput","calculateThroughput","patterns","total","score","now","toString","split","pop","Uint8Array","padStart","join","JSON","stringify","exports"],"sources":["E:\\zk-agent\\lib\\cad\\cad-analyzer.ts"],"sourcesContent":["// @ts-nocheck\n/**\n * @file lib/cad/cad-analyzer.ts\n * @description CAD文件分析引擎，支持结构分析、设备检测、风险评估，优化进度反馈、健壮性、缓存与批量分析\n * @author zk-agent开发团队\n * @lastUpdate 2024-12-19\n * @updateLog\n *   - 2024-12-19 优化进度反馈、异常健壮性、结果缓存、批量分析\n * \n * 🔤 命名规范说明：\n * - 类名：PascalCase（如：CADAnalyzer）\n * - 分析方法：analyze + 具体功能（如：analyzeStructure）\n * - 检测方法：detect + 对象（如：detectDevices）\n * - 评估方法：assess + 类型（如：assessRisks）\n * - 配置变量：config + 描述（如：analysisConfig）\n * - 结果变量：result + 类型（如：analysisResult）\n * \n * ⚠️ 本文件依赖Node.js Buffer类型，仅限服务端调用。如需前端兼容请用ArrayBuffer。\n */\n\nimport type { CADAnalysisConfig, AnalysisResult, DeviceInfo, RiskAssessment, AnalysisProgress } from \"@/types/cad\"\n\n// Node.js 全局变量声明\ndeclare global {\n  var process: {\n    memoryUsage(): { heapUsed: number; heapTotal: number; rss: number; external: number }\n    cpuUsage(): { user: number; system: number }\n    versions?: { node: string }\n  } | undefined\n}\n\n// Node.js 类型定义（仅服务端使用）\ntype NodeBuffer = ArrayBuffer | Uint8Array\n\n// 简易LRU缓存实现（与file-processor一致）\nclass LRUCache<K, V> {\n  private max: number\n  private cache: Map<K, V>\n  constructor(max = 30) {\n    this.max = max\n    this.cache = new Map()\n  }\n  get(key: K): V | undefined {\n    if (!this.cache.has(key)) {return undefined}\n    const value = this.cache.get(key)!\n    this.cache.delete(key as K)\n    this.cache.set(key, value)\n    return value\n  }\n  set(key: K, value: V) {\n    if (this.cache.has(key)) {this.cache.delete(key as K)}\n    else if (this.cache.size >= this.max) {this.cache.delete(Array.from(this.cache.keys())[0] as K)}\n    this.cache.set(key, value)\n  }\n  has(key: K) { return this.cache.has(key) }\n}\n\n// 扩展AnalysisProgress类型，兼容error阶段\nexport type ExtendedAnalysisProgress = Omit<AnalysisProgress, 'stage'> & { stage: AnalysisProgress[\"stage\"] | \"error\" }\n\n// 📝 命名规范：分析类使用PascalCase，体现核心功能\nexport class CADAnalyzer {\n  // 📝 命名规范：私有配置属性，camelCase + 描述性命名\n  private analysisConfig: CADAnalysisConfig\n  \n  // 📝 命名规范：缓存相关属性使用cache前缀\n  private cacheEnabled: boolean = true\n  private resultCache = new LRUCache<string, AnalysisResult>(30)\n\n  constructor(config: CADAnalysisConfig) {\n    this.analysisConfig = config\n  }\n\n  /**\n   * 主分析流程，支持进度回调与缓存复用\n   */\n  async analyze(\n    fileBuffer: NodeBuffer, // Buffer，仅服务端\n    fileName: string,\n    onProgress?: (progress: ExtendedAnalysisProgress) => void\n  ): Promise<AnalysisResult> {\n    const cacheKey = this.generateCacheKey(fileName, fileBuffer)\n    if (this.cacheEnabled && this.resultCache.has(cacheKey)) {\n      onProgress?.({ stage: \"complete\", progress: 100, message: \"命中缓存，直接返回结果\" })\n      return this.resultCache.get(cacheKey)!\n    }\n    try {\n      onProgress?.({ stage: \"parsing\", progress: 10, message: \"解析结构中...\" })\n      const step1_parsedStructure = await this.analyzeStructure(fileBuffer)\n      onProgress?.({ stage: \"structure\", progress: 30, message: \"结构分析完成，检测设备...\" })\n      const step2_detectedDevices = await this.detectDevices(step1_parsedStructure)\n      onProgress?.({ stage: \"devices\", progress: 50, message: \"设备检测完成，风险评估...\" })\n      const step3_assessedRisks = await this.assessRisks(step2_detectedDevices, step1_parsedStructure)\n      onProgress?.({ stage: \"risks\", progress: 70, message: \"风险评估完成，合规检查...\" })\n      const step4_complianceCheck = await this.checkCompliance(step2_detectedDevices, step3_assessedRisks)\n      onProgress?.({ stage: \"compliance\", progress: 85, message: \"合规检查完成，生成报告...\" })\n      const recommendations = await this.generateRecommendations(step3_assessedRisks)\n      const finalAnalysisResult: AnalysisResult = {\n        id: this.generateAnalysisId(),\n        fileInfo: {\n          id: this.generateFileId(),\n          name: fileName,\n          size: fileBuffer instanceof ArrayBuffer ? fileBuffer.byteLength : fileBuffer.length,\n          type: this.detectFileType(fileName),\n          uploadedAt: new Date(),\n          userId: \"current-user\", // TODO: 从上下文获取\n        },\n        config: this.analysisConfig,\n        summary: this.generateSummary(step2_detectedDevices, step3_assessedRisks),\n        devices: step2_detectedDevices,\n        risks: step3_assessedRisks,\n        compliance: step4_complianceCheck,\n        recommendations,\n        performance: this.collectPerformanceMetrics(),\n        createdAt: new Date(),\n        processingTime: 0,\n        version: \"1.0.0\",\n      }\n      if (this.cacheEnabled) {\n        this.resultCache.set(cacheKey, finalAnalysisResult)\n      }\n      onProgress?.({ stage: \"complete\", progress: 100, message: \"分析完成\" })\n      return finalAnalysisResult\n    } catch (error) {\n      onProgress?.({ stage: \"error\", progress: 100, message: error instanceof Error ? error.message : String(error) })\n      if (typeof window === 'undefined') {\n        // Node环境详细日志\n        // eslint-disable-next-line no-console\n        console.error(`[CADAnalyzer] 分析失败:`, fileName, error)\n      }\n      throw new Error(`CAD分析失败: ${error instanceof Error ? error.message : \"未知错误\"}`)\n    }\n  }\n\n  /**\n   * 批量异步分析，支持进度回调Map\n   */\n  async analyzeBatch(\n    files: { buffer: NodeBuffer; name: string }[],\n    onProgressMap?: Record<string, (progress: ExtendedAnalysisProgress) => void>\n  ): Promise<Map<string, AnalysisResult | { error: string }>> {\n    const results = new Map<string, AnalysisResult | { error: string }>()\n    const MAX_CONCURRENT = 2\n    const chunks: { buffer: NodeBuffer; name: string }[][] = []\n    for (let i = 0; i < files.length; i += MAX_CONCURRENT) {\n      chunks.push(files.slice(i, i + MAX_CONCURRENT))\n    }\n    for (const chunk of chunks) {\n      await Promise.all(chunk.map(async (fileObj) => {\n        try {\n          const result = await this.analyze(\n            fileObj.buffer,\n            fileObj.name,\n            onProgressMap?.[fileObj.name]\n          )\n          results.set(fileObj.name, result)\n        } catch (err) {\n          const errorMsg = err instanceof Error ? err.message : String(err)\n          results.set(fileObj.name, { error: errorMsg })\n          if (typeof window === 'undefined') {\n            // eslint-disable-next-line no-console\n            console.error(`[CADAnalyzer] 批量分析失败:`, fileObj.name, errorMsg)\n          }\n        }\n      }))\n    }\n    return results\n  }\n\n  /**\n   * 结构分析\n   * 📝 命名规范：分析类方法使用analyze + 具体对象\n   */\n  private async analyzeStructure(fileBuffer: NodeBuffer): Promise<any> {\n    // 📝 命名规范：解析结果使用parsed前缀\n    const parsedGeometry = await this.parseCADGeometry(fileBuffer)\n    const extractedLayers = await this.extractLayers(parsedGeometry)\n    const identifiedBlocks = await this.identifyBlocks(parsedGeometry)\n\n    return {\n      geometry: parsedGeometry,\n      layers: extractedLayers,\n      blocks: identifiedBlocks,\n      // 📝 命名规范：元数据使用metadata后缀\n      structureMetadata: {\n        complexity: this.calculateComplexity(parsedGeometry),\n        layerCount: extractedLayers.length,\n        blockCount: identifiedBlocks.length,\n        estimatedRenderTime: this.estimateRenderTime(parsedGeometry),\n      },\n    }\n  }\n\n  /**\n   * 设备检测\n   * 📝 命名规范：检测类方法使用detect + 检测对象\n   */\n  private async detectDevices(structureData: any): Promise<DeviceInfo[]> {\n    const detectedDevices: DeviceInfo[] = []\n\n    // 📝 命名规范：检测器使用detector后缀\n    const surveillanceDetector = await this.detectSurveillanceDevices(structureData)\n    const accessControlDetector = await this.detectAccessControlDevices(structureData)\n    const fireSafetyDetector = await this.detectFireSafetyDevices(structureData)\n\n    // 📝 命名规范：合并操作使用combine/merge动词\n    detectedDevices.push(...surveillanceDetector)\n    detectedDevices.push(...accessControlDetector)\n    detectedDevices.push(...fireSafetyDetector)\n\n    // 📝 命名规范：后处理使用post前缀\n    const postProcessedDevices = await this.postProcessDevices(detectedDevices)\n    \n    return postProcessedDevices\n  }\n\n  /**\n   * 风险评估\n   * 📝 命名规范：评估类方法使用assess + 评估对象\n   */\n  private async assessRisks(devices: DeviceInfo[], structure: any): Promise<RiskAssessment[]> {\n    const identifiedRisks: RiskAssessment[] = []\n\n    // 📝 命名规范：风险类别使用risk + 类型\n    const securityRisks = await this.assessSecurityRisks(devices, structure)\n    const safetyRisks = await this.assessSafetyRisks(devices, structure)\n    const complianceRisks = await this.assessComplianceRisks(devices, structure)\n    const performanceRisks = await this.assessPerformanceRisks(devices, structure)\n\n    identifiedRisks.push(...securityRisks)\n    identifiedRisks.push(...safetyRisks)\n    identifiedRisks.push(...complianceRisks)\n    identifiedRisks.push(...performanceRisks)\n\n    // 📝 命名规范：排序操作使用sort + 排序条件\n    return this.sortRisksBySeverity(identifiedRisks)\n  }\n\n  /**\n   * 监控设备检测\n   * 📝 命名规范：具体设备检测使用detect + 设备类型 + Devices\n   */\n  private async detectSurveillanceDevices(structure: any): Promise<DeviceInfo[]> {\n    const detectedDevices: DeviceInfo[] = []\n\n    // 📝 命名规范：模式匹配使用pattern + 匹配类型\n    const cameraPatterns = [\n      /camera/i, /监控/i, /摄像/i, /cam/i,\n      /surveillance/i, /CCTV/i, /视频/i\n    ]\n\n    const alarmPatterns = [\n      /alarm/i, /报警/i, /警报/i, /sensor/i,\n      /detector/i, /探测/i, /感应/i\n    ]\n\n    // 📝 命名规范：搜索结果使用found前缀\n    const foundCameras = await this.searchDevicesByPatterns(structure, cameraPatterns)\n    const foundAlarms = await this.searchDevicesByPatterns(structure, alarmPatterns)\n\n    // 📝 命名规范：处理函数使用process + 对象\n    detectedDevices.push(...this.processCameraDevices(foundCameras))\n    detectedDevices.push(...this.processAlarmDevices(foundAlarms))\n\n    return detectedDevices\n  }\n\n  /**\n   * 生成分析摘要\n   * 📝 命名规范：生成类方法使用generate + 生成对象\n   */\n  private generateSummary(devices: DeviceInfo[], risks: RiskAssessment[]): any {\n    // 📝 命名规范：统计数据使用stats前缀\n    const deviceStats = this.calculateDeviceStatistics(devices)\n    const riskStats = this.calculateRiskStatistics(risks)\n    \n    // 📝 命名规范：评分使用score后缀\n    const overallScore = this.calculateOverallScore(deviceStats, riskStats)\n\n    return {\n      totalDevices: devices.length,\n      devicesByCategory: deviceStats.byCategory,\n      totalRisks: risks.length,\n      risksBySeverity: riskStats.bySeverity,\n      complianceScore: overallScore.compliance,\n      overallStatus: this.determineOverallStatus(overallScore),\n      keyFindings: this.extractKeyFindings(devices, risks),\n      criticalIssues: riskStats.critical,\n      recommendationsCount: this.countRecommendations(risks),\n    }\n  }\n\n  /**\n   * 缓存键生成\n   * 📝 命名规范：生成器方法使用generate + 生成对象\n   */\n  private generateCacheKey(fileName: string, buffer: NodeBuffer): string {\n    // 📝 命名规范：哈希相关使用hash前缀\n    const fileHash = this.computeFileHash(buffer)\n    const configHash = this.computeConfigHash(this.analysisConfig)\n    \n    return `cad_analysis_${fileName}_${fileHash}_${configHash}`\n  }\n\n  /**\n   * 性能指标收集\n   * 📝 命名规范：收集类方法使用collect + 收集对象\n   */\n  private collectPerformanceMetrics(): any {\n    // 仅Node.js服务端可用\n    const isNode = typeof process !== 'undefined' && process?.versions?.node\n    return {\n      processingTime: 0, // 将在调用处计算\n      memoryUsage: isNode && process ? process.memoryUsage().heapUsed : 0,\n      cpuUsage: isNode && process ? process.cpuUsage() : {},\n      cacheHitRate: this.calculateCacheHitRate(),\n      errorRate: 0, // 基于历史数据计算\n      throughput: this.calculateThroughput(),\n    }\n  }\n\n  /**\n   * 工具方法：计算缓存命中率\n   * 📝 命名规范：计算类方法使用calculate + 计算对象\n   */\n  private calculateCacheHitRate(): number {\n    // 简化实现，实际应基于统计数据\n    return 0.85\n  }\n\n  /**\n   * 工具方法：计算吞吐量\n   * 📝 命名规范：吞吐量相关使用throughput命名\n   */\n  private calculateThroughput(): number {\n    // 简化实现，实际应基于处理历史\n    return 1.2 // 文件/分钟\n  }\n\n  // 📝 命名规范：占位符方法，待具体实现\n  private async parseCADGeometry(buffer: NodeBuffer): Promise<any> { return {} }\n  private async extractLayers(geometry: any): Promise<any[]> { return [] }\n  private async identifyBlocks(geometry: any): Promise<any[]> { return [] }\n  private calculateComplexity(geometry: any): string { return \"medium\" }\n  private estimateRenderTime(geometry: any): number { return 0 }\n  private async detectAccessControlDevices(structure: any): Promise<DeviceInfo[]> { return [] }\n  private async detectFireSafetyDevices(structure: any): Promise<DeviceInfo[]> { return [] }\n  private async postProcessDevices(devices: DeviceInfo[]): Promise<DeviceInfo[]> { return devices }\n  private async assessSecurityRisks(devices: DeviceInfo[], structure: any): Promise<RiskAssessment[]> { return [] }\n  private async assessSafetyRisks(devices: DeviceInfo[], structure: any): Promise<RiskAssessment[]> { return [] }\n  private async assessComplianceRisks(devices: DeviceInfo[], structure: any): Promise<RiskAssessment[]> { return [] }\n  private async assessPerformanceRisks(devices: DeviceInfo[], structure: any): Promise<RiskAssessment[]> { return [] }\n  private sortRisksBySeverity(risks: RiskAssessment[]): RiskAssessment[] { return risks }\n  private async searchDevicesByPatterns(structure: any, patterns: RegExp[]): Promise<any[]> { return [] }\n  private processCameraDevices(devices: any[]): DeviceInfo[] { return [] }\n  private processAlarmDevices(devices: any[]): DeviceInfo[] { return [] }\n  private calculateDeviceStatistics(devices: DeviceInfo[]): any { return { byCategory: {}, total: devices.length } }\n  private calculateRiskStatistics(risks: RiskAssessment[]): any { return { bySeverity: {}, critical: 0 } }\n  private calculateOverallScore(deviceStats: any, riskStats: any): any { return { compliance: 85 } }\n  private determineOverallStatus(score: any): string { return \"good\" }\n  private extractKeyFindings(devices: DeviceInfo[], risks: RiskAssessment[]): string[] { return [] }\n  private countRecommendations(risks: RiskAssessment[]): number { return 0 }\n  private generateAnalysisId(): string { return Date.now().toString() }\n  private generateFileId(): string { return Date.now().toString() }\n  private detectFileType(fileName: string): string { return fileName.split('.').pop() || 'unknown' }\n  private async checkCompliance(devices: DeviceInfo[], risks: RiskAssessment[]): Promise<any> { return {} }\n  private async generateRecommendations(risks: RiskAssessment[]): Promise<any[]> { return [] }\n  private computeFileHash(buffer: NodeBuffer): string { \n    if (buffer instanceof ArrayBuffer) {\n      return Array.from(new Uint8Array(buffer)).map(b => b.toString(16).padStart(2, '0')).join('').slice(0, 16)\n    }\n    return Array.from(buffer).map(b => b.toString(16).padStart(2, '0')).join('').slice(0, 16)\n  }\n  private computeConfigHash(config: CADAnalysisConfig): string { return JSON.stringify(config).slice(0, 16) }\n}\n"],"mappings":";;AAAA;AACA;;;;;;;;;;;;;;;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;;;;;;;;;;;;;;;;AAiCA;AACA,MAAMgC,QAAQ;EAGZC,YAAYC,GAAG;EAAA;EAAA,CAAAnC,cAAA,GAAAsB,CAAA,UAAG,EAAE;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClB,IAAI,CAACe,GAAG,GAAGA,GAAG;IAAA;IAAAnC,cAAA,GAAAoB,CAAA;IACd,IAAI,CAACgB,KAAK,GAAG,IAAIC,GAAG,EAAE;EACxB;EACAC,GAAGA,CAACC,GAAM;IAAA;IAAAvC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACR,IAAI,CAAC,IAAI,CAACgB,KAAK,CAACI,GAAG,CAACD,GAAG,CAAC,EAAE;MAAA;MAAAvC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAC,OAAOD,SAAS;IAAA,CAAC;IAAA;IAAA;MAAAnB,cAAA,GAAAsB,CAAA;IAAA;IAC5C,MAAMmB,KAAK;IAAA;IAAA,CAAAzC,cAAA,GAAAoB,CAAA,OAAG,IAAI,CAACgB,KAAK,CAACE,GAAG,CAACC,GAAG,CAAE;IAAA;IAAAvC,cAAA,GAAAoB,CAAA;IAClC,IAAI,CAACgB,KAAK,CAACM,MAAM,CAACH,GAAQ,CAAC;IAAA;IAAAvC,cAAA,GAAAoB,CAAA;IAC3B,IAAI,CAACgB,KAAK,CAACO,GAAG,CAACJ,GAAG,EAAEE,KAAK,CAAC;IAAA;IAAAzC,cAAA,GAAAoB,CAAA;IAC1B,OAAOqB,KAAK;EACd;EACAE,GAAGA,CAACJ,GAAM,EAAEE,KAAQ;IAAA;IAAAzC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClB,IAAI,IAAI,CAACgB,KAAK,CAACI,GAAG,CAACD,GAAG,CAAC,EAAE;MAAA;MAAAvC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAC,IAAI,CAACgB,KAAK,CAACM,MAAM,CAACH,GAAQ,CAAC;IAAA,CAAC,MACjD;MAAA;MAAAvC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,IAAI,IAAI,CAACgB,KAAK,CAACQ,IAAI,IAAI,IAAI,CAACT,GAAG,EAAE;QAAA;QAAAnC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAAC,IAAI,CAACgB,KAAK,CAACM,MAAM,CAACG,KAAK,CAACC,IAAI,CAAC,IAAI,CAACV,KAAK,CAACW,IAAI,EAAE,CAAC,CAAC,CAAC,CAAM,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA/C,cAAA,GAAAsB,CAAA;MAAA;IAAD;IAAC;IAAAtB,cAAA,GAAAoB,CAAA;IAChG,IAAI,CAACgB,KAAK,CAACO,GAAG,CAACJ,GAAG,EAAEE,KAAK,CAAC;EAC5B;EACAD,GAAGA,CAACD,GAAM;IAAA;IAAAvC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAI,OAAO,IAAI,CAACgB,KAAK,CAACI,GAAG,CAACD,GAAG,CAAC;EAAC;;AAM3C;AACA,MAAaS,WAAW;EAQtBd,YAAYe,MAAyB;IAAA;IAAAjD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAJrC;IACQ,KAAA8B,YAAY,GAAY,IAAI;IAAA;IAAAlD,cAAA,GAAAoB,CAAA;IAC5B,KAAA+B,WAAW,GAAG,IAAIlB,QAAQ,CAAyB,EAAE,CAAC;IAAA;IAAAjC,cAAA,GAAAoB,CAAA;IAG5D,IAAI,CAACgC,cAAc,GAAGH,MAAM;EAC9B;EAEA;;;EAGA,MAAMI,OAAOA,CACXC,UAAsB;EAAE;EACxBC,QAAgB,EAChBC,UAAyD;IAAA;IAAAxD,cAAA,GAAAqB,CAAA;IAEzD,MAAMoC,QAAQ;IAAA;IAAA,CAAAzD,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACsC,gBAAgB,CAACH,QAAQ,EAAED,UAAU,CAAC;IAAA;IAAAtD,cAAA,GAAAoB,CAAA;IAC5D;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,cAAI,CAAC4B,YAAY;IAAA;IAAA,CAAAlD,cAAA,GAAAsB,CAAA,UAAI,IAAI,CAAC6B,WAAW,CAACX,GAAG,CAACiB,QAAQ,CAAC,GAAE;MAAA;MAAAzD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACvDoC,UAAU,GAAG;QAAEG,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE,GAAG;QAAEC,OAAO,EAAE;MAAa,CAAE,CAAC;MAAA;MAAA7D,cAAA,GAAAoB,CAAA;MAC1E,OAAO,IAAI,CAAC+B,WAAW,CAACb,GAAG,CAACmB,QAAQ,CAAE;IACxC,CAAC;IAAA;IAAA;MAAAzD,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACD,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACFoC,UAAU,GAAG;QAAEG,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAU,CAAE,CAAC;MACrE,MAAMC,qBAAqB;MAAA;MAAA,CAAA9D,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC2C,gBAAgB,CAACT,UAAU,CAAC;MAAA;MAAAtD,cAAA,GAAAoB,CAAA;MACrEoC,UAAU,GAAG;QAAEG,KAAK,EAAE,WAAW;QAAEC,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAgB,CAAE,CAAC;MAC7E,MAAMG,qBAAqB;MAAA;MAAA,CAAAhE,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC6C,aAAa,CAACH,qBAAqB,CAAC;MAAA;MAAA9D,cAAA,GAAAoB,CAAA;MAC7EoC,UAAU,GAAG;QAAEG,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAgB,CAAE,CAAC;MAC3E,MAAMK,mBAAmB;MAAA;MAAA,CAAAlE,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC+C,WAAW,CAACH,qBAAqB,EAAEF,qBAAqB,CAAC;MAAA;MAAA9D,cAAA,GAAAoB,CAAA;MAChGoC,UAAU,GAAG;QAAEG,KAAK,EAAE,OAAO;QAAEC,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAgB,CAAE,CAAC;MACzE,MAAMO,qBAAqB;MAAA;MAAA,CAAApE,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACiD,eAAe,CAACL,qBAAqB,EAAEE,mBAAmB,CAAC;MAAA;MAAAlE,cAAA,GAAAoB,CAAA;MACpGoC,UAAU,GAAG;QAAEG,KAAK,EAAE,YAAY;QAAEC,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAgB,CAAE,CAAC;MAC9E,MAAMS,eAAe;MAAA;MAAA,CAAAtE,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACmD,uBAAuB,CAACL,mBAAmB,CAAC;MAC/E,MAAMM,mBAAmB;MAAA;MAAA,CAAAxE,cAAA,GAAAoB,CAAA,QAAmB;QAC1CqD,EAAE,EAAE,IAAI,CAACC,kBAAkB,EAAE;QAC7BC,QAAQ,EAAE;UACRF,EAAE,EAAE,IAAI,CAACG,cAAc,EAAE;UACzB/D,IAAI,EAAE0C,QAAQ;UACdX,IAAI,EAAEU,UAAU,YAAYuB,WAAW;UAAA;UAAA,CAAA7E,cAAA,GAAAsB,CAAA,UAAGgC,UAAU,CAACwB,UAAU;UAAA;UAAA,CAAA9E,cAAA,GAAAsB,CAAA,UAAGgC,UAAU,CAACyB,MAAM;UACnF9D,IAAI,EAAE,IAAI,CAAC+D,cAAc,CAACzB,QAAQ,CAAC;UACnC0B,UAAU,EAAE,IAAIC,IAAI,EAAE;UACtBC,MAAM,EAAE,cAAc,CAAE;SACzB;QACDlC,MAAM,EAAE,IAAI,CAACG,cAAc;QAC3BgC,OAAO,EAAE,IAAI,CAACC,eAAe,CAACrB,qBAAqB,EAAEE,mBAAmB,CAAC;QACzEoB,OAAO,EAAEtB,qBAAqB;QAC9BuB,KAAK,EAAErB,mBAAmB;QAC1BsB,UAAU,EAAEpB,qBAAqB;QACjCE,eAAe;QACfmB,WAAW,EAAE,IAAI,CAACC,yBAAyB,EAAE;QAC7CC,SAAS,EAAE,IAAIT,IAAI,EAAE;QACrBU,cAAc,EAAE,CAAC;QACjB/D,OAAO,EAAE;OACV;MAAA;MAAA7B,cAAA,GAAAoB,CAAA;MACD,IAAI,IAAI,CAAC8B,YAAY,EAAE;QAAA;QAAAlD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACrB,IAAI,CAAC+B,WAAW,CAACR,GAAG,CAACc,QAAQ,EAAEe,mBAAmB,CAAC;MACrD,CAAC;MAAA;MAAA;QAAAxE,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACDoC,UAAU,GAAG;QAAEG,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE,GAAG;QAAEC,OAAO,EAAE;MAAM,CAAE,CAAC;MAAA;MAAA7D,cAAA,GAAAoB,CAAA;MACnE,OAAOoD,mBAAmB;IAC5B,CAAC,CAAC,OAAOqB,KAAK,EAAE;MAAA;MAAA7F,cAAA,GAAAoB,CAAA;MACdoC,UAAU,GAAG;QAAEG,KAAK,EAAE,OAAO;QAAEC,QAAQ,EAAE,GAAG;QAAEC,OAAO,EAAEgC,KAAK,YAAYC,KAAK;QAAA;QAAA,CAAA9F,cAAA,GAAAsB,CAAA,UAAGuE,KAAK,CAAChC,OAAO;QAAA;QAAA,CAAA7D,cAAA,GAAAsB,CAAA,UAAGyE,MAAM,CAACF,KAAK,CAAC;MAAA,CAAE,CAAC;MAAA;MAAA7F,cAAA,GAAAoB,CAAA;MAChH,IAAI,OAAO4E,MAAM,KAAK,WAAW,EAAE;QAAA;QAAAhG,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjC;QACA;QACA6E,OAAO,CAACJ,KAAK,CAAC,qBAAqB,EAAEtC,QAAQ,EAAEsC,KAAK,CAAC;MACvD,CAAC;MAAA;MAAA;QAAA7F,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,MAAM,IAAI0E,KAAK,CAAC,YAAYD,KAAK,YAAYC,KAAK;MAAA;MAAA,CAAA9F,cAAA,GAAAsB,CAAA,WAAGuE,KAAK,CAAChC,OAAO;MAAA;MAAA,CAAA7D,cAAA,GAAAsB,CAAA,WAAG,MAAM,GAAE,CAAC;IAChF;EACF;EAEA;;;EAGA,MAAM4E,YAAYA,CAChBC,KAA6C,EAC7CC,aAA4E;IAAA;IAAApG,cAAA,GAAAqB,CAAA;IAE5E,MAAMgF,OAAO;IAAA;IAAA,CAAArG,cAAA,GAAAoB,CAAA,QAAG,IAAIiB,GAAG,EAA8C;IACrE,MAAMiE,cAAc;IAAA;IAAA,CAAAtG,cAAA,GAAAoB,CAAA,QAAG,CAAC;IACxB,MAAMmF,MAAM;IAAA;IAAA,CAAAvG,cAAA,GAAAoB,CAAA,QAA6C,EAAE;IAAA;IAAApB,cAAA,GAAAoB,CAAA;IAC3D,KAAK,IAAIoF,CAAC;IAAA;IAAA,CAAAxG,cAAA,GAAAoB,CAAA,QAAG,CAAC,GAAEoF,CAAC,GAAGL,KAAK,CAACpB,MAAM,EAAEyB,CAAC,IAAIF,cAAc,EAAE;MAAA;MAAAtG,cAAA,GAAAoB,CAAA;MACrDmF,MAAM,CAACE,IAAI,CAACN,KAAK,CAACO,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAGF,cAAc,CAAC,CAAC;IACjD;IAAC;IAAAtG,cAAA,GAAAoB,CAAA;IACD,KAAK,MAAMuF,KAAK,IAAIJ,MAAM,EAAE;MAAA;MAAAvG,cAAA,GAAAoB,CAAA;MAC1B,MAAMwF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,GAAG,CAAC,MAAOC,OAAO,IAAI;QAAA;QAAA/G,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAC5C,IAAI;UACF,MAAM4F,MAAM;UAAA;UAAA,CAAAhH,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACiC,OAAO,CAC/B0D,OAAO,CAACE,MAAM,EACdF,OAAO,CAAClG,IAAI,EACZuF,aAAa,GAAGW,OAAO,CAAClG,IAAI,CAAC,CAC9B;UAAA;UAAAb,cAAA,GAAAoB,CAAA;UACDiF,OAAO,CAAC1D,GAAG,CAACoE,OAAO,CAAClG,IAAI,EAAEmG,MAAM,CAAC;QACnC,CAAC,CAAC,OAAOE,GAAG,EAAE;UACZ,MAAMC,QAAQ;UAAA;UAAA,CAAAnH,cAAA,GAAAoB,CAAA,QAAG8F,GAAG,YAAYpB,KAAK;UAAA;UAAA,CAAA9F,cAAA,GAAAsB,CAAA,WAAG4F,GAAG,CAACrD,OAAO;UAAA;UAAA,CAAA7D,cAAA,GAAAsB,CAAA,WAAGyE,MAAM,CAACmB,GAAG,CAAC;UAAA;UAAAlH,cAAA,GAAAoB,CAAA;UACjEiF,OAAO,CAAC1D,GAAG,CAACoE,OAAO,CAAClG,IAAI,EAAE;YAAEgF,KAAK,EAAEsB;UAAQ,CAAE,CAAC;UAAA;UAAAnH,cAAA,GAAAoB,CAAA;UAC9C,IAAI,OAAO4E,MAAM,KAAK,WAAW,EAAE;YAAA;YAAAhG,cAAA,GAAAsB,CAAA;YAAAtB,cAAA,GAAAoB,CAAA;YACjC;YACA6E,OAAO,CAACJ,KAAK,CAAC,uBAAuB,EAAEkB,OAAO,CAAClG,IAAI,EAAEsG,QAAQ,CAAC;UAChE,CAAC;UAAA;UAAA;YAAAnH,cAAA,GAAAsB,CAAA;UAAA;QACH;MACF,CAAC,CAAC,CAAC;IACL;IAAC;IAAAtB,cAAA,GAAAoB,CAAA;IACD,OAAOiF,OAAO;EAChB;EAEA;;;;EAIQ,MAAMtC,gBAAgBA,CAACT,UAAsB;IAAA;IAAAtD,cAAA,GAAAqB,CAAA;IACnD;IACA,MAAM+F,cAAc;IAAA;IAAA,CAAApH,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACiG,gBAAgB,CAAC/D,UAAU,CAAC;IAC9D,MAAMgE,eAAe;IAAA;IAAA,CAAAtH,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACmG,aAAa,CAACH,cAAc,CAAC;IAChE,MAAMI,gBAAgB;IAAA;IAAA,CAAAxH,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACqG,cAAc,CAACL,cAAc,CAAC;IAAA;IAAApH,cAAA,GAAAoB,CAAA;IAElE,OAAO;MACLsG,QAAQ,EAAEN,cAAc;MACxBO,MAAM,EAAEL,eAAe;MACvBM,MAAM,EAAEJ,gBAAgB;MACxB;MACAK,iBAAiB,EAAE;QACjBC,UAAU,EAAE,IAAI,CAACC,mBAAmB,CAACX,cAAc,CAAC;QACpDY,UAAU,EAAEV,eAAe,CAACvC,MAAM;QAClCkD,UAAU,EAAET,gBAAgB,CAACzC,MAAM;QACnCmD,mBAAmB,EAAE,IAAI,CAACC,kBAAkB,CAACf,cAAc;;KAE9D;EACH;EAEA;;;;EAIQ,MAAMnD,aAAaA,CAACmE,aAAkB;IAAA;IAAApI,cAAA,GAAAqB,CAAA;IAC5C,MAAMgH,eAAe;IAAA;IAAA,CAAArI,cAAA,GAAAoB,CAAA,QAAiB,EAAE;IAExC;IACA,MAAMkH,oBAAoB;IAAA;IAAA,CAAAtI,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACmH,yBAAyB,CAACH,aAAa,CAAC;IAChF,MAAMI,qBAAqB;IAAA;IAAA,CAAAxI,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACqH,0BAA0B,CAACL,aAAa,CAAC;IAClF,MAAMM,kBAAkB;IAAA;IAAA,CAAA1I,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACuH,uBAAuB,CAACP,aAAa,CAAC;IAE5E;IAAA;IAAApI,cAAA,GAAAoB,CAAA;IACAiH,eAAe,CAAC5B,IAAI,CAAC,GAAG6B,oBAAoB,CAAC;IAAA;IAAAtI,cAAA,GAAAoB,CAAA;IAC7CiH,eAAe,CAAC5B,IAAI,CAAC,GAAG+B,qBAAqB,CAAC;IAAA;IAAAxI,cAAA,GAAAoB,CAAA;IAC9CiH,eAAe,CAAC5B,IAAI,CAAC,GAAGiC,kBAAkB,CAAC;IAE3C;IACA,MAAME,oBAAoB;IAAA;IAAA,CAAA5I,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACyH,kBAAkB,CAACR,eAAe,CAAC;IAAA;IAAArI,cAAA,GAAAoB,CAAA;IAE3E,OAAOwH,oBAAoB;EAC7B;EAEA;;;;EAIQ,MAAMzE,WAAWA,CAACmB,OAAqB,EAAEwD,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAC7D,MAAM0H,eAAe;IAAA;IAAA,CAAA/I,cAAA,GAAAoB,CAAA,QAAqB,EAAE;IAE5C;IACA,MAAM4H,aAAa;IAAA;IAAA,CAAAhJ,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC6H,mBAAmB,CAAC3D,OAAO,EAAEwD,SAAS,CAAC;IACxE,MAAMI,WAAW;IAAA;IAAA,CAAAlJ,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC+H,iBAAiB,CAAC7D,OAAO,EAAEwD,SAAS,CAAC;IACpE,MAAMM,eAAe;IAAA;IAAA,CAAApJ,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACiI,qBAAqB,CAAC/D,OAAO,EAAEwD,SAAS,CAAC;IAC5E,MAAMQ,gBAAgB;IAAA;IAAA,CAAAtJ,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACmI,sBAAsB,CAACjE,OAAO,EAAEwD,SAAS,CAAC;IAAA;IAAA9I,cAAA,GAAAoB,CAAA;IAE9E2H,eAAe,CAACtC,IAAI,CAAC,GAAGuC,aAAa,CAAC;IAAA;IAAAhJ,cAAA,GAAAoB,CAAA;IACtC2H,eAAe,CAACtC,IAAI,CAAC,GAAGyC,WAAW,CAAC;IAAA;IAAAlJ,cAAA,GAAAoB,CAAA;IACpC2H,eAAe,CAACtC,IAAI,CAAC,GAAG2C,eAAe,CAAC;IAAA;IAAApJ,cAAA,GAAAoB,CAAA;IACxC2H,eAAe,CAACtC,IAAI,CAAC,GAAG6C,gBAAgB,CAAC;IAEzC;IAAA;IAAAtJ,cAAA,GAAAoB,CAAA;IACA,OAAO,IAAI,CAACoI,mBAAmB,CAACT,eAAe,CAAC;EAClD;EAEA;;;;EAIQ,MAAMR,yBAAyBA,CAACO,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IACpD,MAAMgH,eAAe;IAAA;IAAA,CAAArI,cAAA,GAAAoB,CAAA,QAAiB,EAAE;IAExC;IACA,MAAMqI,cAAc;IAAA;IAAA,CAAAzJ,cAAA,GAAAoB,CAAA,QAAG,CACrB,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAC/B,eAAe,EAAE,OAAO,EAAE,KAAK,CAChC;IAED,MAAMsI,aAAa;IAAA;IAAA,CAAA1J,cAAA,GAAAoB,CAAA,QAAG,CACpB,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EACjC,WAAW,EAAE,KAAK,EAAE,KAAK,CAC1B;IAED;IACA,MAAMuI,YAAY;IAAA;IAAA,CAAA3J,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACwI,uBAAuB,CAACd,SAAS,EAAEW,cAAc,CAAC;IAClF,MAAMI,WAAW;IAAA;IAAA,CAAA7J,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACwI,uBAAuB,CAACd,SAAS,EAAEY,aAAa,CAAC;IAEhF;IAAA;IAAA1J,cAAA,GAAAoB,CAAA;IACAiH,eAAe,CAAC5B,IAAI,CAAC,GAAG,IAAI,CAACqD,oBAAoB,CAACH,YAAY,CAAC,CAAC;IAAA;IAAA3J,cAAA,GAAAoB,CAAA;IAChEiH,eAAe,CAAC5B,IAAI,CAAC,GAAG,IAAI,CAACsD,mBAAmB,CAACF,WAAW,CAAC,CAAC;IAAA;IAAA7J,cAAA,GAAAoB,CAAA;IAE9D,OAAOiH,eAAe;EACxB;EAEA;;;;EAIQhD,eAAeA,CAACC,OAAqB,EAAEC,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IACpE;IACA,MAAM2I,WAAW;IAAA;IAAA,CAAAhK,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC6I,yBAAyB,CAAC3E,OAAO,CAAC;IAC3D,MAAM4E,SAAS;IAAA;IAAA,CAAAlK,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC+I,uBAAuB,CAAC5E,KAAK,CAAC;IAErD;IACA,MAAM6E,YAAY;IAAA;IAAA,CAAApK,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACiJ,qBAAqB,CAACL,WAAW,EAAEE,SAAS,CAAC;IAAA;IAAAlK,cAAA,GAAAoB,CAAA;IAEvE,OAAO;MACLkJ,YAAY,EAAEhF,OAAO,CAACP,MAAM;MAC5BwF,iBAAiB,EAAEP,WAAW,CAACQ,UAAU;MACzCC,UAAU,EAAElF,KAAK,CAACR,MAAM;MACxB2F,eAAe,EAAER,SAAS,CAACS,UAAU;MACrCC,eAAe,EAAER,YAAY,CAAC5E,UAAU;MACxCqF,aAAa,EAAE,IAAI,CAACC,sBAAsB,CAACV,YAAY,CAAC;MACxDW,WAAW,EAAE,IAAI,CAACC,kBAAkB,CAAC1F,OAAO,EAAEC,KAAK,CAAC;MACpD0F,cAAc,EAAEf,SAAS,CAACgB,QAAQ;MAClCC,oBAAoB,EAAE,IAAI,CAACC,oBAAoB,CAAC7F,KAAK;KACtD;EACH;EAEA;;;;EAIQ7B,gBAAgBA,CAACH,QAAgB,EAAE0D,MAAkB;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IAC3D;IACA,MAAMgK,QAAQ;IAAA;IAAA,CAAArL,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACkK,eAAe,CAACrE,MAAM,CAAC;IAC7C,MAAMsE,UAAU;IAAA;IAAA,CAAAvL,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACoK,iBAAiB,CAAC,IAAI,CAACpI,cAAc,CAAC;IAAA;IAAApD,cAAA,GAAAoB,CAAA;IAE9D,OAAO,gBAAgBmC,QAAQ,IAAI8H,QAAQ,IAAIE,UAAU,EAAE;EAC7D;EAEA;;;;EAIQ7F,yBAAyBA,CAAA;IAAA;IAAA1F,cAAA,GAAAqB,CAAA;IAC/B;IACA,MAAMoK,MAAM;IAAA;IAAA,CAAAzL,cAAA,GAAAoB,CAAA;IAAG;IAAA,CAAApB,cAAA,GAAAsB,CAAA,kBAAOoK,OAAO,KAAK,WAAW;IAAA;IAAA,CAAA1L,cAAA,GAAAsB,CAAA,WAAIoK,OAAO,EAAEC,QAAQ,EAAEC,IAAI;IAAA;IAAA5L,cAAA,GAAAoB,CAAA;IACxE,OAAO;MACLwE,cAAc,EAAE,CAAC;MAAE;MACnBiG,WAAW;MAAE;MAAA,CAAA7L,cAAA,GAAAsB,CAAA,WAAAmK,MAAM;MAAA;MAAA,CAAAzL,cAAA,GAAAsB,CAAA,WAAIoK,OAAO;MAAA;MAAA,CAAA1L,cAAA,GAAAsB,CAAA,WAAGoK,OAAO,CAACG,WAAW,EAAE,CAACC,QAAQ;MAAA;MAAA,CAAA9L,cAAA,GAAAsB,CAAA,WAAG,CAAC;MACnEyK,QAAQ;MAAE;MAAA,CAAA/L,cAAA,GAAAsB,CAAA,WAAAmK,MAAM;MAAA;MAAA,CAAAzL,cAAA,GAAAsB,CAAA,WAAIoK,OAAO;MAAA;MAAA,CAAA1L,cAAA,GAAAsB,CAAA,WAAGoK,OAAO,CAACK,QAAQ,EAAE;MAAA;MAAA,CAAA/L,cAAA,GAAAsB,CAAA,WAAG,EAAE;MACrD0K,YAAY,EAAE,IAAI,CAACC,qBAAqB,EAAE;MAC1CC,SAAS,EAAE,CAAC;MAAE;MACdC,UAAU,EAAE,IAAI,CAACC,mBAAmB;KACrC;EACH;EAEA;;;;EAIQH,qBAAqBA,CAAA;IAAA;IAAAjM,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC3B;IACA,OAAO,IAAI;EACb;EAEA;;;;EAIQgL,mBAAmBA,CAAA;IAAA;IAAApM,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACzB;IACA,OAAO,GAAG,EAAC;EACb;EAEA;EACQ,MAAMiG,gBAAgBA,CAACJ,MAAkB;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAkB,OAAO,EAAE;EAAC;EACrE,MAAMmG,aAAaA,CAACG,QAAa;IAAA;IAAA1H,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAoB,OAAO,EAAE;EAAC;EAC/D,MAAMqG,cAAcA,CAACC,QAAa;IAAA;IAAA1H,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAoB,OAAO,EAAE;EAAC;EAChE2G,mBAAmBA,CAACL,QAAa;IAAA;IAAA1H,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAY,OAAO,QAAQ;EAAC;EAC7D+G,kBAAkBA,CAACT,QAAa;IAAA;IAAA1H,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAY,OAAO,CAAC;EAAC;EACrD,MAAMqH,0BAA0BA,CAACK,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA2B,OAAO,EAAE;EAAC;EACpF,MAAMuH,uBAAuBA,CAACG,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA2B,OAAO,EAAE;EAAC;EACjF,MAAMyH,kBAAkBA,CAACvD,OAAqB;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA2B,OAAOkE,OAAO;EAAC;EACxF,MAAM2D,mBAAmBA,CAAC3D,OAAqB,EAAEwD,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA+B,OAAO,EAAE;EAAC;EACxG,MAAM+H,iBAAiBA,CAAC7D,OAAqB,EAAEwD,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA+B,OAAO,EAAE;EAAC;EACtG,MAAMiI,qBAAqBA,CAAC/D,OAAqB,EAAEwD,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA+B,OAAO,EAAE;EAAC;EAC1G,MAAMmI,sBAAsBA,CAACjE,OAAqB,EAAEwD,SAAc;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAA+B,OAAO,EAAE;EAAC;EAC3GoI,mBAAmBA,CAACjE,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAsB,OAAOmE,KAAK;EAAC;EAC9E,MAAMqE,uBAAuBA,CAACd,SAAc,EAAEuD,QAAkB;IAAA;IAAArM,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAoB,OAAO,EAAE;EAAC;EAC9F0I,oBAAoBA,CAACxE,OAAc;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAkB,OAAO,EAAE;EAAC;EAC/D2I,mBAAmBA,CAACzE,OAAc;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAkB,OAAO,EAAE;EAAC;EAC9D6I,yBAAyBA,CAAC3E,OAAqB;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAS,OAAO;MAAEoJ,UAAU,EAAE,EAAE;MAAE8B,KAAK,EAAEhH,OAAO,CAACP;IAAM,CAAE;EAAC;EACzGoF,uBAAuBA,CAAC5E,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAS,OAAO;MAAEuJ,UAAU,EAAE,EAAE;MAAEO,QAAQ,EAAE;IAAC,CAAE;EAAC;EAC/Fb,qBAAqBA,CAACL,WAAgB,EAAEE,SAAc;IAAA;IAAAlK,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAS,OAAO;MAAEoE,UAAU,EAAE;IAAE,CAAE;EAAC;EACzFsF,sBAAsBA,CAACyB,KAAU;IAAA;IAAAvM,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAY,OAAO,MAAM;EAAC;EAC3D4J,kBAAkBA,CAAC1F,OAAqB,EAAEC,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAc,OAAO,EAAE;EAAC;EACzFgK,oBAAoBA,CAAC7F,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAY,OAAO,CAAC;EAAC;EACjEsD,kBAAkBA,CAAA;IAAA;IAAA1E,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAa,OAAO8D,IAAI,CAACsH,GAAG,EAAE,CAACC,QAAQ,EAAE;EAAC;EAC5D7H,cAAcA,CAAA;IAAA;IAAA5E,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAa,OAAO8D,IAAI,CAACsH,GAAG,EAAE,CAACC,QAAQ,EAAE;EAAC;EACxDzH,cAAcA,CAACzB,QAAgB;IAAA;IAAAvD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAY,OAAO,2BAAApB,cAAA,GAAAsB,CAAA,WAAAiC,QAAQ,CAACmJ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;IAAA;IAAA,CAAA3M,cAAA,GAAAsB,CAAA,WAAI,SAAS;EAAC;EACzF,MAAM+C,eAAeA,CAACiB,OAAqB,EAAEC,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAkB,OAAO,EAAE;EAAC;EAChG,MAAMmD,uBAAuBA,CAACgB,KAAuB;IAAA;IAAAvF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAoB,OAAO,EAAE;EAAC;EACnFkK,eAAeA,CAACrE,MAAkB;IAAA;IAAAjH,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACxC,IAAI6F,MAAM,YAAYpC,WAAW,EAAE;MAAA;MAAA7E,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACjC,OAAOyB,KAAK,CAACC,IAAI,CAAC,IAAI8J,UAAU,CAAC3F,MAAM,CAAC,CAAC,CAACH,GAAG,CAACxF,CAAC,IAAI;QAAA;QAAAtB,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAE,CAAC,CAACmL,QAAQ,CAAC,EAAE,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAAD,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACpG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3G,CAAC;IAAA;IAAA;MAAA1G,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACD,OAAOyB,KAAK,CAACC,IAAI,CAACmE,MAAM,CAAC,CAACH,GAAG,CAACxF,CAAC,IAAI;MAAA;MAAAtB,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAAE,CAAC,CAACmL,QAAQ,CAAC,EAAE,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAD,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAACpG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAC3F;EACQ8E,iBAAiBA,CAACvI,MAAyB;IAAA;IAAAjD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAY,OAAO2L,IAAI,CAACC,SAAS,CAAC/J,MAAM,CAAC,CAACyD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAAC;;AAC3G;AAAA1G,cAAA,GAAAoB,CAAA;AAzTD6L,OAAA,CAAAjK,WAAA,GAAAA,WAAA","ignoreList":[]}