f441a6aecaf5ddcc25a8398047a86fca
"use strict";

/**
 * @file health\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_6hhktm7mv() {
  var path = "E:\\zk-agent\\app\\api\\health\\route.ts";
  var hash = "c17e2d9037e30e6084349016e450c665edbbd231";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\health\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "7": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 61
        }
      },
      "10": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 61
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 61
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 59
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 61
        }
      },
      "16": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "17": {
        start: {
          line: 50,
          column: 19
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "18": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 102
        }
      },
      "19": {
        start: {
          line: 63,
          column: 73
        },
        end: {
          line: 63,
          column: 101
        }
      },
      "20": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 63
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 122
        }
      }
    },
    fnMap: {
      "0": {
        name: "checkDatabase",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 28
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "checkRedis",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 25
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "checkFastGPT",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 27
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 31
      },
      "3": {
        name: "checkFileSystem",
        decl: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 30
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 100
          },
          end: {
            line: 49,
            column: 101
          }
        },
        loc: {
          start: {
            line: 49,
            column: 175
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 60
          },
          end: {
            line: 63,
            column: 61
          }
        },
        loc: {
          start: {
            line: 63,
            column: 73
          },
          end: {
            line: 63,
            column: 101
          }
        },
        line: 63
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 48
          }
        }, {
          start: {
            line: 59,
            column: 52
          },
          end: {
            line: 59,
            column: 61
          }
        }],
        line: 59
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 60,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 60,
            column: 41
          }
        }, {
          start: {
            line: 60,
            column: 45
          },
          end: {
            line: 60,
            column: 54
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 69,
            column: 5
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\health\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE5D,SAAS;AACT,KAAK,UAAU,aAAa;IAC1B,IAAI,CAAC;QACH,mBAAmB;QACnB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC;IACtD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IACvD,CAAC;AACH,CAAC;AAED,KAAK,UAAU,UAAU;IACvB,IAAI,CAAC;QACH,qBAAqB;QACrB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;IACrD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IACvD,CAAC;AACH,CAAC;AAED,KAAK,UAAU,YAAY;IACzB,IAAI,CAAC;QACH,uBAAuB;QACvB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC;IACvD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IACvD,CAAC;AACH,CAAC;AAED,KAAK,UAAU,eAAe;IAC5B,IAAI,CAAC;QACH,kBAAkB;QAClB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;IACrD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IACvD,CAAC;AACH,CAAC;AAEY,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,MAAM,MAAM,GAAG;QACb,MAAM,EAAE,SAAS;QACjB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,QAAQ,EAAE;YACR,QAAQ,EAAE,MAAM,aAAa,EAAE;YAC/B,KAAK,EAAE,MAAM,UAAU,EAAE;YACzB,OAAO,EAAE,MAAM,YAAY,EAAE;YAC7B,UAAU,EAAE,MAAM,eAAe,EAAE;SACpC;QACD,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,SAAS;QACrD,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,SAAS;QAC9C,SAAS;KACV,CAAC;IAEF,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CACrD,CAAC,OAAY,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,CAC/C,CAAC;IAEF,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;SAAM,CAAC;QACL,OAAO,+BAAkB,CAAC,KAAK,CAC7B,mBAAmB,EACnB,6BAA6B,EAC7B,EAAE,MAAM,EAAE,EACV,GAAG,CACJ,CAAC;IACJ,CAAC;AACJ,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\health\\route.ts"],
      sourcesContent: ["/**\n * @file health\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\n// \u5065\u5EB7\u68C0\u67E5\u51FD\u6570\nasync function checkDatabase() {\n  try {\n    // TODO: \u5B9E\u9645\u7684\u6570\u636E\u5E93\u8FDE\u63A5\u68C0\u67E5\n    return { status: \"healthy\", responseTime: \"<10ms\" };\n  } catch (error) {\n    return { status: \"unhealthy\", error: error.message };\n  }\n}\n\nasync function checkRedis() {\n  try {\n    // TODO: \u5B9E\u9645\u7684Redis\u8FDE\u63A5\u68C0\u67E5\n    return { status: \"healthy\", responseTime: \"<5ms\" };\n  } catch (error) {\n    return { status: \"unhealthy\", error: error.message };\n  }\n}\n\nasync function checkFastGPT() {\n  try {\n    // TODO: \u5B9E\u9645\u7684FastGPT\u670D\u52A1\u68C0\u67E5\n    return { status: \"healthy\", responseTime: \"<100ms\" };\n  } catch (error) {\n    return { status: \"unhealthy\", error: error.message };\n  }\n}\n\nasync function checkFileSystem() {\n  try {\n    // TODO: \u5B9E\u9645\u7684\u6587\u4EF6\u7CFB\u7EDF\u68C0\u67E5\n    return { status: \"healthy\", responseTime: \"<5ms\" };\n  } catch (error) {\n    return { status: \"unhealthy\", error: error.message };\n  }\n}\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const health = {\n      status: \"healthy\",\n      timestamp: new Date().toISOString(),\n      services: {\n        database: await checkDatabase(),\n        redis: await checkRedis(),\n        fastgpt: await checkFastGPT(),\n        fileSystem: await checkFileSystem(),\n      },\n      version: process.env.npm_package_version || \"unknown\",\n      environment: process.env.NODE_ENV || \"unknown\",\n      requestId\n    };\n    \n    const allHealthy = Object.values(health.services).every(\n      (service: any) => service.status === \"healthy\"\n    );\n    \n    if (allHealthy) {\n      return ApiResponseWrapper.success(health);\n    } else {\n       return ApiResponseWrapper.error(\n         'SERVICE_UNHEALTHY',\n         'Some services are unhealthy',\n         { health },\n         503\n       );\n     }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c17e2d9037e30e6084349016e450c665edbbd231"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6hhktm7mv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6hhktm7mv();
cov_6hhktm7mv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6hhktm7mv().s[1]++;
exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_6hhktm7mv().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_6hhktm7mv().s[3]++, require("@/lib/utils/api-helper"));
// 健康检查函数
async function checkDatabase() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[0]++;
  cov_6hhktm7mv().s[4]++;
  try {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[5]++;
    // TODO: 实际的数据库连接检查
    return {
      status: "healthy",
      responseTime: "<10ms"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[6]++;
    return {
      status: "unhealthy",
      error: error.message
    };
  }
}
async function checkRedis() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[1]++;
  cov_6hhktm7mv().s[7]++;
  try {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[8]++;
    // TODO: 实际的Redis连接检查
    return {
      status: "healthy",
      responseTime: "<5ms"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[9]++;
    return {
      status: "unhealthy",
      error: error.message
    };
  }
}
async function checkFastGPT() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[2]++;
  cov_6hhktm7mv().s[10]++;
  try {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[11]++;
    // TODO: 实际的FastGPT服务检查
    return {
      status: "healthy",
      responseTime: "<100ms"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[12]++;
    return {
      status: "unhealthy",
      error: error.message
    };
  }
}
async function checkFileSystem() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[3]++;
  cov_6hhktm7mv().s[13]++;
  try {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[14]++;
    // TODO: 实际的文件系统检查
    return {
      status: "healthy",
      responseTime: "<5ms"
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[15]++;
    return {
      status: "unhealthy",
      error: error.message
    };
  }
}
/* istanbul ignore next */
cov_6hhktm7mv().s[16]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[4]++;
  const health =
  /* istanbul ignore next */
  (cov_6hhktm7mv().s[17]++, {
    status: "healthy",
    timestamp: new Date().toISOString(),
    services: {
      database: await checkDatabase(),
      redis: await checkRedis(),
      fastgpt: await checkFastGPT(),
      fileSystem: await checkFileSystem()
    },
    version:
    /* istanbul ignore next */
    (cov_6hhktm7mv().b[0][0]++, process.env.npm_package_version) ||
    /* istanbul ignore next */
    (cov_6hhktm7mv().b[0][1]++, "unknown"),
    environment:
    /* istanbul ignore next */
    (cov_6hhktm7mv().b[1][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_6hhktm7mv().b[1][1]++, "unknown"),
    requestId
  });
  const allHealthy =
  /* istanbul ignore next */
  (cov_6hhktm7mv().s[18]++, Object.values(health.services).every(service => {
    /* istanbul ignore next */
    cov_6hhktm7mv().f[5]++;
    cov_6hhktm7mv().s[19]++;
    return service.status === "healthy";
  }));
  /* istanbul ignore next */
  cov_6hhktm7mv().s[20]++;
  if (allHealthy) {
    /* istanbul ignore next */
    cov_6hhktm7mv().b[2][0]++;
    cov_6hhktm7mv().s[21]++;
    return api_helper_1.ApiResponseWrapper.success(health);
  } else {
    /* istanbul ignore next */
    cov_6hhktm7mv().b[2][1]++;
    cov_6hhktm7mv().s[22]++;
    return api_helper_1.ApiResponseWrapper.error('SERVICE_UNHEALTHY', 'Some services are unhealthy', {
      health
    }, 503);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,