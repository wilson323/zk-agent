{"version":3,"names":["cov_1zbhjkna1b","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createApiRoute","createPaginatedResponse","handleApiError","server_1","require","zod_1","auth_utils_1","logger_1","ErrorCode","ApiResponseWrapper","success","data","meta","response","timestamp","Date","toISOString","requestId","crypto","randomUUID","NextResponse","json","error","code","message","details","status","handler","options","request","params","startTime","now","logger","info","method","url","userAgent","headers","get","context","requireAuth","token","extractTokenFromRequest","AUTHENTICATION_ERROR","payload","verifyToken","user","id","userId","email","role","requireAdmin","AUTHORIZATION_ERROR","bodySchema","body","validatedBody","parse","z","ZodError","VALIDATION_ERROR","errors","querySchema","searchParams","URLSearchParams","nextUrl","search","query","Object","fromEntries","entries","validatedQuery","duration","Error","stack","INTERNAL_SERVER_ERROR","process","env","NODE_ENV","CommonValidations","pagination","object","page","string","optional","transform","val","parseInt","limit","sort","order","enum","uuid","q","filter","category","timeRange","datetime","endTime","RouteConfigs","public","logLevel","authenticated","admin","mutation","rateLimit","windowMs","maxRequests","total","items","totalPages","Math","ceil","hasNext","hasPrev"],"sources":["E:\\zk-agent\\lib\\api\\route-factory.ts"],"sourcesContent":["/**\n * API路由工厂\n * 统一的API路由创建和中间件管理\n */\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { z, ZodSchema } from 'zod'\nimport { extractTokenFromRequest, verifyToken, type User } from '@/lib/auth/auth-utils'\nimport { logger } from '@/lib/utils/logger'\n\n// 路由处理器类型\nexport type RouteHandler<T = any> = (\n  request: NextRequest,\n  context: RouteContext<T>\n) => Promise<NextResponse> | NextResponse\n\n// 路由上下文\nexport interface RouteContext<T = any> {\n  params: Record<string, string>\n  user?: User\n  validatedBody?: T\n  validatedQuery?: Record<string, any>\n  requestId: string\n}\n\n// API响应格式\nexport interface ApiResponse<T = any> {\n  success: boolean\n  data?: T\n  error?: {\n    code: string\n    message: string\n    details?: any\n  }\n  meta?: {\n    timestamp: string\n    requestId: string\n    version: string\n  }\n}\n\n// 错误代码枚举\nexport enum ErrorCode {\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR',\n  AUTHORIZATION_ERROR = 'AUTHORIZATION_ERROR',\n  NOT_FOUND = 'NOT_FOUND',\n  INTERNAL_ERROR = 'INTERNAL_ERROR',\n  RATE_LIMIT_ERROR = 'RATE_LIMIT_ERROR',\n  BAD_REQUEST = 'BAD_REQUEST'\n}\n\n// 路由配置选项\nexport interface RouteOptions<T = any> {\n  // 认证要求\n  requireAuth?: boolean\n  requireAdmin?: boolean\n  \n  // 验证模式\n  bodySchema?: ZodSchema<T>\n  querySchema?: ZodSchema\n  \n  // 速率限制\n  rateLimit?: {\n    windowMs: number\n    maxRequests: number\n  }\n  \n  // 缓存设置\n  cache?: {\n    ttl: number\n    key?: string\n  }\n  \n  // 日志级别\n  logLevel?: 'debug' | 'info' | 'warn' | 'error'\n}\n\n/**\n * API响应包装器\n */\nexport class ApiResponseWrapper {\n  static success<T>(data: T, meta?: Partial<ApiResponse['meta']>): NextResponse {\n    const response: ApiResponse<T> = {\n      success: true,\n      data,\n      meta: {\n        timestamp: new Date().toISOString(),\n        requestId: crypto.randomUUID(),\n        version: '1.0.0',\n        ...meta\n      }\n    }\n    \n    return NextResponse.json(response)\n  }\n  \n  static error(\n    code: ErrorCode,\n    message: string,\n    details?: any,\n    status: number = 400\n  ): NextResponse {\n    const response: ApiResponse = {\n      success: false,\n      error: { code, message, details },\n      meta: {\n        timestamp: new Date().toISOString(),\n        requestId: crypto.randomUUID(),\n        version: '1.0.0'\n      }\n    }\n    \n    return NextResponse.json(response, { status })\n  }\n}\n\n/**\n * 创建API路由处理器\n */\nexport function createApiRoute<T = any>(\n  handler: RouteHandler<T>,\n  options: RouteOptions<T> = {}\n) {\n  return async (\n    request: NextRequest,\n    params?: { params: Record<string, string> }\n  ): Promise<NextResponse> => {\n    const requestId = crypto.randomUUID()\n    const startTime = Date.now()\n    \n    try {\n      // 日志记录请求开始\n      logger.info('API Request Started', {\n        method: request.method,\n        url: request.url,\n        requestId,\n        userAgent: request.headers.get('user-agent')\n      })\n      \n      // 创建路由上下文\n      const context: RouteContext<T> = {\n        params: params?.params || {},\n        requestId\n      }\n      \n      // 认证检查\n      if (options.requireAuth) {\n        const token = extractTokenFromRequest(request)\n        if (!token) {\n          return ApiResponseWrapper.error(\n            ErrorCode.AUTHENTICATION_ERROR,\n            '需要认证令牌',\n            null,\n            401\n          )\n        }\n        \n        const payload = verifyToken(token)\n        if (!payload) {\n          return ApiResponseWrapper.error(\n            ErrorCode.AUTHENTICATION_ERROR,\n            '无效的认证令牌',\n            null,\n            401\n          )\n        }\n        \n        context.user = {\n          id: payload.userId,\n          email: payload.email,\n          role: payload.role as 'user' | 'admin'\n        }\n        \n        // 管理员权限检查\n        if (options.requireAdmin && context.user.role !== 'admin') {\n          return ApiResponseWrapper.error(\n            ErrorCode.AUTHORIZATION_ERROR,\n            '需要管理员权限',\n            null,\n            403\n          )\n        }\n      }\n      \n      // 请求体验证\n      if (options.bodySchema && request.method !== 'GET') {\n        try {\n          const body = await request.json()\n          context.validatedBody = options.bodySchema.parse(body)\n        } catch (error) {\n          if (error instanceof z.ZodError) {\n            return ApiResponseWrapper.error(\n              ErrorCode.VALIDATION_ERROR,\n              '请求体验证失败',\n              error.errors\n            )\n          }\n          throw error\n        }\n      }\n      \n      // 查询参数验证\n      if (options.querySchema) {\n        try {\n          const searchParams = new URLSearchParams(request.nextUrl.search)\n          const query = Object.fromEntries(searchParams.entries())\n          context.validatedQuery = options.querySchema.parse(query)\n        } catch (error) {\n          if (error instanceof z.ZodError) {\n            return ApiResponseWrapper.error(\n              ErrorCode.VALIDATION_ERROR,\n              '查询参数验证失败',\n              error.errors\n            )\n          }\n          throw error\n        }\n      }\n      \n      // 执行路由处理器\n      const response = await handler(request, context)\n      \n      // 日志记录请求完成\n      const duration = Date.now() - startTime\n      logger.info('API Request Completed', {\n        method: request.method,\n        url: request.url,\n        requestId,\n        duration,\n        status: response.status\n      })\n      \n      return response\n      \n    } catch (error) {\n      // 错误处理\n      const duration = Date.now() - startTime\n      logger.error('API Request Failed', {\n        method: request.method,\n        url: request.url,\n        requestId,\n        duration,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        stack: error instanceof Error ? error.stack : undefined\n      })\n      \n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        '内部服务器错误',\n        process.env.NODE_ENV === 'development' ? \n          (error instanceof Error ? error.message : error) : undefined,\n        500\n      )\n    }\n  }\n}\n\n/**\n * 常用验证模式\n */\nexport const CommonValidations = {\n  // 分页参数\n  pagination: z.object({\n    page: z.string().optional().transform(val => val ? parseInt(val) : 1),\n    limit: z.string().optional().transform(val => val ? parseInt(val) : 10),\n    sort: z.string().optional(),\n    order: z.enum(['asc', 'desc']).optional()\n  }),\n  \n  // ID参数\n  id: z.object({\n    id: z.string().uuid('无效的ID格式')\n  }),\n  \n  // 搜索参数\n  search: z.object({\n    q: z.string().optional(),\n    filter: z.string().optional(),\n    category: z.string().optional()\n  }),\n  \n  // 时间范围\n  timeRange: z.object({\n    startTime: z.string().datetime().optional(),\n    endTime: z.string().datetime().optional()\n  })\n}\n\n/**\n * 路由配置预设\n */\nexport const RouteConfigs = {\n  // 公开路由\n  public: {\n    requireAuth: false,\n    logLevel: 'info' as const\n  },\n  \n  // 需要认证的路由\n  authenticated: {\n    requireAuth: true,\n    logLevel: 'info' as const\n  },\n  \n  // 管理员路由\n  admin: {\n    requireAuth: true,\n    requireAdmin: true,\n    logLevel: 'warn' as const\n  },\n  \n  // 数据修改路由\n  mutation: {\n    requireAuth: true,\n    logLevel: 'warn' as const,\n    rateLimit: {\n      windowMs: 15 * 60 * 1000, // 15分钟\n      maxRequests: 100\n    }\n  }\n}\n\n/**\n * 创建分页响应\n */\nexport function createPaginatedResponse<T>(\n  data: T[],\n  total: number,\n  page: number,\n  limit: number\n) {\n  return {\n    items: data,\n    pagination: {\n      page,\n      limit,\n      total,\n      totalPages: Math.ceil(total / limit),\n      hasNext: page * limit < total,\n      hasPrev: page > 1\n    }\n  }\n}\n\n/**\n * 标准化错误处理\n */\nexport function handleApiError(error: unknown): NextResponse {\n  if (error instanceof z.ZodError) {\n    return ApiResponseWrapper.error(\n      ErrorCode.VALIDATION_ERROR,\n      '数据验证失败',\n      error.errors\n    )\n  }\n  \n  if (error instanceof Error) {\n    return ApiResponseWrapper.error(\n      ErrorCode.INTERNAL_SERVER_ERROR,\n      error.message,\n      process.env.NODE_ENV === 'development' ? error.stack : undefined,\n      500\n    )\n  }\n  \n  return ApiResponseWrapper.error(\n    ErrorCode.INTERNAL_SERVER_ERROR,\n    '未知错误',\n    undefined,\n    500\n  )\n}"],"mappings":"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","ignoreList":[]}