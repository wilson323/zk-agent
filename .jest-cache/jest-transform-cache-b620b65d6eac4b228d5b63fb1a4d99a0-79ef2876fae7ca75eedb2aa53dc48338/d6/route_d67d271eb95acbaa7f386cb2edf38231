28262e87ef22367f8dd8b8fc92d01bf0
"use strict";

/**
 * @file ai-models\metrics\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1me0itx90() {
  var path = "E:\\zk-agent\\app\\api\\ai-models\\metrics\\route.ts";
  var hash = "c8cad2f2efabd9f39040fe052aa4ab11e665707a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ai-models\\metrics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 33
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "8": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 83
        }
      },
      "11": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 22,
          column: 13
        }
      },
      "12": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 105
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 26,
          column: 15
        }
      },
      "14": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 77
        }
      },
      "15": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 104
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 100
          },
          end: {
            line: 13,
            column: 101
          }
        },
        loc: {
          start: {
            line: 13,
            column: 175
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 36,
            column: 9
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 22,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ai-models\\metrics\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAC5D,iEAA8D;AAEjD,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,OAAO,GAAG,cAAc,EAAE,OAAO,CAAC;QAExC,IAAI,OAAO,EAAE,CAAC;YACZ,WAAW;YACX,MAAM,OAAO,GAAG,8BAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,OAAO,+BAAkB,CAAC,KAAK,CAC7B,yBAAyB,EACzB,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;YACJ,CAAC;YAED,OAAO,+BAAkB,CAAC,OAAO,CAAC;gBAChC,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,WAAW;YACX,MAAM,UAAU,GAAG,8BAAc,CAAC,aAAa,EAAE,CAAC;YAElD,OAAO,+BAAkB,CAAC,OAAO,CAAC;gBAChC,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,UAAU,CAAC,MAAM;aACzB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,gCAAgC,EAChC,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ai-models\\metrics\\route.ts"],
      sourcesContent: ["/**\n * @file ai-models\\metrics\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { aiModelManager } from \"@/lib/ai-models/model-manager\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { searchParams } = new URL(req.url);\n      const modelId = validatedQuery?.modelId;\n    \n      if (modelId) {\n        // \u83B7\u53D6\u5355\u4E2A\u6A21\u578B\u6307\u6807\n        const metrics = aiModelManager.getModelMetrics(modelId);\n        if (!metrics) {\n          return ApiResponseWrapper.error(\n            \"Model metrics not found\",\n            { status: 404 }\n          );\n        }\n    \n        return ApiResponseWrapper.success({\n          success: true,\n          data: metrics,\n        });\n      } else {\n        // \u83B7\u53D6\u6240\u6709\u6A21\u578B\u6307\u6807\n        const allMetrics = aiModelManager.getAllMetrics();\n    \n        return ApiResponseWrapper.success({\n          success: true,\n          data: allMetrics,\n          total: allMetrics.length,\n        });\n      }\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Failed to get AI model metrics\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c8cad2f2efabd9f39040fe052aa4ab11e665707a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1me0itx90 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1me0itx90();
cov_1me0itx90().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1me0itx90().s[1]++;
exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1me0itx90().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1me0itx90().s[3]++, require("@/lib/utils/api-helper"));
const model_manager_1 =
/* istanbul ignore next */
(cov_1me0itx90().s[4]++, require("@/lib/ai-models/model-manager"));
/* istanbul ignore next */
cov_1me0itx90().s[5]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1me0itx90().f[0]++;
  cov_1me0itx90().s[6]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1me0itx90().s[7]++, new URL(req.url));
    const modelId =
    /* istanbul ignore next */
    (cov_1me0itx90().s[8]++, validatedQuery?.modelId);
    /* istanbul ignore next */
    cov_1me0itx90().s[9]++;
    if (modelId) {
      /* istanbul ignore next */
      cov_1me0itx90().b[0][0]++;
      // 获取单个模型指标
      const metrics =
      /* istanbul ignore next */
      (cov_1me0itx90().s[10]++, model_manager_1.aiModelManager.getModelMetrics(modelId));
      /* istanbul ignore next */
      cov_1me0itx90().s[11]++;
      if (!metrics) {
        /* istanbul ignore next */
        cov_1me0itx90().b[1][0]++;
        cov_1me0itx90().s[12]++;
        return api_helper_1.ApiResponseWrapper.error("Model metrics not found", {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_1me0itx90().b[1][1]++;
      }
      cov_1me0itx90().s[13]++;
      return api_helper_1.ApiResponseWrapper.success({
        success: true,
        data: metrics
      });
    } else {
      /* istanbul ignore next */
      cov_1me0itx90().b[0][1]++;
      // 获取所有模型指标
      const allMetrics =
      /* istanbul ignore next */
      (cov_1me0itx90().s[14]++, model_manager_1.aiModelManager.getAllMetrics());
      /* istanbul ignore next */
      cov_1me0itx90().s[15]++;
      return api_helper_1.ApiResponseWrapper.success({
        success: true,
        data: allMetrics,
        total: allMetrics.length
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1me0itx90().s[16]++;
    return api_helper_1.ApiResponseWrapper.error("Failed to get AI model metrics", {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,