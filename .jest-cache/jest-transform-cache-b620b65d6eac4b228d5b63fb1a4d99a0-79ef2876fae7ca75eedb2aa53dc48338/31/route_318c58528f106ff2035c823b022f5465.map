{"version":3,"names":["cov_2fqdpn80f4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","model_manager_1","exports","POST","createApiRoute","RouteConfigs","protectedPost","req","validatedBody","validatedQuery","user","requestId","params","routeParams","result","aiModelManager","testModel","id","ApiResponseWrapper","success","data","error","ErrorCode","INTERNAL_SERVER_ERROR"],"sources":["E:\\zk-agent\\app\\api\\ai-models\\[id]\\test\\route.ts"],"sourcesContent":["/**\n * @file ai-models\\[id]\\test\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { ErrorCode } from '@/types/core';\nimport { ErrorCode } from '@/types/core';\nimport { aiModelManager } from \"@/lib/ai-models/model-manager\"\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { validatedBody, validatedQuery, user, requestId, params }) => {\n    try {\n      const routeParams = await params;\n      \n      const result = await aiModelManager.testModel(routeParams.id);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to test AI model', null, 500);\n    }\n  }\n);\n\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAAzB,IAAA;EAAA;EAAA,IAAA0B,QAAA,GAAAzB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAuB,QAAA,CAAA3B,IAAA,KAAA2B,QAAA,CAAA3B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA0B,QAAA,CAAA3B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAuB,cAAA,GAAAD,QAAA,CAAA3B,IAAA;EAAA;IAmBM;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAA6B,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAA7B,cAAA;AAAAA,cAAA,GAAAiB,CAAA;;;;;;;AAXN,MAAAa,mBAAA;AAAA;AAAA,CAAA9B,cAAA,GAAAiB,CAAA,OAAAc,OAAA;AACA,MAAAC,YAAA;AAAA;AAAA,CAAAhC,cAAA,GAAAiB,CAAA,OAAAc,OAAA;AACA,MAAAE,MAAA;AAAA;AAAA,CAAAjC,cAAA,GAAAiB,CAAA,OAAAc,OAAA;AAGA,MAAAG,eAAA;AAAA;AAAA,CAAAlC,cAAA,GAAAiB,CAAA,OAAAc,OAAA;AAA8D;AAAA/B,cAAA,GAAAiB,CAAA;AAEjDkB,OAAA,CAAAC,IAAI,GAAG,IAAAN,mBAAA,CAAAO,cAAc,EAChCP,mBAAA,CAAAQ,YAAY,CAACC,aAAa,EAAE,EAC5B,OAAOC,GAAgB,EAAE;EAAEC,aAAa;EAAEC,cAAc;EAAEC,IAAI;EAAEC,SAAS;EAAEC;AAAM,CAAE,KAAI;EAAA;EAAA7C,cAAA,GAAAkB,CAAA;EAAAlB,cAAA,GAAAiB,CAAA;EACrF,IAAI;IACF,MAAM6B,WAAW;IAAA;IAAA,CAAA9C,cAAA,GAAAiB,CAAA,OAAG,MAAM4B,MAAM;IAEhC,MAAME,MAAM;IAAA;IAAA,CAAA/C,cAAA,GAAAiB,CAAA,OAAG,MAAMiB,eAAA,CAAAc,cAAc,CAACC,SAAS,CAACH,WAAW,CAACI,EAAE,CAAC;IAAC;IAAAlD,cAAA,GAAAiB,CAAA;IAE9D,OAAOe,YAAA,CAAAmB,kBAAkB,CAACC,OAAO,CAAC;MAChCA,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEN;KACP,CAAC;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IAAA;IAAAtD,cAAA,GAAAiB,CAAA;IACd,OAAOe,YAAA,CAAAmB,kBAAkB,CAACG,KAAK,CAACrB,MAAA,CAAAsB,SAAS,CAACC,qBAAqB,EAAE,yBAAyB,EAAE,IAAI,EAAE,GAAG,CAAC;EACxG;AACF,CAAC,CACF","ignoreList":[]}