c929c2a0f0e1878f9a04868d66ad60a1
"use strict";

/* istanbul ignore next */
function cov_2lrfhptbz() {
  var path = "E:\\zk-agent\\lib\\ag-ui\\compliance\\agent-compliance-audit.ts";
  var hash = "cd4070f912538561ab91a78a4135a328c7e7daaa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\ag-ui\\compliance\\agent-compliance-audit.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 38
        }
      },
      "2": {
        start: {
          line: 5,
          column: 35
        },
        end: {
          line: 5,
          column: 82
        }
      },
      "3": {
        start: {
          line: 6,
          column: 37
        },
        end: {
          line: 6,
          column: 84
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 66
        }
      },
      "5": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "7": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "9": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 74
        }
      },
      "10": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 45
        }
      },
      "11": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 65
        }
      },
      "12": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "14": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 47
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "19": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 42,
          column: 62
        }
      },
      "20": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "21": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "22": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "23": {
        start: {
          line: 50,
          column: 34
        },
        end: {
          line: 50,
          column: 74
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 59,
          column: 10
        }
      },
      "25": {
        start: {
          line: 54,
          column: 51
        },
        end: {
          line: 54,
          column: 64
        }
      },
      "26": {
        start: {
          line: 65,
          column: 59
        },
        end: {
          line: 65,
          column: 66
        }
      },
      "27": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "28": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "29": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "30": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 26
        }
      },
      "31": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "32": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 26
        }
      },
      "33": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 59
        }
      },
      "34": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 26
        }
      },
      "35": {
        start: {
          line: 79,
          column: 20
        },
        end: {
          line: 79,
          column: 71
        }
      },
      "36": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 46
        }
      },
      "37": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "38": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 81
        }
      },
      "39": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "40": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "41": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 108
        }
      },
      "42": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "43": {
        start: {
          line: 98,
          column: 26
        },
        end: {
          line: 98,
          column: 81
        }
      },
      "44": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 100,
          column: 29
        }
      },
      "45": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 101,
          column: 31
        }
      },
      "46": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 105,
          column: 14
        }
      },
      "47": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 35
        }
      },
      "48": {
        start: {
          line: 107,
          column: 40
        },
        end: {
          line: 109,
          column: 14
        }
      },
      "49": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "50": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 53
        }
      },
      "51": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 70
        }
      },
      "52": {
        start: {
          line: 113,
          column: 43
        },
        end: {
          line: 113,
          column: 68
        }
      },
      "53": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 39
        }
      },
      "54": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 46
        }
      },
      "55": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 142
        }
      },
      "56": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "57": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 26
        }
      },
      "58": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 71
        }
      },
      "59": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 24
        }
      },
      "60": {
        start: {
          line: 132,
          column: 25
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "61": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 90
        }
      },
      "62": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "63": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 52
        }
      },
      "64": {
        start: {
          line: 138,
          column: 27
        },
        end: {
          line: 138,
          column: 29
        }
      },
      "65": {
        start: {
          line: 139,
          column: 29
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "66": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 143,
          column: 14
        }
      },
      "67": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 35
        }
      },
      "68": {
        start: {
          line: 145,
          column: 40
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "69": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 61
        }
      },
      "70": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 103
        }
      },
      "71": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 62
        }
      },
      "72": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 70
        }
      },
      "73": {
        start: {
          line: 153,
          column: 43
        },
        end: {
          line: 153,
          column: 68
        }
      },
      "74": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 39
        }
      },
      "75": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 46
        }
      },
      "76": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 133
        }
      },
      "77": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 30
        }
      },
      "78": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "79": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "80": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 24
        }
      },
      "81": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 53
        }
      },
      "82": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 96
        }
      },
      "83": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "84": {
        start: {
          line: 176,
          column: 26
        },
        end: {
          line: 176,
          column: 52
        }
      },
      "85": {
        start: {
          line: 178,
          column: 27
        },
        end: {
          line: 178,
          column: 29
        }
      },
      "86": {
        start: {
          line: 179,
          column: 29
        },
        end: {
          line: 179,
          column: 31
        }
      },
      "87": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 183,
          column: 14
        }
      },
      "88": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 35
        }
      },
      "89": {
        start: {
          line: 185,
          column: 40
        },
        end: {
          line: 187,
          column: 14
        }
      },
      "90": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 61
        }
      },
      "91": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 193,
          column: 15
        }
      },
      "92": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 70
        }
      },
      "93": {
        start: {
          line: 195,
          column: 43
        },
        end: {
          line: 195,
          column: 68
        }
      },
      "94": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 39
        }
      },
      "95": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 46
        }
      },
      "96": {
        start: {
          line: 200,
          column: 27
        },
        end: {
          line: 200,
          column: 136
        }
      },
      "97": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 30
        }
      },
      "98": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 26
        }
      },
      "99": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 65
        }
      },
      "100": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "101": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "102": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 52
        }
      },
      "103": {
        start: {
          line: 217,
          column: 27
        },
        end: {
          line: 217,
          column: 88
        }
      },
      "104": {
        start: {
          line: 217,
          column: 59
        },
        end: {
          line: 217,
          column: 84
        }
      },
      "105": {
        start: {
          line: 218,
          column: 29
        },
        end: {
          line: 218,
          column: 68
        }
      },
      "106": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 73
        }
      },
      "107": {
        start: {
          line: 219,
          column: 54
        },
        end: {
          line: 219,
          column: 72
        }
      },
      "108": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 52
        }
      },
      "109": {
        start: {
          line: 226,
          column: 32
        },
        end: {
          line: 226,
          column: 34
        }
      },
      "110": {
        start: {
          line: 227,
          column: 35
        },
        end: {
          line: 227,
          column: 72
        }
      },
      "111": {
        start: {
          line: 227,
          column: 57
        },
        end: {
          line: 227,
          column: 71
        }
      },
      "112": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "113": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 86
        }
      },
      "114": {
        start: {
          line: 231,
          column: 31
        },
        end: {
          line: 231,
          column: 73
        }
      },
      "115": {
        start: {
          line: 231,
          column: 53
        },
        end: {
          line: 231,
          column: 72
        }
      },
      "116": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "117": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 77
        }
      },
      "118": {
        start: {
          line: 235,
          column: 29
        },
        end: {
          line: 235,
          column: 59
        }
      },
      "119": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "120": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 67
        }
      },
      "121": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "122": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 57
        }
      },
      "123": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 31
        }
      },
      "124": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 248,
          column: 36
        }
      },
      "125": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "126": {
        start: {
          line: 250,
          column: 30
        },
        end: {
          line: 250,
          column: 105
        }
      },
      "127": {
        start: {
          line: 251,
          column: 32
        },
        end: {
          line: 251,
          column: 111
        }
      },
      "128": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "129": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 72
        }
      },
      "130": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "131": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 76
        }
      },
      "132": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 37
        }
      },
      "133": {
        start: {
          line: 261,
          column: 35
        },
        end: {
          line: 261,
          column: 44
        }
      },
      "134": {
        start: {
          line: 262,
          column: 30
        },
        end: {
          line: 262,
          column: 35
        }
      },
      "135": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 43
        }
      },
      "136": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 49
        }
      },
      "137": {
        start: {
          line: 280,
          column: 26
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "138": {
        start: {
          line: 282,
          column: 81
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "139": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 50
        }
      },
      "140": {
        start: {
          line: 290,
          column: 0
        },
        end: {
          line: 290,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 44
          },
          end: {
            line: 54,
            column: 45
          }
        },
        loc: {
          start: {
            line: 54,
            column: 51
          },
          end: {
            line: 54,
            column: 64
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 46
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 93
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 103,
            column: 68
          },
          end: {
            line: 103,
            column: 69
          }
        },
        loc: {
          start: {
            line: 103,
            column: 79
          },
          end: {
            line: 105,
            column: 13
          }
        },
        line: 103
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 107,
            column: 78
          },
          end: {
            line: 107,
            column: 79
          }
        },
        loc: {
          start: {
            line: 107,
            column: 88
          },
          end: {
            line: 109,
            column: 13
          }
        },
        line: 107
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 31
          }
        },
        loc: {
          start: {
            line: 113,
            column: 43
          },
          end: {
            line: 113,
            column: 68
          }
        },
        line: 113
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 141,
            column: 68
          },
          end: {
            line: 141,
            column: 69
          }
        },
        loc: {
          start: {
            line: 141,
            column: 79
          },
          end: {
            line: 143,
            column: 13
          }
        },
        line: 141
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 145,
            column: 78
          },
          end: {
            line: 145,
            column: 79
          }
        },
        loc: {
          start: {
            line: 145,
            column: 88
          },
          end: {
            line: 147,
            column: 13
          }
        },
        line: 145
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 31
          }
        },
        loc: {
          start: {
            line: 153,
            column: 43
          },
          end: {
            line: 153,
            column: 68
          }
        },
        line: 153
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 29
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 171
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 181,
            column: 68
          },
          end: {
            line: 181,
            column: 69
          }
        },
        loc: {
          start: {
            line: 181,
            column: 79
          },
          end: {
            line: 183,
            column: 13
          }
        },
        line: 181
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 185,
            column: 78
          },
          end: {
            line: 185,
            column: 79
          }
        },
        loc: {
          start: {
            line: 185,
            column: 88
          },
          end: {
            line: 187,
            column: 13
          }
        },
        line: 185
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 195,
            column: 31
          }
        },
        loc: {
          start: {
            line: 195,
            column: 43
          },
          end: {
            line: 195,
            column: 68
          }
        },
        line: 195
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 40
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 213
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 217,
            column: 42
          },
          end: {
            line: 217,
            column: 43
          }
        },
        loc: {
          start: {
            line: 217,
            column: 59
          },
          end: {
            line: 217,
            column: 84
          }
        },
        line: 217
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 219,
            column: 42
          },
          end: {
            line: 219,
            column: 43
          }
        },
        loc: {
          start: {
            line: 219,
            column: 54
          },
          end: {
            line: 219,
            column: 72
          }
        },
        line: 219
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 44
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 225
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 227,
            column: 50
          },
          end: {
            line: 227,
            column: 51
          }
        },
        loc: {
          start: {
            line: 227,
            column: 57
          },
          end: {
            line: 227,
            column: 71
          }
        },
        line: 227
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 231,
            column: 46
          },
          end: {
            line: 231,
            column: 47
          }
        },
        loc: {
          start: {
            line: 231,
            column: 53
          },
          end: {
            line: 231,
            column: 72
          }
        },
        line: 231
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 30
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 247
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 261,
            column: 21
          }
        },
        loc: {
          start: {
            line: 261,
            column: 35
          },
          end: {
            line: 261,
            column: 44
          }
        },
        line: 261
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 262,
            column: 17
          },
          end: {
            line: 262,
            column: 18
          }
        },
        loc: {
          start: {
            line: 262,
            column: 30
          },
          end: {
            line: 262,
            column: 35
          }
        },
        line: 262
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 25
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 267
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 20
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 273
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 25
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 279
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 282,
            column: 60
          },
          end: {
            line: 282,
            column: 61
          }
        },
        loc: {
          start: {
            line: 282,
            column: 81
          },
          end: {
            line: 285,
            column: 13
          }
        },
        line: 282
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 64,
            column: 44
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 23
          },
          end: {
            line: 65,
            column: 37
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 39
          },
          end: {
            line: 65,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 50
          },
          end: {
            line: 65,
            column: 54
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 26
          }
        }, {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 74,
            column: 26
          }
        }, {
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 77,
            column: 26
          }
        }, {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 79,
            column: 71
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "5": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "6": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "7": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "8": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "9": {
        loc: {
          start: {
            line: 253,
            column: 39
          },
          end: {
            line: 253,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 39
          },
          end: {
            line: 253,
            column: 60
          }
        }, {
          start: {
            line: 253,
            column: 64
          },
          end: {
            line: 253,
            column: 65
          }
        }],
        line: 253
      },
      "10": {
        loc: {
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 256,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 256,
            column: 64
          }
        }, {
          start: {
            line: 256,
            column: 68
          },
          end: {
            line: 256,
            column: 69
          }
        }],
        line: 256
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\ag-ui\\compliance\\agent-compliance-audit.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\ag-ui\\compliance\\agent-compliance-audit.ts"],
      sourcesContent: ["// @ts-nocheck\nimport { AgentComplianceChecker, type ComplianceReport } from \"../protocol/agent-compliance-checker\"\nimport { ConversationAgentAdapter } from \"../agents/conversation-agent-adapter\"\nimport { CADAgentAdapter } from \"../agents/cad-agent-adapter\"\nimport { PosterAgentAdapter } from \"../agents/poster-agent-adapter\"\nimport type { AgUIEvent, Message } from \"../protocol/complete-types\"\n\n/**\n * \u667A\u80FD\u4F53\u5408\u89C4\u6027\u5BA1\u8BA1\u5668\n * \u68C0\u67E5\u6240\u6709\u667A\u80FD\u4F53\u662F\u5426\u9075\u5FAAAG-UI\u534F\u8BAE\n */\nexport class AgentComplianceAudit {\n  private reports: Map<string, ComplianceReport> = new Map()\n\n  /**\n   * \u5BA1\u8BA1\u6240\u6709\u667A\u80FD\u4F53\n   */\n  async auditAllAgents(): Promise<ComplianceAuditResult> {\n    const results: ComplianceReport[] = []\n\n    // \u5BA1\u8BA1\u5BF9\u8BDD\u667A\u80FD\u4F53\n    try {\n      const conversationReport = await this.auditConversationAgent()\n      results.push(conversationReport)\n      this.reports.set(\"conversation\", conversationReport)\n    } catch (error) {\n      console.error(\"Error auditing conversation agent:\", error)\n    }\n\n    // \u5BA1\u8BA1CAD\u667A\u80FD\u4F53\n    try {\n      const cadReport = await this.auditCADAgent()\n      results.push(cadReport)\n      this.reports.set(\"cad\", cadReport)\n    } catch (error) {\n      console.error(\"Error auditing CAD agent:\", error)\n    }\n\n    // \u5BA1\u8BA1\u6D77\u62A5\u667A\u80FD\u4F53\n    try {\n      const posterReport = await this.auditPosterAgent()\n      results.push(posterReport)\n      this.reports.set(\"poster\", posterReport)\n    } catch (error) {\n      console.error(\"Error auditing poster agent:\", error)\n    }\n\n    // \u8BA1\u7B97\u603B\u4F53\u5408\u89C4\u6027\n    const overallCompliance = this.calculateOverallCompliance(results)\n\n    return {\n      timestamp: Date.now(),\n      totalAgents: results.length,\n      compliantAgents: results.filter((r) => r.isCompliant).length,\n      overallScore: overallCompliance.score,\n      isCompliant: overallCompliance.isCompliant,\n      reports: results,\n      recommendations: this.generateOverallRecommendations(results),\n    }\n  }\n\n  /**\n   * \u6267\u884C\u5355\u4E2A\u667A\u80FD\u4F53\u7684\u5408\u89C4\u6027\u5BA1\u8BA1\n   */\n  async performAudit(agentId: string, options: { type?: string; detailed?: boolean } = {}): Promise<ComplianceReport> {\n    const { type = 'conversation', detailed = true } = options\n\n    try {\n      let report: ComplianceReport\n\n      switch (type) {\n        case 'conversation':\n          report = await this.auditConversationAgent()\n          break\n        case 'cad':\n          report = await this.auditCADAgent()\n          break\n        case 'poster':\n          report = await this.auditPosterAgent()\n          break\n        default:\n          throw new Error(`Unsupported agent type: ${type}`)\n      }\n\n      // \u5B58\u50A8\u62A5\u544A\n      this.reports.set(agentId, report)\n\n      return report\n    } catch (error) {\n      console.error(`Error performing audit for agent ${agentId}:`, error)\n      throw error\n    }\n  }\n\n  /**\n   * \u5BA1\u8BA1\u5BF9\u8BDD\u667A\u80FD\u4F53\n   */\n  private async auditConversationAgent(): Promise<ComplianceReport> {\n    const threadId = `audit-conversation-${Date.now()}`\n    const adapter = new ConversationAgentAdapter(threadId, { debug: true })\n\n    try {\n      // \u521D\u59CB\u5316\u667A\u80FD\u4F53\uFF08\u4F7F\u7528\u9ED8\u8BA4\u914D\u7F6E\uFF09\n      const agent = await adapter.initialize(\"test-app-id\", \"test-api-key\")\n\n      // \u6A21\u62DF\u5BF9\u8BDD\u6D41\u7A0B\n      const events: AgUIEvent[] = []\n      const messages: Message[] = []\n\n      // \u8BA2\u9605\u4E8B\u4EF6\n      const subscription = adapter.getEventStream().subscribe((event) => {\n        events.push(event)\n      })\n\n      // \u8BA2\u9605\u6D88\u606F\n      const messageSubscription = adapter.getMessagesStream().subscribe((msgs) => {\n        messages.splice(0, messages.length, ...msgs)\n      })\n\n      // \u53D1\u9001\u6D4B\u8BD5\u6D88\u606F\n      await adapter.sendMessage(\"\u4F60\u597D\uFF0C\u8FD9\u662F\u4E00\u4E2A\u6D4B\u8BD5\u6D88\u606F\")\n\n      // \u7B49\u5F85\u5904\u7406\u5B8C\u6210\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n\n      // \u6E05\u7406\u8BA2\u9605\n      subscription.unsubscribe()\n      messageSubscription.unsubscribe()\n\n      // \u751F\u6210\u5408\u89C4\u6027\u62A5\u544A\n      const report = AgentComplianceChecker.generateComplianceReport(\"conversation\", agent, events, messages)\n\n      // \u6E05\u7406\u8D44\u6E90\n      adapter.dispose()\n\n      return report\n    } catch (error) {\n      console.error(\"Error in conversation agent audit:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * \u5BA1\u8BA1CAD\u667A\u80FD\u4F53\n   */\n  private async auditCADAgent(): Promise<ComplianceReport> {\n    const threadId = `audit-cad-${Date.now()}`\n    const adapter = new CADAgentAdapter(threadId, { debug: true })\n\n    try {\n      // \u521D\u59CB\u5316\u667A\u80FD\u4F53\n      const agent = await adapter.initialize()\n\n      // \u6A21\u62DFCAD\u5206\u6790\u6D41\u7A0B\n      const events: AgUIEvent[] = []\n      const messages: Message[] = []\n\n      // \u8BA2\u9605\u4E8B\u4EF6\n      const subscription = adapter.getEventStream().subscribe((event) => {\n        events.push(event)\n      })\n\n      // \u8BA2\u9605\u6D88\u606F\n      const messageSubscription = adapter.getMessagesStream().subscribe((msgs) => {\n        messages.splice(0, messages.length, ...msgs)\n      })\n\n      // \u521B\u5EFA\u6A21\u62DFCAD\u6587\u4EF6\n      const mockCADFile = new File([\"mock cad content\"], \"test.dwg\", { type: \"application/dwg\" })\n\n      // \u5206\u6790CAD\u6587\u4EF6\n      await adapter.analyzeCADFile(mockCADFile, \"full\")\n\n      // \u7B49\u5F85\u5904\u7406\u5B8C\u6210\n      await new Promise((resolve) => setTimeout(resolve, 3000))\n\n      // \u6E05\u7406\u8BA2\u9605\n      subscription.unsubscribe()\n      messageSubscription.unsubscribe()\n\n      // \u751F\u6210\u5408\u89C4\u6027\u62A5\u544A\n      const report = AgentComplianceChecker.generateComplianceReport(\"cad\", agent, events, messages)\n\n      // \u6E05\u7406\u8D44\u6E90\n      adapter.dispose()\n\n      return report\n    } catch (error) {\n      console.error(\"Error in CAD agent audit:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * \u5BA1\u8BA1\u6D77\u62A5\u667A\u80FD\u4F53\n   */\n  private async auditPosterAgent(): Promise<ComplianceReport> {\n    const threadId = `audit-poster-${Date.now()}`\n    const adapter = new PosterAgentAdapter(threadId, { debug: true })\n\n    try {\n      // \u521D\u59CB\u5316\u667A\u80FD\u4F53\n      const agent = await adapter.initialize()\n\n      // \u6A21\u62DF\u6D77\u62A5\u751F\u6210\u6D41\u7A0B\n      const events: AgUIEvent[] = []\n      const messages: Message[] = []\n\n      // \u8BA2\u9605\u4E8B\u4EF6\n      const subscription = adapter.getEventStream().subscribe((event) => {\n        events.push(event)\n      })\n\n      // \u8BA2\u9605\u6D88\u606F\n      const messageSubscription = adapter.getMessagesStream().subscribe((msgs) => {\n        messages.splice(0, messages.length, ...msgs)\n      })\n\n      // \u751F\u6210\u6D77\u62A5\n      await adapter.generatePoster(\"\u521B\u5EFA\u4E00\u4E2A\u73B0\u4EE3\u98CE\u683C\u7684\u4F01\u4E1A\u5BA3\u4F20\u6D77\u62A5\", {\n        style: \"modern\",\n        size: \"A4\",\n        colors: [\"#6cb33f\", \"#ffffff\", \"#333333\"],\n      })\n\n      // \u7B49\u5F85\u5904\u7406\u5B8C\u6210\n      await new Promise((resolve) => setTimeout(resolve, 3000))\n\n      // \u6E05\u7406\u8BA2\u9605\n      subscription.unsubscribe()\n      messageSubscription.unsubscribe()\n\n      // \u751F\u6210\u5408\u89C4\u6027\u62A5\u544A\n      const report = AgentComplianceChecker.generateComplianceReport(\"poster\", agent, events, messages)\n\n      // \u6E05\u7406\u8D44\u6E90\n      adapter.dispose()\n\n      return report\n    } catch (error) {\n      console.error(\"Error in poster agent audit:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * \u8BA1\u7B97\u603B\u4F53\u5408\u89C4\u6027\n   */\n  private calculateOverallCompliance(reports: ComplianceReport[]): { score: number; isCompliant: boolean } {\n    if (reports.length === 0) {\n      return { score: 0, isCompliant: false }\n    }\n\n    const totalScore = reports.reduce((sum, report) => sum + report.overallScore, 0)\n    const averageScore = Math.round(totalScore / reports.length)\n    const isCompliant = reports.every((report) => report.isCompliant)\n\n    return { score: averageScore, isCompliant }\n  }\n\n  /**\n   * \u751F\u6210\u603B\u4F53\u5EFA\u8BAE\n   */\n  private generateOverallRecommendations(reports: ComplianceReport[]): string[] {\n    const recommendations: string[] = []\n\n    const nonCompliantAgents = reports.filter((r) => !r.isCompliant)\n    if (nonCompliantAgents.length > 0) {\n      recommendations.push(`${nonCompliantAgents.length}\u4E2A\u667A\u80FD\u4F53\u4E0D\u7B26\u5408AG-UI\u534F\u8BAE\uFF0C\u9700\u8981\u7ACB\u5373\u4FEE\u590D`)\n    }\n\n    const lowScoreAgents = reports.filter((r) => r.overallScore < 80)\n    if (lowScoreAgents.length > 0) {\n      recommendations.push(`${lowScoreAgents.length}\u4E2A\u667A\u80FD\u4F53\u5408\u89C4\u6027\u8BC4\u5206\u8F83\u4F4E\uFF0C\u5EFA\u8BAE\u4F18\u5316`)\n    }\n\n    const commonIssues = this.findCommonIssues(reports)\n    if (commonIssues.length > 0) {\n      recommendations.push(`\u5E38\u89C1\u95EE\u9898\uFF1A${commonIssues.join(\"\u3001\")}`)\n    }\n\n    if (recommendations.length === 0) {\n      recommendations.push(\"\u6240\u6709\u667A\u80FD\u4F53\u90FD\u7B26\u5408AG-UI\u534F\u8BAE\uFF0C\u8868\u73B0\u826F\u597D\")\n    }\n\n    return recommendations\n  }\n\n  /**\n   * \u67E5\u627E\u5E38\u89C1\u95EE\u9898\n   */\n  private findCommonIssues(reports: ComplianceReport[]): string[] {\n    const issueCount: Map<string, number> = new Map()\n\n    for (const report of reports) {\n      const allErrors = [...report.definitionCompliance.errors, ...report.runtimeCompliance.errors]\n      const allWarnings = [...report.definitionCompliance.warnings, ...report.runtimeCompliance.warnings]\n\n      for (const error of allErrors) {\n        issueCount.set(error, (issueCount.get(error) || 0) + 1)\n      }\n\n      for (const warning of allWarnings) {\n        issueCount.set(warning, (issueCount.get(warning) || 0) + 1)\n      }\n    }\n\n    // \u8FD4\u56DE\u51FA\u73B0\u6B21\u6570\u8D85\u8FC71\u6B21\u7684\u95EE\u9898\n    return Array.from(issueCount.entries())\n      .filter(([, count]) => count > 1)\n      .map(([issue]) => issue)\n  }\n\n  /**\n   * \u83B7\u53D6\u5BA1\u8BA1\u62A5\u544A\n   */\n  getReport(agentType: string): ComplianceReport | undefined {\n    return this.reports.get(agentType)\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u62A5\u544A\n   */\n  getAllReports(): ComplianceReport[] {\n    return Array.from(this.reports.values())\n  }\n\n  /**\n   * \u5BFC\u51FA\u5BA1\u8BA1\u7ED3\u679C\n   */\n  exportAuditResults(): string {\n    const auditData = {\n      timestamp: Date.now(),\n      reports: Array.from(this.reports.entries()).map(([type, report]) => ({\n        agentType: type,\n        ...report,\n      })),\n    }\n\n    return JSON.stringify(auditData, null, 2)\n  }\n}\n\n// \u7C7B\u578B\u5B9A\u4E49\nexport interface ComplianceAuditResult {\n  timestamp: number\n  totalAgents: number\n  compliantAgents: number\n  overallScore: number\n  isCompliant: boolean\n  reports: ComplianceReport[]\n  recommendations: string[]\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cd4070f912538561ab91a78a4135a328c7e7daaa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lrfhptbz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lrfhptbz();
cov_2lrfhptbz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lrfhptbz().s[1]++;
exports.AgentComplianceAudit = void 0;
// @ts-nocheck
const agent_compliance_checker_1 =
/* istanbul ignore next */
(cov_2lrfhptbz().s[2]++, require("../protocol/agent-compliance-checker"));
const conversation_agent_adapter_1 =
/* istanbul ignore next */
(cov_2lrfhptbz().s[3]++, require("../agents/conversation-agent-adapter"));
const cad_agent_adapter_1 =
/* istanbul ignore next */
(cov_2lrfhptbz().s[4]++, require("../agents/cad-agent-adapter"));
const poster_agent_adapter_1 =
/* istanbul ignore next */
(cov_2lrfhptbz().s[5]++, require("../agents/poster-agent-adapter"));
/**
 * 智能体合规性审计器
 * 检查所有智能体是否遵循AG-UI协议
 */
class AgentComplianceAudit {
  constructor() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[0]++;
    cov_2lrfhptbz().s[6]++;
    this.reports = new Map();
  }
  /**
   * 审计所有智能体
   */
  async auditAllAgents() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[1]++;
    const results =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[7]++, []);
    // 审计对话智能体
    /* istanbul ignore next */
    cov_2lrfhptbz().s[8]++;
    try {
      const conversationReport =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[9]++, await this.auditConversationAgent());
      /* istanbul ignore next */
      cov_2lrfhptbz().s[10]++;
      results.push(conversationReport);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[11]++;
      this.reports.set("conversation", conversationReport);
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[12]++;
      console.error("Error auditing conversation agent:", error);
    }
    // 审计CAD智能体
    /* istanbul ignore next */
    cov_2lrfhptbz().s[13]++;
    try {
      const cadReport =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[14]++, await this.auditCADAgent());
      /* istanbul ignore next */
      cov_2lrfhptbz().s[15]++;
      results.push(cadReport);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[16]++;
      this.reports.set("cad", cadReport);
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[17]++;
      console.error("Error auditing CAD agent:", error);
    }
    // 审计海报智能体
    /* istanbul ignore next */
    cov_2lrfhptbz().s[18]++;
    try {
      const posterReport =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[19]++, await this.auditPosterAgent());
      /* istanbul ignore next */
      cov_2lrfhptbz().s[20]++;
      results.push(posterReport);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[21]++;
      this.reports.set("poster", posterReport);
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[22]++;
      console.error("Error auditing poster agent:", error);
    }
    // 计算总体合规性
    const overallCompliance =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[23]++, this.calculateOverallCompliance(results));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[24]++;
    return {
      timestamp: Date.now(),
      totalAgents: results.length,
      compliantAgents: results.filter(r => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[2]++;
        cov_2lrfhptbz().s[25]++;
        return r.isCompliant;
      }).length,
      overallScore: overallCompliance.score,
      isCompliant: overallCompliance.isCompliant,
      reports: results,
      recommendations: this.generateOverallRecommendations(results)
    };
  }
  /**
   * 执行单个智能体的合规性审计
   */
  async performAudit(agentId, options =
  /* istanbul ignore next */
  (cov_2lrfhptbz().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[3]++;
    const {
      type =
      /* istanbul ignore next */
      (cov_2lrfhptbz().b[1][0]++, 'conversation'),
      detailed =
      /* istanbul ignore next */
      (cov_2lrfhptbz().b[2][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[26]++, options);
    /* istanbul ignore next */
    cov_2lrfhptbz().s[27]++;
    try {
      let report;
      /* istanbul ignore next */
      cov_2lrfhptbz().s[28]++;
      switch (type) {
        case 'conversation':
          /* istanbul ignore next */
          cov_2lrfhptbz().b[3][0]++;
          cov_2lrfhptbz().s[29]++;
          report = await this.auditConversationAgent();
          /* istanbul ignore next */
          cov_2lrfhptbz().s[30]++;
          break;
        case 'cad':
          /* istanbul ignore next */
          cov_2lrfhptbz().b[3][1]++;
          cov_2lrfhptbz().s[31]++;
          report = await this.auditCADAgent();
          /* istanbul ignore next */
          cov_2lrfhptbz().s[32]++;
          break;
        case 'poster':
          /* istanbul ignore next */
          cov_2lrfhptbz().b[3][2]++;
          cov_2lrfhptbz().s[33]++;
          report = await this.auditPosterAgent();
          /* istanbul ignore next */
          cov_2lrfhptbz().s[34]++;
          break;
        default:
          /* istanbul ignore next */
          cov_2lrfhptbz().b[3][3]++;
          cov_2lrfhptbz().s[35]++;
          throw new Error(`Unsupported agent type: ${type}`);
      }
      // 存储报告
      /* istanbul ignore next */
      cov_2lrfhptbz().s[36]++;
      this.reports.set(agentId, report);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[37]++;
      return report;
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[38]++;
      console.error(`Error performing audit for agent ${agentId}:`, error);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[39]++;
      throw error;
    }
  }
  /**
   * 审计对话智能体
   */
  async auditConversationAgent() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[4]++;
    const threadId =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[40]++, `audit-conversation-${Date.now()}`);
    const adapter =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[41]++, new conversation_agent_adapter_1.ConversationAgentAdapter(threadId, {
      debug: true
    }));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[42]++;
    try {
      // 初始化智能体（使用默认配置）
      const agent =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[43]++, await adapter.initialize("test-app-id", "test-api-key"));
      // 模拟对话流程
      const events =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[44]++, []);
      const messages =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[45]++, []);
      // 订阅事件
      const subscription =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[46]++, adapter.getEventStream().subscribe(event => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[5]++;
        cov_2lrfhptbz().s[47]++;
        events.push(event);
      }));
      // 订阅消息
      const messageSubscription =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[48]++, adapter.getMessagesStream().subscribe(msgs => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[6]++;
        cov_2lrfhptbz().s[49]++;
        messages.splice(0, messages.length, ...msgs);
      }));
      // 发送测试消息
      /* istanbul ignore next */
      cov_2lrfhptbz().s[50]++;
      await adapter.sendMessage("你好，这是一个测试消息");
      // 等待处理完成
      /* istanbul ignore next */
      cov_2lrfhptbz().s[51]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[7]++;
        cov_2lrfhptbz().s[52]++;
        return setTimeout(resolve, 2000);
      });
      // 清理订阅
      /* istanbul ignore next */
      cov_2lrfhptbz().s[53]++;
      subscription.unsubscribe();
      /* istanbul ignore next */
      cov_2lrfhptbz().s[54]++;
      messageSubscription.unsubscribe();
      // 生成合规性报告
      const report =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[55]++, agent_compliance_checker_1.AgentComplianceChecker.generateComplianceReport("conversation", agent, events, messages));
      // 清理资源
      /* istanbul ignore next */
      cov_2lrfhptbz().s[56]++;
      adapter.dispose();
      /* istanbul ignore next */
      cov_2lrfhptbz().s[57]++;
      return report;
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[58]++;
      console.error("Error in conversation agent audit:", error);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[59]++;
      throw error;
    }
  }
  /**
   * 审计CAD智能体
   */
  async auditCADAgent() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[8]++;
    const threadId =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[60]++, `audit-cad-${Date.now()}`);
    const adapter =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[61]++, new cad_agent_adapter_1.CADAgentAdapter(threadId, {
      debug: true
    }));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[62]++;
    try {
      // 初始化智能体
      const agent =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[63]++, await adapter.initialize());
      // 模拟CAD分析流程
      const events =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[64]++, []);
      const messages =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[65]++, []);
      // 订阅事件
      const subscription =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[66]++, adapter.getEventStream().subscribe(event => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[9]++;
        cov_2lrfhptbz().s[67]++;
        events.push(event);
      }));
      // 订阅消息
      const messageSubscription =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[68]++, adapter.getMessagesStream().subscribe(msgs => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[10]++;
        cov_2lrfhptbz().s[69]++;
        messages.splice(0, messages.length, ...msgs);
      }));
      // 创建模拟CAD文件
      const mockCADFile =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[70]++, new File(["mock cad content"], "test.dwg", {
        type: "application/dwg"
      }));
      // 分析CAD文件
      /* istanbul ignore next */
      cov_2lrfhptbz().s[71]++;
      await adapter.analyzeCADFile(mockCADFile, "full");
      // 等待处理完成
      /* istanbul ignore next */
      cov_2lrfhptbz().s[72]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[11]++;
        cov_2lrfhptbz().s[73]++;
        return setTimeout(resolve, 3000);
      });
      // 清理订阅
      /* istanbul ignore next */
      cov_2lrfhptbz().s[74]++;
      subscription.unsubscribe();
      /* istanbul ignore next */
      cov_2lrfhptbz().s[75]++;
      messageSubscription.unsubscribe();
      // 生成合规性报告
      const report =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[76]++, agent_compliance_checker_1.AgentComplianceChecker.generateComplianceReport("cad", agent, events, messages));
      // 清理资源
      /* istanbul ignore next */
      cov_2lrfhptbz().s[77]++;
      adapter.dispose();
      /* istanbul ignore next */
      cov_2lrfhptbz().s[78]++;
      return report;
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[79]++;
      console.error("Error in CAD agent audit:", error);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[80]++;
      throw error;
    }
  }
  /**
   * 审计海报智能体
   */
  async auditPosterAgent() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[12]++;
    const threadId =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[81]++, `audit-poster-${Date.now()}`);
    const adapter =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[82]++, new poster_agent_adapter_1.PosterAgentAdapter(threadId, {
      debug: true
    }));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[83]++;
    try {
      // 初始化智能体
      const agent =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[84]++, await adapter.initialize());
      // 模拟海报生成流程
      const events =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[85]++, []);
      const messages =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[86]++, []);
      // 订阅事件
      const subscription =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[87]++, adapter.getEventStream().subscribe(event => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[13]++;
        cov_2lrfhptbz().s[88]++;
        events.push(event);
      }));
      // 订阅消息
      const messageSubscription =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[89]++, adapter.getMessagesStream().subscribe(msgs => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[14]++;
        cov_2lrfhptbz().s[90]++;
        messages.splice(0, messages.length, ...msgs);
      }));
      // 生成海报
      /* istanbul ignore next */
      cov_2lrfhptbz().s[91]++;
      await adapter.generatePoster("创建一个现代风格的企业宣传海报", {
        style: "modern",
        size: "A4",
        colors: ["#6cb33f", "#ffffff", "#333333"]
      });
      // 等待处理完成
      /* istanbul ignore next */
      cov_2lrfhptbz().s[92]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[15]++;
        cov_2lrfhptbz().s[93]++;
        return setTimeout(resolve, 3000);
      });
      // 清理订阅
      /* istanbul ignore next */
      cov_2lrfhptbz().s[94]++;
      subscription.unsubscribe();
      /* istanbul ignore next */
      cov_2lrfhptbz().s[95]++;
      messageSubscription.unsubscribe();
      // 生成合规性报告
      const report =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[96]++, agent_compliance_checker_1.AgentComplianceChecker.generateComplianceReport("poster", agent, events, messages));
      // 清理资源
      /* istanbul ignore next */
      cov_2lrfhptbz().s[97]++;
      adapter.dispose();
      /* istanbul ignore next */
      cov_2lrfhptbz().s[98]++;
      return report;
    } catch (error) {
      /* istanbul ignore next */
      cov_2lrfhptbz().s[99]++;
      console.error("Error in poster agent audit:", error);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[100]++;
      throw error;
    }
  }
  /**
   * 计算总体合规性
   */
  calculateOverallCompliance(reports) {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[16]++;
    cov_2lrfhptbz().s[101]++;
    if (reports.length === 0) {
      /* istanbul ignore next */
      cov_2lrfhptbz().b[4][0]++;
      cov_2lrfhptbz().s[102]++;
      return {
        score: 0,
        isCompliant: false
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lrfhptbz().b[4][1]++;
    }
    const totalScore =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[103]++, reports.reduce((sum, report) => {
      /* istanbul ignore next */
      cov_2lrfhptbz().f[17]++;
      cov_2lrfhptbz().s[104]++;
      return sum + report.overallScore;
    }, 0));
    const averageScore =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[105]++, Math.round(totalScore / reports.length));
    const isCompliant =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[106]++, reports.every(report => {
      /* istanbul ignore next */
      cov_2lrfhptbz().f[18]++;
      cov_2lrfhptbz().s[107]++;
      return report.isCompliant;
    }));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[108]++;
    return {
      score: averageScore,
      isCompliant
    };
  }
  /**
   * 生成总体建议
   */
  generateOverallRecommendations(reports) {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[19]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[109]++, []);
    const nonCompliantAgents =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[110]++, reports.filter(r => {
      /* istanbul ignore next */
      cov_2lrfhptbz().f[20]++;
      cov_2lrfhptbz().s[111]++;
      return !r.isCompliant;
    }));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[112]++;
    if (nonCompliantAgents.length > 0) {
      /* istanbul ignore next */
      cov_2lrfhptbz().b[5][0]++;
      cov_2lrfhptbz().s[113]++;
      recommendations.push(`${nonCompliantAgents.length}个智能体不符合AG-UI协议，需要立即修复`);
    } else
    /* istanbul ignore next */
    {
      cov_2lrfhptbz().b[5][1]++;
    }
    const lowScoreAgents =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[114]++, reports.filter(r => {
      /* istanbul ignore next */
      cov_2lrfhptbz().f[21]++;
      cov_2lrfhptbz().s[115]++;
      return r.overallScore < 80;
    }));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[116]++;
    if (lowScoreAgents.length > 0) {
      /* istanbul ignore next */
      cov_2lrfhptbz().b[6][0]++;
      cov_2lrfhptbz().s[117]++;
      recommendations.push(`${lowScoreAgents.length}个智能体合规性评分较低，建议优化`);
    } else
    /* istanbul ignore next */
    {
      cov_2lrfhptbz().b[6][1]++;
    }
    const commonIssues =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[118]++, this.findCommonIssues(reports));
    /* istanbul ignore next */
    cov_2lrfhptbz().s[119]++;
    if (commonIssues.length > 0) {
      /* istanbul ignore next */
      cov_2lrfhptbz().b[7][0]++;
      cov_2lrfhptbz().s[120]++;
      recommendations.push(`常见问题：${commonIssues.join("、")}`);
    } else
    /* istanbul ignore next */
    {
      cov_2lrfhptbz().b[7][1]++;
    }
    cov_2lrfhptbz().s[121]++;
    if (recommendations.length === 0) {
      /* istanbul ignore next */
      cov_2lrfhptbz().b[8][0]++;
      cov_2lrfhptbz().s[122]++;
      recommendations.push("所有智能体都符合AG-UI协议，表现良好");
    } else
    /* istanbul ignore next */
    {
      cov_2lrfhptbz().b[8][1]++;
    }
    cov_2lrfhptbz().s[123]++;
    return recommendations;
  }
  /**
   * 查找常见问题
   */
  findCommonIssues(reports) {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[22]++;
    const issueCount =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[124]++, new Map());
    /* istanbul ignore next */
    cov_2lrfhptbz().s[125]++;
    for (const report of reports) {
      const allErrors =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[126]++, [...report.definitionCompliance.errors, ...report.runtimeCompliance.errors]);
      const allWarnings =
      /* istanbul ignore next */
      (cov_2lrfhptbz().s[127]++, [...report.definitionCompliance.warnings, ...report.runtimeCompliance.warnings]);
      /* istanbul ignore next */
      cov_2lrfhptbz().s[128]++;
      for (const error of allErrors) {
        /* istanbul ignore next */
        cov_2lrfhptbz().s[129]++;
        issueCount.set(error, (
        /* istanbul ignore next */
        (cov_2lrfhptbz().b[9][0]++, issueCount.get(error)) ||
        /* istanbul ignore next */
        (cov_2lrfhptbz().b[9][1]++, 0)) + 1);
      }
      /* istanbul ignore next */
      cov_2lrfhptbz().s[130]++;
      for (const warning of allWarnings) {
        /* istanbul ignore next */
        cov_2lrfhptbz().s[131]++;
        issueCount.set(warning, (
        /* istanbul ignore next */
        (cov_2lrfhptbz().b[10][0]++, issueCount.get(warning)) ||
        /* istanbul ignore next */
        (cov_2lrfhptbz().b[10][1]++, 0)) + 1);
      }
    }
    // 返回出现次数超过1次的问题
    /* istanbul ignore next */
    cov_2lrfhptbz().s[132]++;
    return Array.from(issueCount.entries()).filter(([, count]) => {
      /* istanbul ignore next */
      cov_2lrfhptbz().f[23]++;
      cov_2lrfhptbz().s[133]++;
      return count > 1;
    }).map(([issue]) => {
      /* istanbul ignore next */
      cov_2lrfhptbz().f[24]++;
      cov_2lrfhptbz().s[134]++;
      return issue;
    });
  }
  /**
   * 获取审计报告
   */
  getReport(agentType) {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[25]++;
    cov_2lrfhptbz().s[135]++;
    return this.reports.get(agentType);
  }
  /**
   * 获取所有报告
   */
  getAllReports() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[26]++;
    cov_2lrfhptbz().s[136]++;
    return Array.from(this.reports.values());
  }
  /**
   * 导出审计结果
   */
  exportAuditResults() {
    /* istanbul ignore next */
    cov_2lrfhptbz().f[27]++;
    const auditData =
    /* istanbul ignore next */
    (cov_2lrfhptbz().s[137]++, {
      timestamp: Date.now(),
      reports: Array.from(this.reports.entries()).map(([type, report]) => {
        /* istanbul ignore next */
        cov_2lrfhptbz().f[28]++;
        cov_2lrfhptbz().s[138]++;
        return {
          agentType: type,
          ...report
        };
      })
    });
    /* istanbul ignore next */
    cov_2lrfhptbz().s[139]++;
    return JSON.stringify(auditData, null, 2);
  }
}
/* istanbul ignore next */
cov_2lrfhptbz().s[140]++;
exports.AgentComplianceAudit = AgentComplianceAudit;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmxyZmhwdGJ6IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiYWdlbnRfY29tcGxpYW5jZV9jaGVja2VyXzEiLCJyZXF1aXJlIiwiY29udmVyc2F0aW9uX2FnZW50X2FkYXB0ZXJfMSIsImNhZF9hZ2VudF9hZGFwdGVyXzEiLCJwb3N0ZXJfYWdlbnRfYWRhcHRlcl8xIiwiQWdlbnRDb21wbGlhbmNlQXVkaXQiLCJjb25zdHJ1Y3RvciIsImYiLCJyZXBvcnRzIiwiTWFwIiwiYXVkaXRBbGxBZ2VudHMiLCJyZXN1bHRzIiwiY29udmVyc2F0aW9uUmVwb3J0IiwiYXVkaXRDb252ZXJzYXRpb25BZ2VudCIsInB1c2giLCJzZXQiLCJlcnJvciIsImNvbnNvbGUiLCJjYWRSZXBvcnQiLCJhdWRpdENBREFnZW50IiwicG9zdGVyUmVwb3J0IiwiYXVkaXRQb3N0ZXJBZ2VudCIsIm92ZXJhbGxDb21wbGlhbmNlIiwiY2FsY3VsYXRlT3ZlcmFsbENvbXBsaWFuY2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwidG90YWxBZ2VudHMiLCJsZW5ndGgiLCJjb21wbGlhbnRBZ2VudHMiLCJmaWx0ZXIiLCJyIiwiaXNDb21wbGlhbnQiLCJvdmVyYWxsU2NvcmUiLCJzY29yZSIsInJlY29tbWVuZGF0aW9ucyIsImdlbmVyYXRlT3ZlcmFsbFJlY29tbWVuZGF0aW9ucyIsInBlcmZvcm1BdWRpdCIsImFnZW50SWQiLCJvcHRpb25zIiwiYiIsInR5cGUiLCJkZXRhaWxlZCIsInJlcG9ydCIsIkVycm9yIiwidGhyZWFkSWQiLCJhZGFwdGVyIiwiQ29udmVyc2F0aW9uQWdlbnRBZGFwdGVyIiwiZGVidWciLCJhZ2VudCIsImluaXRpYWxpemUiLCJldmVudHMiLCJtZXNzYWdlcyIsInN1YnNjcmlwdGlvbiIsImdldEV2ZW50U3RyZWFtIiwic3Vic2NyaWJlIiwiZXZlbnQiLCJtZXNzYWdlU3Vic2NyaXB0aW9uIiwiZ2V0TWVzc2FnZXNTdHJlYW0iLCJtc2dzIiwic3BsaWNlIiwic2VuZE1lc3NhZ2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJ1bnN1YnNjcmliZSIsIkFnZW50Q29tcGxpYW5jZUNoZWNrZXIiLCJnZW5lcmF0ZUNvbXBsaWFuY2VSZXBvcnQiLCJkaXNwb3NlIiwiQ0FEQWdlbnRBZGFwdGVyIiwibW9ja0NBREZpbGUiLCJGaWxlIiwiYW5hbHl6ZUNBREZpbGUiLCJQb3N0ZXJBZ2VudEFkYXB0ZXIiLCJnZW5lcmF0ZVBvc3RlciIsInN0eWxlIiwic2l6ZSIsImNvbG9ycyIsInRvdGFsU2NvcmUiLCJyZWR1Y2UiLCJzdW0iLCJhdmVyYWdlU2NvcmUiLCJNYXRoIiwicm91bmQiLCJldmVyeSIsIm5vbkNvbXBsaWFudEFnZW50cyIsImxvd1Njb3JlQWdlbnRzIiwiY29tbW9uSXNzdWVzIiwiZmluZENvbW1vbklzc3VlcyIsImpvaW4iLCJpc3N1ZUNvdW50IiwiYWxsRXJyb3JzIiwiZGVmaW5pdGlvbkNvbXBsaWFuY2UiLCJlcnJvcnMiLCJydW50aW1lQ29tcGxpYW5jZSIsImFsbFdhcm5pbmdzIiwid2FybmluZ3MiLCJnZXQiLCJ3YXJuaW5nIiwiQXJyYXkiLCJmcm9tIiwiZW50cmllcyIsImNvdW50IiwibWFwIiwiaXNzdWUiLCJnZXRSZXBvcnQiLCJhZ2VudFR5cGUiLCJnZXRBbGxSZXBvcnRzIiwidmFsdWVzIiwiZXhwb3J0QXVkaXRSZXN1bHRzIiwiYXVkaXREYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJFOlxcemstYWdlbnRcXGxpYlxcYWctdWlcXGNvbXBsaWFuY2VcXGFnZW50LWNvbXBsaWFuY2UtYXVkaXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCB7IEFnZW50Q29tcGxpYW5jZUNoZWNrZXIsIHR5cGUgQ29tcGxpYW5jZVJlcG9ydCB9IGZyb20gXCIuLi9wcm90b2NvbC9hZ2VudC1jb21wbGlhbmNlLWNoZWNrZXJcIlxuaW1wb3J0IHsgQ29udmVyc2F0aW9uQWdlbnRBZGFwdGVyIH0gZnJvbSBcIi4uL2FnZW50cy9jb252ZXJzYXRpb24tYWdlbnQtYWRhcHRlclwiXG5pbXBvcnQgeyBDQURBZ2VudEFkYXB0ZXIgfSBmcm9tIFwiLi4vYWdlbnRzL2NhZC1hZ2VudC1hZGFwdGVyXCJcbmltcG9ydCB7IFBvc3RlckFnZW50QWRhcHRlciB9IGZyb20gXCIuLi9hZ2VudHMvcG9zdGVyLWFnZW50LWFkYXB0ZXJcIlxuaW1wb3J0IHR5cGUgeyBBZ1VJRXZlbnQsIE1lc3NhZ2UgfSBmcm9tIFwiLi4vcHJvdG9jb2wvY29tcGxldGUtdHlwZXNcIlxuXG4vKipcbiAqIOaZuuiDveS9k+WQiOinhOaAp+WuoeiuoeWZqFxuICog5qOA5p+l5omA5pyJ5pm66IO95L2T5piv5ZCm6YG15b6qQUctVUnljY/orq5cbiAqL1xuZXhwb3J0IGNsYXNzIEFnZW50Q29tcGxpYW5jZUF1ZGl0IHtcbiAgcHJpdmF0ZSByZXBvcnRzOiBNYXA8c3RyaW5nLCBDb21wbGlhbmNlUmVwb3J0PiA9IG5ldyBNYXAoKVxuXG4gIC8qKlxuICAgKiDlrqHorqHmiYDmnInmmbrog73kvZNcbiAgICovXG4gIGFzeW5jIGF1ZGl0QWxsQWdlbnRzKCk6IFByb21pc2U8Q29tcGxpYW5jZUF1ZGl0UmVzdWx0PiB7XG4gICAgY29uc3QgcmVzdWx0czogQ29tcGxpYW5jZVJlcG9ydFtdID0gW11cblxuICAgIC8vIOWuoeiuoeWvueivneaZuuiDveS9k1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjb252ZXJzYXRpb25SZXBvcnQgPSBhd2FpdCB0aGlzLmF1ZGl0Q29udmVyc2F0aW9uQWdlbnQoKVxuICAgICAgcmVzdWx0cy5wdXNoKGNvbnZlcnNhdGlvblJlcG9ydClcbiAgICAgIHRoaXMucmVwb3J0cy5zZXQoXCJjb252ZXJzYXRpb25cIiwgY29udmVyc2F0aW9uUmVwb3J0KVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYXVkaXRpbmcgY29udmVyc2F0aW9uIGFnZW50OlwiLCBlcnJvcilcbiAgICB9XG5cbiAgICAvLyDlrqHorqFDQUTmmbrog73kvZNcbiAgICB0cnkge1xuICAgICAgY29uc3QgY2FkUmVwb3J0ID0gYXdhaXQgdGhpcy5hdWRpdENBREFnZW50KClcbiAgICAgIHJlc3VsdHMucHVzaChjYWRSZXBvcnQpXG4gICAgICB0aGlzLnJlcG9ydHMuc2V0KFwiY2FkXCIsIGNhZFJlcG9ydClcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGF1ZGl0aW5nIENBRCBhZ2VudDpcIiwgZXJyb3IpXG4gICAgfVxuXG4gICAgLy8g5a6h6K6h5rW35oql5pm66IO95L2TXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBvc3RlclJlcG9ydCA9IGF3YWl0IHRoaXMuYXVkaXRQb3N0ZXJBZ2VudCgpXG4gICAgICByZXN1bHRzLnB1c2gocG9zdGVyUmVwb3J0KVxuICAgICAgdGhpcy5yZXBvcnRzLnNldChcInBvc3RlclwiLCBwb3N0ZXJSZXBvcnQpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBhdWRpdGluZyBwb3N0ZXIgYWdlbnQ6XCIsIGVycm9yKVxuICAgIH1cblxuICAgIC8vIOiuoeeul+aAu+S9k+WQiOinhOaAp1xuICAgIGNvbnN0IG92ZXJhbGxDb21wbGlhbmNlID0gdGhpcy5jYWxjdWxhdGVPdmVyYWxsQ29tcGxpYW5jZShyZXN1bHRzKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcbiAgICAgIHRvdGFsQWdlbnRzOiByZXN1bHRzLmxlbmd0aCxcbiAgICAgIGNvbXBsaWFudEFnZW50czogcmVzdWx0cy5maWx0ZXIoKHIpID0+IHIuaXNDb21wbGlhbnQpLmxlbmd0aCxcbiAgICAgIG92ZXJhbGxTY29yZTogb3ZlcmFsbENvbXBsaWFuY2Uuc2NvcmUsXG4gICAgICBpc0NvbXBsaWFudDogb3ZlcmFsbENvbXBsaWFuY2UuaXNDb21wbGlhbnQsXG4gICAgICByZXBvcnRzOiByZXN1bHRzLFxuICAgICAgcmVjb21tZW5kYXRpb25zOiB0aGlzLmdlbmVyYXRlT3ZlcmFsbFJlY29tbWVuZGF0aW9ucyhyZXN1bHRzKSxcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5omn6KGM5Y2V5Liq5pm66IO95L2T55qE5ZCI6KeE5oCn5a6h6K6hXG4gICAqL1xuICBhc3luYyBwZXJmb3JtQXVkaXQoYWdlbnRJZDogc3RyaW5nLCBvcHRpb25zOiB7IHR5cGU/OiBzdHJpbmc7IGRldGFpbGVkPzogYm9vbGVhbiB9ID0ge30pOiBQcm9taXNlPENvbXBsaWFuY2VSZXBvcnQ+IHtcbiAgICBjb25zdCB7IHR5cGUgPSAnY29udmVyc2F0aW9uJywgZGV0YWlsZWQgPSB0cnVlIH0gPSBvcHRpb25zXG5cbiAgICB0cnkge1xuICAgICAgbGV0IHJlcG9ydDogQ29tcGxpYW5jZVJlcG9ydFxuXG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSAnY29udmVyc2F0aW9uJzpcbiAgICAgICAgICByZXBvcnQgPSBhd2FpdCB0aGlzLmF1ZGl0Q29udmVyc2F0aW9uQWdlbnQoKVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgJ2NhZCc6XG4gICAgICAgICAgcmVwb3J0ID0gYXdhaXQgdGhpcy5hdWRpdENBREFnZW50KClcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlICdwb3N0ZXInOlxuICAgICAgICAgIHJlcG9ydCA9IGF3YWl0IHRoaXMuYXVkaXRQb3N0ZXJBZ2VudCgpXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGFnZW50IHR5cGU6ICR7dHlwZX1gKVxuICAgICAgfVxuXG4gICAgICAvLyDlrZjlgqjmiqXlkYpcbiAgICAgIHRoaXMucmVwb3J0cy5zZXQoYWdlbnRJZCwgcmVwb3J0KVxuXG4gICAgICByZXR1cm4gcmVwb3J0XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIHBlcmZvcm1pbmcgYXVkaXQgZm9yIGFnZW50ICR7YWdlbnRJZH06YCwgZXJyb3IpXG4gICAgICB0aHJvdyBlcnJvclxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDlrqHorqHlr7nor53mmbrog73kvZNcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgYXVkaXRDb252ZXJzYXRpb25BZ2VudCgpOiBQcm9taXNlPENvbXBsaWFuY2VSZXBvcnQ+IHtcbiAgICBjb25zdCB0aHJlYWRJZCA9IGBhdWRpdC1jb252ZXJzYXRpb24tJHtEYXRlLm5vdygpfWBcbiAgICBjb25zdCBhZGFwdGVyID0gbmV3IENvbnZlcnNhdGlvbkFnZW50QWRhcHRlcih0aHJlYWRJZCwgeyBkZWJ1ZzogdHJ1ZSB9KVxuXG4gICAgdHJ5IHtcbiAgICAgIC8vIOWIneWni+WMluaZuuiDveS9k++8iOS9v+eUqOm7mOiupOmFjee9ru+8iVxuICAgICAgY29uc3QgYWdlbnQgPSBhd2FpdCBhZGFwdGVyLmluaXRpYWxpemUoXCJ0ZXN0LWFwcC1pZFwiLCBcInRlc3QtYXBpLWtleVwiKVxuXG4gICAgICAvLyDmqKHmi5/lr7nor53mtYHnqItcbiAgICAgIGNvbnN0IGV2ZW50czogQWdVSUV2ZW50W10gPSBbXVxuICAgICAgY29uc3QgbWVzc2FnZXM6IE1lc3NhZ2VbXSA9IFtdXG5cbiAgICAgIC8vIOiuoumYheS6i+S7tlxuICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gYWRhcHRlci5nZXRFdmVudFN0cmVhbSgpLnN1YnNjcmliZSgoZXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnRzLnB1c2goZXZlbnQpXG4gICAgICB9KVxuXG4gICAgICAvLyDorqLpmIXmtojmga9cbiAgICAgIGNvbnN0IG1lc3NhZ2VTdWJzY3JpcHRpb24gPSBhZGFwdGVyLmdldE1lc3NhZ2VzU3RyZWFtKCkuc3Vic2NyaWJlKChtc2dzKSA9PiB7XG4gICAgICAgIG1lc3NhZ2VzLnNwbGljZSgwLCBtZXNzYWdlcy5sZW5ndGgsIC4uLm1zZ3MpXG4gICAgICB9KVxuXG4gICAgICAvLyDlj5HpgIHmtYvor5Xmtojmga9cbiAgICAgIGF3YWl0IGFkYXB0ZXIuc2VuZE1lc3NhZ2UoXCLkvaDlpb3vvIzov5nmmK/kuIDkuKrmtYvor5Xmtojmga9cIilcblxuICAgICAgLy8g562J5b6F5aSE55CG5a6M5oiQXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCAyMDAwKSlcblxuICAgICAgLy8g5riF55CG6K6i6ZiFXG4gICAgICBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKVxuICAgICAgbWVzc2FnZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpXG5cbiAgICAgIC8vIOeUn+aIkOWQiOinhOaAp+aKpeWRilxuICAgICAgY29uc3QgcmVwb3J0ID0gQWdlbnRDb21wbGlhbmNlQ2hlY2tlci5nZW5lcmF0ZUNvbXBsaWFuY2VSZXBvcnQoXCJjb252ZXJzYXRpb25cIiwgYWdlbnQsIGV2ZW50cywgbWVzc2FnZXMpXG5cbiAgICAgIC8vIOa4heeQhui1hOa6kFxuICAgICAgYWRhcHRlci5kaXNwb3NlKClcblxuICAgICAgcmV0dXJuIHJlcG9ydFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgaW4gY29udmVyc2F0aW9uIGFnZW50IGF1ZGl0OlwiLCBlcnJvcilcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOWuoeiuoUNBROaZuuiDveS9k1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBhdWRpdENBREFnZW50KCk6IFByb21pc2U8Q29tcGxpYW5jZVJlcG9ydD4ge1xuICAgIGNvbnN0IHRocmVhZElkID0gYGF1ZGl0LWNhZC0ke0RhdGUubm93KCl9YFxuICAgIGNvbnN0IGFkYXB0ZXIgPSBuZXcgQ0FEQWdlbnRBZGFwdGVyKHRocmVhZElkLCB7IGRlYnVnOiB0cnVlIH0pXG5cbiAgICB0cnkge1xuICAgICAgLy8g5Yid5aeL5YyW5pm66IO95L2TXG4gICAgICBjb25zdCBhZ2VudCA9IGF3YWl0IGFkYXB0ZXIuaW5pdGlhbGl6ZSgpXG5cbiAgICAgIC8vIOaooeaLn0NBROWIhuaekOa1geeoi1xuICAgICAgY29uc3QgZXZlbnRzOiBBZ1VJRXZlbnRbXSA9IFtdXG4gICAgICBjb25zdCBtZXNzYWdlczogTWVzc2FnZVtdID0gW11cblxuICAgICAgLy8g6K6i6ZiF5LqL5Lu2XG4gICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBhZGFwdGVyLmdldEV2ZW50U3RyZWFtKCkuc3Vic2NyaWJlKChldmVudCkgPT4ge1xuICAgICAgICBldmVudHMucHVzaChldmVudClcbiAgICAgIH0pXG5cbiAgICAgIC8vIOiuoumYhea2iOaBr1xuICAgICAgY29uc3QgbWVzc2FnZVN1YnNjcmlwdGlvbiA9IGFkYXB0ZXIuZ2V0TWVzc2FnZXNTdHJlYW0oKS5zdWJzY3JpYmUoKG1zZ3MpID0+IHtcbiAgICAgICAgbWVzc2FnZXMuc3BsaWNlKDAsIG1lc3NhZ2VzLmxlbmd0aCwgLi4ubXNncylcbiAgICAgIH0pXG5cbiAgICAgIC8vIOWIm+W7uuaooeaLn0NBROaWh+S7tlxuICAgICAgY29uc3QgbW9ja0NBREZpbGUgPSBuZXcgRmlsZShbXCJtb2NrIGNhZCBjb250ZW50XCJdLCBcInRlc3QuZHdnXCIsIHsgdHlwZTogXCJhcHBsaWNhdGlvbi9kd2dcIiB9KVxuXG4gICAgICAvLyDliIbmnpBDQUTmlofku7ZcbiAgICAgIGF3YWl0IGFkYXB0ZXIuYW5hbHl6ZUNBREZpbGUobW9ja0NBREZpbGUsIFwiZnVsbFwiKVxuXG4gICAgICAvLyDnrYnlvoXlpITnkIblrozmiJBcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMDApKVxuXG4gICAgICAvLyDmuIXnkIborqLpmIVcbiAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpXG4gICAgICBtZXNzYWdlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKClcblxuICAgICAgLy8g55Sf5oiQ5ZCI6KeE5oCn5oql5ZGKXG4gICAgICBjb25zdCByZXBvcnQgPSBBZ2VudENvbXBsaWFuY2VDaGVja2VyLmdlbmVyYXRlQ29tcGxpYW5jZVJlcG9ydChcImNhZFwiLCBhZ2VudCwgZXZlbnRzLCBtZXNzYWdlcylcblxuICAgICAgLy8g5riF55CG6LWE5rqQXG4gICAgICBhZGFwdGVyLmRpc3Bvc2UoKVxuXG4gICAgICByZXR1cm4gcmVwb3J0XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBpbiBDQUQgYWdlbnQgYXVkaXQ6XCIsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5a6h6K6h5rW35oql5pm66IO95L2TXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIGF1ZGl0UG9zdGVyQWdlbnQoKTogUHJvbWlzZTxDb21wbGlhbmNlUmVwb3J0PiB7XG4gICAgY29uc3QgdGhyZWFkSWQgPSBgYXVkaXQtcG9zdGVyLSR7RGF0ZS5ub3coKX1gXG4gICAgY29uc3QgYWRhcHRlciA9IG5ldyBQb3N0ZXJBZ2VudEFkYXB0ZXIodGhyZWFkSWQsIHsgZGVidWc6IHRydWUgfSlcblxuICAgIHRyeSB7XG4gICAgICAvLyDliJ3lp4vljJbmmbrog73kvZNcbiAgICAgIGNvbnN0IGFnZW50ID0gYXdhaXQgYWRhcHRlci5pbml0aWFsaXplKClcblxuICAgICAgLy8g5qih5ouf5rW35oql55Sf5oiQ5rWB56iLXG4gICAgICBjb25zdCBldmVudHM6IEFnVUlFdmVudFtdID0gW11cbiAgICAgIGNvbnN0IG1lc3NhZ2VzOiBNZXNzYWdlW10gPSBbXVxuXG4gICAgICAvLyDorqLpmIXkuovku7ZcbiAgICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IGFkYXB0ZXIuZ2V0RXZlbnRTdHJlYW0oKS5zdWJzY3JpYmUoKGV2ZW50KSA9PiB7XG4gICAgICAgIGV2ZW50cy5wdXNoKGV2ZW50KVxuICAgICAgfSlcblxuICAgICAgLy8g6K6i6ZiF5raI5oGvXG4gICAgICBjb25zdCBtZXNzYWdlU3Vic2NyaXB0aW9uID0gYWRhcHRlci5nZXRNZXNzYWdlc1N0cmVhbSgpLnN1YnNjcmliZSgobXNncykgPT4ge1xuICAgICAgICBtZXNzYWdlcy5zcGxpY2UoMCwgbWVzc2FnZXMubGVuZ3RoLCAuLi5tc2dzKVxuICAgICAgfSlcblxuICAgICAgLy8g55Sf5oiQ5rW35oqlXG4gICAgICBhd2FpdCBhZGFwdGVyLmdlbmVyYXRlUG9zdGVyKFwi5Yib5bu65LiA5Liq546w5Luj6aOO5qC855qE5LyB5Lia5a6j5Lyg5rW35oqlXCIsIHtcbiAgICAgICAgc3R5bGU6IFwibW9kZXJuXCIsXG4gICAgICAgIHNpemU6IFwiQTRcIixcbiAgICAgICAgY29sb3JzOiBbXCIjNmNiMzNmXCIsIFwiI2ZmZmZmZlwiLCBcIiMzMzMzMzNcIl0sXG4gICAgICB9KVxuXG4gICAgICAvLyDnrYnlvoXlpITnkIblrozmiJBcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMDApKVxuXG4gICAgICAvLyDmuIXnkIborqLpmIVcbiAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpXG4gICAgICBtZXNzYWdlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKClcblxuICAgICAgLy8g55Sf5oiQ5ZCI6KeE5oCn5oql5ZGKXG4gICAgICBjb25zdCByZXBvcnQgPSBBZ2VudENvbXBsaWFuY2VDaGVja2VyLmdlbmVyYXRlQ29tcGxpYW5jZVJlcG9ydChcInBvc3RlclwiLCBhZ2VudCwgZXZlbnRzLCBtZXNzYWdlcylcblxuICAgICAgLy8g5riF55CG6LWE5rqQXG4gICAgICBhZGFwdGVyLmRpc3Bvc2UoKVxuXG4gICAgICByZXR1cm4gcmVwb3J0XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBpbiBwb3N0ZXIgYWdlbnQgYXVkaXQ6XCIsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6K6h566X5oC75L2T5ZCI6KeE5oCnXG4gICAqL1xuICBwcml2YXRlIGNhbGN1bGF0ZU92ZXJhbGxDb21wbGlhbmNlKHJlcG9ydHM6IENvbXBsaWFuY2VSZXBvcnRbXSk6IHsgc2NvcmU6IG51bWJlcjsgaXNDb21wbGlhbnQ6IGJvb2xlYW4gfSB7XG4gICAgaWYgKHJlcG9ydHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4geyBzY29yZTogMCwgaXNDb21wbGlhbnQ6IGZhbHNlIH1cbiAgICB9XG5cbiAgICBjb25zdCB0b3RhbFNjb3JlID0gcmVwb3J0cy5yZWR1Y2UoKHN1bSwgcmVwb3J0KSA9PiBzdW0gKyByZXBvcnQub3ZlcmFsbFNjb3JlLCAwKVxuICAgIGNvbnN0IGF2ZXJhZ2VTY29yZSA9IE1hdGgucm91bmQodG90YWxTY29yZSAvIHJlcG9ydHMubGVuZ3RoKVxuICAgIGNvbnN0IGlzQ29tcGxpYW50ID0gcmVwb3J0cy5ldmVyeSgocmVwb3J0KSA9PiByZXBvcnQuaXNDb21wbGlhbnQpXG5cbiAgICByZXR1cm4geyBzY29yZTogYXZlcmFnZVNjb3JlLCBpc0NvbXBsaWFudCB9XG4gIH1cblxuICAvKipcbiAgICog55Sf5oiQ5oC75L2T5bu66K6uXG4gICAqL1xuICBwcml2YXRlIGdlbmVyYXRlT3ZlcmFsbFJlY29tbWVuZGF0aW9ucyhyZXBvcnRzOiBDb21wbGlhbmNlUmVwb3J0W10pOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgcmVjb21tZW5kYXRpb25zOiBzdHJpbmdbXSA9IFtdXG5cbiAgICBjb25zdCBub25Db21wbGlhbnRBZ2VudHMgPSByZXBvcnRzLmZpbHRlcigocikgPT4gIXIuaXNDb21wbGlhbnQpXG4gICAgaWYgKG5vbkNvbXBsaWFudEFnZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICByZWNvbW1lbmRhdGlvbnMucHVzaChgJHtub25Db21wbGlhbnRBZ2VudHMubGVuZ3RofeS4quaZuuiDveS9k+S4jeespuWQiEFHLVVJ5Y2P6K6u77yM6ZyA6KaB56uL5Y2z5L+u5aSNYClcbiAgICB9XG5cbiAgICBjb25zdCBsb3dTY29yZUFnZW50cyA9IHJlcG9ydHMuZmlsdGVyKChyKSA9PiByLm92ZXJhbGxTY29yZSA8IDgwKVxuICAgIGlmIChsb3dTY29yZUFnZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICByZWNvbW1lbmRhdGlvbnMucHVzaChgJHtsb3dTY29yZUFnZW50cy5sZW5ndGh95Liq5pm66IO95L2T5ZCI6KeE5oCn6K+E5YiG6L6D5L2O77yM5bu66K6u5LyY5YyWYClcbiAgICB9XG5cbiAgICBjb25zdCBjb21tb25Jc3N1ZXMgPSB0aGlzLmZpbmRDb21tb25Jc3N1ZXMocmVwb3J0cylcbiAgICBpZiAoY29tbW9uSXNzdWVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKGDluLjop4Hpl67popjvvJoke2NvbW1vbklzc3Vlcy5qb2luKFwi44CBXCIpfWApXG4gICAgfVxuXG4gICAgaWYgKHJlY29tbWVuZGF0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKFwi5omA5pyJ5pm66IO95L2T6YO956ym5ZCIQUctVUnljY/orq7vvIzooajnjrDoia/lpb1cIilcbiAgICB9XG5cbiAgICByZXR1cm4gcmVjb21tZW5kYXRpb25zXG4gIH1cblxuICAvKipcbiAgICog5p+l5om+5bi46KeB6Zeu6aKYXG4gICAqL1xuICBwcml2YXRlIGZpbmRDb21tb25Jc3N1ZXMocmVwb3J0czogQ29tcGxpYW5jZVJlcG9ydFtdKTogc3RyaW5nW10ge1xuICAgIGNvbnN0IGlzc3VlQ291bnQ6IE1hcDxzdHJpbmcsIG51bWJlcj4gPSBuZXcgTWFwKClcblxuICAgIGZvciAoY29uc3QgcmVwb3J0IG9mIHJlcG9ydHMpIHtcbiAgICAgIGNvbnN0IGFsbEVycm9ycyA9IFsuLi5yZXBvcnQuZGVmaW5pdGlvbkNvbXBsaWFuY2UuZXJyb3JzLCAuLi5yZXBvcnQucnVudGltZUNvbXBsaWFuY2UuZXJyb3JzXVxuICAgICAgY29uc3QgYWxsV2FybmluZ3MgPSBbLi4ucmVwb3J0LmRlZmluaXRpb25Db21wbGlhbmNlLndhcm5pbmdzLCAuLi5yZXBvcnQucnVudGltZUNvbXBsaWFuY2Uud2FybmluZ3NdXG5cbiAgICAgIGZvciAoY29uc3QgZXJyb3Igb2YgYWxsRXJyb3JzKSB7XG4gICAgICAgIGlzc3VlQ291bnQuc2V0KGVycm9yLCAoaXNzdWVDb3VudC5nZXQoZXJyb3IpIHx8IDApICsgMSlcbiAgICAgIH1cblxuICAgICAgZm9yIChjb25zdCB3YXJuaW5nIG9mIGFsbFdhcm5pbmdzKSB7XG4gICAgICAgIGlzc3VlQ291bnQuc2V0KHdhcm5pbmcsIChpc3N1ZUNvdW50LmdldCh3YXJuaW5nKSB8fCAwKSArIDEpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8g6L+U5Zue5Ye6546w5qyh5pWw6LaF6L+HMeasoeeahOmXrumimFxuICAgIHJldHVybiBBcnJheS5mcm9tKGlzc3VlQ291bnQuZW50cmllcygpKVxuICAgICAgLmZpbHRlcigoWywgY291bnRdKSA9PiBjb3VudCA+IDEpXG4gICAgICAubWFwKChbaXNzdWVdKSA9PiBpc3N1ZSlcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5blrqHorqHmiqXlkYpcbiAgICovXG4gIGdldFJlcG9ydChhZ2VudFR5cGU6IHN0cmluZyk6IENvbXBsaWFuY2VSZXBvcnQgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLnJlcG9ydHMuZ2V0KGFnZW50VHlwZSlcbiAgfVxuXG4gIC8qKlxuICAgKiDojrflj5bmiYDmnInmiqXlkYpcbiAgICovXG4gIGdldEFsbFJlcG9ydHMoKTogQ29tcGxpYW5jZVJlcG9ydFtdIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLnJlcG9ydHMudmFsdWVzKCkpXG4gIH1cblxuICAvKipcbiAgICog5a+85Ye65a6h6K6h57uT5p6cXG4gICAqL1xuICBleHBvcnRBdWRpdFJlc3VsdHMoKTogc3RyaW5nIHtcbiAgICBjb25zdCBhdWRpdERhdGEgPSB7XG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICByZXBvcnRzOiBBcnJheS5mcm9tKHRoaXMucmVwb3J0cy5lbnRyaWVzKCkpLm1hcCgoW3R5cGUsIHJlcG9ydF0pID0+ICh7XG4gICAgICAgIGFnZW50VHlwZTogdHlwZSxcbiAgICAgICAgLi4ucmVwb3J0LFxuICAgICAgfSkpLFxuICAgIH1cblxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhdWRpdERhdGEsIG51bGwsIDIpXG4gIH1cbn1cblxuLy8g57G75Z6L5a6a5LmJXG5leHBvcnQgaW50ZXJmYWNlIENvbXBsaWFuY2VBdWRpdFJlc3VsdCB7XG4gIHRpbWVzdGFtcDogbnVtYmVyXG4gIHRvdGFsQWdlbnRzOiBudW1iZXJcbiAgY29tcGxpYW50QWdlbnRzOiBudW1iZXJcbiAgb3ZlcmFsbFNjb3JlOiBudW1iZXJcbiAgaXNDb21wbGlhbnQ6IGJvb2xlYW5cbiAgcmVwb3J0czogQ29tcGxpYW5jZVJlcG9ydFtdXG4gIHJlY29tbWVuZGF0aW9uczogc3RyaW5nW11cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXFWQztJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBQUFBLGFBQUEsR0FBQUUsQ0FBQTs7Ozs7OztBQXJWRDtBQUNBLE1BQUFDLDBCQUFBO0FBQUE7QUFBQSxDQUFBSCxhQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUNBLE1BQUFDLDRCQUFBO0FBQUE7QUFBQSxDQUFBTCxhQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUNBLE1BQUFFLG1CQUFBO0FBQUE7QUFBQSxDQUFBTixhQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUNBLE1BQUFHLHNCQUFBO0FBQUE7QUFBQSxDQUFBUCxhQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUdBOzs7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