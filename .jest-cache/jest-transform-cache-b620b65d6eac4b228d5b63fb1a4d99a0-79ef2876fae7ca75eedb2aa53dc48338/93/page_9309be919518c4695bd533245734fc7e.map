{"version":3,"names":["cov_1u25hsa54f","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","default","AutoLogin","react_1","require","navigation_1","use_toast_1","router","useRouter","searchParams","useSearchParams","toast","useToast","status","setStatus","useState","message","setMessage","useEffect","userId","get","password","checkUserAndLogin","existingUsers","JSON","parse","localStorage","getItem","userExists","some","user","id","newUser","createdAt","Date","toISOString","push","setItem","stringify","loggedInAt","title","description","setTimeout","error","variant","jsx_runtime_1","jsx","className","children","jsxs","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick"],"sources":["E:\\zk-agent\\app\\auth\\auto-login\\page.tsx"],"sourcesContent":["// @ts-nocheck\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport { useToast } from \"@/hooks/use-toast\"\n\nexport default function AutoLogin() {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const { toast } = useToast()\n  const [status, setStatus] = useState<\"checking\" | \"success\" | \"error\">(\"checking\")\n  const [message, setMessage] = useState(\"正在处理登录请求...\")\n\n  useEffect(() => {\n    const userId = searchParams.get(\"userId\")\n    const password = searchParams.get(\"password\")\n\n    if (!userId || !password) {\n      setStatus(\"error\")\n      setMessage(\"登录参数不完整，请检查URL\")\n      return\n    }\n\n    // 模拟API调用来检查用户是否存在\n    const checkUserAndLogin = async () => {\n      try {\n        // 在实际应用中，这里应该是一个API调用\n        // 这里我们使用localStorage模拟用户存储\n        const existingUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\n        const userExists = existingUsers.some((user: any) => user.id === userId)\n\n        if (userExists) {\n          // 用户存在，直接登录\n        // console.log(\"用户已存在，直接登录\")\n        } else {\n          // 用户不存在，创建新用户\n          const newUser = {\n            id: userId,\n            password: password, // 注意：实际应用中应该加密存储\n            createdAt: new Date().toISOString(),\n          }\n\n          existingUsers.push(newUser)\n          localStorage.setItem(\"users\", JSON.stringify(existingUsers))\n          // console.log(\"已创建新用户\")\n        }\n\n        // 设置登录状态\n        localStorage.setItem(\n          \"currentUser\",\n          JSON.stringify({\n            id: userId,\n            loggedInAt: new Date().toISOString(),\n          }),\n        )\n\n        setStatus(\"success\")\n        setMessage(\"登录成功，即将跳转...\")\n\n        // 显示成功消息\n        toast({\n          title: \"登录成功\",\n          description: `欢迎回来，用户 ${userId}`,\n        })\n\n        // 延迟一下再跳转，让用户看到成功消息\n        setTimeout(() => {\n          router.push(\"/\")\n        }, 1500)\n      } catch (error) {\n        // console.error(\"登录过程中出错:\", error)\n        setStatus(\"error\")\n        setMessage(\"登录过程中出错，请稍后再试\")\n\n        toast({\n          title: \"登录失败\",\n          description: \"处理您的请求时出现错误\",\n          variant: \"destructive\",\n        })\n      }\n    }\n\n    checkUserAndLogin()\n  }, [searchParams, router, toast])\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800\">\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-xl shadow-lg border border-gray-200/80 dark:border-gray-700/80\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-4\">\n            {status === \"checking\" && (\n              <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-[#6cb33f] border-t-transparent\"></div>\n            )}\n            {status === \"success\" && (\n              <div className=\"h-12 w-12 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center text-green-600 dark:text-green-400\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-8 w-8\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </div>\n            )}\n            {status === \"error\" && (\n              <div className=\"h-12 w-12 rounded-full bg-red-100 dark:bg-red-900/30 flex items-center justify-center text-red-600 dark:text-red-400\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-8 w-8\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </div>\n            )}\n          </div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n            {status === \"checking\" ? \"自动登录\" : status === \"success\" ? \"登录成功\" : \"登录失败\"}\n          </h2>\n          <p className=\"mt-2 text-gray-600 dark:text-gray-400\">{message}</p>\n        </div>\n\n        {status === \"error\" && (\n          <div className=\"flex justify-center mt-4\">\n            <button\n              onClick={() => router.push(\"/\")}\n              className=\"px-4 py-2 bg-[#6cb33f] hover:bg-green-600 text-white rounded-lg transition-colors\"\n            >\n              返回首页\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA;AACA,YAAY;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,K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","ignoreList":[]}