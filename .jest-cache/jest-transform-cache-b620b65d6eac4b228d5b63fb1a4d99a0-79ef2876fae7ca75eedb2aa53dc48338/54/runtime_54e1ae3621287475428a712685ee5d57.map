{"version":3,"names":["cov_6x5stsjgn","actualCoverage","s","rxjs_1","require","AgUIRuntime","constructor","config","f","eventSubject","Subject","stateSubject","BehaviorSubject","messagesSubject","currentState","currentMessages","tools","agent","setAgent","b","updateState","agentId","id","variables","run","input","threadId","runId","messages","state","emitEvent","type","timestamp","Date","now","updateMessages","lastMessage","length","role","processUserMessage","error","message","Error","details","messageId","requestData","appId","chatId","map","msg","content","JSON","stringify","stream","response","fetch","apiEndpoint","method","headers","body","ok","statusText","handleStreamResponse","console","delta","reader","getReader","decoder","TextDecoder","buffer","fullContent","done","value","read","chunk","decode","lines","split","pop","line","startsWith","data","substring","trim","parsed","parse","choices","tool_calls","handleToolCalls","e","debug","assistantMessage","releaseLock","toolCalls","parentMessageId","toolCall","toolCallId","Math","random","toolName","function","name","arguments","argsJson","result","executeTool","tool","find","t","args","getWeather","searchWeb","analyzeCAD","generatePoster","location","temperature","condition","humidity","query","results","title","url","snippet","fileId","analysis","structures","devices","risks","description","style","imageUrl","newState","next","event","getEventStream","asObservable","getStateStream","getMessagesStream","getState","getMessages","dispose","complete","exports"],"sources":["E:\\zk-agent\\lib\\ag-ui\\protocol\\runtime.ts"],"sourcesContent":["// @ts-nocheck\nimport { type Observable, Subject, BehaviorSubject } from \"rxjs\"\nimport type {\n  AgUIEvent,\n  RunInput,\n  RunConfig,\n  Message,\n  Tool,\n  AgentDefinition,\n  RunStartedEvent,\n  RunFinishedEvent,\n  RunErrorEvent,\n  TextMessageStartEvent,\n  TextMessageContentEvent,\n  TextMessageEndEvent,\n  ToolCallStartEvent,\n  ToolCallArgsEvent,\n  ToolCallResultEvent,\n  ToolCallEndEvent,\n  StateSnapshotEvent,\n} from \"./types\"\n\n/**\n * AG-UI协议标准运行时\n * 严格遵循AG-UI协议规范实现\n */\nexport class AgUIRuntime {\n  private eventSubject = new Subject<AgUIEvent>()\n  private stateSubject = new BehaviorSubject<Record<string, any>>({})\n  private messagesSubject = new BehaviorSubject<Message[]>([])\n\n  private currentState: Record<string, any> = {}\n  private currentMessages: Message[] = []\n  private tools: Tool[] = []\n  private agent: AgentDefinition | null = null\n\n  constructor(\n    private config: {\n      threadId: string\n      debug?: boolean\n      apiEndpoint?: string\n    },\n  ) {}\n\n  /**\n   * 设置智能体定义\n   */\n  setAgent(agent: AgentDefinition): void {\n    this.agent = agent\n    this.tools = agent.tools || []\n    this.updateState({ agentId: agent.id, ...agent.variables })\n  }\n\n  /**\n   * 执行运行\n   */\n  async run(input: RunInput, config?: RunConfig): Promise<void> {\n    const { threadId, runId, messages, tools, state } = input\n\n    // 发送运行开始事件\n    this.emitEvent({\n      type: \"run-started\",\n      threadId,\n      runId,\n      timestamp: Date.now(),\n    } as RunStartedEvent)\n\n    try {\n      // 更新状态和消息\n      this.updateState(state)\n      this.updateMessages(messages)\n      this.tools = tools\n\n      // 处理最后一条用户消息\n      const lastMessage = messages[messages.length - 1]\n      if (lastMessage && lastMessage.role === \"user\") {\n        await this.processUserMessage(lastMessage, config)\n      }\n\n      // 发送运行完成事件\n      this.emitEvent({\n        type: \"run-finished\",\n        threadId,\n        runId,\n        timestamp: Date.now(),\n      } as RunFinishedEvent)\n    } catch (error) {\n      // 发送错误事件\n      this.emitEvent({\n        type: \"run-error\",\n        threadId,\n        runId,\n        error: {\n          message: error instanceof Error ? error.message : \"Unknown error\",\n          details: error,\n        },\n        timestamp: Date.now(),\n      } as RunErrorEvent)\n    }\n  }\n\n  /**\n   * 处理用户消息\n   */\n  private async processUserMessage(message: Message, config?: RunConfig): Promise<void> {\n    const messageId = `assistant-${Date.now()}`\n\n    // 发送消息开始事件\n    this.emitEvent({\n      type: \"text-message-start\",\n      messageId,\n      role: \"assistant\",\n      timestamp: Date.now(),\n    } as TextMessageStartEvent)\n\n    try {\n      // 准备请求数据\n      const requestData = {\n        appId: this.currentState.appId,\n        chatId: this.currentState.chatId,\n        messages: this.currentMessages.map((msg) => ({\n          role: msg.role,\n          content: typeof msg.content === \"string\" ? msg.content : JSON.stringify(msg.content),\n        })),\n        variables: this.currentState.variables || {},\n        stream: true,\n        ...config,\n      }\n\n      // 调用FastGPT API\n      const response = await fetch(this.config.apiEndpoint || \"/api/fastgpt/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestData),\n      })\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.statusText}`)\n      }\n\n      // 处理流式响应\n      await this.handleStreamResponse(response.body!, messageId)\n    } catch (error) {\n      console.error(\"Error processing user message:\", error)\n\n      // 发送错误内容\n      this.emitEvent({\n        type: \"text-message-content\",\n        messageId,\n        delta: \"抱歉，处理您的请求时遇到了错误。\",\n        timestamp: Date.now(),\n      } as TextMessageContentEvent)\n    }\n\n    // 发送消息结束事件\n    this.emitEvent({\n      type: \"text-message-end\",\n      messageId,\n      timestamp: Date.now(),\n    } as TextMessageEndEvent)\n  }\n\n  /**\n   * 处理流式响应\n   */\n  private async handleStreamResponse(stream: ReadableStream, messageId: string): Promise<void> {\n    const reader = stream.getReader()\n    const decoder = new TextDecoder()\n    let buffer = \"\"\n    let fullContent = \"\"\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n\n        if (done) break\n\n        const chunk = decoder.decode(value, { stream: true })\n        buffer += chunk\n\n        // 处理完整的行\n        const lines = buffer.split(\"\\n\")\n        buffer = lines.pop() || \"\"\n\n        for (const line of lines) {\n          if (line.startsWith(\"data: \")) {\n            const data = line.substring(6).trim()\n\n            if (data === \"[DONE]\") continue\n\n            try {\n              const parsed = JSON.parse(data)\n\n              // 处理文本内容\n              if (parsed.choices?.[0]?.delta?.content) {\n                const delta = parsed.choices[0].delta.content\n                fullContent += delta\n\n                this.emitEvent({\n                  type: \"text-message-content\",\n                  messageId,\n                  delta,\n                  timestamp: Date.now(),\n                } as TextMessageContentEvent)\n              }\n\n              // 处理工具调用\n              if (parsed.choices?.[0]?.delta?.tool_calls) {\n                await this.handleToolCalls(parsed.choices[0].delta.tool_calls, messageId)\n              }\n            } catch (e) {\n              if (this.config.debug) {\n                console.error(\"Error parsing SSE data:\", e)\n              }\n            }\n          }\n        }\n      }\n\n      // 添加助手消息到消息列表\n      if (fullContent) {\n        const assistantMessage: Message = {\n          id: messageId,\n          role: \"assistant\",\n          content: fullContent,\n          timestamp: Date.now(),\n        }\n\n        this.updateMessages([...this.currentMessages, assistantMessage])\n      }\n    } finally {\n      reader.releaseLock()\n    }\n  }\n\n  /**\n   * 处理工具调用\n   */\n  private async handleToolCalls(toolCalls: any[], parentMessageId: string): Promise<void> {\n    for (const toolCall of toolCalls) {\n      const toolCallId = toolCall.id || `tool-${Date.now()}-${Math.random()}`\n      const toolName = toolCall.function?.name || \"unknown\"\n\n      // 发送工具调用开始事件\n      this.emitEvent({\n        type: \"tool-call-start\",\n        toolCallId,\n        toolName,\n        parentMessageId,\n        timestamp: Date.now(),\n      } as ToolCallStartEvent)\n\n      // 发送工具调用参数事件\n      if (toolCall.function?.arguments) {\n        this.emitEvent({\n          type: \"tool-call-args\",\n          toolCallId,\n          argsJson: toolCall.function.arguments,\n          timestamp: Date.now(),\n        } as ToolCallArgsEvent)\n      }\n\n      // 执行工具\n      try {\n        const result = await this.executeTool(toolName, toolCall.function?.arguments || \"{}\")\n\n        // 发送工具调用结果事件\n        this.emitEvent({\n          type: \"tool-call-result\",\n          toolCallId,\n          result,\n          timestamp: Date.now(),\n        } as ToolCallResultEvent)\n      } catch (error) {\n        console.error(\"Tool execution error:\", error)\n\n        // 发送错误结果\n        this.emitEvent({\n          type: \"tool-call-result\",\n          toolCallId,\n          result: {\n            error: error instanceof Error ? error.message : \"Tool execution failed\",\n          },\n          timestamp: Date.now(),\n        } as ToolCallResultEvent)\n      }\n\n      // 发送工具调用结束事件\n      this.emitEvent({\n        type: \"tool-call-end\",\n        toolCallId,\n        timestamp: Date.now(),\n      } as ToolCallEndEvent)\n    }\n  }\n\n  /**\n   * 执行工具\n   */\n  private async executeTool(toolName: string, argsJson: string): Promise<any> {\n    const tool = this.tools.find((t) => t.function.name === toolName)\n\n    if (!tool) {\n      throw new Error(`Tool not found: ${toolName}`)\n    }\n\n    let args: any = {}\n    try {\n      args = JSON.parse(argsJson)\n    } catch (e) {\n      console.error(\"Error parsing tool arguments:\", e)\n    }\n\n    // 根据工具名称执行相应逻辑\n    switch (toolName) {\n      case \"get_weather\":\n        return this.getWeather(args)\n      case \"search_web\":\n        return this.searchWeb(args)\n      case \"analyze_cad\":\n        return this.analyzeCAD(args)\n      case \"generate_poster\":\n        return this.generatePoster(args)\n      default:\n        throw new Error(`Unknown tool: ${toolName}`)\n    }\n  }\n\n  /**\n   * 工具实现示例\n   */\n  private async getWeather(args: any): Promise<any> {\n    // 模拟天气查询\n    return {\n      location: args.location,\n      temperature: \"22°C\",\n      condition: \"晴天\",\n      humidity: \"65%\",\n    }\n  }\n\n  private async searchWeb(args: any): Promise<any> {\n    // 模拟网络搜索\n    return {\n      query: args.query,\n      results: [\n        {\n          title: \"搜索结果1\",\n          url: \"https://example.com/1\",\n          snippet: \"这是搜索结果的摘要...\",\n        },\n      ],\n    }\n  }\n\n  private async analyzeCAD(args: any): Promise<any> {\n    // CAD分析工具\n    return {\n      fileId: args.fileId,\n      analysis: \"CAD文件分析结果...\",\n      structures: [],\n      devices: [],\n      risks: [],\n    }\n  }\n\n  private async generatePoster(args: any): Promise<any> {\n    // 海报生成工具\n    return {\n      description: args.description,\n      style: args.style,\n      imageUrl: \"/generated-poster.jpg\",\n    }\n  }\n\n  /**\n   * 更新状态\n   */\n  private updateState(newState: Record<string, any>): void {\n    this.currentState = { ...this.currentState, ...newState }\n    this.stateSubject.next(this.currentState)\n\n    // 发送状态快照事件\n    this.emitEvent({\n      type: \"state-snapshot\",\n      state: this.currentState,\n      timestamp: Date.now(),\n    } as StateSnapshotEvent)\n  }\n\n  /**\n   * 更新消息\n   */\n  private updateMessages(messages: Message[]): void {\n    this.currentMessages = messages\n    this.messagesSubject.next(this.currentMessages)\n  }\n\n  /**\n   * 发送事件\n   */\n  private emitEvent(event: AgUIEvent): void {\n    if (this.config.debug) {\n      console.debug(\"AG-UI Event:\", event)\n    }\n    this.eventSubject.next(event)\n  }\n\n  /**\n   * 获取事件流\n   */\n  getEventStream(): Observable<AgUIEvent> {\n    return this.eventSubject.asObservable()\n  }\n\n  /**\n   * 获取状态流\n   */\n  getStateStream(): Observable<Record<string, any>> {\n    return this.stateSubject.asObservable()\n  }\n\n  /**\n   * 获取消息流\n   */\n  getMessagesStream(): Observable<Message[]> {\n    return this.messagesSubject.asObservable()\n  }\n\n  /**\n   * 获取当前状态\n   */\n  getState(): Record<string, any> {\n    return { ...this.currentState }\n  }\n\n  /**\n   * 获取当前消息\n   */\n  getMessages(): Message[] {\n    return [...this.currentMessages]\n  }\n\n  /**\n   * 清理资源\n   */\n  dispose(): void {\n    this.eventSubject.complete()\n    this.stateSubject.complete()\n    this.messagesSubject.complete()\n  }\n}\n"],"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","ignoreList":[]}