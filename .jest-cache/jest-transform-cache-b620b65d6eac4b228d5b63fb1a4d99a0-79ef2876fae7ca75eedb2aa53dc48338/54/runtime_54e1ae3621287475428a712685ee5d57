887ccca1bc8d3578e4b695942bee9146
"use strict";

/* istanbul ignore next */
function cov_6x5stsjgn() {
  var path = "E:\\zk-agent\\lib\\ag-ui\\protocol\\runtime.ts";
  var hash = "27d0aa7569667d2a4dd58fc6136f1855d36093b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\ag-ui\\protocol\\runtime.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "5": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 24
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 68
        }
      },
      "14": {
        start: {
          line: 33,
          column: 60
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "20": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "21": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "22": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 67
        }
      },
      "23": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "24": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "25": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "26": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "27": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "28": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "29": {
        start: {
          line: 90,
          column: 61
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "30": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 105,
          column: 14
        }
      },
      "31": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "32": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 78
        }
      },
      "33": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 70
        }
      },
      "34": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 67
        }
      },
      "35": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "36": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "37": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 133,
          column: 41
        }
      },
      "38": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 41
        }
      },
      "39": {
        start: {
          line: 135,
          column: 21
        },
        end: {
          line: 135,
          column: 23
        }
      },
      "40": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 28
        }
      },
      "41": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "42": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "43": {
        start: {
          line: 139,
          column: 40
        },
        end: {
          line: 139,
          column: 59
        }
      },
      "44": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 141,
          column: 26
        }
      },
      "45": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 26
        }
      },
      "46": {
        start: {
          line: 142,
          column: 30
        },
        end: {
          line: 142,
          column: 69
        }
      },
      "47": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 32
        }
      },
      "48": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 145,
          column: 48
        }
      },
      "49": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 43
        }
      },
      "50": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 176,
          column: 17
        }
      },
      "51": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 175,
          column: 21
        }
      },
      "52": {
        start: {
          line: 149,
          column: 37
        },
        end: {
          line: 149,
          column: 61
        }
      },
      "53": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "54": {
        start: {
          line: 151,
          column: 28
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "55": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 174,
          column: 25
        }
      },
      "56": {
        start: {
          line: 153,
          column: 43
        },
        end: {
          line: 153,
          column: 59
        }
      },
      "57": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "58": {
        start: {
          line: 156,
          column: 46
        },
        end: {
          line: 156,
          column: 77
        }
      },
      "59": {
        start: {
          line: 157,
          column: 32
        },
        end: {
          line: 157,
          column: 53
        }
      },
      "60": {
        start: {
          line: 158,
          column: 32
        },
        end: {
          line: 163,
          column: 35
        }
      },
      "61": {
        start: {
          line: 166,
          column: 28
        },
        end: {
          line: 168,
          column: 29
        }
      },
      "62": {
        start: {
          line: 167,
          column: 32
        },
        end: {
          line: 167,
          column: 106
        }
      },
      "63": {
        start: {
          line: 171,
          column: 28
        },
        end: {
          line: 173,
          column: 29
        }
      },
      "64": {
        start: {
          line: 172,
          column: 32
        },
        end: {
          line: 172,
          column: 76
        }
      },
      "65": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "66": {
        start: {
          line: 180,
          column: 41
        },
        end: {
          line: 185,
          column: 17
        }
      },
      "67": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 81
        }
      },
      "68": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 33
        }
      },
      "69": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "70": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 83
        }
      },
      "71": {
        start: {
          line: 199,
          column: 29
        },
        end: {
          line: 199,
          column: 65
        }
      },
      "72": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "73": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "74": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 215,
          column: 19
        }
      },
      "75": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "76": {
        start: {
          line: 219,
          column: 31
        },
        end: {
          line: 219,
          column: 101
        }
      },
      "77": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 226,
          column: 19
        }
      },
      "78": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "79": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "80": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "81": {
        start: {
          line: 252,
          column: 21
        },
        end: {
          line: 252,
          column: 73
        }
      },
      "82": {
        start: {
          line: 252,
          column: 44
        },
        end: {
          line: 252,
          column: 72
        }
      },
      "83": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "84": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "85": {
        start: {
          line: 256,
          column: 19
        },
        end: {
          line: 256,
          column: 21
        }
      },
      "86": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "87": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 40
        }
      },
      "88": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 62
        }
      },
      "89": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "90": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 45
        }
      },
      "91": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 44
        }
      },
      "92": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 45
        }
      },
      "93": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 49
        }
      },
      "94": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 61
        }
      },
      "95": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "96": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 300,
          column: 10
        }
      },
      "97": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 310,
          column: 10
        }
      },
      "98": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 318,
          column: 10
        }
      },
      "99": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 66
        }
      },
      "100": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 50
        }
      },
      "101": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "102": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 40
        }
      },
      "103": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 56
        }
      },
      "104": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "105": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 49
        }
      },
      "106": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 38
        }
      },
      "107": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 48
        }
      },
      "108": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 48
        }
      },
      "109": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 51
        }
      },
      "110": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 40
        }
      },
      "111": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 41
        }
      },
      "112": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 37
        }
      },
      "113": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 37
        }
      },
      "114": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 40
        }
      },
      "115": {
        start: {
          line: 388,
          column: 0
        },
        end: {
          line: 388,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 46
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 51
          },
          end: {
            line: 90,
            column: 52
          }
        },
        loc: {
          start: {
            line: 90,
            column: 61
          },
          end: {
            line: 93,
            column: 17
          }
        },
        line: 90
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 132
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 54
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 196
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 42
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 251
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 252,
            column: 37
          },
          end: {
            line: 252,
            column: 38
          }
        },
        loc: {
          start: {
            line: 252,
            column: 44
          },
          end: {
            line: 252,
            column: 72
          }
        },
        line: 252
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 27
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 280
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 26
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 289
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 27
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 302
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 31
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 312
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 26
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 323
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 29
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 336
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        loc: {
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 343
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 21
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 352
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 21
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 358
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        loc: {
          start: {
            line: 364,
            column: 24
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 364
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 15
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 370
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 18
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 376
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 14
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 382
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 32
          }
        }, {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 26,
            column: 38
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 27
          }
        }, {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 58
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 54
          },
          end: {
            line: 66,
            column: 67
          }
        }, {
          start: {
            line: 66,
            column: 70
          },
          end: {
            line: 66,
            column: 85
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 29
          },
          end: {
            line: 92,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 63
          },
          end: {
            line: 92,
            column: 74
          }
        }, {
          start: {
            line: 92,
            column: 77
          },
          end: {
            line: 92,
            column: 104
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 94,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 94,
            column: 54
          }
        }, {
          start: {
            line: 94,
            column: 58
          },
          end: {
            line: 94,
            column: 60
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 99,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 99,
            column: 64
          }
        }, {
          start: {
            line: 99,
            column: 68
          },
          end: {
            line: 99,
            column: 87
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 141,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 141,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 36
          }
        }, {
          start: {
            line: 146,
            column: 40
          },
          end: {
            line: 146,
            column: 42
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 175,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 175,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "11": {
        loc: {
          start: {
            line: 150,
            column: 24
          },
          end: {
            line: 151,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 24
          },
          end: {
            line: 151,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "12": {
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 164,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 164,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "13": {
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 168,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 168,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "14": {
        loc: {
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 173,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 173,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 42
          }
        }, {
          start: {
            line: 198,
            column: 46
          },
          end: {
            line: 198,
            column: 83
          }
        }],
        line: 198
      },
      "17": {
        loc: {
          start: {
            line: 199,
            column: 29
          },
          end: {
            line: 199,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 29
          },
          end: {
            line: 199,
            column: 52
          }
        }, {
          start: {
            line: 199,
            column: 56
          },
          end: {
            line: 199,
            column: 65
          }
        }],
        line: 199
      },
      "18": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "19": {
        loc: {
          start: {
            line: 219,
            column: 64
          },
          end: {
            line: 219,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 64
          },
          end: {
            line: 219,
            column: 92
          }
        }, {
          start: {
            line: 219,
            column: 96
          },
          end: {
            line: 219,
            column: 100
          }
        }],
        line: 219
      },
      "20": {
        loc: {
          start: {
            line: 235,
            column: 31
          },
          end: {
            line: 235,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 56
          },
          end: {
            line: 235,
            column: 69
          }
        }, {
          start: {
            line: 235,
            column: 72
          },
          end: {
            line: 235,
            column: 95
          }
        }],
        line: 235
      },
      "21": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "22": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 266,
            column: 45
          }
        }, {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 268,
            column: 44
          }
        }, {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 270,
            column: 45
          }
        }, {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 272,
            column: 49
          }
        }, {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 274,
            column: 61
          }
        }],
        line: 264
      },
      "23": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\ag-ui\\protocol\\runtime.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\ag-ui\\protocol\\runtime.ts"],
      sourcesContent: ["// @ts-nocheck\nimport { type Observable, Subject, BehaviorSubject } from \"rxjs\"\nimport type {\n  AgUIEvent,\n  RunInput,\n  RunConfig,\n  Message,\n  Tool,\n  AgentDefinition,\n  RunStartedEvent,\n  RunFinishedEvent,\n  RunErrorEvent,\n  TextMessageStartEvent,\n  TextMessageContentEvent,\n  TextMessageEndEvent,\n  ToolCallStartEvent,\n  ToolCallArgsEvent,\n  ToolCallResultEvent,\n  ToolCallEndEvent,\n  StateSnapshotEvent,\n} from \"./types\"\n\n/**\n * AG-UI\u534F\u8BAE\u6807\u51C6\u8FD0\u884C\u65F6\n * \u4E25\u683C\u9075\u5FAAAG-UI\u534F\u8BAE\u89C4\u8303\u5B9E\u73B0\n */\nexport class AgUIRuntime {\n  private eventSubject = new Subject<AgUIEvent>()\n  private stateSubject = new BehaviorSubject<Record<string, any>>({})\n  private messagesSubject = new BehaviorSubject<Message[]>([])\n\n  private currentState: Record<string, any> = {}\n  private currentMessages: Message[] = []\n  private tools: Tool[] = []\n  private agent: AgentDefinition | null = null\n\n  constructor(\n    private config: {\n      threadId: string\n      debug?: boolean\n      apiEndpoint?: string\n    },\n  ) {}\n\n  /**\n   * \u8BBE\u7F6E\u667A\u80FD\u4F53\u5B9A\u4E49\n   */\n  setAgent(agent: AgentDefinition): void {\n    this.agent = agent\n    this.tools = agent.tools || []\n    this.updateState({ agentId: agent.id, ...agent.variables })\n  }\n\n  /**\n   * \u6267\u884C\u8FD0\u884C\n   */\n  async run(input: RunInput, config?: RunConfig): Promise<void> {\n    const { threadId, runId, messages, tools, state } = input\n\n    // \u53D1\u9001\u8FD0\u884C\u5F00\u59CB\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"run-started\",\n      threadId,\n      runId,\n      timestamp: Date.now(),\n    } as RunStartedEvent)\n\n    try {\n      // \u66F4\u65B0\u72B6\u6001\u548C\u6D88\u606F\n      this.updateState(state)\n      this.updateMessages(messages)\n      this.tools = tools\n\n      // \u5904\u7406\u6700\u540E\u4E00\u6761\u7528\u6237\u6D88\u606F\n      const lastMessage = messages[messages.length - 1]\n      if (lastMessage && lastMessage.role === \"user\") {\n        await this.processUserMessage(lastMessage, config)\n      }\n\n      // \u53D1\u9001\u8FD0\u884C\u5B8C\u6210\u4E8B\u4EF6\n      this.emitEvent({\n        type: \"run-finished\",\n        threadId,\n        runId,\n        timestamp: Date.now(),\n      } as RunFinishedEvent)\n    } catch (error) {\n      // \u53D1\u9001\u9519\u8BEF\u4E8B\u4EF6\n      this.emitEvent({\n        type: \"run-error\",\n        threadId,\n        runId,\n        error: {\n          message: error instanceof Error ? error.message : \"Unknown error\",\n          details: error,\n        },\n        timestamp: Date.now(),\n      } as RunErrorEvent)\n    }\n  }\n\n  /**\n   * \u5904\u7406\u7528\u6237\u6D88\u606F\n   */\n  private async processUserMessage(message: Message, config?: RunConfig): Promise<void> {\n    const messageId = `assistant-${Date.now()}`\n\n    // \u53D1\u9001\u6D88\u606F\u5F00\u59CB\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"text-message-start\",\n      messageId,\n      role: \"assistant\",\n      timestamp: Date.now(),\n    } as TextMessageStartEvent)\n\n    try {\n      // \u51C6\u5907\u8BF7\u6C42\u6570\u636E\n      const requestData = {\n        appId: this.currentState.appId,\n        chatId: this.currentState.chatId,\n        messages: this.currentMessages.map((msg) => ({\n          role: msg.role,\n          content: typeof msg.content === \"string\" ? msg.content : JSON.stringify(msg.content),\n        })),\n        variables: this.currentState.variables || {},\n        stream: true,\n        ...config,\n      }\n\n      // \u8C03\u7528FastGPT API\n      const response = await fetch(this.config.apiEndpoint || \"/api/fastgpt/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(requestData),\n      })\n\n      if (!response.ok) {\n        throw new Error(`API request failed: ${response.statusText}`)\n      }\n\n      // \u5904\u7406\u6D41\u5F0F\u54CD\u5E94\n      await this.handleStreamResponse(response.body!, messageId)\n    } catch (error) {\n      console.error(\"Error processing user message:\", error)\n\n      // \u53D1\u9001\u9519\u8BEF\u5185\u5BB9\n      this.emitEvent({\n        type: \"text-message-content\",\n        messageId,\n        delta: \"\u62B1\u6B49\uFF0C\u5904\u7406\u60A8\u7684\u8BF7\u6C42\u65F6\u9047\u5230\u4E86\u9519\u8BEF\u3002\",\n        timestamp: Date.now(),\n      } as TextMessageContentEvent)\n    }\n\n    // \u53D1\u9001\u6D88\u606F\u7ED3\u675F\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"text-message-end\",\n      messageId,\n      timestamp: Date.now(),\n    } as TextMessageEndEvent)\n  }\n\n  /**\n   * \u5904\u7406\u6D41\u5F0F\u54CD\u5E94\n   */\n  private async handleStreamResponse(stream: ReadableStream, messageId: string): Promise<void> {\n    const reader = stream.getReader()\n    const decoder = new TextDecoder()\n    let buffer = \"\"\n    let fullContent = \"\"\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n\n        if (done) break\n\n        const chunk = decoder.decode(value, { stream: true })\n        buffer += chunk\n\n        // \u5904\u7406\u5B8C\u6574\u7684\u884C\n        const lines = buffer.split(\"\\n\")\n        buffer = lines.pop() || \"\"\n\n        for (const line of lines) {\n          if (line.startsWith(\"data: \")) {\n            const data = line.substring(6).trim()\n\n            if (data === \"[DONE]\") continue\n\n            try {\n              const parsed = JSON.parse(data)\n\n              // \u5904\u7406\u6587\u672C\u5185\u5BB9\n              if (parsed.choices?.[0]?.delta?.content) {\n                const delta = parsed.choices[0].delta.content\n                fullContent += delta\n\n                this.emitEvent({\n                  type: \"text-message-content\",\n                  messageId,\n                  delta,\n                  timestamp: Date.now(),\n                } as TextMessageContentEvent)\n              }\n\n              // \u5904\u7406\u5DE5\u5177\u8C03\u7528\n              if (parsed.choices?.[0]?.delta?.tool_calls) {\n                await this.handleToolCalls(parsed.choices[0].delta.tool_calls, messageId)\n              }\n            } catch (e) {\n              if (this.config.debug) {\n                console.error(\"Error parsing SSE data:\", e)\n              }\n            }\n          }\n        }\n      }\n\n      // \u6DFB\u52A0\u52A9\u624B\u6D88\u606F\u5230\u6D88\u606F\u5217\u8868\n      if (fullContent) {\n        const assistantMessage: Message = {\n          id: messageId,\n          role: \"assistant\",\n          content: fullContent,\n          timestamp: Date.now(),\n        }\n\n        this.updateMessages([...this.currentMessages, assistantMessage])\n      }\n    } finally {\n      reader.releaseLock()\n    }\n  }\n\n  /**\n   * \u5904\u7406\u5DE5\u5177\u8C03\u7528\n   */\n  private async handleToolCalls(toolCalls: any[], parentMessageId: string): Promise<void> {\n    for (const toolCall of toolCalls) {\n      const toolCallId = toolCall.id || `tool-${Date.now()}-${Math.random()}`\n      const toolName = toolCall.function?.name || \"unknown\"\n\n      // \u53D1\u9001\u5DE5\u5177\u8C03\u7528\u5F00\u59CB\u4E8B\u4EF6\n      this.emitEvent({\n        type: \"tool-call-start\",\n        toolCallId,\n        toolName,\n        parentMessageId,\n        timestamp: Date.now(),\n      } as ToolCallStartEvent)\n\n      // \u53D1\u9001\u5DE5\u5177\u8C03\u7528\u53C2\u6570\u4E8B\u4EF6\n      if (toolCall.function?.arguments) {\n        this.emitEvent({\n          type: \"tool-call-args\",\n          toolCallId,\n          argsJson: toolCall.function.arguments,\n          timestamp: Date.now(),\n        } as ToolCallArgsEvent)\n      }\n\n      // \u6267\u884C\u5DE5\u5177\n      try {\n        const result = await this.executeTool(toolName, toolCall.function?.arguments || \"{}\")\n\n        // \u53D1\u9001\u5DE5\u5177\u8C03\u7528\u7ED3\u679C\u4E8B\u4EF6\n        this.emitEvent({\n          type: \"tool-call-result\",\n          toolCallId,\n          result,\n          timestamp: Date.now(),\n        } as ToolCallResultEvent)\n      } catch (error) {\n        console.error(\"Tool execution error:\", error)\n\n        // \u53D1\u9001\u9519\u8BEF\u7ED3\u679C\n        this.emitEvent({\n          type: \"tool-call-result\",\n          toolCallId,\n          result: {\n            error: error instanceof Error ? error.message : \"Tool execution failed\",\n          },\n          timestamp: Date.now(),\n        } as ToolCallResultEvent)\n      }\n\n      // \u53D1\u9001\u5DE5\u5177\u8C03\u7528\u7ED3\u675F\u4E8B\u4EF6\n      this.emitEvent({\n        type: \"tool-call-end\",\n        toolCallId,\n        timestamp: Date.now(),\n      } as ToolCallEndEvent)\n    }\n  }\n\n  /**\n   * \u6267\u884C\u5DE5\u5177\n   */\n  private async executeTool(toolName: string, argsJson: string): Promise<any> {\n    const tool = this.tools.find((t) => t.function.name === toolName)\n\n    if (!tool) {\n      throw new Error(`Tool not found: ${toolName}`)\n    }\n\n    let args: any = {}\n    try {\n      args = JSON.parse(argsJson)\n    } catch (e) {\n      console.error(\"Error parsing tool arguments:\", e)\n    }\n\n    // \u6839\u636E\u5DE5\u5177\u540D\u79F0\u6267\u884C\u76F8\u5E94\u903B\u8F91\n    switch (toolName) {\n      case \"get_weather\":\n        return this.getWeather(args)\n      case \"search_web\":\n        return this.searchWeb(args)\n      case \"analyze_cad\":\n        return this.analyzeCAD(args)\n      case \"generate_poster\":\n        return this.generatePoster(args)\n      default:\n        throw new Error(`Unknown tool: ${toolName}`)\n    }\n  }\n\n  /**\n   * \u5DE5\u5177\u5B9E\u73B0\u793A\u4F8B\n   */\n  private async getWeather(args: any): Promise<any> {\n    // \u6A21\u62DF\u5929\u6C14\u67E5\u8BE2\n    return {\n      location: args.location,\n      temperature: \"22\xB0C\",\n      condition: \"\u6674\u5929\",\n      humidity: \"65%\",\n    }\n  }\n\n  private async searchWeb(args: any): Promise<any> {\n    // \u6A21\u62DF\u7F51\u7EDC\u641C\u7D22\n    return {\n      query: args.query,\n      results: [\n        {\n          title: \"\u641C\u7D22\u7ED3\u679C1\",\n          url: \"https://example.com/1\",\n          snippet: \"\u8FD9\u662F\u641C\u7D22\u7ED3\u679C\u7684\u6458\u8981...\",\n        },\n      ],\n    }\n  }\n\n  private async analyzeCAD(args: any): Promise<any> {\n    // CAD\u5206\u6790\u5DE5\u5177\n    return {\n      fileId: args.fileId,\n      analysis: \"CAD\u6587\u4EF6\u5206\u6790\u7ED3\u679C...\",\n      structures: [],\n      devices: [],\n      risks: [],\n    }\n  }\n\n  private async generatePoster(args: any): Promise<any> {\n    // \u6D77\u62A5\u751F\u6210\u5DE5\u5177\n    return {\n      description: args.description,\n      style: args.style,\n      imageUrl: \"/generated-poster.jpg\",\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u72B6\u6001\n   */\n  private updateState(newState: Record<string, any>): void {\n    this.currentState = { ...this.currentState, ...newState }\n    this.stateSubject.next(this.currentState)\n\n    // \u53D1\u9001\u72B6\u6001\u5FEB\u7167\u4E8B\u4EF6\n    this.emitEvent({\n      type: \"state-snapshot\",\n      state: this.currentState,\n      timestamp: Date.now(),\n    } as StateSnapshotEvent)\n  }\n\n  /**\n   * \u66F4\u65B0\u6D88\u606F\n   */\n  private updateMessages(messages: Message[]): void {\n    this.currentMessages = messages\n    this.messagesSubject.next(this.currentMessages)\n  }\n\n  /**\n   * \u53D1\u9001\u4E8B\u4EF6\n   */\n  private emitEvent(event: AgUIEvent): void {\n    if (this.config.debug) {\n      console.debug(\"AG-UI Event:\", event)\n    }\n    this.eventSubject.next(event)\n  }\n\n  /**\n   * \u83B7\u53D6\u4E8B\u4EF6\u6D41\n   */\n  getEventStream(): Observable<AgUIEvent> {\n    return this.eventSubject.asObservable()\n  }\n\n  /**\n   * \u83B7\u53D6\u72B6\u6001\u6D41\n   */\n  getStateStream(): Observable<Record<string, any>> {\n    return this.stateSubject.asObservable()\n  }\n\n  /**\n   * \u83B7\u53D6\u6D88\u606F\u6D41\n   */\n  getMessagesStream(): Observable<Message[]> {\n    return this.messagesSubject.asObservable()\n  }\n\n  /**\n   * \u83B7\u53D6\u5F53\u524D\u72B6\u6001\n   */\n  getState(): Record<string, any> {\n    return { ...this.currentState }\n  }\n\n  /**\n   * \u83B7\u53D6\u5F53\u524D\u6D88\u606F\n   */\n  getMessages(): Message[] {\n    return [...this.currentMessages]\n  }\n\n  /**\n   * \u6E05\u7406\u8D44\u6E90\n   */\n  dispose(): void {\n    this.eventSubject.complete()\n    this.stateSubject.complete()\n    this.messagesSubject.complete()\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27d0aa7569667d2a4dd58fc6136f1855d36093b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6x5stsjgn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6x5stsjgn();
cov_6x5stsjgn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6x5stsjgn().s[1]++;
exports.AgUIRuntime = void 0;
// @ts-nocheck
const rxjs_1 =
/* istanbul ignore next */
(cov_6x5stsjgn().s[2]++, require("rxjs"));
/**
 * AG-UI协议标准运行时
 * 严格遵循AG-UI协议规范实现
 */
class AgUIRuntime {
  constructor(config) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[0]++;
    cov_6x5stsjgn().s[3]++;
    this.config = config;
    /* istanbul ignore next */
    cov_6x5stsjgn().s[4]++;
    this.eventSubject = new rxjs_1.Subject();
    /* istanbul ignore next */
    cov_6x5stsjgn().s[5]++;
    this.stateSubject = new rxjs_1.BehaviorSubject({});
    /* istanbul ignore next */
    cov_6x5stsjgn().s[6]++;
    this.messagesSubject = new rxjs_1.BehaviorSubject([]);
    /* istanbul ignore next */
    cov_6x5stsjgn().s[7]++;
    this.currentState = {};
    /* istanbul ignore next */
    cov_6x5stsjgn().s[8]++;
    this.currentMessages = [];
    /* istanbul ignore next */
    cov_6x5stsjgn().s[9]++;
    this.tools = [];
    /* istanbul ignore next */
    cov_6x5stsjgn().s[10]++;
    this.agent = null;
  }
  /**
   * 设置智能体定义
   */
  setAgent(agent) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[1]++;
    cov_6x5stsjgn().s[11]++;
    this.agent = agent;
    /* istanbul ignore next */
    cov_6x5stsjgn().s[12]++;
    this.tools =
    /* istanbul ignore next */
    (cov_6x5stsjgn().b[0][0]++, agent.tools) ||
    /* istanbul ignore next */
    (cov_6x5stsjgn().b[0][1]++, []);
    /* istanbul ignore next */
    cov_6x5stsjgn().s[13]++;
    this.updateState({
      agentId: agent.id,
      ...agent.variables
    });
  }
  /**
   * 执行运行
   */
  async run(input, config) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[2]++;
    const {
      threadId,
      runId,
      messages,
      tools,
      state
    } =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[14]++, input);
    // 发送运行开始事件
    /* istanbul ignore next */
    cov_6x5stsjgn().s[15]++;
    this.emitEvent({
      type: "run-started",
      threadId,
      runId,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_6x5stsjgn().s[16]++;
    try {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[17]++;
      // 更新状态和消息
      this.updateState(state);
      /* istanbul ignore next */
      cov_6x5stsjgn().s[18]++;
      this.updateMessages(messages);
      /* istanbul ignore next */
      cov_6x5stsjgn().s[19]++;
      this.tools = tools;
      // 处理最后一条用户消息
      const lastMessage =
      /* istanbul ignore next */
      (cov_6x5stsjgn().s[20]++, messages[messages.length - 1]);
      /* istanbul ignore next */
      cov_6x5stsjgn().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[2][0]++, lastMessage) &&
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[2][1]++, lastMessage.role === "user")) {
        /* istanbul ignore next */
        cov_6x5stsjgn().b[1][0]++;
        cov_6x5stsjgn().s[22]++;
        await this.processUserMessage(lastMessage, config);
      } else
      /* istanbul ignore next */
      {
        cov_6x5stsjgn().b[1][1]++;
      }
      // 发送运行完成事件
      cov_6x5stsjgn().s[23]++;
      this.emitEvent({
        type: "run-finished",
        threadId,
        runId,
        timestamp: Date.now()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[24]++;
      // 发送错误事件
      this.emitEvent({
        type: "run-error",
        threadId,
        runId,
        error: {
          message: error instanceof Error ?
          /* istanbul ignore next */
          (cov_6x5stsjgn().b[3][0]++, error.message) :
          /* istanbul ignore next */
          (cov_6x5stsjgn().b[3][1]++, "Unknown error"),
          details: error
        },
        timestamp: Date.now()
      });
    }
  }
  /**
   * 处理用户消息
   */
  async processUserMessage(message, config) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[3]++;
    const messageId =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[25]++, `assistant-${Date.now()}`);
    // 发送消息开始事件
    /* istanbul ignore next */
    cov_6x5stsjgn().s[26]++;
    this.emitEvent({
      type: "text-message-start",
      messageId,
      role: "assistant",
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_6x5stsjgn().s[27]++;
    try {
      // 准备请求数据
      const requestData =
      /* istanbul ignore next */
      (cov_6x5stsjgn().s[28]++, {
        appId: this.currentState.appId,
        chatId: this.currentState.chatId,
        messages: this.currentMessages.map(msg => {
          /* istanbul ignore next */
          cov_6x5stsjgn().f[4]++;
          cov_6x5stsjgn().s[29]++;
          return {
            role: msg.role,
            content: typeof msg.content === "string" ?
            /* istanbul ignore next */
            (cov_6x5stsjgn().b[4][0]++, msg.content) :
            /* istanbul ignore next */
            (cov_6x5stsjgn().b[4][1]++, JSON.stringify(msg.content))
          };
        }),
        variables:
        /* istanbul ignore next */
        (cov_6x5stsjgn().b[5][0]++, this.currentState.variables) ||
        /* istanbul ignore next */
        (cov_6x5stsjgn().b[5][1]++, {}),
        stream: true,
        ...config
      });
      // 调用FastGPT API
      const response =
      /* istanbul ignore next */
      (cov_6x5stsjgn().s[30]++, await fetch(
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[6][0]++, this.config.apiEndpoint) ||
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[6][1]++, "/api/fastgpt/chat"), {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(requestData)
      }));
      /* istanbul ignore next */
      cov_6x5stsjgn().s[31]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_6x5stsjgn().b[7][0]++;
        cov_6x5stsjgn().s[32]++;
        throw new Error(`API request failed: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_6x5stsjgn().b[7][1]++;
      }
      // 处理流式响应
      cov_6x5stsjgn().s[33]++;
      await this.handleStreamResponse(response.body, messageId);
    } catch (error) {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[34]++;
      console.error("Error processing user message:", error);
      // 发送错误内容
      /* istanbul ignore next */
      cov_6x5stsjgn().s[35]++;
      this.emitEvent({
        type: "text-message-content",
        messageId,
        delta: "抱歉，处理您的请求时遇到了错误。",
        timestamp: Date.now()
      });
    }
    // 发送消息结束事件
    /* istanbul ignore next */
    cov_6x5stsjgn().s[36]++;
    this.emitEvent({
      type: "text-message-end",
      messageId,
      timestamp: Date.now()
    });
  }
  /**
   * 处理流式响应
   */
  async handleStreamResponse(stream, messageId) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[5]++;
    const reader =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[37]++, stream.getReader());
    const decoder =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[38]++, new TextDecoder());
    let buffer =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[39]++, "");
    let fullContent =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[40]++, "");
    /* istanbul ignore next */
    cov_6x5stsjgn().s[41]++;
    try {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[42]++;
      while (true) {
        const {
          done,
          value
        } =
        /* istanbul ignore next */
        (cov_6x5stsjgn().s[43]++, await reader.read());
        /* istanbul ignore next */
        cov_6x5stsjgn().s[44]++;
        if (done) {
          /* istanbul ignore next */
          cov_6x5stsjgn().b[8][0]++;
          cov_6x5stsjgn().s[45]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_6x5stsjgn().b[8][1]++;
        }
        const chunk =
        /* istanbul ignore next */
        (cov_6x5stsjgn().s[46]++, decoder.decode(value, {
          stream: true
        }));
        /* istanbul ignore next */
        cov_6x5stsjgn().s[47]++;
        buffer += chunk;
        // 处理完整的行
        const lines =
        /* istanbul ignore next */
        (cov_6x5stsjgn().s[48]++, buffer.split("\n"));
        /* istanbul ignore next */
        cov_6x5stsjgn().s[49]++;
        buffer =
        /* istanbul ignore next */
        (cov_6x5stsjgn().b[9][0]++, lines.pop()) ||
        /* istanbul ignore next */
        (cov_6x5stsjgn().b[9][1]++, "");
        /* istanbul ignore next */
        cov_6x5stsjgn().s[50]++;
        for (const line of lines) {
          /* istanbul ignore next */
          cov_6x5stsjgn().s[51]++;
          if (line.startsWith("data: ")) {
            /* istanbul ignore next */
            cov_6x5stsjgn().b[10][0]++;
            const data =
            /* istanbul ignore next */
            (cov_6x5stsjgn().s[52]++, line.substring(6).trim());
            /* istanbul ignore next */
            cov_6x5stsjgn().s[53]++;
            if (data === "[DONE]") {
              /* istanbul ignore next */
              cov_6x5stsjgn().b[11][0]++;
              cov_6x5stsjgn().s[54]++;
              continue;
            } else
            /* istanbul ignore next */
            {
              cov_6x5stsjgn().b[11][1]++;
            }
            cov_6x5stsjgn().s[55]++;
            try {
              const parsed =
              /* istanbul ignore next */
              (cov_6x5stsjgn().s[56]++, JSON.parse(data));
              // 处理文本内容
              /* istanbul ignore next */
              cov_6x5stsjgn().s[57]++;
              if (parsed.choices?.[0]?.delta?.content) {
                /* istanbul ignore next */
                cov_6x5stsjgn().b[12][0]++;
                const delta =
                /* istanbul ignore next */
                (cov_6x5stsjgn().s[58]++, parsed.choices[0].delta.content);
                /* istanbul ignore next */
                cov_6x5stsjgn().s[59]++;
                fullContent += delta;
                /* istanbul ignore next */
                cov_6x5stsjgn().s[60]++;
                this.emitEvent({
                  type: "text-message-content",
                  messageId,
                  delta,
                  timestamp: Date.now()
                });
              } else
              /* istanbul ignore next */
              {
                cov_6x5stsjgn().b[12][1]++;
              }
              // 处理工具调用
              cov_6x5stsjgn().s[61]++;
              if (parsed.choices?.[0]?.delta?.tool_calls) {
                /* istanbul ignore next */
                cov_6x5stsjgn().b[13][0]++;
                cov_6x5stsjgn().s[62]++;
                await this.handleToolCalls(parsed.choices[0].delta.tool_calls, messageId);
              } else
              /* istanbul ignore next */
              {
                cov_6x5stsjgn().b[13][1]++;
              }
            } catch (e) {
              /* istanbul ignore next */
              cov_6x5stsjgn().s[63]++;
              if (this.config.debug) {
                /* istanbul ignore next */
                cov_6x5stsjgn().b[14][0]++;
                cov_6x5stsjgn().s[64]++;
                console.error("Error parsing SSE data:", e);
              } else
              /* istanbul ignore next */
              {
                cov_6x5stsjgn().b[14][1]++;
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_6x5stsjgn().b[10][1]++;
          }
        }
      }
      // 添加助手消息到消息列表
      /* istanbul ignore next */
      cov_6x5stsjgn().s[65]++;
      if (fullContent) {
        /* istanbul ignore next */
        cov_6x5stsjgn().b[15][0]++;
        const assistantMessage =
        /* istanbul ignore next */
        (cov_6x5stsjgn().s[66]++, {
          id: messageId,
          role: "assistant",
          content: fullContent,
          timestamp: Date.now()
        });
        /* istanbul ignore next */
        cov_6x5stsjgn().s[67]++;
        this.updateMessages([...this.currentMessages, assistantMessage]);
      } else
      /* istanbul ignore next */
      {
        cov_6x5stsjgn().b[15][1]++;
      }
    } finally {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[68]++;
      reader.releaseLock();
    }
  }
  /**
   * 处理工具调用
   */
  async handleToolCalls(toolCalls, parentMessageId) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[6]++;
    cov_6x5stsjgn().s[69]++;
    for (const toolCall of toolCalls) {
      const toolCallId =
      /* istanbul ignore next */
      (cov_6x5stsjgn().s[70]++,
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[16][0]++, toolCall.id) ||
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[16][1]++, `tool-${Date.now()}-${Math.random()}`));
      const toolName =
      /* istanbul ignore next */
      (cov_6x5stsjgn().s[71]++,
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[17][0]++, toolCall.function?.name) ||
      /* istanbul ignore next */
      (cov_6x5stsjgn().b[17][1]++, "unknown"));
      // 发送工具调用开始事件
      /* istanbul ignore next */
      cov_6x5stsjgn().s[72]++;
      this.emitEvent({
        type: "tool-call-start",
        toolCallId,
        toolName,
        parentMessageId,
        timestamp: Date.now()
      });
      // 发送工具调用参数事件
      /* istanbul ignore next */
      cov_6x5stsjgn().s[73]++;
      if (toolCall.function?.arguments) {
        /* istanbul ignore next */
        cov_6x5stsjgn().b[18][0]++;
        cov_6x5stsjgn().s[74]++;
        this.emitEvent({
          type: "tool-call-args",
          toolCallId,
          argsJson: toolCall.function.arguments,
          timestamp: Date.now()
        });
      } else
      /* istanbul ignore next */
      {
        cov_6x5stsjgn().b[18][1]++;
      }
      // 执行工具
      cov_6x5stsjgn().s[75]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_6x5stsjgn().s[76]++, await this.executeTool(toolName,
        /* istanbul ignore next */
        (cov_6x5stsjgn().b[19][0]++, toolCall.function?.arguments) ||
        /* istanbul ignore next */
        (cov_6x5stsjgn().b[19][1]++, "{}")));
        // 发送工具调用结果事件
        /* istanbul ignore next */
        cov_6x5stsjgn().s[77]++;
        this.emitEvent({
          type: "tool-call-result",
          toolCallId,
          result,
          timestamp: Date.now()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_6x5stsjgn().s[78]++;
        console.error("Tool execution error:", error);
        // 发送错误结果
        /* istanbul ignore next */
        cov_6x5stsjgn().s[79]++;
        this.emitEvent({
          type: "tool-call-result",
          toolCallId,
          result: {
            error: error instanceof Error ?
            /* istanbul ignore next */
            (cov_6x5stsjgn().b[20][0]++, error.message) :
            /* istanbul ignore next */
            (cov_6x5stsjgn().b[20][1]++, "Tool execution failed")
          },
          timestamp: Date.now()
        });
      }
      // 发送工具调用结束事件
      /* istanbul ignore next */
      cov_6x5stsjgn().s[80]++;
      this.emitEvent({
        type: "tool-call-end",
        toolCallId,
        timestamp: Date.now()
      });
    }
  }
  /**
   * 执行工具
   */
  async executeTool(toolName, argsJson) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[7]++;
    const tool =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[81]++, this.tools.find(t => {
      /* istanbul ignore next */
      cov_6x5stsjgn().f[8]++;
      cov_6x5stsjgn().s[82]++;
      return t.function.name === toolName;
    }));
    /* istanbul ignore next */
    cov_6x5stsjgn().s[83]++;
    if (!tool) {
      /* istanbul ignore next */
      cov_6x5stsjgn().b[21][0]++;
      cov_6x5stsjgn().s[84]++;
      throw new Error(`Tool not found: ${toolName}`);
    } else
    /* istanbul ignore next */
    {
      cov_6x5stsjgn().b[21][1]++;
    }
    let args =
    /* istanbul ignore next */
    (cov_6x5stsjgn().s[85]++, {});
    /* istanbul ignore next */
    cov_6x5stsjgn().s[86]++;
    try {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[87]++;
      args = JSON.parse(argsJson);
    } catch (e) {
      /* istanbul ignore next */
      cov_6x5stsjgn().s[88]++;
      console.error("Error parsing tool arguments:", e);
    }
    // 根据工具名称执行相应逻辑
    /* istanbul ignore next */
    cov_6x5stsjgn().s[89]++;
    switch (toolName) {
      case "get_weather":
        /* istanbul ignore next */
        cov_6x5stsjgn().b[22][0]++;
        cov_6x5stsjgn().s[90]++;
        return this.getWeather(args);
      case "search_web":
        /* istanbul ignore next */
        cov_6x5stsjgn().b[22][1]++;
        cov_6x5stsjgn().s[91]++;
        return this.searchWeb(args);
      case "analyze_cad":
        /* istanbul ignore next */
        cov_6x5stsjgn().b[22][2]++;
        cov_6x5stsjgn().s[92]++;
        return this.analyzeCAD(args);
      case "generate_poster":
        /* istanbul ignore next */
        cov_6x5stsjgn().b[22][3]++;
        cov_6x5stsjgn().s[93]++;
        return this.generatePoster(args);
      default:
        /* istanbul ignore next */
        cov_6x5stsjgn().b[22][4]++;
        cov_6x5stsjgn().s[94]++;
        throw new Error(`Unknown tool: ${toolName}`);
    }
  }
  /**
   * 工具实现示例
   */
  async getWeather(args) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[9]++;
    cov_6x5stsjgn().s[95]++;
    // 模拟天气查询
    return {
      location: args.location,
      temperature: "22°C",
      condition: "晴天",
      humidity: "65%"
    };
  }
  async searchWeb(args) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[10]++;
    cov_6x5stsjgn().s[96]++;
    // 模拟网络搜索
    return {
      query: args.query,
      results: [{
        title: "搜索结果1",
        url: "https://example.com/1",
        snippet: "这是搜索结果的摘要..."
      }]
    };
  }
  async analyzeCAD(args) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[11]++;
    cov_6x5stsjgn().s[97]++;
    // CAD分析工具
    return {
      fileId: args.fileId,
      analysis: "CAD文件分析结果...",
      structures: [],
      devices: [],
      risks: []
    };
  }
  async generatePoster(args) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[12]++;
    cov_6x5stsjgn().s[98]++;
    // 海报生成工具
    return {
      description: args.description,
      style: args.style,
      imageUrl: "/generated-poster.jpg"
    };
  }
  /**
   * 更新状态
   */
  updateState(newState) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[13]++;
    cov_6x5stsjgn().s[99]++;
    this.currentState = {
      ...this.currentState,
      ...newState
    };
    /* istanbul ignore next */
    cov_6x5stsjgn().s[100]++;
    this.stateSubject.next(this.currentState);
    // 发送状态快照事件
    /* istanbul ignore next */
    cov_6x5stsjgn().s[101]++;
    this.emitEvent({
      type: "state-snapshot",
      state: this.currentState,
      timestamp: Date.now()
    });
  }
  /**
   * 更新消息
   */
  updateMessages(messages) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[14]++;
    cov_6x5stsjgn().s[102]++;
    this.currentMessages = messages;
    /* istanbul ignore next */
    cov_6x5stsjgn().s[103]++;
    this.messagesSubject.next(this.currentMessages);
  }
  /**
   * 发送事件
   */
  emitEvent(event) {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[15]++;
    cov_6x5stsjgn().s[104]++;
    if (this.config.debug) {
      /* istanbul ignore next */
      cov_6x5stsjgn().b[23][0]++;
      cov_6x5stsjgn().s[105]++;
      console.debug("AG-UI Event:", event);
    } else
    /* istanbul ignore next */
    {
      cov_6x5stsjgn().b[23][1]++;
    }
    cov_6x5stsjgn().s[106]++;
    this.eventSubject.next(event);
  }
  /**
   * 获取事件流
   */
  getEventStream() {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[16]++;
    cov_6x5stsjgn().s[107]++;
    return this.eventSubject.asObservable();
  }
  /**
   * 获取状态流
   */
  getStateStream() {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[17]++;
    cov_6x5stsjgn().s[108]++;
    return this.stateSubject.asObservable();
  }
  /**
   * 获取消息流
   */
  getMessagesStream() {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[18]++;
    cov_6x5stsjgn().s[109]++;
    return this.messagesSubject.asObservable();
  }
  /**
   * 获取当前状态
   */
  getState() {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[19]++;
    cov_6x5stsjgn().s[110]++;
    return {
      ...this.currentState
    };
  }
  /**
   * 获取当前消息
   */
  getMessages() {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[20]++;
    cov_6x5stsjgn().s[111]++;
    return [...this.currentMessages];
  }
  /**
   * 清理资源
   */
  dispose() {
    /* istanbul ignore next */
    cov_6x5stsjgn().f[21]++;
    cov_6x5stsjgn().s[112]++;
    this.eventSubject.complete();
    /* istanbul ignore next */
    cov_6x5stsjgn().s[113]++;
    this.stateSubject.complete();
    /* istanbul ignore next */
    cov_6x5stsjgn().s[114]++;
    this.messagesSubject.complete();
  }
}
/* istanbul ignore next */
cov_6x5stsjgn().s[115]++;
exports.AgUIRuntime = AgUIRuntime;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,