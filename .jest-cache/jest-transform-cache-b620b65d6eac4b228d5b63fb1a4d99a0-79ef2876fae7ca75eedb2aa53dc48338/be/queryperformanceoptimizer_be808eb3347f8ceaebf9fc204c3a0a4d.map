{"version":3,"names":["cov_1rw0e7gc3d","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","events_1","require","monitoring_1","QueryPerformanceOptimizer","EventEmitter","constructor","slowQueryThreshold","maxStatsHistory","cacheConfig","isActive","queryStats","Map","queryPatterns","optimizationSuggestions","queryCache","analysisInterval","cacheCleanupInterval","enabled","maxSize","ttl","keyPrefix","strategy","cacheSlowQueries","setupEventListeners","databaseMonitor","on","queryInfo","handleQueryStart","handleQueryEnd","handleQueryError","console","log","setInterval","performAnalysis","cleanupCache","emit","stop","clearInterval","queryId","generateQueryId","startTime","Date","sql","cacheKey","generateCacheKey","params","cachedResult","getCachedResult","result","stats","queryType","detectQueryType","tables","extractTables","set","findQueryStats","endTime","executionTime","getTime","success","affectedRows","returnedRows","scannedRows","usedIndex","memoryUsage","cpuTime","shouldCacheQuery","cacheQueryResult","updateQueryPattern","handleSlowQuery","cleanupStatsHistory","error","message","now","Math","random","toString","substr","allStats","Array","from","values","find","upperSql","trim","toUpperCase","startsWith","fromMatch","match","tableNames","split","forEach","cleanName","includes","push","joinMatches","matchAll","template","generateQueryTemplate","patternId","generatePatternId","pattern","get","executionCount","totalExecutionTime","avgExecutionTime","maxExecutionTime","minExecutionTime","Infinity","lastExecutionTime","Set","isSlowQuery","max","min","table","add","replace","i","length","char","charCodeAt","abs","suggestions","generateOptimizationSuggestions","suggestion","suggestionId","priority","description","expectedImprovement","implementationDifficulty","join","createdAt","applied","exampleSql","paramStr","JSON","stringify","cacheItem","expiresAt","delete","accessCount","lastAccessedAt","key","size","evictCacheItems","expiredKeys","item","entries","items","sort","a","itemsToRemove","ceil","analysis","generatePerformanceAnalysis","autoApplyOptimizations","autoApplicable","filter","patterns","slowQueries","p","slice","topQueries","totalQueries","reduce","sum","cacheHitRate","calculateCacheHitRate","priorityOrder","high","medium","low","recommendations","generateRecommendations","summary","toISOString","toFixed","cacheStats","hitRate","totalSize","slowQueryCount","highPrioritySuggestions","getQueryStats","limit","getQueryPatterns","getOptimizationSuggestions","getCacheStats","updateCacheConfig","config","clearCache","clear","getStatus","pendingSuggestions","totalPatterns","cacheSize","exports","queryPerformanceOptimizer"],"sources":["E:\\zk-agent\\lib\\database\\query-performance-optimizer.ts"],"sourcesContent":["/**\r\n * 查询性能优化器\r\n * 智能分析和优化数据库查询性能\r\n * \r\n * 功能:\r\n * - 实时监控查询执行时间和资源使用\r\n * - 自动识别慢查询和性能瓶颈\r\n * - 提供查询优化建议和自动优化\r\n * - 支持查询缓存和预编译语句优化\r\n * - 生成查询性能分析报告\r\n * \r\n * @author ZK-Agent Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport { EventEmitter } from 'events'\r\nimport { performance } from 'perf_hooks'\r\nimport { databaseMonitor } from './monitoring'\r\nimport { enhancedDatabaseManager } from './enhanced-database-manager'\r\n\r\n/**\r\n * 查询执行统计接口\r\n */\r\ninterface QueryExecutionStats {\r\n  /** 查询ID */\r\n  queryId: string\r\n  /** 查询SQL */\r\n  sql: string\r\n  /** 查询参数 */\r\n  params?: any[]\r\n  /** 执行时间(ms) */\r\n  executionTime: number\r\n  /** 开始时间 */\r\n  startTime: Date\r\n  /** 结束时间 */\r\n  endTime: Date\r\n  /** 影响行数 */\r\n  affectedRows?: number\r\n  /** 是否成功 */\r\n  success: boolean\r\n  /** 错误信息 */\r\n  error?: string\r\n  /** 查询类型 */\r\n  queryType: 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE' | 'OTHER'\r\n  /** 表名 */\r\n  tables: string[]\r\n  /** 是否使用索引 */\r\n  usedIndex?: boolean\r\n  /** 扫描行数 */\r\n  scannedRows?: number\r\n  /** 返回行数 */\r\n  returnedRows?: number\r\n  /** 内存使用(bytes) */\r\n  memoryUsage?: number\r\n  /** CPU时间(ms) */\r\n  cpuTime?: number\r\n}\r\n\r\n/**\r\n * 查询模式接口\r\n */\r\ninterface QueryPattern {\r\n  /** 模式ID */\r\n  patternId: string\r\n  /** 查询模板 */\r\n  template: string\r\n  /** 执行次数 */\r\n  executionCount: number\r\n  /** 总执行时间 */\r\n  totalExecutionTime: number\r\n  /** 平均执行时间 */\r\n  avgExecutionTime: number\r\n  /** 最大执行时间 */\r\n  maxExecutionTime: number\r\n  /** 最小执行时间 */\r\n  minExecutionTime: number\r\n  /** 最后执行时间 */\r\n  lastExecutionTime: Date\r\n  /** 涉及的表 */\r\n  tables: Set<string>\r\n  /** 是否为慢查询 */\r\n  isSlowQuery: boolean\r\n  /** 优化建议 */\r\n  optimizationSuggestions: string[]\r\n}\r\n\r\n/**\r\n * 查询优化建议接口\r\n */\r\ninterface QueryOptimizationSuggestion {\r\n  /** 建议ID */\r\n  suggestionId: string\r\n  /** 查询模式ID */\r\n  patternId: string\r\n  /** 建议类型 */\r\n  type: 'index' | 'rewrite' | 'cache' | 'partition' | 'other'\r\n  /** 优先级 */\r\n  priority: 'high' | 'medium' | 'low'\r\n  /** 建议描述 */\r\n  description: string\r\n  /** 预期性能提升 */\r\n  expectedImprovement: number\r\n  /** 实施难度 */\r\n  implementationDifficulty: 'easy' | 'medium' | 'hard'\r\n  /** 具体建议 */\r\n  suggestion: string\r\n  /** 示例SQL */\r\n  exampleSql?: string\r\n  /** 创建时间 */\r\n  createdAt: Date\r\n  /** 是否已应用 */\r\n  applied: boolean\r\n}\r\n\r\n/**\r\n * 查询缓存配置接口\r\n */\r\ninterface QueryCacheConfig {\r\n  /** 是否启用缓存 */\r\n  enabled: boolean\r\n  /** 缓存大小限制 */\r\n  maxSize: number\r\n  /** 缓存TTL(ms) */\r\n  ttl: number\r\n  /** 缓存键前缀 */\r\n  keyPrefix: string\r\n  /** 缓存策略 */\r\n  strategy: 'lru' | 'lfu' | 'ttl'\r\n  /** 是否缓存慢查询 */\r\n  cacheSlowQueries: boolean\r\n  /** 慢查询阈值(ms) */\r\n  slowQueryThreshold: number\r\n}\r\n\r\n/**\r\n * 查询缓存项接口\r\n */\r\ninterface QueryCacheItem {\r\n  /** 缓存键 */\r\n  key: string\r\n  /** 查询结果 */\r\n  result: any\r\n  /** 创建时间 */\r\n  createdAt: Date\r\n  /** 过期时间 */\r\n  expiresAt: Date\r\n  /** 访问次数 */\r\n  accessCount: number\r\n  /** 最后访问时间 */\r\n  lastAccessedAt: Date\r\n  /** 数据大小(bytes) */\r\n  size: number\r\n}\r\n\r\n/**\r\n * 查询性能优化器类\r\n */\r\nexport class QueryPerformanceOptimizer extends EventEmitter {\r\n  private isActive: boolean = false\r\n  private queryStats: Map<string, QueryExecutionStats> = new Map()\r\n  private queryPatterns: Map<string, QueryPattern> = new Map()\r\n  private optimizationSuggestions: Map<string, QueryOptimizationSuggestion> = new Map()\r\n  private queryCache: Map<string, QueryCacheItem> = new Map()\r\n  private cacheConfig: QueryCacheConfig\r\n  private slowQueryThreshold: number\r\n  private maxStatsHistory: number\r\n  private analysisInterval: NodeJS.Timeout | null = null\r\n  private cacheCleanupInterval: NodeJS.Timeout | null = null\r\n\r\n  constructor(\r\n    slowQueryThreshold: number = 1000, // 1秒\r\n    maxStatsHistory: number = 10000,\r\n    cacheConfig?: Partial<QueryCacheConfig>\r\n  ) {\r\n    super()\r\n    this.slowQueryThreshold = slowQueryThreshold\r\n    this.maxStatsHistory = maxStatsHistory\r\n    \r\n    // 初始化缓存配置\r\n    this.cacheConfig = {\r\n      enabled: true,\r\n      maxSize: 1000,\r\n      ttl: 300000, // 5分钟\r\n      keyPrefix: 'query_cache:',\r\n      strategy: 'lru',\r\n      cacheSlowQueries: false,\r\n      slowQueryThreshold: this.slowQueryThreshold,\r\n      ...cacheConfig\r\n    }\r\n    \r\n    this.setupEventListeners()\r\n  }\r\n\r\n  /**\r\n   * 设置事件监听器\r\n   */\r\n  private setupEventListeners(): void {\r\n    // 监听数据库查询事件\r\n    databaseMonitor.on('query-start', (queryInfo) => {\r\n      this.handleQueryStart(queryInfo)\r\n    })\r\n    \r\n    databaseMonitor.on('query-end', (queryInfo) => {\r\n      this.handleQueryEnd(queryInfo)\r\n    })\r\n    \r\n    databaseMonitor.on('query-error', (queryInfo) => {\r\n      this.handleQueryError(queryInfo)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 启动查询性能优化\r\n   */\r\n  start(): void {\r\n    if (this.isActive) {\r\n      console.log('Query performance optimizer is already active')\r\n      return\r\n    }\r\n\r\n    console.log('Starting query performance optimization')\r\n    this.isActive = true\r\n\r\n    // 启动定期分析\r\n    this.analysisInterval = setInterval(() => {\r\n      this.performAnalysis()\r\n    }, 60000) // 每分钟分析一次\r\n\r\n    // 启动缓存清理\r\n    if (this.cacheConfig.enabled) {\r\n      this.cacheCleanupInterval = setInterval(() => {\r\n        this.cleanupCache()\r\n      }, 30000) // 每30秒清理一次过期缓存\r\n    }\r\n\r\n    this.emit('optimizer-started')\r\n  }\r\n\r\n  /**\r\n   * 停止查询性能优化\r\n   */\r\n  stop(): void {\r\n    if (!this.isActive) {\r\n      return\r\n    }\r\n\r\n    console.log('Stopping query performance optimization')\r\n    this.isActive = false\r\n\r\n    if (this.analysisInterval) {\r\n      clearInterval(this.analysisInterval)\r\n      this.analysisInterval = null\r\n    }\r\n\r\n    if (this.cacheCleanupInterval) {\r\n      clearInterval(this.cacheCleanupInterval)\r\n      this.cacheCleanupInterval = null\r\n    }\r\n\r\n    this.emit('optimizer-stopped')\r\n  }\r\n\r\n  /**\r\n   * 处理查询开始事件\r\n   * \r\n   * @param queryInfo - 查询信息\r\n   */\r\n  private handleQueryStart(queryInfo: any): void {\r\n    const queryId = this.generateQueryId()\r\n    const startTime = new Date()\r\n    \r\n    // 检查缓存\r\n    if (this.cacheConfig.enabled && queryInfo.sql) {\r\n      const cacheKey = this.generateCacheKey(queryInfo.sql, queryInfo.params)\r\n      const cachedResult = this.getCachedResult(cacheKey)\r\n      \r\n      if (cachedResult) {\r\n        this.emit('cache-hit', { queryId, cacheKey, result: cachedResult })\r\n        return\r\n      }\r\n    }\r\n    \r\n    // 记录查询开始\r\n    const stats: Partial<QueryExecutionStats> = {\r\n      queryId,\r\n      sql: queryInfo.sql,\r\n      params: queryInfo.params,\r\n      startTime,\r\n      queryType: this.detectQueryType(queryInfo.sql),\r\n      tables: this.extractTables(queryInfo.sql)\r\n    }\r\n    \r\n    this.queryStats.set(queryId, stats as QueryExecutionStats)\r\n    this.emit('query-started', stats)\r\n  }\r\n\r\n  /**\r\n   * 处理查询结束事件\r\n   * \r\n   * @param queryInfo - 查询信息\r\n   */\r\n  private handleQueryEnd(queryInfo: any): void {\r\n    const stats = this.findQueryStats(queryInfo)\r\n    if (!stats) {\r\n      return\r\n    }\r\n\r\n    const endTime = new Date()\r\n    const executionTime = endTime.getTime() - stats.startTime.getTime()\r\n\r\n    // 更新统计信息\r\n    stats.endTime = endTime\r\n    stats.executionTime = executionTime\r\n    stats.success = true\r\n    stats.affectedRows = queryInfo.affectedRows\r\n    stats.returnedRows = queryInfo.returnedRows\r\n    stats.scannedRows = queryInfo.scannedRows\r\n    stats.usedIndex = queryInfo.usedIndex\r\n    stats.memoryUsage = queryInfo.memoryUsage\r\n    stats.cpuTime = queryInfo.cpuTime\r\n\r\n    // 缓存查询结果\r\n    if (this.shouldCacheQuery(stats, queryInfo.result)) {\r\n      this.cacheQueryResult(stats, queryInfo.result)\r\n    }\r\n\r\n    // 更新查询模式\r\n    this.updateQueryPattern(stats)\r\n\r\n    // 检查是否为慢查询\r\n    if (executionTime > this.slowQueryThreshold) {\r\n      this.handleSlowQuery(stats)\r\n    }\r\n\r\n    this.emit('query-completed', stats)\r\n    \r\n    // 清理历史记录\r\n    this.cleanupStatsHistory()\r\n  }\r\n\r\n  /**\r\n   * 处理查询错误事件\r\n   * \r\n   * @param queryInfo - 查询信息\r\n   */\r\n  private handleQueryError(queryInfo: any): void {\r\n    const stats = this.findQueryStats(queryInfo)\r\n    if (!stats) {\r\n      return\r\n    }\r\n\r\n    const endTime = new Date()\r\n    const executionTime = endTime.getTime() - stats.startTime.getTime()\r\n\r\n    stats.endTime = endTime\r\n    stats.executionTime = executionTime\r\n    stats.success = false\r\n    stats.error = queryInfo.error?.message || 'Unknown error'\r\n\r\n    this.emit('query-failed', stats)\r\n  }\r\n\r\n  /**\r\n   * 生成查询ID\r\n   * \r\n   * @returns 查询ID\r\n   */\r\n  private generateQueryId(): string {\r\n    return `query_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n\r\n  /**\r\n   * 查找查询统计信息\r\n   * \r\n   * @param queryInfo - 查询信息\r\n   * @returns 查询统计信息\r\n   */\r\n  private findQueryStats(queryInfo: any): QueryExecutionStats | undefined {\r\n    // 这里需要根据实际的查询信息匹配统计记录\r\n    // 暂时返回最近的一条记录\r\n    const allStats = Array.from(this.queryStats.values())\r\n    return allStats.find(stats => \r\n      stats.sql === queryInfo.sql && \r\n      !stats.endTime\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 检测查询类型\r\n   * \r\n   * @param sql - SQL语句\r\n   * @returns 查询类型\r\n   */\r\n  private detectQueryType(sql: string): QueryExecutionStats['queryType'] {\r\n    const upperSql = sql.trim().toUpperCase()\r\n    \r\n    if (upperSql.startsWith('SELECT')) {\r\n      return 'SELECT'\r\n    } else if (upperSql.startsWith('INSERT')) {\r\n      return 'INSERT'\r\n    } else if (upperSql.startsWith('UPDATE')) {\r\n      return 'UPDATE'\r\n    } else if (upperSql.startsWith('DELETE')) {\r\n      return 'DELETE'\r\n    } else {\r\n      return 'OTHER'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 提取SQL中的表名\r\n   * \r\n   * @param sql - SQL语句\r\n   * @returns 表名数组\r\n   */\r\n  private extractTables(sql: string): string[] {\r\n    const tables: string[] = []\r\n    const upperSql = sql.toUpperCase()\r\n    \r\n    // 简单的表名提取逻辑\r\n    const fromMatch = upperSql.match(/FROM\\s+([\\w\\s,]+)/)\r\n    if (fromMatch) {\r\n      const tableNames = fromMatch[1].split(',')\r\n      tableNames.forEach(name => {\r\n        const cleanName = name.trim().split(/\\s+/)[0]\r\n        if (cleanName && !tables.includes(cleanName)) {\r\n          tables.push(cleanName)\r\n        }\r\n      })\r\n    }\r\n    \r\n    const joinMatches = upperSql.matchAll(/JOIN\\s+(\\w+)/g)\r\n    for (const match of joinMatches) {\r\n      if (match[1] && !tables.includes(match[1])) {\r\n        tables.push(match[1])\r\n      }\r\n    }\r\n    \r\n    return tables\r\n  }\r\n\r\n  /**\r\n   * 更新查询模式\r\n   * \r\n   * @param stats - 查询统计信息\r\n   */\r\n  private updateQueryPattern(stats: QueryExecutionStats): void {\r\n    const template = this.generateQueryTemplate(stats.sql)\r\n    const patternId = this.generatePatternId(template)\r\n    \r\n    let pattern = this.queryPatterns.get(patternId)\r\n    \r\n    if (!pattern) {\r\n      pattern = {\r\n        patternId,\r\n        template,\r\n        executionCount: 0,\r\n        totalExecutionTime: 0,\r\n        avgExecutionTime: 0,\r\n        maxExecutionTime: 0,\r\n        minExecutionTime: Infinity,\r\n        lastExecutionTime: stats.endTime,\r\n        tables: new Set(stats.tables),\r\n        isSlowQuery: false,\r\n        optimizationSuggestions: []\r\n      }\r\n      this.queryPatterns.set(patternId, pattern)\r\n    }\r\n    \r\n    // 更新统计信息\r\n    pattern.executionCount++\r\n    pattern.totalExecutionTime += stats.executionTime\r\n    pattern.avgExecutionTime = pattern.totalExecutionTime / pattern.executionCount\r\n    pattern.maxExecutionTime = Math.max(pattern.maxExecutionTime, stats.executionTime)\r\n    pattern.minExecutionTime = Math.min(pattern.minExecutionTime, stats.executionTime)\r\n    pattern.lastExecutionTime = stats.endTime\r\n    \r\n    // 合并表名\r\n    stats.tables.forEach(table => pattern!.tables.add(table))\r\n    \r\n    // 检查是否为慢查询模式\r\n    if (pattern.avgExecutionTime > this.slowQueryThreshold) {\r\n      pattern.isSlowQuery = true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 生成查询模板\r\n   * \r\n   * @param sql - SQL语句\r\n   * @returns 查询模板\r\n   */\r\n  private generateQueryTemplate(sql: string): string {\r\n    // 将参数替换为占位符\r\n    return sql\r\n      .replace(/\\$\\d+/g, '?') // PostgreSQL参数\r\n      .replace(/'[^']*'/g, '?') // 字符串字面量\r\n      .replace(/\\b\\d+\\b/g, '?') // 数字字面量\r\n      .replace(/\\s+/g, ' ') // 标准化空白字符\r\n      .trim()\r\n  }\r\n\r\n  /**\r\n   * 生成模式ID\r\n   * \r\n   * @param template - 查询模板\r\n   * @returns 模式ID\r\n   */\r\n  private generatePatternId(template: string): string {\r\n    // 使用简单的哈希算法\r\n    let hash = 0\r\n    for (let i = 0; i < template.length; i++) {\r\n      const char = template.charCodeAt(i)\r\n      hash = ((hash << 5) - hash) + char\r\n      hash = hash & hash // 转换为32位整数\r\n    }\r\n    return `pattern_${Math.abs(hash).toString(36)}`\r\n  }\r\n\r\n  /**\r\n   * 处理慢查询\r\n   * \r\n   * @param stats - 查询统计信息\r\n   */\r\n  private handleSlowQuery(stats: QueryExecutionStats): void {\r\n    console.log(`Slow query detected: ${stats.executionTime}ms`, {\r\n      sql: stats.sql,\r\n      tables: stats.tables,\r\n      params: stats.params\r\n    })\r\n    \r\n    // 生成优化建议\r\n    const suggestions = this.generateOptimizationSuggestions(stats)\r\n    suggestions.forEach(suggestion => {\r\n      this.optimizationSuggestions.set(suggestion.suggestionId, suggestion)\r\n    })\r\n    \r\n    this.emit('slow-query-detected', { stats, suggestions })\r\n  }\r\n\r\n  /**\r\n   * 生成优化建议\r\n   * \r\n   * @param stats - 查询统计信息\r\n   * @returns 优化建议数组\r\n   */\r\n  private generateOptimizationSuggestions(stats: QueryExecutionStats): QueryOptimizationSuggestion[] {\r\n    const suggestions: QueryOptimizationSuggestion[] = []\r\n    const sql = stats.sql.toUpperCase()\r\n    \r\n    // 检查是否缺少索引\r\n    if (stats.scannedRows && stats.returnedRows && stats.scannedRows > stats.returnedRows * 10) {\r\n      suggestions.push({\r\n        suggestionId: `idx_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`,\r\n        patternId: this.generatePatternId(this.generateQueryTemplate(stats.sql)),\r\n        type: 'index',\r\n        priority: 'high',\r\n        description: '查询扫描了大量行但返回较少结果，建议添加索引',\r\n        expectedImprovement: 70,\r\n        implementationDifficulty: 'easy',\r\n        suggestion: `考虑在 ${stats.tables.join(', ')} 表的查询条件字段上添加索引`,\r\n        createdAt: new Date(),\r\n        applied: false\r\n      })\r\n    }\r\n    \r\n    // 检查是否有全表扫描\r\n    if (!stats.usedIndex && stats.queryType === 'SELECT') {\r\n      suggestions.push({\r\n        suggestionId: `idx_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`,\r\n        patternId: this.generatePatternId(this.generateQueryTemplate(stats.sql)),\r\n        type: 'index',\r\n        priority: 'high',\r\n        description: '查询未使用索引，可能进行了全表扫描',\r\n        expectedImprovement: 80,\r\n        implementationDifficulty: 'easy',\r\n        suggestion: '在WHERE子句的条件字段上创建索引',\r\n        createdAt: new Date(),\r\n        applied: false\r\n      })\r\n    }\r\n    \r\n    // 检查是否可以使用缓存\r\n    if (stats.queryType === 'SELECT' && stats.executionTime > 500) {\r\n      suggestions.push({\r\n        suggestionId: `cache_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`,\r\n        patternId: this.generatePatternId(this.generateQueryTemplate(stats.sql)),\r\n        type: 'cache',\r\n        priority: 'medium',\r\n        description: '查询执行时间较长，建议启用查询缓存',\r\n        expectedImprovement: 90,\r\n        implementationDifficulty: 'easy',\r\n        suggestion: '为此查询启用结果缓存，特别是对于相对静态的数据',\r\n        createdAt: new Date(),\r\n        applied: false\r\n      })\r\n    }\r\n    \r\n    // 检查是否需要查询重写\r\n    if (sql.includes('SELECT *')) {\r\n      suggestions.push({\r\n        suggestionId: `rewrite_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`,\r\n        patternId: this.generatePatternId(this.generateQueryTemplate(stats.sql)),\r\n        type: 'rewrite',\r\n        priority: 'medium',\r\n        description: '使用SELECT *可能影响性能',\r\n        expectedImprovement: 30,\r\n        implementationDifficulty: 'medium',\r\n        suggestion: '明确指定需要的字段而不是使用SELECT *',\r\n        exampleSql: stats.sql.replace('SELECT *', 'SELECT field1, field2, ...'),\r\n        createdAt: new Date(),\r\n        applied: false\r\n      })\r\n    }\r\n    \r\n    return suggestions\r\n  }\r\n\r\n  /**\r\n   * 生成缓存键\r\n   * \r\n   * @param sql - SQL语句\r\n   * @param params - 查询参数\r\n   * @returns 缓存键\r\n   */\r\n  private generateCacheKey(sql: string, params?: any[]): string {\r\n    const template = this.generateQueryTemplate(sql)\r\n    const paramStr = params ? JSON.stringify(params) : ''\r\n    return `${this.cacheConfig.keyPrefix}${template}_${paramStr}`\r\n  }\r\n\r\n  /**\r\n   * 获取缓存结果\r\n   * \r\n   * @param cacheKey - 缓存键\r\n   * @returns 缓存结果\r\n   */\r\n  private getCachedResult(cacheKey: string): any | null {\r\n    const cacheItem = this.queryCache.get(cacheKey)\r\n    \r\n    if (!cacheItem) {\r\n      return null\r\n    }\r\n    \r\n    // 检查是否过期\r\n    if (cacheItem.expiresAt < new Date()) {\r\n      this.queryCache.delete(cacheKey)\r\n      return null\r\n    }\r\n    \r\n    // 更新访问信息\r\n    cacheItem.accessCount++\r\n    cacheItem.lastAccessedAt = new Date()\r\n    \r\n    return cacheItem.result\r\n  }\r\n\r\n  /**\r\n   * 判断是否应该缓存查询\r\n   * \r\n   * @param stats - 查询统计信息\r\n   * @param result - 查询结果\r\n   * @returns 是否应该缓存\r\n   */\r\n  private shouldCacheQuery(stats: QueryExecutionStats, result: any): boolean {\r\n    if (!this.cacheConfig.enabled || stats.queryType !== 'SELECT') {\r\n      return false\r\n    }\r\n    \r\n    // 不缓存失败的查询\r\n    if (!stats.success) {\r\n      return false\r\n    }\r\n    \r\n    // 根据配置决定是否缓存慢查询\r\n    if (stats.executionTime > this.cacheConfig.slowQueryThreshold) {\r\n      return this.cacheConfig.cacheSlowQueries\r\n    }\r\n    \r\n    // 缓存执行时间适中的查询\r\n    return stats.executionTime > 100 && stats.executionTime < 1000\r\n  }\r\n\r\n  /**\r\n   * 缓存查询结果\r\n   * \r\n   * @param stats - 查询统计信息\r\n   * @param result - 查询结果\r\n   */\r\n  private cacheQueryResult(stats: QueryExecutionStats, result: any): void {\r\n    const cacheKey = this.generateCacheKey(stats.sql, stats.params)\r\n    const now = new Date()\r\n    const expiresAt = new Date(now.getTime() + this.cacheConfig.ttl)\r\n    \r\n    const cacheItem: QueryCacheItem = {\r\n      key: cacheKey,\r\n      result,\r\n      createdAt: now,\r\n      expiresAt,\r\n      accessCount: 0,\r\n      lastAccessedAt: now,\r\n      size: JSON.stringify(result).length\r\n    }\r\n    \r\n    // 检查缓存大小限制\r\n    if (this.queryCache.size >= this.cacheConfig.maxSize) {\r\n      this.evictCacheItems()\r\n    }\r\n    \r\n    this.queryCache.set(cacheKey, cacheItem)\r\n    this.emit('query-cached', { cacheKey, stats })\r\n  }\r\n\r\n  /**\r\n   * 清理缓存\r\n   */\r\n  private cleanupCache(): void {\r\n    const now = new Date()\r\n    const expiredKeys: string[] = []\r\n    \r\n    for (const [key, item] of this.queryCache.entries()) {\r\n      if (item.expiresAt < now) {\r\n        expiredKeys.push(key)\r\n      }\r\n    }\r\n    \r\n    expiredKeys.forEach(key => this.queryCache.delete(key))\r\n    \r\n    if (expiredKeys.length > 0) {\r\n      console.log(`Cleaned up ${expiredKeys.length} expired cache items`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 驱逐缓存项\r\n   */\r\n  private evictCacheItems(): void {\r\n    const items = Array.from(this.queryCache.entries())\r\n    \r\n    if (this.cacheConfig.strategy === 'lru') {\r\n      // 最近最少使用\r\n      items.sort((a, b) => a[1].lastAccessedAt.getTime() - b[1].lastAccessedAt.getTime())\r\n    } else if (this.cacheConfig.strategy === 'lfu') {\r\n      // 最少使用频率\r\n      items.sort((a, b) => a[1].accessCount - b[1].accessCount)\r\n    } else {\r\n      // TTL策略，按创建时间排序\r\n      items.sort((a, b) => a[1].createdAt.getTime() - b[1].createdAt.getTime())\r\n    }\r\n    \r\n    // 删除最老的25%的缓存项\r\n    const itemsToRemove = Math.ceil(items.length * 0.25)\r\n    for (let i = 0; i < itemsToRemove; i++) {\r\n      this.queryCache.delete(items[i][0])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理统计历史\r\n   */\r\n  private cleanupStatsHistory(): void {\r\n    if (this.queryStats.size > this.maxStatsHistory) {\r\n      const entries = Array.from(this.queryStats.entries())\r\n      entries.sort((a, b) => a[1].startTime.getTime() - b[1].startTime.getTime())\r\n      \r\n      const itemsToRemove = this.queryStats.size - this.maxStatsHistory\r\n      for (let i = 0; i < itemsToRemove; i++) {\r\n        this.queryStats.delete(entries[i][0])\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行性能分析\r\n   */\r\n  private performAnalysis(): void {\r\n    console.log('Performing query performance analysis...')\r\n    \r\n    const analysis = this.generatePerformanceAnalysis()\r\n    this.emit('analysis-complete', analysis)\r\n    \r\n    // 自动应用一些简单的优化建议\r\n    this.autoApplyOptimizations()\r\n  }\r\n\r\n  /**\r\n   * 自动应用优化\r\n   */\r\n  private autoApplyOptimizations(): void {\r\n    const suggestions = Array.from(this.optimizationSuggestions.values())\r\n    const autoApplicable = suggestions.filter(s => \r\n      !s.applied && \r\n      s.type === 'cache' && \r\n      s.implementationDifficulty === 'easy'\r\n    )\r\n    \r\n    autoApplicable.forEach(suggestion => {\r\n      // 这里可以自动启用缓存等简单优化\r\n      suggestion.applied = true\r\n      console.log(`Auto-applied optimization: ${suggestion.description}`)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 生成性能分析报告\r\n   * \r\n   * @returns 性能分析报告\r\n   */\r\n  generatePerformanceAnalysis(): {\r\n    summary: string\r\n    slowQueries: QueryPattern[]\r\n    topQueries: QueryPattern[]\r\n    cacheStats: any\r\n    suggestions: QueryOptimizationSuggestion[]\r\n    recommendations: string[]\r\n  } {\r\n    const patterns = Array.from(this.queryPatterns.values())\r\n    const slowQueries = patterns.filter(p => p.isSlowQuery).slice(0, 10)\r\n    const topQueries = patterns\r\n      .sort((a, b) => b.executionCount - a.executionCount)\r\n      .slice(0, 10)\r\n    \r\n    const totalQueries = patterns.reduce((sum, p) => sum + p.executionCount, 0)\r\n    const avgExecutionTime = patterns.reduce((sum, p) => sum + p.avgExecutionTime, 0) / patterns.length\r\n    \r\n    const cacheHitRate = this.calculateCacheHitRate()\r\n    const suggestions = Array.from(this.optimizationSuggestions.values())\r\n      .filter(s => !s.applied)\r\n      .sort((a, b) => {\r\n        const priorityOrder = { high: 3, medium: 2, low: 1 }\r\n        return priorityOrder[b.priority] - priorityOrder[a.priority]\r\n      })\r\n      .slice(0, 20)\r\n    \r\n    const recommendations = this.generateRecommendations(patterns, suggestions)\r\n    \r\n    return {\r\n      summary: `\r\n查询性能分析报告\r\n================\r\n分析时间: ${new Date().toISOString()}\r\n查询模式总数: ${patterns.length}\r\n总查询次数: ${totalQueries}\r\n平均执行时间: ${avgExecutionTime.toFixed(2)}ms\r\n慢查询数量: ${slowQueries.length}\r\n缓存命中率: ${(cacheHitRate * 100).toFixed(2)}%\r\n待处理建议: ${suggestions.length}\r\n      `.trim(),\r\n      slowQueries,\r\n      topQueries,\r\n      cacheStats: {\r\n        size: this.queryCache.size,\r\n        hitRate: cacheHitRate,\r\n        totalSize: Array.from(this.queryCache.values()).reduce((sum, item) => sum + item.size, 0)\r\n      },\r\n      suggestions,\r\n      recommendations\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算缓存命中率\r\n   * \r\n   * @returns 缓存命中率\r\n   */\r\n  private calculateCacheHitRate(): number {\r\n    // 这里需要实际的缓存命中统计\r\n    // 暂时返回模拟值\r\n    return 0.75\r\n  }\r\n\r\n  /**\r\n   * 生成建议\r\n   * \r\n   * @param patterns - 查询模式\r\n   * @param suggestions - 优化建议\r\n   * @returns 建议数组\r\n   */\r\n  private generateRecommendations(patterns: QueryPattern[], suggestions: QueryOptimizationSuggestion[]): string[] {\r\n    const recommendations: string[] = []\r\n    \r\n    const slowQueryCount = patterns.filter(p => p.isSlowQuery).length\r\n    if (slowQueryCount > 5) {\r\n      recommendations.push(`发现 ${slowQueryCount} 个慢查询模式，建议优先处理高频慢查询`)\r\n    }\r\n    \r\n    const highPrioritySuggestions = suggestions.filter(s => s.priority === 'high').length\r\n    if (highPrioritySuggestions > 0) {\r\n      recommendations.push(`有 ${highPrioritySuggestions} 个高优先级优化建议待处理`)\r\n    }\r\n    \r\n    const cacheHitRate = this.calculateCacheHitRate()\r\n    if (cacheHitRate < 0.5) {\r\n      recommendations.push('缓存命中率较低，建议检查缓存策略和TTL设置')\r\n    }\r\n    \r\n    if (this.queryCache.size > this.cacheConfig.maxSize * 0.9) {\r\n      recommendations.push('查询缓存接近容量限制，建议增加缓存大小或调整驱逐策略')\r\n    }\r\n    \r\n    return recommendations\r\n  }\r\n\r\n  /**\r\n   * 获取查询统计信息\r\n   * \r\n   * @param limit - 限制返回数量\r\n   * @returns 查询统计信息\r\n   */\r\n  getQueryStats(limit?: number): QueryExecutionStats[] {\r\n    const stats = Array.from(this.queryStats.values())\r\n    if (limit) {\r\n      return stats.slice(-limit)\r\n    }\r\n    return stats\r\n  }\r\n\r\n  /**\r\n   * 获取查询模式\r\n   * \r\n   * @param limit - 限制返回数量\r\n   * @returns 查询模式\r\n   */\r\n  getQueryPatterns(limit?: number): QueryPattern[] {\r\n    const patterns = Array.from(this.queryPatterns.values())\r\n    if (limit) {\r\n      return patterns.slice(0, limit)\r\n    }\r\n    return patterns\r\n  }\r\n\r\n  /**\r\n   * 获取优化建议\r\n   * \r\n   * @param applied - 是否已应用\r\n   * @returns 优化建议\r\n   */\r\n  getOptimizationSuggestions(applied?: boolean): QueryOptimizationSuggestion[] {\r\n    const suggestions = Array.from(this.optimizationSuggestions.values())\r\n    if (applied !== undefined) {\r\n      return suggestions.filter(s => s.applied === applied)\r\n    }\r\n    return suggestions\r\n  }\r\n\r\n  /**\r\n   * 获取缓存统计\r\n   * \r\n   * @returns 缓存统计\r\n   */\r\n  getCacheStats(): {\r\n    size: number\r\n    maxSize: number\r\n    hitRate: number\r\n    totalSize: number\r\n    items: QueryCacheItem[]\r\n  } {\r\n    const items = Array.from(this.queryCache.values())\r\n    return {\r\n      size: this.queryCache.size,\r\n      maxSize: this.cacheConfig.maxSize,\r\n      hitRate: this.calculateCacheHitRate(),\r\n      totalSize: items.reduce((sum, item) => sum + item.size, 0),\r\n      items\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新缓存配置\r\n   * \r\n   * @param config - 新的缓存配置\r\n   */\r\n  updateCacheConfig(config: Partial<QueryCacheConfig>): void {\r\n    this.cacheConfig = { ...this.cacheConfig, ...config }\r\n    console.log('Cache configuration updated:', this.cacheConfig)\r\n    this.emit('cache-config-updated', this.cacheConfig)\r\n  }\r\n\r\n  /**\r\n   * 清空缓存\r\n   */\r\n  clearCache(): void {\r\n    this.queryCache.clear()\r\n    console.log('Query cache cleared')\r\n    this.emit('cache-cleared')\r\n  }\r\n\r\n  /**\r\n   * 获取当前状态\r\n   * \r\n   * @returns 当前状态\r\n   */\r\n  getStatus(): {\r\n    isActive: boolean\r\n    totalQueries: number\r\n    totalPatterns: number\r\n    slowQueries: number\r\n    cacheSize: number\r\n    pendingSuggestions: number\r\n  } {\r\n    const patterns = Array.from(this.queryPatterns.values())\r\n    const slowQueries = patterns.filter(p => p.isSlowQuery).length\r\n    const pendingSuggestions = Array.from(this.optimizationSuggestions.values())\r\n      .filter(s => !s.applied).length\r\n    \r\n    return {\r\n      isActive: this.isActive,\r\n      totalQueries: this.queryStats.size,\r\n      totalPatterns: patterns.length,\r\n      slowQueries,\r\n      cacheSize: this.queryCache.size,\r\n      pendingSuggestions\r\n    }\r\n  }\r\n}\r\n\r\n// 创建全局实例\r\nexport const queryPerformanceOptimizer = new QueryPerformanceOptimizer()\r\n\r\n// 导出类型\r\nexport type {\r\n  QueryExecutionStats,\r\n  QueryPattern,\r\n  QueryOptimizationSuggestion,\r\n  QueryCacheConfig,\r\n  QueryCacheItem\r\n}\r\n"],"mappings":"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","ignoreList":[]}