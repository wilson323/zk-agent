335b9b101b368c1a07d835bd2b8ca60f
"use strict";

/**
 * @file fastgpt\feedback\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_133gsqeta2() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\feedback\\route.ts";
  var hash = "5064f2012172dddd3145abb22e4c10676e360b18";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\feedback\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "6": {
        start: {
          line: 14,
          column: 47
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "8": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 111
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "10": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 99
        }
      },
      "11": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "13": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "14": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 121
        }
      },
      "15": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 105
          },
          end: {
            line: 12,
            column: 106
          }
        },
        loc: {
          start: {
            line: 12,
            column: 180
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 22
          }
        }, {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 33
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 40
          }
        }, {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 19,
            column: 72
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 32
          }
        }, {
          start: {
            line: 32,
            column: 36
          },
          end: {
            line: 32,
            column: 38
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 74
          }
        }, {
          start: {
            line: 37,
            column: 78
          },
          end: {
            line: 37,
            column: 102
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\feedback\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAE/C,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,EAAE,EAC5B,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAExD,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC;YAC1B,OAAO,+BAAkB,CAAC,KAAK,CAC7B,+CAA+C,EAC/C,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,SAAS;QACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;YACjE,OAAO,+BAAkB,CAAC,KAAK,CAC7B,mCAAmC,EACnC,GAAG,CACJ,CAAC;QACJ,CAAC;QAED,oBAAoB;QACpB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,eAAe,EAAE;YAC1E,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,UAAU,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;aACzD;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,SAAS;gBACT,MAAM;gBACN,OAAO,EAAE,OAAO,IAAI,EAAE;aACvB,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACxC,OAAO,+BAAkB,CAAC,KAAK,CAC7B,SAAS,CAAC,OAAO,IAAI,wBAAwB,EAC7C,QAAQ,CAAC,MAAM,CAChB,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrC,OAAO,+BAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAChD,OAAO,+BAAkB,CAAC,KAAK,CAC7B,uBAAuB,EACvB,GAAG,CACJ,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\feedback\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\feedback\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { messageId, rating, comment } = await req.json();\n      \n      if (!messageId || !rating) {\n        return ApiResponseWrapper.error(\n          'Missing required fields: messageId and rating',\n          400\n        );\n      }\n  \n      // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\n      if (!process.env.FASTGPT_API_URL || !process.env.FASTGPT_API_KEY) {\n        return ApiResponseWrapper.error(\n          'FastGPT API configuration missing',\n          500\n        );\n      }\n  \n      // \u8C03\u7528FastGPT API\u63D0\u4EA4\u53CD\u9988\n      const response = await fetch(`${process.env.FASTGPT_API_URL}/api/feedback`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.FASTGPT_API_KEY}`,\n        },\n        body: JSON.stringify({\n          messageId,\n          rating,\n          comment: comment || '',\n        }),\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        return ApiResponseWrapper.error(\n          errorData.message || 'Submit feedback failed',\n          response.status\n        );\n      }\n  \n      const result = await response.json();\n      return ApiResponseWrapper.success(result);\n    } catch (error) {\n      console.error('FastGPT feedback error:', error);\n      return ApiResponseWrapper.error(\n        'Internal server error',\n        500\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5064f2012172dddd3145abb22e4c10676e360b18"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_133gsqeta2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_133gsqeta2();
cov_133gsqeta2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_133gsqeta2().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_133gsqeta2().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_133gsqeta2().s[3]++, require("@/lib/utils/api-helper"));
/* istanbul ignore next */
cov_133gsqeta2().s[4]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_133gsqeta2().f[0]++;
  cov_133gsqeta2().s[5]++;
  try {
    const {
      messageId,
      rating,
      comment
    } =
    /* istanbul ignore next */
    (cov_133gsqeta2().s[6]++, await req.json());
    /* istanbul ignore next */
    cov_133gsqeta2().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_133gsqeta2().b[1][0]++, !messageId) ||
    /* istanbul ignore next */
    (cov_133gsqeta2().b[1][1]++, !rating)) {
      /* istanbul ignore next */
      cov_133gsqeta2().b[0][0]++;
      cov_133gsqeta2().s[8]++;
      return api_helper_1.ApiResponseWrapper.error('Missing required fields: messageId and rating', 400);
    } else
    /* istanbul ignore next */
    {
      cov_133gsqeta2().b[0][1]++;
    }
    // 检查环境变量
    cov_133gsqeta2().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_133gsqeta2().b[3][0]++, !process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_133gsqeta2().b[3][1]++, !process.env.FASTGPT_API_KEY)) {
      /* istanbul ignore next */
      cov_133gsqeta2().b[2][0]++;
      cov_133gsqeta2().s[10]++;
      return api_helper_1.ApiResponseWrapper.error('FastGPT API configuration missing', 500);
    } else
    /* istanbul ignore next */
    {
      cov_133gsqeta2().b[2][1]++;
    }
    // 调用FastGPT API提交反馈
    const response =
    /* istanbul ignore next */
    (cov_133gsqeta2().s[11]++, await fetch(`${process.env.FASTGPT_API_URL}/api/feedback`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.FASTGPT_API_KEY}`
      },
      body: JSON.stringify({
        messageId,
        rating,
        comment:
        /* istanbul ignore next */
        (cov_133gsqeta2().b[4][0]++, comment) ||
        /* istanbul ignore next */
        (cov_133gsqeta2().b[4][1]++, '')
      })
    }));
    /* istanbul ignore next */
    cov_133gsqeta2().s[12]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_133gsqeta2().b[5][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_133gsqeta2().s[13]++, await response.json());
      /* istanbul ignore next */
      cov_133gsqeta2().s[14]++;
      return api_helper_1.ApiResponseWrapper.error(
      /* istanbul ignore next */
      (cov_133gsqeta2().b[6][0]++, errorData.message) ||
      /* istanbul ignore next */
      (cov_133gsqeta2().b[6][1]++, 'Submit feedback failed'), response.status);
    } else
    /* istanbul ignore next */
    {
      cov_133gsqeta2().b[5][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_133gsqeta2().s[15]++, await response.json());
    /* istanbul ignore next */
    cov_133gsqeta2().s[16]++;
    return api_helper_1.ApiResponseWrapper.success(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_133gsqeta2().s[17]++;
    console.error('FastGPT feedback error:', error);
    /* istanbul ignore next */
    cov_133gsqeta2().s[18]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,