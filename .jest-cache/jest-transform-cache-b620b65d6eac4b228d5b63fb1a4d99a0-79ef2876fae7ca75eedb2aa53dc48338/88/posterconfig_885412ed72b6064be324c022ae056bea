3ac917442eeada3f75374d125b411556
"use strict";

// @ts-nocheck
/**
 * 海报配置数据库操作
 */
/* istanbul ignore next */
function cov_19p03lirbl() {
  var path = "E:\\zk-agent\\lib\\database\\poster-config.ts";
  var hash = "4299e3a6ef12ea1f8a1d23a4940504d9a5804c7f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\poster-config.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "3": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "5": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 19,
          column: 14
        }
      },
      "6": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 29,
          column: 16
        }
      },
      "7": {
        start: {
          line: 20,
          column: 42
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "8": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "9": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "10": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "11": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 51,
          column: 14
        }
      },
      "12": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 66,
          column: 16
        }
      },
      "13": {
        start: {
          line: 52,
          column: 48
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "14": {
        start: {
          line: 61,
          column: 47
        },
        end: {
          line: 61,
          column: 53
        }
      },
      "15": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "16": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 22
        }
      },
      "17": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "18": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 81,
          column: 14
        }
      },
      "19": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 89,
          column: 16
        }
      },
      "20": {
        start: {
          line: 82,
          column: 46
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "21": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 66
        }
      },
      "22": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 22
        }
      },
      "23": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "24": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "25": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 115,
          column: 16
        }
      },
      "26": {
        start: {
          line: 105,
          column: 40
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "27": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 64
        }
      },
      "28": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 22
        }
      },
      "29": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "30": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "31": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 71
        }
      },
      "32": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 24
        }
      },
      "33": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "34": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "35": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 64
        }
      },
      "36": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 22
        }
      },
      "37": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "38": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 175,
          column: 15
        }
      },
      "39": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 69
        }
      },
      "40": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "41": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 193,
          column: 14
        }
      },
      "42": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 26
        }
      },
      "43": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 67
        }
      },
      "44": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 24
        }
      },
      "45": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 202,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 20,
            column: 31
          }
        },
        loc: {
          start: {
            line: 20,
            column: 42
          },
          end: {
            line: 29,
            column: 13
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 40
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 34
          }
        },
        loc: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 66,
            column: 13
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 40
          },
          end: {
            line: 61,
            column: 41
          }
        },
        loc: {
          start: {
            line: 61,
            column: 47
          },
          end: {
            line: 61,
            column: 53
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 36
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 33
          }
        },
        loc: {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 89,
            column: 13
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 34
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 105,
            column: 29
          },
          end: {
            line: 105,
            column: 30
          }
        },
        loc: {
          start: {
            line: 105,
            column: 40
          },
          end: {
            line: 115,
            column: 13
          }
        },
        line: 105
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 45
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 125
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 52
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 148
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 49
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 167
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 45
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 184
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 148,
            column: 40
          },
          end: {
            line: 148,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 50
          }
        }],
        line: 148
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\poster-config.ts",
      mappings: ";AAAA,cAAc;AACd;;GAEG;;;AAEH,2CAA6C;AAG7C,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAA;AAEjC,MAAa,cAAc;IACzB;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,SAAS;QACpB,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAC/C,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACzB,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;aAC1B,CAAC,CAAA;YACF,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC5B,EAAE,EAAE,KAAK,CAAC,EAAE;gBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC9B,OAAO,EAAE,KAAK,CAAC,UAAU;gBACzB,QAAQ,EAAE,KAAK,CAAC,QAAe;gBAC/B,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;gBACxC,UAAU,EAAE,KAAK,CAAC,UAAiB;aACpC,CAAC,CAAC,CAAA;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAA;YACpD,OAAO,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,oBAAoB;QAC/B,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;gBACrD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,UAAU;iBACrB;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,IAAI;iBACX;gBACD,OAAO,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE;aAChC,CAAC,CAAA;YAEF,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAClC,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACf,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,SAAS,EAAE,QAAQ,CAAC,YAAY;gBAChC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,OAAO,EAAE,QAAQ,CAAC,OAAO;gBACzB,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,UAAU,EAAE,QAAQ,CAAC,UAAU;gBAC/B,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;aAC9B,CAAC,CAAC,CAAA;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAA;YACzD,OAAO,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,gBAAgB;QAC3B,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;gBAClD,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACzB,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;aAC1B,CAAC,CAAA;YACF,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAChC,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,QAAQ,EAAE,OAAO,CAAC,QAAe;gBACjC,mBAAmB,EAAE,OAAO,CAAC,mBAAmB;aACjD,CAAC,CAAC,CAAA;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAA;YACrD,OAAO,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc;QACzB,IAAI,CAAC;YACH,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;gBAC7C,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACzB,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;aAC1B,CAAC,CAAA;YACF,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC1B,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B,CAAC,CAAC,CAAA;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAA;YACnD,OAAO,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAQlC;QACC,IAAI,CAAC;YACH,OAAO,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBAC1C,IAAI,EAAE;oBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,UAAU,EAAE,IAAI,CAAC,QAAQ;oBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,SAAS,EAAE,IAAI,IAAI,EAAE;iBACtB;aACF,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAA;YAC1D,MAAM,KAAK,CAAA;QACb,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAc,EAAE,KAAK,GAAG,EAAE;QACpD,IAAI,CAAC;YACH,OAAO,MAAM,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;gBAC5C,KAAK,EAAE,EAAE,MAAM,EAAE;gBACjB,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;iBACf;gBACD,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;gBAC9B,IAAI,EAAE,KAAK;aACZ,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAA;YACnD,OAAO,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,UAAkB;QACjD,IAAI,CAAC;YACH,MAAM,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC;gBACjC,KAAK,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE;gBACzB,IAAI,EAAE;oBACJ,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;oBAC5B,QAAQ,EAAE,IAAI,IAAI,EAAE;iBACrB;aACF,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAA;QAC1D,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,QAAgB;QAC7C,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;gBACpD,KAAK,EAAE,EAAE,QAAQ,EAAE;gBACnB,OAAO,EAAE;oBACP,iBAAiB,EAAE,IAAI;oBACvB,mBAAmB,EAAE,IAAI;oBACzB,eAAe,EAAE,IAAI;iBACtB;aACF,CAAC,CAAA;YACF,OAAO,MAAM,CAAA;QACf,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAA;YACtD,OAAO,IAAI,CAAA;QACb,CAAC;IACH,CAAC;CACF;AAvMD,wCAuMC",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\poster-config.ts"],
      sourcesContent: ["// @ts-nocheck\n/**\n * \u6D77\u62A5\u914D\u7F6E\u6570\u636E\u5E93\u64CD\u4F5C\n */\n\nimport { PrismaClient } from \"@prisma/client\"\nimport type { PosterStyle, ColorPalette, PosterSize, SecurityTemplate, IndustryConfig } from \"@/types/poster\"\n\nconst prisma = new PrismaClient()\n\nexport class PosterConfigDB {\n  /**\n   * \u83B7\u53D6\u6240\u6709\u6D77\u62A5\u98CE\u683C\n   */\n  static async getStyles(): Promise<PosterStyle[]> {\n    try {\n      const styles = await prisma.posterStyle.findMany({\n        where: { isActive: true },\n        orderBy: { order: \"asc\" },\n      })\n      return styles.map((style) => ({\n        id: style.id,\n        name: style.name,\n        description: style.description,\n        preview: style.previewUrl,\n        category: style.category as any,\n        tags: style.tags,\n        industrySpecific: style.industrySpecific,\n        parameters: style.parameters as any,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get poster styles:\", error)\n      return []\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u5B89\u9632\u884C\u4E1A\u6A21\u677F\n   */\n  static async getSecurityTemplates(): Promise<SecurityTemplate[]> {\n    try {\n      const templates = await prisma.posterTemplate.findMany({\n        where: {\n          isActive: true,\n          industry: \"security\",\n        },\n        include: {\n          elements: true,\n          tags: true,\n        },\n        orderBy: { popularity: \"desc\" },\n      })\n\n      return templates.map((template) => ({\n        id: template.id,\n        name: template.name,\n        description: template.description,\n        thumbnail: template.thumbnailUrl,\n        category: template.category,\n        industry: template.industry,\n        productType: template.productType,\n        useCase: template.useCase,\n        tags: template.tags.map((t) => t.name),\n        elements: template.elements,\n        popularity: template.popularity,\n        isNew: template.isNew,\n        isPremium: template.isPremium,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get security templates:\", error)\n      return []\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u914D\u8272\u65B9\u6848\n   */\n  static async getColorPalettes(): Promise<ColorPalette[]> {\n    try {\n      const palettes = await prisma.colorPalette.findMany({\n        where: { isActive: true },\n        orderBy: { order: \"asc\" },\n      })\n      return palettes.map((palette) => ({\n        id: palette.id,\n        name: palette.name,\n        colors: palette.colors,\n        description: palette.description,\n        category: palette.category as any,\n        industryRecommended: palette.industryRecommended,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get color palettes:\", error)\n      return []\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6D77\u62A5\u5C3A\u5BF8\u914D\u7F6E\n   */\n  static async getPosterSizes(): Promise<PosterSize[]> {\n    try {\n      const sizes = await prisma.posterSize.findMany({\n        where: { isActive: true },\n        orderBy: { order: \"asc\" },\n      })\n      return sizes.map((size) => ({\n        id: size.id,\n        name: size.name,\n        dimensions: size.dimensions,\n        ratio: size.ratio,\n        width: size.width,\n        height: size.height,\n        dpi: size.dpi,\n        category: size.category,\n        recommended: size.recommended,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get poster sizes:\", error)\n      return []\n    }\n  }\n\n  /**\n   * \u4FDD\u5B58\u7528\u6237\u751F\u6210\u5386\u53F2\n   */\n  static async saveGenerationHistory(data: {\n    userId: string\n    prompt: string\n    style: string\n    template?: string\n    settings: any\n    imageUrl: string\n    industry?: string\n  }) {\n    try {\n      return await prisma.posterGeneration.create({\n        data: {\n          userId: data.userId,\n          prompt: data.prompt,\n          style: data.style,\n          templateId: data.template,\n          settings: data.settings,\n          imageUrl: data.imageUrl,\n          industry: data.industry,\n          createdAt: new Date(),\n        },\n      })\n    } catch (error) {\n      console.error(\"Failed to save generation history:\", error)\n      throw error\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u751F\u6210\u5386\u53F2\n   */\n  static async getUserHistory(userId: string, limit = 20) {\n    try {\n      return await prisma.posterGeneration.findMany({\n        where: { userId },\n        include: {\n          template: true,\n        },\n        orderBy: { createdAt: \"desc\" },\n        take: limit,\n      })\n    } catch (error) {\n      console.error(\"Failed to get user history:\", error)\n      return []\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u6A21\u677F\u4F7F\u7528\u7EDF\u8BA1\n   */\n  static async updateTemplateUsage(templateId: string) {\n    try {\n      await prisma.posterTemplate.update({\n        where: { id: templateId },\n        data: {\n          usageCount: { increment: 1 },\n          lastUsed: new Date(),\n        },\n      })\n    } catch (error) {\n      console.error(\"Failed to update template usage:\", error)\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u884C\u4E1A\u914D\u7F6E\n   */\n  static async getIndustryConfig(industry: string): Promise<IndustryConfig | null> {\n    try {\n      const config = await prisma.industryConfig.findUnique({\n        where: { industry },\n        include: {\n          recommendedStyles: true,\n          recommendedPalettes: true,\n          brandGuidelines: true,\n        },\n      })\n      return config\n    } catch (error) {\n      console.error(\"Failed to get industry config:\", error)\n      return null\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4299e3a6ef12ea1f8a1d23a4940504d9a5804c7f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19p03lirbl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19p03lirbl();
cov_19p03lirbl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19p03lirbl().s[1]++;
exports.PosterConfigDB = void 0;
const client_1 =
/* istanbul ignore next */
(cov_19p03lirbl().s[2]++, require("@prisma/client"));
const prisma =
/* istanbul ignore next */
(cov_19p03lirbl().s[3]++, new client_1.PrismaClient());
class PosterConfigDB {
  /**
   * 获取所有海报风格
   */
  static async getStyles() {
    /* istanbul ignore next */
    cov_19p03lirbl().f[0]++;
    cov_19p03lirbl().s[4]++;
    try {
      const styles =
      /* istanbul ignore next */
      (cov_19p03lirbl().s[5]++, await prisma.posterStyle.findMany({
        where: {
          isActive: true
        },
        orderBy: {
          order: "asc"
        }
      }));
      /* istanbul ignore next */
      cov_19p03lirbl().s[6]++;
      return styles.map(style => {
        /* istanbul ignore next */
        cov_19p03lirbl().f[1]++;
        cov_19p03lirbl().s[7]++;
        return {
          id: style.id,
          name: style.name,
          description: style.description,
          preview: style.previewUrl,
          category: style.category,
          tags: style.tags,
          industrySpecific: style.industrySpecific,
          parameters: style.parameters
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[8]++;
      console.error("Failed to get poster styles:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[9]++;
      return [];
    }
  }
  /**
   * 获取安防行业模板
   */
  static async getSecurityTemplates() {
    /* istanbul ignore next */
    cov_19p03lirbl().f[2]++;
    cov_19p03lirbl().s[10]++;
    try {
      const templates =
      /* istanbul ignore next */
      (cov_19p03lirbl().s[11]++, await prisma.posterTemplate.findMany({
        where: {
          isActive: true,
          industry: "security"
        },
        include: {
          elements: true,
          tags: true
        },
        orderBy: {
          popularity: "desc"
        }
      }));
      /* istanbul ignore next */
      cov_19p03lirbl().s[12]++;
      return templates.map(template => {
        /* istanbul ignore next */
        cov_19p03lirbl().f[3]++;
        cov_19p03lirbl().s[13]++;
        return {
          id: template.id,
          name: template.name,
          description: template.description,
          thumbnail: template.thumbnailUrl,
          category: template.category,
          industry: template.industry,
          productType: template.productType,
          useCase: template.useCase,
          tags: template.tags.map(t => {
            /* istanbul ignore next */
            cov_19p03lirbl().f[4]++;
            cov_19p03lirbl().s[14]++;
            return t.name;
          }),
          elements: template.elements,
          popularity: template.popularity,
          isNew: template.isNew,
          isPremium: template.isPremium
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[15]++;
      console.error("Failed to get security templates:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[16]++;
      return [];
    }
  }
  /**
   * 获取配色方案
   */
  static async getColorPalettes() {
    /* istanbul ignore next */
    cov_19p03lirbl().f[5]++;
    cov_19p03lirbl().s[17]++;
    try {
      const palettes =
      /* istanbul ignore next */
      (cov_19p03lirbl().s[18]++, await prisma.colorPalette.findMany({
        where: {
          isActive: true
        },
        orderBy: {
          order: "asc"
        }
      }));
      /* istanbul ignore next */
      cov_19p03lirbl().s[19]++;
      return palettes.map(palette => {
        /* istanbul ignore next */
        cov_19p03lirbl().f[6]++;
        cov_19p03lirbl().s[20]++;
        return {
          id: palette.id,
          name: palette.name,
          colors: palette.colors,
          description: palette.description,
          category: palette.category,
          industryRecommended: palette.industryRecommended
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[21]++;
      console.error("Failed to get color palettes:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[22]++;
      return [];
    }
  }
  /**
   * 获取海报尺寸配置
   */
  static async getPosterSizes() {
    /* istanbul ignore next */
    cov_19p03lirbl().f[7]++;
    cov_19p03lirbl().s[23]++;
    try {
      const sizes =
      /* istanbul ignore next */
      (cov_19p03lirbl().s[24]++, await prisma.posterSize.findMany({
        where: {
          isActive: true
        },
        orderBy: {
          order: "asc"
        }
      }));
      /* istanbul ignore next */
      cov_19p03lirbl().s[25]++;
      return sizes.map(size => {
        /* istanbul ignore next */
        cov_19p03lirbl().f[8]++;
        cov_19p03lirbl().s[26]++;
        return {
          id: size.id,
          name: size.name,
          dimensions: size.dimensions,
          ratio: size.ratio,
          width: size.width,
          height: size.height,
          dpi: size.dpi,
          category: size.category,
          recommended: size.recommended
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[27]++;
      console.error("Failed to get poster sizes:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[28]++;
      return [];
    }
  }
  /**
   * 保存用户生成历史
   */
  static async saveGenerationHistory(data) {
    /* istanbul ignore next */
    cov_19p03lirbl().f[9]++;
    cov_19p03lirbl().s[29]++;
    try {
      /* istanbul ignore next */
      cov_19p03lirbl().s[30]++;
      return await prisma.posterGeneration.create({
        data: {
          userId: data.userId,
          prompt: data.prompt,
          style: data.style,
          templateId: data.template,
          settings: data.settings,
          imageUrl: data.imageUrl,
          industry: data.industry,
          createdAt: new Date()
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[31]++;
      console.error("Failed to save generation history:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[32]++;
      throw error;
    }
  }
  /**
   * 获取用户生成历史
   */
  static async getUserHistory(userId, limit =
  /* istanbul ignore next */
  (cov_19p03lirbl().b[0][0]++, 20)) {
    /* istanbul ignore next */
    cov_19p03lirbl().f[10]++;
    cov_19p03lirbl().s[33]++;
    try {
      /* istanbul ignore next */
      cov_19p03lirbl().s[34]++;
      return await prisma.posterGeneration.findMany({
        where: {
          userId
        },
        include: {
          template: true
        },
        orderBy: {
          createdAt: "desc"
        },
        take: limit
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[35]++;
      console.error("Failed to get user history:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[36]++;
      return [];
    }
  }
  /**
   * 更新模板使用统计
   */
  static async updateTemplateUsage(templateId) {
    /* istanbul ignore next */
    cov_19p03lirbl().f[11]++;
    cov_19p03lirbl().s[37]++;
    try {
      /* istanbul ignore next */
      cov_19p03lirbl().s[38]++;
      await prisma.posterTemplate.update({
        where: {
          id: templateId
        },
        data: {
          usageCount: {
            increment: 1
          },
          lastUsed: new Date()
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[39]++;
      console.error("Failed to update template usage:", error);
    }
  }
  /**
   * 获取行业配置
   */
  static async getIndustryConfig(industry) {
    /* istanbul ignore next */
    cov_19p03lirbl().f[12]++;
    cov_19p03lirbl().s[40]++;
    try {
      const config =
      /* istanbul ignore next */
      (cov_19p03lirbl().s[41]++, await prisma.industryConfig.findUnique({
        where: {
          industry
        },
        include: {
          recommendedStyles: true,
          recommendedPalettes: true,
          brandGuidelines: true
        }
      }));
      /* istanbul ignore next */
      cov_19p03lirbl().s[42]++;
      return config;
    } catch (error) {
      /* istanbul ignore next */
      cov_19p03lirbl().s[43]++;
      console.error("Failed to get industry config:", error);
      /* istanbul ignore next */
      cov_19p03lirbl().s[44]++;
      return null;
    }
  }
}
/* istanbul ignore next */
cov_19p03lirbl().s[45]++;
exports.PosterConfigDB = PosterConfigDB;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,