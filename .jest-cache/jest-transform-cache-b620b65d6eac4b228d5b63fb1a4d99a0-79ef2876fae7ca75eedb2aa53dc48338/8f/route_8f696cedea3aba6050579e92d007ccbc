49fecfcf6a0f329cad9d9ebc23d6e41c
"use strict";

/**
 * @file fastgpt\chat\route.ts
 * @description FastGPT chat API route with streaming support
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1jdqxzkxc7() {
  var path = "E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts";
  var hash = "5ce745e49f1f0913b77da7accbd1e2143953b277";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "3": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 54
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "9": {
        start: {
          line: 17,
          column: 103
        },
        end: {
          line: 17,
          column: 107
        }
      },
      "10": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "12": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 143
        }
      },
      "13": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 90
        }
      },
      "14": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "15": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "16": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "18": {
        start: {
          line: 50,
          column: 35
        },
        end: {
          line: 72,
          column: 14
        }
      },
      "19": {
        start: {
          line: 52,
          column: 35
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "20": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "21": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "22": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "23": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "24": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "25": {
        start: {
          line: 59,
          column: 52
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "26": {
        start: {
          line: 60,
          column: 28
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "27": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 51
        }
      },
      "28": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 62,
          column: 38
        }
      },
      "29": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 54
        }
      },
      "30": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "31": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "32": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "33": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "34": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 83,
          column: 110
        }
      },
      "35": {
        start: {
          line: 83,
          column: 65
        },
        end: {
          line: 83,
          column: 108
        }
      },
      "36": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 170
        }
      },
      "37": {
        start: {
          line: 86,
          column: 21
        },
        end: {
          line: 86,
          column: 42
        }
      },
      "38": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 61
        }
      },
      "39": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 52
        }
      },
      "40": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 129
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 105
          },
          end: {
            line: 14,
            column: 106
          }
        },
        loc: {
          start: {
            line: 14,
            column: 180
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 17
          }
        },
        loc: {
          start: {
            line: 51,
            column: 40
          },
          end: {
            line: 71,
            column: 17
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 83,
            column: 58
          },
          end: {
            line: 83,
            column: 59
          }
        },
        loc: {
          start: {
            line: 83,
            column: 65
          },
          end: {
            line: 83,
            column: 108
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 50
          }
        }, {
          start: {
            line: 24,
            column: 54
          },
          end: {
            line: 24,
            column: 61
          }
        }, {
          start: {
            line: 24,
            column: 65
          },
          end: {
            line: 24,
            column: 90
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 28,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 112
          }
        }, {
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 49
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 32,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 32,
            column: 26
          }
        }, {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 35
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 33,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 33,
            column: 26
          }
        }, {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 35
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 22
          }
        }, {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 36
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 34
          }
        }, {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 60
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 25
          }
        }, {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 42
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 63,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "12": {
        loc: {
          start: {
            line: 84,
            column: 98
          },
          end: {
            line: 84,
            column: 145
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 98
          },
          end: {
            line: 84,
            column: 122
          }
        }, {
          start: {
            line: 84,
            column: 126
          },
          end: {
            line: 84,
            column: 145
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\fastgpt\\chat\\route.ts"],
      sourcesContent: ["/**\n * @file fastgpt\\chat\\route.ts\n * @description FastGPT chat API route with streaming support\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }): Promise<NextResponse> => {\n    try {\n      const body = await req.json();\n      const { messages, stream, detail, chatId, responseChatItemId, variables, baseUrl, useProxy } = body;\n    \n      // Use server-side environment variable for API key\n      const apiKey = process.env.FASTGPT_API_KEY;\n      if (!apiKey) {\n        return ApiResponseWrapper.error(\n          ErrorCode.EXTERNAL_SERVICE_ERROR,\n          'FastGPT API key not configured',\n          null,\n          500\n        );\n      }\n\n      // Use server-side or provided API URL\n      const apiUrl = process.env.FASTGPT_API_URL || baseUrl || \"https://zktecoaihub.com\";\n    \n      // Determine the actual API endpoint\n      const endpoint = useProxy\n        ? `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\\/\\//, \"\"))}/api/v1/chat/completions`\n        : `${apiUrl}/api/v1/chat/completions`;\n    \n      // Prepare the request to the FastGPT API\n      const fastGPTRequest = {\n        messages,\n        stream: stream || false,\n        detail: detail || false,\n        ...(chatId && { chatId }),\n        ...(responseChatItemId && { responseChatItemId }),\n        ...(variables && { variables }),\n      };\n    \n      // Make the request to the FastGPT API\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify(fastGPTRequest),\n      });\n    \n      // Handle streaming response\n      if (stream) {\n        // Return the stream directly\n        const readableStream = new ReadableStream({\n          async start(controller) {\n            const reader = response.body?.getReader();\n            if (!reader) {\n              controller.close();\n              return;\n            }\n    \n            try {\n              while (true) {\n                const { done, value } = await reader.read();\n                if (done) {\n                  controller.close();\n                  break;\n                }\n                controller.enqueue(value);\n              }\n            } catch (error) {\n              console.error('Stream reading error:', error);\n              controller.close();\n            }\n          },\n        });\n    \n        return new NextResponse(readableStream, {\n          headers: {\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            Connection: \"keep-alive\",\n          },\n        });\n      }\n    \n      // Handle non-streaming response\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: { message: response.statusText } }));\n        return ApiResponseWrapper.error(\n          ErrorCode.EXTERNAL_SERVICE_ERROR,\n          errorData.error?.message || 'FastGPT API error',\n          null,\n          response.status\n        );\n      }\n    \n      const data = await response.json();\n      return ApiResponseWrapper.success(data);\n    } catch (error) {\n      console.error('FastGPT chat error:', error);\n      return ApiResponseWrapper.error(\n        ErrorCode.INTERNAL_SERVER_ERROR,\n        'Internal server error',\n        null,\n        500\n      );\n    }\n  }\n);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ce745e49f1f0913b77da7accbd1e2143953b277"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jdqxzkxc7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jdqxzkxc7();
cov_1jdqxzkxc7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jdqxzkxc7().s[1]++;
exports.POST = void 0;
const server_1 =
/* istanbul ignore next */
(cov_1jdqxzkxc7().s[2]++, require("next/server"));
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1jdqxzkxc7().s[3]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1jdqxzkxc7().s[4]++, require("@/lib/utils/api-helper"));
const core_1 =
/* istanbul ignore next */
(cov_1jdqxzkxc7().s[5]++, require("@/types/core"));
/* istanbul ignore next */
cov_1jdqxzkxc7().s[6]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1jdqxzkxc7().f[0]++;
  cov_1jdqxzkxc7().s[7]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[8]++, await req.json());
    const {
      messages,
      stream,
      detail,
      chatId,
      responseChatItemId,
      variables,
      baseUrl,
      useProxy
    } =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[9]++, body);
    // Use server-side environment variable for API key
    const apiKey =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[10]++, process.env.FASTGPT_API_KEY);
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[11]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_1jdqxzkxc7().b[0][0]++;
      cov_1jdqxzkxc7().s[12]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.EXTERNAL_SERVICE_ERROR, 'FastGPT API key not configured', null, 500);
    } else
    /* istanbul ignore next */
    {
      cov_1jdqxzkxc7().b[0][1]++;
    }
    // Use server-side or provided API URL
    const apiUrl =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[13]++,
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[1][0]++, process.env.FASTGPT_API_URL) ||
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[1][1]++, baseUrl) ||
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[1][2]++, "https://zktecoaihub.com"));
    // Determine the actual API endpoint
    const endpoint =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[14]++, useProxy ?
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[2][0]++, `/api/proxy?url=${encodeURIComponent(apiUrl.replace(/^https?:\/\//, ""))}/api/v1/chat/completions`) :
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().b[2][1]++, `${apiUrl}/api/v1/chat/completions`));
    // Prepare the request to the FastGPT API
    const fastGPTRequest =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[15]++, {
      messages,
      stream:
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[3][0]++, stream) ||
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[3][1]++, false),
      detail:
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[4][0]++, detail) ||
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[4][1]++, false),
      ...(
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[5][0]++, chatId) &&
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[5][1]++, {
        chatId
      })),
      ...(
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[6][0]++, responseChatItemId) &&
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[6][1]++, {
        responseChatItemId
      })),
      ...(
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[7][0]++, variables) &&
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[7][1]++, {
        variables
      }))
    });
    // Make the request to the FastGPT API
    const response =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[16]++, await fetch(endpoint, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify(fastGPTRequest)
    }));
    // Handle streaming response
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[17]++;
    if (stream) {
      /* istanbul ignore next */
      cov_1jdqxzkxc7().b[8][0]++;
      // Return the stream directly
      const readableStream =
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().s[18]++, new ReadableStream({
        async start(controller) {
          /* istanbul ignore next */
          cov_1jdqxzkxc7().f[1]++;
          const reader =
          /* istanbul ignore next */
          (cov_1jdqxzkxc7().s[19]++, response.body?.getReader());
          /* istanbul ignore next */
          cov_1jdqxzkxc7().s[20]++;
          if (!reader) {
            /* istanbul ignore next */
            cov_1jdqxzkxc7().b[9][0]++;
            cov_1jdqxzkxc7().s[21]++;
            controller.close();
            /* istanbul ignore next */
            cov_1jdqxzkxc7().s[22]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1jdqxzkxc7().b[9][1]++;
          }
          cov_1jdqxzkxc7().s[23]++;
          try {
            /* istanbul ignore next */
            cov_1jdqxzkxc7().s[24]++;
            while (true) {
              const {
                done,
                value
              } =
              /* istanbul ignore next */
              (cov_1jdqxzkxc7().s[25]++, await reader.read());
              /* istanbul ignore next */
              cov_1jdqxzkxc7().s[26]++;
              if (done) {
                /* istanbul ignore next */
                cov_1jdqxzkxc7().b[10][0]++;
                cov_1jdqxzkxc7().s[27]++;
                controller.close();
                /* istanbul ignore next */
                cov_1jdqxzkxc7().s[28]++;
                break;
              } else
              /* istanbul ignore next */
              {
                cov_1jdqxzkxc7().b[10][1]++;
              }
              cov_1jdqxzkxc7().s[29]++;
              controller.enqueue(value);
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_1jdqxzkxc7().s[30]++;
            console.error('Stream reading error:', error);
            /* istanbul ignore next */
            cov_1jdqxzkxc7().s[31]++;
            controller.close();
          }
        }
      }));
      /* istanbul ignore next */
      cov_1jdqxzkxc7().s[32]++;
      return new server_1.NextResponse(readableStream, {
        headers: {
          "Content-Type": "text/event-stream",
          "Cache-Control": "no-cache",
          Connection: "keep-alive"
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jdqxzkxc7().b[8][1]++;
    }
    // Handle non-streaming response
    cov_1jdqxzkxc7().s[33]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1jdqxzkxc7().b[11][0]++;
      const errorData =
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().s[34]++, await response.json().catch(() => {
        /* istanbul ignore next */
        cov_1jdqxzkxc7().f[2]++;
        cov_1jdqxzkxc7().s[35]++;
        return {
          error: {
            message: response.statusText
          }
        };
      }));
      /* istanbul ignore next */
      cov_1jdqxzkxc7().s[36]++;
      return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.EXTERNAL_SERVICE_ERROR,
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[12][0]++, errorData.error?.message) ||
      /* istanbul ignore next */
      (cov_1jdqxzkxc7().b[12][1]++, 'FastGPT API error'), null, response.status);
    } else
    /* istanbul ignore next */
    {
      cov_1jdqxzkxc7().b[11][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1jdqxzkxc7().s[37]++, await response.json());
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[38]++;
    return api_helper_1.ApiResponseWrapper.success(data);
  } catch (error) {
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[39]++;
    console.error('FastGPT chat error:', error);
    /* istanbul ignore next */
    cov_1jdqxzkxc7().s[40]++;
    return api_helper_1.ApiResponseWrapper.error(core_1.ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null, 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,