{"version":3,"names":["cov_262fnejt7o","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","withGlobalErrorHandler","server_1","require","zod_1","agent_errors_1","api_helper_1","core_1","crypto_1","ErrorClassifier","classifyError","error","ZodError","AgentErrorType","AUTHENTICATION_ERROR","severity","ErrorSeverity","LOW","statusCode","userMessage","shouldRetry","AgentError","getStatusCodeFromErrorType","getUserMessageFromError","isRetryableError","code","SERVICE_UNAVAILABLE","HIGH","message","includes","CHAT_API_ERROR","MEDIUM","CRITICAL","statusMap","CAD_FILE_PARSE_ERROR","CAD_FORMAT_UNSUPPORTED","CAD_FILE_CORRUPTED","CAD_ANALYSIS_TIMEOUT","POSTER_GENERATION_FAILED","POSTER_TEMPLATE_ERROR","POSTER_RESOURCE_LIMIT","POSTER_TIMEOUT","CHAT_CONTEXT_LOST","CHAT_RATE_LIMIT","CHAT_MODEL_UNAVAILABLE","AGENT_COMMUNICATION_ERROR","RESOURCE_EXHAUSTED","messageMap","retryableErrors","GlobalErrorHandler","constructor","errorCount","lastErrorTime","circuitBreakerOpen","circuitBreakerTimeout","timeWindowMs","errorThreshold","parseInt","process","env","ERROR_THRESHOLD","getInstance","instance","handleError","request","context","startTime","Date","now","classification","agentError","agentType","originalError","url","method","userAgent","headers","get","recordError","checkTimeWindowAndUpdateStats","openCircuitBreaker","ApiLogger","errorId","id","stack","timestamp","createErrorResponse","handlerError","console","NextResponse","json","success","ErrorCode","INTERNAL_SERVER_ERROR","details","toISOString","status","errorCode","mapErrorTypeToCode","isDevelopment","NODE_ENV","errorResponse","retryable","originalMessage","requestId","retryAfter","calculateRetryDelay","String","codeMap","VALIDATION_ERROR","TIMEOUT_ERROR","RATE_LIMIT_ERROR","EXTERNAL_SERVICE_ERROR","delayMap","updateErrorStats","shouldTriggerCircuitBreaker","warn","circuitBreakerResetTimer","clearTimeout","setTimeout","info","responseBody","getErrorCode","getRetryDelay","isCircuitBreakerOpen","getErrorStats","handler","req","errorHandler","randomUUID","globalErrorHandler"],"sources":["E:\\zk-agent\\lib\\middleware\\global-error-handler.ts"],"sourcesContent":["/**\n * @file Global Error Handler Middleware\n * @description 全局异常处理中间件，统一处理所有API路由的异常\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { ZodError } from 'zod';\nimport { AgentError, ErrorSeverity, AgentErrorType } from '@/lib/errors/agent-errors';\nimport { ApiResponseWrapper, ApiLogger } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { errorMonitor } from '@/lib/monitoring/error-monitor';\nimport { randomUUID } from 'crypto';\n\n// 错误分类器\nclass ErrorClassifier {\n  static classifyError(error: any): {\n    type: AgentErrorType;\n    severity: ErrorSeverity;\n    statusCode: number;\n    userMessage: string;\n    shouldRetry: boolean;\n  } {\n    // Zod验证错误\n    if (error instanceof ZodError) {\n      return {\n        type: AgentErrorType.AUTHENTICATION_ERROR,\n        severity: ErrorSeverity.LOW,\n        statusCode: 400,\n        userMessage: '请求参数验证失败',\n        shouldRetry: false\n      };\n    }\n\n    // 智能体错误\n    if (error instanceof AgentError) {\n      return {\n        type: error.type,\n        severity: error.severity,\n        statusCode: this.getStatusCodeFromErrorType(error.type),\n        userMessage: this.getUserMessageFromError(error),\n        shouldRetry: this.isRetryableError(error.type)\n      };\n    }\n\n    // 网络错误\n    if (error.code === 'ECONNREFUSED' || error.code === 'ENOTFOUND') {\n      return {\n        type: AgentErrorType.SERVICE_UNAVAILABLE,\n        severity: ErrorSeverity.HIGH,\n        statusCode: 503,\n        userMessage: '服务暂时不可用，请稍后重试',\n        shouldRetry: true\n      };\n    }\n\n    // 超时错误\n    if (error.code === 'ETIMEDOUT' || error.message?.includes('timeout')) {\n      return {\n        type: AgentErrorType.CHAT_API_ERROR,\n        severity: ErrorSeverity.MEDIUM,\n        statusCode: 408,\n        userMessage: '请求超时，请重试',\n        shouldRetry: true\n      };\n    }\n\n    // 权限错误\n    if (error.message?.includes('unauthorized') || error.message?.includes('forbidden')) {\n      return {\n        type: AgentErrorType.AUTHENTICATION_ERROR,\n        severity: ErrorSeverity.MEDIUM,\n        statusCode: 401,\n        userMessage: '身份验证失败',\n        shouldRetry: false\n      };\n    }\n\n    // 默认为内部服务器错误\n    return {\n      type: AgentErrorType.SERVICE_UNAVAILABLE,\n      severity: ErrorSeverity.CRITICAL,\n      statusCode: 500,\n      userMessage: '系统内部错误，我们正在处理',\n      shouldRetry: false\n    };\n  }\n\n  private static getStatusCodeFromErrorType(type: AgentErrorType): number {\n    const statusMap: Record<AgentErrorType, number> = {\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: 400,\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: 415,\n      [AgentErrorType.CAD_FILE_CORRUPTED]: 400,\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: 408,\n      [AgentErrorType.POSTER_GENERATION_FAILED]: 500,\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: 400,\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: 429,\n      [AgentErrorType.POSTER_TIMEOUT]: 408,\n      [AgentErrorType.CHAT_CONTEXT_LOST]: 400,\n      [AgentErrorType.CHAT_API_ERROR]: 502,\n      [AgentErrorType.CHAT_RATE_LIMIT]: 429,\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: 503,\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: 502,\n      [AgentErrorType.RESOURCE_EXHAUSTED]: 503,\n      [AgentErrorType.SERVICE_UNAVAILABLE]: 503,\n      [AgentErrorType.AUTHENTICATION_ERROR]: 401\n    };\n    return statusMap[type] || 500;\n  }\n\n  private static getUserMessageFromError(error: AgentError): string {\n    const messageMap: Record<AgentErrorType, string> = {\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: 'CAD文件解析失败，请检查文件格式',\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: '不支持的CAD文件格式',\n      [AgentErrorType.CAD_FILE_CORRUPTED]: 'CAD文件已损坏，请重新上传',\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: 'CAD分析超时，请稍后重试',\n      [AgentErrorType.POSTER_GENERATION_FAILED]: '海报生成失败，请重试',\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: '海报模板错误',\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: '资源使用超限，请稍后重试',\n      [AgentErrorType.POSTER_TIMEOUT]: '海报生成超时，请重试',\n      [AgentErrorType.CHAT_CONTEXT_LOST]: '对话上下文丢失，请重新开始对话',\n      [AgentErrorType.CHAT_API_ERROR]: '对话服务暂时不可用，请稍后重试',\n      [AgentErrorType.CHAT_RATE_LIMIT]: '请求过于频繁，请稍后重试',\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: '对话模型暂时不可用',\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: '智能体通信错误',\n      [AgentErrorType.RESOURCE_EXHAUSTED]: '系统资源不足，请稍后重试',\n      [AgentErrorType.SERVICE_UNAVAILABLE]: '服务暂时不可用，请稍后重试',\n      [AgentErrorType.AUTHENTICATION_ERROR]: '身份验证失败'\n    };\n    return messageMap[error.type] || error.message;\n  }\n\n  private static isRetryableError(type: AgentErrorType): boolean {\n    const retryableErrors = [\n      AgentErrorType.CAD_ANALYSIS_TIMEOUT,\n      AgentErrorType.POSTER_GENERATION_FAILED,\n      AgentErrorType.POSTER_TIMEOUT,\n      AgentErrorType.CHAT_API_ERROR,\n      AgentErrorType.CHAT_RATE_LIMIT,\n      AgentErrorType.CHAT_MODEL_UNAVAILABLE,\n      AgentErrorType.AGENT_COMMUNICATION_ERROR,\n      AgentErrorType.RESOURCE_EXHAUSTED,\n      AgentErrorType.SERVICE_UNAVAILABLE\n    ];\n    return retryableErrors.includes(type);\n  }\n}\n\n// 全局错误处理器\nexport class GlobalErrorHandler {\n  private static instance: GlobalErrorHandler;\n  private errorCount = 0;\n  private lastErrorTime = 0;\n  private circuitBreakerOpen = false;\n  private readonly circuitBreakerTimeout = 60000; // 1分钟\n  private readonly timeWindowMs = 60000; // 1分钟窗口\n  private readonly errorThreshold = parseInt(process.env.ERROR_THRESHOLD || '50'); // 错误阈值\n  private circuitBreakerResetTimer?: NodeJS.Timeout;\n\n  static getInstance(): GlobalErrorHandler {\n    if (!GlobalErrorHandler.instance) {\n      GlobalErrorHandler.instance = new GlobalErrorHandler();\n    }\n    return GlobalErrorHandler.instance;\n  }\n\n  /**\n   * 处理API错误\n   */\n  async handleError(\n    error: any,\n    request: NextRequest,\n    context?: any\n  ): Promise<NextResponse> {\n    const startTime = Date.now();\n    \n    try {\n      // 错误分类\n      const classification = ErrorClassifier.classifyError(error);\n      \n      // 创建标准化错误对象\n      const agentError = error instanceof AgentError \n        ? error \n        : new AgentError(\n            classification.type,\n            error.message || '未知错误',\n            classification.severity,\n            context?.agentType || 'unknown',\n            {\n              originalError: error,\n              url: request.url,\n              method: request.method,\n              userAgent: request.headers.get('user-agent'),\n              ...context\n            }\n          );\n\n      // 记录到监控系统\n      this.recordError(agentError);\n      \n      // 检查时间窗口并更新错误统计\n      this.checkTimeWindowAndUpdateStats();\n      \n      // 检查是否需要触发熔断器\n      if (this.errorCount >= this.errorThreshold) {\n        this.openCircuitBreaker();\n      }\n      \n      // 详细日志记录\n      ApiLogger.error('Global error handled', {\n        errorId: agentError.id,\n        type: agentError.type,\n        message: agentError.message,\n        statusCode: classification.statusCode,\n        stack: error.stack,\n        context: agentError.context,\n        timestamp: agentError.timestamp\n      });\n      \n      return this.createErrorResponse(agentError);\n\n    } catch (handlerError) {\n      // 错误处理器本身出错的兜底处理\n      console.error('Global error handler failed:', handlerError);\n      \n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            code: ErrorCode.INTERNAL_SERVER_ERROR,\n            message: '系统内部错误',\n            details: null\n          },\n          timestamp: new Date().toISOString()\n        },\n        { status: 500 }\n      );\n    }\n  }\n\n  /**\n   * 创建错误响应\n   */\n  private createErrorResponse(\n    classification: any,\n    error: AgentError,\n    request: NextRequest\n  ): NextResponse {\n    const errorCode = this.mapErrorTypeToCode(classification.type);\n    \n    // 开发环境返回详细错误信息\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    \n    const errorResponse = {\n      success: false,\n      error: {\n        code: errorCode,\n        message: classification.userMessage,\n        type: classification.type,\n        severity: classification.severity,\n        retryable: classification.shouldRetry,\n        details: isDevelopment ? {\n          originalMessage: error.message,\n          stack: error.stack,\n          context: error.context\n        } : null\n      },\n      timestamp: new Date().toISOString(),\n      requestId: error.context?.requestId,\n      ...(classification.shouldRetry && {\n        retryAfter: this.calculateRetryDelay(classification.type)\n      })\n    };\n\n    return NextResponse.json(errorResponse, { \n      status: classification.statusCode,\n      headers: {\n        'X-Error-Type': classification.type,\n        'X-Error-Severity': classification.severity,\n        ...(classification.shouldRetry && {\n          'Retry-After': String(this.calculateRetryDelay(classification.type) / 1000)\n        })\n      }\n    });\n  }\n\n  /**\n   * 映射错误类型到错误代码\n   */\n  private mapErrorTypeToCode(type: AgentErrorType): ErrorCode {\n    const codeMap: Record<AgentErrorType, ErrorCode> = {\n      [AgentErrorType.CAD_FILE_PARSE_ERROR]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CAD_FORMAT_UNSUPPORTED]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CAD_FILE_CORRUPTED]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CAD_ANALYSIS_TIMEOUT]: ErrorCode.TIMEOUT_ERROR,\n      [AgentErrorType.POSTER_GENERATION_FAILED]: ErrorCode.INTERNAL_SERVER_ERROR,\n      [AgentErrorType.POSTER_TEMPLATE_ERROR]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: ErrorCode.RATE_LIMIT_ERROR,\n      [AgentErrorType.POSTER_TIMEOUT]: ErrorCode.TIMEOUT_ERROR,\n      [AgentErrorType.CHAT_CONTEXT_LOST]: ErrorCode.VALIDATION_ERROR,\n      [AgentErrorType.CHAT_API_ERROR]: ErrorCode.EXTERNAL_SERVICE_ERROR,\n      [AgentErrorType.CHAT_RATE_LIMIT]: ErrorCode.RATE_LIMIT_ERROR,\n      [AgentErrorType.CHAT_MODEL_UNAVAILABLE]: ErrorCode.SERVICE_UNAVAILABLE,\n      [AgentErrorType.AGENT_COMMUNICATION_ERROR]: ErrorCode.EXTERNAL_SERVICE_ERROR,\n      [AgentErrorType.RESOURCE_EXHAUSTED]: ErrorCode.SERVICE_UNAVAILABLE,\n      [AgentErrorType.SERVICE_UNAVAILABLE]: ErrorCode.SERVICE_UNAVAILABLE,\n      [AgentErrorType.AUTHENTICATION_ERROR]: ErrorCode.AUTHENTICATION_ERROR\n    };\n    return codeMap[type] || ErrorCode.INTERNAL_SERVER_ERROR;\n  }\n\n  /**\n   * 计算重试延迟\n   */\n  private calculateRetryDelay(type: AgentErrorType): number {\n    const delayMap: Record<AgentErrorType, number> = {\n      [AgentErrorType.CHAT_RATE_LIMIT]: 60000, // 1分钟\n      [AgentErrorType.POSTER_RESOURCE_LIMIT]: 30000, // 30秒\n      [AgentErrorType.RESOURCE_EXHAUSTED]: 120000, // 2分钟\n      [AgentErrorType.SERVICE_UNAVAILABLE]: 60000, // 1分钟\n    };\n    return delayMap[type] || 5000; // 默认5秒\n  }\n\n  /**\n   * 更新错误统计\n   */\n  private updateErrorStats(): void {\n    // 使用原子操作避免并发问题\n    const now = Date.now();\n    this.errorCount++;\n    this.lastErrorTime = now;\n  }\n\n  /**\n   * 检查时间窗口并更新统计\n   */\n  private checkTimeWindowAndUpdateStats(): void {\n    const now = Date.now();\n    \n    // 检查时间窗口是否过期\n    if (this.lastErrorTime > 0 && now - this.lastErrorTime > this.timeWindowMs) {\n      this.errorCount = 0;\n    }\n    \n    // 更新统计\n    this.errorCount++;\n    this.lastErrorTime = now;\n  }\n\n  /**\n   * 检查是否应该触发熔断器\n   */\n  private shouldTriggerCircuitBreaker(): boolean {\n    const now = Date.now();\n    \n    // 重置计数器（如果超过时间窗口）\n    if (now - this.lastErrorTime > this.timeWindowMs) {\n      this.errorCount = 0;\n      this.lastErrorTime = now; // 修复：更新时间戳\n    }\n    \n    return this.errorCount >= this.errorThreshold;\n  }\n\n  /**\n   * 开启熔断器\n   */\n  private openCircuitBreaker(): void {\n    if (this.circuitBreakerOpen) {\n      return; // 避免重复开启\n    }\n    \n    this.circuitBreakerOpen = true;\n    console.warn('🚨 Circuit breaker opened due to high error rate');\n    \n    // 清除之前的定时器\n    if (this.circuitBreakerResetTimer) {\n      clearTimeout(this.circuitBreakerResetTimer);\n    }\n    \n    // 设置自动恢复\n    this.circuitBreakerResetTimer = setTimeout(() => {\n      this.circuitBreakerOpen = false;\n      this.errorCount = 0;\n      this.lastErrorTime = 0;\n      console.info('✅ Circuit breaker closed, service restored');\n    }, this.circuitBreakerTimeout);\n  }\n\n  /**\n   * 记录错误到监控系统\n   */\n  private recordError(error: AgentError): void {\n    // 这里可以集成外部监控系统，如 Sentry, DataDog 等\n    // 目前使用控制台输出作为占位符\n    console.error('Error recorded:', {\n      id: error.id,\n      type: error.type,\n      message: error.message,\n      timestamp: error.timestamp\n    });\n  }\n\n  /**\n   * 创建错误响应\n   */\n  private createErrorResponse(error: AgentError): NextResponse {\n    const responseBody = {\n      success: false,\n      error: {\n        code: this.getErrorCode(error.type),\n        message: error.userMessage,\n        type: error.type,\n        ...(process.env.NODE_ENV === 'development' && {\n          details: error.message,\n          stack: error.stack\n        })\n      },\n      requestId: error.id,\n      timestamp: error.timestamp,\n      ...(error.retryable && {\n        retryAfter: this.getRetryDelay(error.type)\n      })\n    };\n\n    return NextResponse.json(responseBody, {\n      status: error.statusCode,\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Request-ID': error.id\n      }\n    });\n  }\n\n  /**\n   * 检查熔断器状态\n   */\n  isCircuitBreakerOpen(): boolean {\n    return this.circuitBreakerOpen;\n  }\n  \n  /**\n   * 获取错误统计\n   */\n  getErrorStats() {\n    return {\n      errorCount: this.errorCount,\n      lastErrorTime: this.lastErrorTime,\n      circuitBreakerOpen: this.circuitBreakerOpen,\n      errorThreshold: this.errorThreshold,\n      timeWindowMs: this.timeWindowMs\n    };\n  }\n}\n\n// 中间件包装器\nexport function withGlobalErrorHandler(\n  handler: (req: NextRequest, context?: any) => Promise<NextResponse>\n) {\n  return async (req: NextRequest, context?: any): Promise<NextResponse> => {\n    const errorHandler = GlobalErrorHandler.getInstance();\n    \n    // 检查熔断器状态\n    if (errorHandler.isCircuitBreakerOpen()) {\n      const requestId = randomUUID();\n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            code: ErrorCode.SERVICE_UNAVAILABLE,\n            message: '服务暂时不可用，请稍后重试',\n            type: AgentErrorType.SERVICE_UNAVAILABLE\n          },\n          requestId,\n          timestamp: new Date().toISOString(),\n          retryAfter: 60\n        },\n        { \n          status: 503,\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Request-ID': requestId,\n            'Retry-After': '60'\n          }\n        }\n      );\n    }\n\n    try {\n      return await handler(req, context);\n    } catch (error) {\n      return await errorHandler.handleError(error, req, context);\n    }\n  };\n}\n\n// 导出单例实例\nexport const globalErrorHandler = GlobalErrorHandler.getInstance();"],"mappings":"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","ignoreList":[]}