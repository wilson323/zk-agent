2f1a5609dc0c7706429111375baf60fc
"use strict";

/**
 * @file shared\[shareId]\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_59wi3sti2() {
  var path = "E:\\zk-agent\\app\\api\\shared\\[shareId]\\route.ts";
  var hash = "9ca16a1877dd0ba4966ae717cd28827c409f901a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\shared\\[shareId]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 12,
          column: 80
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "8": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "9": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 98
        }
      },
      "10": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "11": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "13": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 115
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "16": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 115
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "19": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 107
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "21": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 113
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 118
        }
      },
      "23": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 59,
          column: 3
        }
      },
      "24": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "25": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "26": {
        start: {
          line: 48,
          column: 21
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "27": {
        start: {
          line: 49,
          column: 35
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "29": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 51,
          column: 116
        }
      },
      "30": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 70
        }
      },
      "31": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 119
        }
      },
      "32": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 112
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 100
          },
          end: {
            line: 13,
            column: 101
          }
        },
        loc: {
          start: {
            line: 13,
            column: 175
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 105
          },
          end: {
            line: 45,
            column: 106
          }
        },
        loc: {
          start: {
            line: 45,
            column: 180
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 45
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 18,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 18,
            column: 53
          }
        }, {
          start: {
            line: 18,
            column: 57
          },
          end: {
            line: 18,
            column: 85
          }
        }, {
          start: {
            line: 18,
            column: 89
          },
          end: {
            line: 18,
            column: 98
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 55
          }
        }, {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 19,
            column: 68
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 30
          }
        }, {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 43
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 28
          }
        }, {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 41
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 30
          }
        }, {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 27,
            column: 43
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 34
          }
        }, {
          start: {
            line: 50,
            column: 38
          },
          end: {
            line: 50,
            column: 44
          }
        }],
        line: 50
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\shared\\[shareId]\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\shared\\[shareId]\\route.ts"],
      sourcesContent: ["/**\n * @file shared\\[shareId]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { enhancedShareManager } from \"@/lib/sharing/enhanced-share-manager\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { shareId } = params as { shareId: string }\n      const password = validatedQuery?.password as string\n      \n      // Get client info\n      const ip = req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\") || \"unknown\"\n      const userAgent = req.headers.get(\"user-agent\") || \"unknown\"\n      const referrer = req.headers.get(\"referer\")\n      const country = req.headers.get(\"cf-ipcountry\") // Cloudflare country header\n      \n      const accessInfo = {\n        ip,\n        userAgent,\n        referrer: referrer || undefined,\n        country: country || undefined,\n        password: password || undefined,\n      }\n      \n      const result = await enhancedShareManager.accessSharedContent(shareId, accessInfo)\n      \n      if (!result) {\n        return ApiResponseWrapper.error(\n          { message: 'Shared content not found' },\n          { status: 404 }\n        )\n      }\n      \n      return ApiResponseWrapper.success(result)\n    } catch (error: any) {\n      if (error.message.includes(\"password\")) {\n        return ApiResponseWrapper.error(\n          { message: 'Invalid password' },\n          { status: 401 }\n        )\n      }\n      if (error.message.includes(\"maximum views\")) {\n        return ApiResponseWrapper.error(\n          { message: 'Maximum views exceeded' },\n          { status: 410 }\n        )\n      }\n      return ApiResponseWrapper.error(\n        { message: 'Failed to access shared content' },\n        { status: 500 }\n      )\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { shareId } = params as { shareId: string }\n      const body = await req.json()\n      const { action, userId } = body\n      \n      if (action === \"analytics\" && userId) {\n        const analytics = await enhancedShareManager.getShareAnalytics(shareId, userId)\n        return ApiResponseWrapper.success(analytics)\n      }\n      \n      return ApiResponseWrapper.error(\n        { message: 'Invalid action or missing userId' },\n        { status: 400 }\n      )\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        { message: 'Failed to process request' },\n        { status: 500 }\n      )\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9ca16a1877dd0ba4966ae717cd28827c409f901a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_59wi3sti2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_59wi3sti2();
cov_59wi3sti2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_59wi3sti2().s[1]++;
exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_59wi3sti2().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_59wi3sti2().s[3]++, require("@/lib/utils/api-helper"));
const enhanced_share_manager_1 =
/* istanbul ignore next */
(cov_59wi3sti2().s[4]++, require("@/lib/sharing/enhanced-share-manager"));
/* istanbul ignore next */
cov_59wi3sti2().s[5]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_59wi3sti2().f[0]++;
  cov_59wi3sti2().s[6]++;
  try {
    const {
      shareId
    } =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[7]++, params);
    const password =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[8]++, validatedQuery?.password);
    // Get client info
    const ip =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[9]++,
    /* istanbul ignore next */
    (cov_59wi3sti2().b[0][0]++, req.headers.get("x-forwarded-for")) ||
    /* istanbul ignore next */
    (cov_59wi3sti2().b[0][1]++, req.headers.get("x-real-ip")) ||
    /* istanbul ignore next */
    (cov_59wi3sti2().b[0][2]++, "unknown"));
    const userAgent =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[10]++,
    /* istanbul ignore next */
    (cov_59wi3sti2().b[1][0]++, req.headers.get("user-agent")) ||
    /* istanbul ignore next */
    (cov_59wi3sti2().b[1][1]++, "unknown"));
    const referrer =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[11]++, req.headers.get("referer"));
    const country =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[12]++, req.headers.get("cf-ipcountry")); // Cloudflare country header
    const accessInfo =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[13]++, {
      ip,
      userAgent,
      referrer:
      /* istanbul ignore next */
      (cov_59wi3sti2().b[2][0]++, referrer) ||
      /* istanbul ignore next */
      (cov_59wi3sti2().b[2][1]++, undefined),
      country:
      /* istanbul ignore next */
      (cov_59wi3sti2().b[3][0]++, country) ||
      /* istanbul ignore next */
      (cov_59wi3sti2().b[3][1]++, undefined),
      password:
      /* istanbul ignore next */
      (cov_59wi3sti2().b[4][0]++, password) ||
      /* istanbul ignore next */
      (cov_59wi3sti2().b[4][1]++, undefined)
    });
    const result =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[14]++, await enhanced_share_manager_1.enhancedShareManager.accessSharedContent(shareId, accessInfo));
    /* istanbul ignore next */
    cov_59wi3sti2().s[15]++;
    if (!result) {
      /* istanbul ignore next */
      cov_59wi3sti2().b[5][0]++;
      cov_59wi3sti2().s[16]++;
      return api_helper_1.ApiResponseWrapper.error({
        message: 'Shared content not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_59wi3sti2().b[5][1]++;
    }
    cov_59wi3sti2().s[17]++;
    return api_helper_1.ApiResponseWrapper.success(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_59wi3sti2().s[18]++;
    if (error.message.includes("password")) {
      /* istanbul ignore next */
      cov_59wi3sti2().b[6][0]++;
      cov_59wi3sti2().s[19]++;
      return api_helper_1.ApiResponseWrapper.error({
        message: 'Invalid password'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_59wi3sti2().b[6][1]++;
    }
    cov_59wi3sti2().s[20]++;
    if (error.message.includes("maximum views")) {
      /* istanbul ignore next */
      cov_59wi3sti2().b[7][0]++;
      cov_59wi3sti2().s[21]++;
      return api_helper_1.ApiResponseWrapper.error({
        message: 'Maximum views exceeded'
      }, {
        status: 410
      });
    } else
    /* istanbul ignore next */
    {
      cov_59wi3sti2().b[7][1]++;
    }
    cov_59wi3sti2().s[22]++;
    return api_helper_1.ApiResponseWrapper.error({
      message: 'Failed to access shared content'
    }, {
      status: 500
    });
  }
});
/* istanbul ignore next */
cov_59wi3sti2().s[23]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_59wi3sti2().f[1]++;
  cov_59wi3sti2().s[24]++;
  try {
    const {
      shareId
    } =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[25]++, params);
    const body =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[26]++, await req.json());
    const {
      action,
      userId
    } =
    /* istanbul ignore next */
    (cov_59wi3sti2().s[27]++, body);
    /* istanbul ignore next */
    cov_59wi3sti2().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_59wi3sti2().b[9][0]++, action === "analytics") &&
    /* istanbul ignore next */
    (cov_59wi3sti2().b[9][1]++, userId)) {
      /* istanbul ignore next */
      cov_59wi3sti2().b[8][0]++;
      const analytics =
      /* istanbul ignore next */
      (cov_59wi3sti2().s[29]++, await enhanced_share_manager_1.enhancedShareManager.getShareAnalytics(shareId, userId));
      /* istanbul ignore next */
      cov_59wi3sti2().s[30]++;
      return api_helper_1.ApiResponseWrapper.success(analytics);
    } else
    /* istanbul ignore next */
    {
      cov_59wi3sti2().b[8][1]++;
    }
    cov_59wi3sti2().s[31]++;
    return api_helper_1.ApiResponseWrapper.error({
      message: 'Invalid action or missing userId'
    }, {
      status: 400
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_59wi3sti2().s[32]++;
    return api_helper_1.ApiResponseWrapper.error({
      message: 'Failed to process request'
    }, {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,