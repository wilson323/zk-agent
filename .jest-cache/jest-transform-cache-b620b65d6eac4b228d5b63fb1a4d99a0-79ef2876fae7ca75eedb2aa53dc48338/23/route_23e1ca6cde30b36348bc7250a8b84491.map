{"version":3,"names":["cov_2hgj77rtk2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","core_1","zod_1","updateProfileSchema","z","object","string","optional","avatar","exports","GET","createApiRoute","RouteConfigs","protectedGet","req","params","validatedBody","validatedQuery","user","requestId","ApiResponseWrapper","error","ErrorCode","AUTHENTICATION_ERROR","userProfile","id","email","createdAt","Date","toISOString","updatedAt","success","console","INTERNAL_SERVER_ERROR","PUT","protectedPut","body","updatedUser","log","userId","updatedFields","Object","keys","timestamp"],"sources":["E:\\zk-agent\\app\\api\\auth\\profile\\route.ts"],"sourcesContent":["/**\n * @file auth\\profile\\route.ts\n * @description User profile API route\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { ErrorCode } from '@/types/core';\nimport { z } from 'zod';\n\nconst updateProfileSchema = z.object({\n  name: z.string().optional(),\n  avatar: z.string().optional(),\n});\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      if (!user) {\n        return ApiResponseWrapper.error(ErrorCode.AUTHENTICATION_ERROR, '未授权访问', null, 401);\n      }\n\n      // 模拟获取用户信息\n      const userProfile = {\n        id: user.id,\n        name: user.name || 'User',\n        email: user.email,\n        avatar: user.avatar || null,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      return ApiResponseWrapper.success(userProfile);\n    } catch (error) {\n      console.error('Get profile error:', error);\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null, 500);\n    }\n  }\n);\n\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut({ body: updateProfileSchema }),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      if (!user) {\n        return ApiResponseWrapper.error(ErrorCode.AUTHENTICATION_ERROR, '未授权访问', null, 401);\n      }\n\n      const { name, avatar } = validatedBody;\n      \n      // 模拟更新用户信息\n      const updatedUser = {\n        id: user.id,\n        name: name || user.name,\n        email: user.email,\n        avatar: avatar || user.avatar,\n        updatedAt: new Date().toISOString(),\n      };\n\n      // 模拟记录使用统计\n      console.log('Profile updated:', {\n        userId: user.id,\n        updatedFields: Object.keys(validatedBody),\n        timestamp: new Date().toISOString(),\n      });\n\n      return ApiResponseWrapper.success(updatedUser);\n    } catch (error) {\n      console.error('Update profile error:', error);\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Internal server error', null, 500);\n    }\n  }\n);"],"mappings":"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","ignoreList":[]}