d5ed19a5cf0ec14d6b3edc7393fdd3e6
"use strict";

/**
 * @file ai-models\[id]\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_1q7nkmot50() {
  var path = "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts";
  var hash = "30ba0c538fb2d5ec0759276206bc3187172b3946";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "8": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 93
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 23,
          column: 11
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 96
        }
      },
      "13": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "16": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "17": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 92
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 99
        }
      },
      "20": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 73
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 99
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 100
          },
          end: {
            line: 13,
            column: 101
          }
        },
        loc: {
          start: {
            line: 13,
            column: 175
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 108
          },
          end: {
            line: 29,
            column: 109
          }
        },
        loc: {
          start: {
            line: 29,
            column: 183
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 114
          },
          end: {
            line: 44,
            column: 115
          }
        },
        loc: {
          start: {
            line: 44,
            column: 189
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAqG;AACrG,uDAA4D;AAC5D,iEAA8D;AAEjD,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,gCAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QAEjC,MAAM,KAAK,GAAG,8BAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,+BAAkB,CAAC,KAAK,CAC7B,iBAAiB,EACjB,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;QACJ,CAAC;QAED,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,wBAAwB,EACxB,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,GAAG,GAAG,IAAA,kCAAc,EAC/B,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EACpD,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAE9B,MAAM,KAAK,GAAG,MAAM,8BAAc,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAErE,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,2BAA2B,EAC3B,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,kCAAc,EAClC,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EACvD,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC;QAEjC,MAAM,8BAAc,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEjD,OAAO,+BAAkB,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,4BAA4B;SACtC,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAC7B,2BAA2B,EAC3B,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\ai-models\\[id]\\route.ts"],
      sourcesContent: ["/**\n * @file ai-models\\[id]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { aiModelManager } from \"@/lib/ai-models/model-manager\"\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const routeParams = await params;\n      \n      const model = aiModelManager.getModel(routeParams.id);\n    \n      if (!model) {\n        return ApiResponseWrapper.error(\n          \"Model not found\",\n          { status: 404 }\n        );\n      }\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Failed to get AI model\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\nexport const PUT = createApiRoute(\n  { method: 'PUT', requireAuth: true, timeout: 60000 },\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const routeParams = await params;\n      const data = await req.json();\n    \n      const model = await aiModelManager.updateModel(routeParams.id, data);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        data: model,\n        message: \"Model updated successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Failed to update AI model\",\n        { status: 400 }\n      );\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  { method: 'DELETE', requireAuth: true, timeout: 60000 },\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const routeParams = await params;\n      \n      await aiModelManager.deleteModel(routeParams.id);\n    \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"Model deleted successfully\",\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"Failed to delete AI model\",\n        { status: 400 }\n      );\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "30ba0c538fb2d5ec0759276206bc3187172b3946"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q7nkmot50 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q7nkmot50();
cov_1q7nkmot50().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1q7nkmot50().s[1]++;
exports.DELETE = exports.PUT = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[3]++, require("@/lib/utils/api-helper"));
const model_manager_1 =
/* istanbul ignore next */
(cov_1q7nkmot50().s[4]++, require("@/lib/ai-models/model-manager"));
/* istanbul ignore next */
cov_1q7nkmot50().s[5]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[0]++;
  cov_1q7nkmot50().s[6]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[7]++, await params);
    const model =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[8]++, model_manager_1.aiModelManager.getModel(routeParams.id));
    /* istanbul ignore next */
    cov_1q7nkmot50().s[9]++;
    if (!model) {
      /* istanbul ignore next */
      cov_1q7nkmot50().b[0][0]++;
      cov_1q7nkmot50().s[10]++;
      return api_helper_1.ApiResponseWrapper.error("Model not found", {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1q7nkmot50().b[0][1]++;
    }
    cov_1q7nkmot50().s[11]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: model
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[12]++;
    return api_helper_1.ApiResponseWrapper.error("Failed to get AI model", {
      status: 500
    });
  }
});
/* istanbul ignore next */
cov_1q7nkmot50().s[13]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)({
  method: 'PUT',
  requireAuth: true,
  timeout: 60000
}, async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[1]++;
  cov_1q7nkmot50().s[14]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[15]++, await params);
    const data =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[16]++, await req.json());
    const model =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[17]++, await model_manager_1.aiModelManager.updateModel(routeParams.id, data));
    /* istanbul ignore next */
    cov_1q7nkmot50().s[18]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      data: model,
      message: "Model updated successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[19]++;
    return api_helper_1.ApiResponseWrapper.error("Failed to update AI model", {
      status: 400
    });
  }
});
/* istanbul ignore next */
cov_1q7nkmot50().s[20]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)({
  method: 'DELETE',
  requireAuth: true,
  timeout: 60000
}, async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_1q7nkmot50().f[2]++;
  cov_1q7nkmot50().s[21]++;
  try {
    const routeParams =
    /* istanbul ignore next */
    (cov_1q7nkmot50().s[22]++, await params);
    /* istanbul ignore next */
    cov_1q7nkmot50().s[23]++;
    await model_manager_1.aiModelManager.deleteModel(routeParams.id);
    /* istanbul ignore next */
    cov_1q7nkmot50().s[24]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      message: "Model deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1q7nkmot50().s[25]++;
    return api_helper_1.ApiResponseWrapper.error("Failed to delete AI model", {
      status: 400
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,