8eaa460aa73f7aa78dc30164dbeb7760
"use strict";

/**
 * @file auth\change-password\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_rqnhx8405() {
  var path = "E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts";
  var hash = "5286a343e14467d15544e323beec46f0173cf236";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 74
        }
      },
      "8": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 49
        }
      },
      "9": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "10": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "11": {
        start: {
          line: 23,
          column: 45
        },
        end: {
          line: 23,
          column: 58
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 79
        }
      },
      "14": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 92
        }
      },
      "15": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "17": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 77
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "19": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 57,
          column: 7
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 63
        }
      },
      "21": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 61,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 57
          }
        },
        loc: {
          start: {
            line: 8,
            column: 71
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 125
          },
          end: {
            line: 22,
            column: 126
          }
        },
        loc: {
          start: {
            line: 22,
            column: 200
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 15
          },
          end: {
            line: 55,
            column: 16
          }
        },
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 27
          }
        }, {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 8,
            column: 51
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 40
          }
        }, {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 9,
            column: 61
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 15
          }
        }, {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 61
          }
        }, {
          start: {
            line: 28,
            column: 65
          },
          end: {
            line: 28,
            column: 92
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 54
          }
        }, {
          start: {
            line: 51,
            column: 58
          },
          end: {
            line: 51,
            column: 86
          }
        }],
        line: 51
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;;;;AAGH,0EAAqG;AACrG,uDAA4D;AAC5D,6BAAuB;AACvB,2EAA8C;AAC9C,kDAAkD;AAGlD,MAAM,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,eAAe,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;IAC9C,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC;CAC1C,CAAC,CAAC;AAEU,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAChD,KAAK,EAAE,GAAgB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IACrF,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,GAAG,aAAa,CAAC;IAEvD,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,OAAO,+BAAkB,CAAC,KAAK,CAC7B,OAAO,EACP,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;IAED,eAAe;IACf,MAAM,sBAAsB,GAAG,eAAe,KAAK,MAAM,IAAI,eAAe,KAAK,OAAO,CAAC;IACzF,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC5B,OAAO,+BAAkB,CAAC,KAAK,CAC7B,QAAQ,EACR,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,MAAM,iBAAiB,GAAG,MAAM,IAAA,uBAAY,EAAC,WAAW,CAAC,CAAC;IAE1D,OAAO;IACP,MAAM,oBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE;QAC1B,IAAI,EAAE;YACJ,yDAAyD;YACzD,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB;KACF,CAAC,CAAC;IAEH,WAAW;IACX,MAAM,oBAAM,CAAC,UAAU;SACpB,MAAM,CAAC;QACN,IAAI,EAAE;YACJ,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,SAAS,EAAE,MAAM;YACjB,MAAM,EAAE,iBAAiB;YACzB,QAAQ,EAAE;gBACR,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACxC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;aACvE;SACF;KACF,CAAC;SACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEL,OAAO,+BAAkB,CAAC,OAAO,CAAC;QAChC,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,QAAQ;KAClB,CAAC,CAAC;AACL,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\change-password\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport prisma from \"@/lib/database/connection\"\nimport { hashPassword } from \"@/lib/auth/password\"\nimport { getCurrentUser } from \"@/lib/auth/middleware\"\n\nconst changePasswordSchema = z.object({\n  currentPassword: z.string().min(1, \"\u5F53\u524D\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A\"),\n  newPassword: z.string().min(6, \"\u65B0\u5BC6\u7801\u81F3\u5C116\u4F4D\"),\n});\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(changePasswordSchema),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const { currentPassword, newPassword } = validatedBody;\n    \n    if (!user) {\n      return ApiResponseWrapper.error(\n        \"\u7528\u6237\u672A\u8BA4\u8BC1\",\n        { status: 401 }\n      );\n    }\n\n    // \u4E34\u65F6\u5904\u7406\uFF1A\u7B80\u5355\u7684\u5BC6\u7801\u9A8C\u8BC1\n    const isCurrentPasswordValid = currentPassword === \"demo\" || currentPassword === \"admin\";\n    if (!isCurrentPasswordValid) {\n      return ApiResponseWrapper.error(\n        \"\u5F53\u524D\u5BC6\u7801\u9519\u8BEF\",\n        { status: 400 }\n      );\n    }\n\n    // \u52A0\u5BC6\u65B0\u5BC6\u7801\n    const hashedNewPassword = await hashPassword(newPassword);\n\n    // \u66F4\u65B0\u5BC6\u7801\n    await prisma.user.update({\n      where: { id: user.userId },\n      data: {\n        // password: hashedNewPassword, // \u9700\u8981\u5728schema\u4E2D\u6DFB\u52A0password\u5B57\u6BB5\n        updatedAt: new Date(),\n      },\n    });\n\n    // \u8BB0\u5F55\u5BC6\u7801\u4FEE\u6539\u65E5\u5FD7\n    await prisma.usageStats\n      .create({\n        data: {\n          userId: user.userId,\n          agentType: \"auth\",\n          action: \"change_password\",\n          metadata: {\n            userAgent: req.headers.get(\"user-agent\"),\n            ip: req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\"),\n          },\n        },\n      })\n      .catch((error) => {\n        console.error(\"Failed to log password change:\", error);\n      });\n\n    return ApiResponseWrapper.success({\n      success: true,\n      message: \"\u5BC6\u7801\u4FEE\u6539\u6210\u529F\",\n    });\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5286a343e14467d15544e323beec46f0173cf236"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rqnhx8405 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rqnhx8405();
var __importDefault =
/* istanbul ignore next */
(cov_rqnhx8405().s[0]++,
/* istanbul ignore next */
(cov_rqnhx8405().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_rqnhx8405().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_rqnhx8405().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_rqnhx8405().f[0]++;
  cov_rqnhx8405().s[1]++;
  return /* istanbul ignore next */(cov_rqnhx8405().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_rqnhx8405().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_rqnhx8405().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_rqnhx8405().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_rqnhx8405().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rqnhx8405().s[3]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[4]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[5]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[6]++, require("zod"));
const connection_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[7]++, __importDefault(require("@/lib/database/connection")));
const password_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[8]++, require("@/lib/auth/password"));
const changePasswordSchema =
/* istanbul ignore next */
(cov_rqnhx8405().s[9]++, zod_1.z.object({
  currentPassword: zod_1.z.string().min(1, "当前密码不能为空"),
  newPassword: zod_1.z.string().min(6, "新密码至少6位")
}));
/* istanbul ignore next */
cov_rqnhx8405().s[10]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(changePasswordSchema), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_rqnhx8405().f[1]++;
  const {
    currentPassword,
    newPassword
  } =
  /* istanbul ignore next */
  (cov_rqnhx8405().s[11]++, validatedBody);
  /* istanbul ignore next */
  cov_rqnhx8405().s[12]++;
  if (!user) {
    /* istanbul ignore next */
    cov_rqnhx8405().b[3][0]++;
    cov_rqnhx8405().s[13]++;
    return api_helper_1.ApiResponseWrapper.error("用户未认证", {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_rqnhx8405().b[3][1]++;
  }
  // 临时处理：简单的密码验证
  const isCurrentPasswordValid =
  /* istanbul ignore next */
  (cov_rqnhx8405().s[14]++,
  /* istanbul ignore next */
  (cov_rqnhx8405().b[4][0]++, currentPassword === "demo") ||
  /* istanbul ignore next */
  (cov_rqnhx8405().b[4][1]++, currentPassword === "admin"));
  /* istanbul ignore next */
  cov_rqnhx8405().s[15]++;
  if (!isCurrentPasswordValid) {
    /* istanbul ignore next */
    cov_rqnhx8405().b[5][0]++;
    cov_rqnhx8405().s[16]++;
    return api_helper_1.ApiResponseWrapper.error("当前密码错误", {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_rqnhx8405().b[5][1]++;
  }
  // 加密新密码
  const hashedNewPassword =
  /* istanbul ignore next */
  (cov_rqnhx8405().s[17]++, await (0, password_1.hashPassword)(newPassword));
  // 更新密码
  /* istanbul ignore next */
  cov_rqnhx8405().s[18]++;
  await connection_1.default.user.update({
    where: {
      id: user.userId
    },
    data: {
      // password: hashedNewPassword, // 需要在schema中添加password字段
      updatedAt: new Date()
    }
  });
  // 记录密码修改日志
  /* istanbul ignore next */
  cov_rqnhx8405().s[19]++;
  await connection_1.default.usageStats.create({
    data: {
      userId: user.userId,
      agentType: "auth",
      action: "change_password",
      metadata: {
        userAgent: req.headers.get("user-agent"),
        ip:
        /* istanbul ignore next */
        (cov_rqnhx8405().b[6][0]++, req.headers.get("x-forwarded-for")) ||
        /* istanbul ignore next */
        (cov_rqnhx8405().b[6][1]++, req.headers.get("x-real-ip"))
      }
    }
  }).catch(error => {
    /* istanbul ignore next */
    cov_rqnhx8405().f[2]++;
    cov_rqnhx8405().s[20]++;
    console.error("Failed to log password change:", error);
  });
  /* istanbul ignore next */
  cov_rqnhx8405().s[21]++;
  return api_helper_1.ApiResponseWrapper.success({
    success: true,
    message: "密码修改成功"
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,