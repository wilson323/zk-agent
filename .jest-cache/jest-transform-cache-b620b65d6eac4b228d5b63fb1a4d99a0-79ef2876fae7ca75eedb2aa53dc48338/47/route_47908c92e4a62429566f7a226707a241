d44001dce276c97a461532ba7d0e37ad
"use strict";

/**
 * @file Shared API Route
 * @description 处理共享相关的API请求
 * @author ZK-Agent Team
 * @date 2024-12-19
 */
/* istanbul ignore next */
function cov_109wk4ve52() {
  var path = "E:\\zk-agent\\app\\api\\shared\\route.ts";
  var hash = "eebc16d19e3866c4dff7cab7bc22fad846eab028";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\shared\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 67
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 12,
          column: 80
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "6": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "7": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "8": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "9": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "10": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 97
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 82
        }
      },
      "13": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 58,
          column: 3
        }
      },
      "14": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "15": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "17": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "18": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "19": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "20": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 64,
          column: 49
        }
      },
      "21": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "22": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "23": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 86
        }
      },
      "24": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 125
        }
      },
      "25": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "26": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 80
        }
      },
      "27": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "28": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "29": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 49
        }
      },
      "30": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 46
        }
      },
      "31": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "32": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 86
        }
      },
      "33": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 90
        }
      },
      "34": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "35": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 80
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 103
          },
          end: {
            line: 29,
            column: 104
          }
        },
        loc: {
          start: {
            line: 29,
            column: 139
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 133
          },
          end: {
            line: 44,
            column: 134
          }
        },
        loc: {
          start: {
            line: 44,
            column: 184
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 130
          },
          end: {
            line: 62,
            column: 131
          }
        },
        loc: {
          start: {
            line: 62,
            column: 181
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 62
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 107
          },
          end: {
            line: 82,
            column: 108
          }
        },
        loc: {
          start: {
            line: 82,
            column: 143
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 82
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "1": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\shared\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\shared\\route.ts"],
      sourcesContent: ["/**\n * @file Shared API Route\n * @description \u5904\u7406\u5171\u4EAB\u76F8\u5173\u7684API\u8BF7\u6C42\n * @author ZK-Agent Team\n * @date 2024-12-19\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { enhancedShareManager } from '@/lib/sharing/enhanced-share-manager';\nimport { z } from 'zod';\n\n// \u9A8C\u8BC1\u6A21\u5F0F\nconst shareRequestSchema = z.object({\n  content: z.string().min(1, '\u5185\u5BB9\u4E0D\u80FD\u4E3A\u7A7A'),\n  type: z.enum(['chat', 'document', 'image']).optional().default('chat'),\n  expiresAt: z.string().datetime().optional(),\n  isPublic: z.boolean().optional().default(false)\n});\n\nconst shareUpdateSchema = z.object({\n  content: z.string().optional(),\n  expiresAt: z.string().datetime().optional(),\n  isPublic: z.boolean().optional()\n});\n\n/**\n * GET /api/shared - \u83B7\u53D6\u5171\u4EAB\u5217\u8868\n */\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { user, requestId }) => {\n    try {\n      const shares = await enhancedShareManager.getUserShares(user.id);\n      \n      return ApiResponseWrapper.success({\n        shares,\n        total: shares.length\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u83B7\u53D6\u5171\u4EAB\u5217\u8868\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n/**\n * POST /api/shared - \u521B\u5EFA\u65B0\u7684\u5171\u4EAB\n */\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost({ body: shareRequestSchema }),\n  async (req: NextRequest, { validatedBody, user, requestId }) => {\n    try {\n      const share = await enhancedShareManager.createShare({\n        ...validatedBody,\n        userId: user.id\n      });\n      \n      return ApiResponseWrapper.success({\n        share,\n        message: \"\u5171\u4EAB\u521B\u5EFA\u6210\u529F\"\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u521B\u5EFA\u5171\u4EAB\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n/**\n * PUT /api/shared - \u66F4\u65B0\u5171\u4EAB\n */\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut({ body: shareUpdateSchema }),\n  async (req: NextRequest, { validatedBody, user, requestId }) => {\n    try {\n      const { searchParams } = new URL(req.url);\n      const shareId = searchParams.get('id');\n      \n      if (!shareId) {\n        return ApiResponseWrapper.error(\n          \"\u7F3A\u5C11\u5171\u4EABID\u53C2\u6570\",\n          { status: 400 }\n        );\n      }\n      \n      const updatedShare = await enhancedShareManager.updateShare(\n        shareId,\n        validatedBody,\n        user.id\n      );\n      \n      return ApiResponseWrapper.success({\n        share: updatedShare,\n        message: \"\u5171\u4EAB\u66F4\u65B0\u6210\u529F\"\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u66F4\u65B0\u5171\u4EAB\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);\n\n/**\n * DELETE /api/shared - \u5220\u9664\u5171\u4EAB\n */\nexport const DELETE = createApiRoute(\n  RouteConfigs.admin('DELETE'),\n  async (req: NextRequest, { user, requestId }) => {\n    try {\n      const { searchParams } = new URL(req.url);\n      const shareId = searchParams.get('id');\n      \n      if (!shareId) {\n        return ApiResponseWrapper.error(\n          \"\u7F3A\u5C11\u5171\u4EABID\u53C2\u6570\",\n          { status: 400 }\n        );\n      }\n      \n      await enhancedShareManager.deleteShare(shareId, user.id);\n      \n      return ApiResponseWrapper.success({\n        success: true,\n        message: \"\u5171\u4EAB\u5DF2\u5220\u9664\"\n      });\n    } catch (error) {\n      return ApiResponseWrapper.error(\n        \"\u5220\u9664\u5171\u4EAB\u5931\u8D25\",\n        { status: 500 }\n      );\n    }\n  }\n);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eebc16d19e3866c4dff7cab7bc22fad846eab028"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_109wk4ve52 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_109wk4ve52();
cov_109wk4ve52().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_109wk4ve52().s[1]++;
exports.DELETE = exports.PUT = exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_109wk4ve52().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_109wk4ve52().s[3]++, require("@/lib/utils/api-helper"));
const enhanced_share_manager_1 =
/* istanbul ignore next */
(cov_109wk4ve52().s[4]++, require("@/lib/sharing/enhanced-share-manager"));
const zod_1 =
/* istanbul ignore next */
(cov_109wk4ve52().s[5]++, require("zod"));
// 验证模式
const shareRequestSchema =
/* istanbul ignore next */
(cov_109wk4ve52().s[6]++, zod_1.z.object({
  content: zod_1.z.string().min(1, '内容不能为空'),
  type: zod_1.z.enum(['chat', 'document', 'image']).optional().default('chat'),
  expiresAt: zod_1.z.string().datetime().optional(),
  isPublic: zod_1.z.boolean().optional().default(false)
}));
const shareUpdateSchema =
/* istanbul ignore next */
(cov_109wk4ve52().s[7]++, zod_1.z.object({
  content: zod_1.z.string().optional(),
  expiresAt: zod_1.z.string().datetime().optional(),
  isPublic: zod_1.z.boolean().optional()
}));
/**
 * GET /api/shared - 获取共享列表
 */
/* istanbul ignore next */
cov_109wk4ve52().s[8]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedGet(), async (req, {
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_109wk4ve52().f[0]++;
  cov_109wk4ve52().s[9]++;
  try {
    const shares =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[10]++, await enhanced_share_manager_1.enhancedShareManager.getUserShares(user.id));
    /* istanbul ignore next */
    cov_109wk4ve52().s[11]++;
    return api_helper_1.ApiResponseWrapper.success({
      shares,
      total: shares.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_109wk4ve52().s[12]++;
    return api_helper_1.ApiResponseWrapper.error("获取共享列表失败", {
      status: 500
    });
  }
});
/**
 * POST /api/shared - 创建新的共享
 */
/* istanbul ignore next */
cov_109wk4ve52().s[13]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost({
  body: shareRequestSchema
}), async (req, {
  validatedBody,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_109wk4ve52().f[1]++;
  cov_109wk4ve52().s[14]++;
  try {
    const share =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[15]++, await enhanced_share_manager_1.enhancedShareManager.createShare({
      ...validatedBody,
      userId: user.id
    }));
    /* istanbul ignore next */
    cov_109wk4ve52().s[16]++;
    return api_helper_1.ApiResponseWrapper.success({
      share,
      message: "共享创建成功"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_109wk4ve52().s[17]++;
    return api_helper_1.ApiResponseWrapper.error("创建共享失败", {
      status: 500
    });
  }
});
/**
 * PUT /api/shared - 更新共享
 */
/* istanbul ignore next */
cov_109wk4ve52().s[18]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPut({
  body: shareUpdateSchema
}), async (req, {
  validatedBody,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_109wk4ve52().f[2]++;
  cov_109wk4ve52().s[19]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[20]++, new URL(req.url));
    const shareId =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[21]++, searchParams.get('id'));
    /* istanbul ignore next */
    cov_109wk4ve52().s[22]++;
    if (!shareId) {
      /* istanbul ignore next */
      cov_109wk4ve52().b[0][0]++;
      cov_109wk4ve52().s[23]++;
      return api_helper_1.ApiResponseWrapper.error("缺少共享ID参数", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_109wk4ve52().b[0][1]++;
    }
    const updatedShare =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[24]++, await enhanced_share_manager_1.enhancedShareManager.updateShare(shareId, validatedBody, user.id));
    /* istanbul ignore next */
    cov_109wk4ve52().s[25]++;
    return api_helper_1.ApiResponseWrapper.success({
      share: updatedShare,
      message: "共享更新成功"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_109wk4ve52().s[26]++;
    return api_helper_1.ApiResponseWrapper.error("更新共享失败", {
      status: 500
    });
  }
});
/**
 * DELETE /api/shared - 删除共享
 */
/* istanbul ignore next */
cov_109wk4ve52().s[27]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.admin('DELETE'), async (req, {
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_109wk4ve52().f[3]++;
  cov_109wk4ve52().s[28]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[29]++, new URL(req.url));
    const shareId =
    /* istanbul ignore next */
    (cov_109wk4ve52().s[30]++, searchParams.get('id'));
    /* istanbul ignore next */
    cov_109wk4ve52().s[31]++;
    if (!shareId) {
      /* istanbul ignore next */
      cov_109wk4ve52().b[1][0]++;
      cov_109wk4ve52().s[32]++;
      return api_helper_1.ApiResponseWrapper.error("缺少共享ID参数", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_109wk4ve52().b[1][1]++;
    }
    cov_109wk4ve52().s[33]++;
    await enhanced_share_manager_1.enhancedShareManager.deleteShare(shareId, user.id);
    /* istanbul ignore next */
    cov_109wk4ve52().s[34]++;
    return api_helper_1.ApiResponseWrapper.success({
      success: true,
      message: "共享已删除"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_109wk4ve52().s[35]++;
    return api_helper_1.ApiResponseWrapper.error("删除共享失败", {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,