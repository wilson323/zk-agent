c11da0fa79bcab23c244b174a4c5a14a
"use strict";

/**
 * @file v1\agents\[id]\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_168fci3vuj() {
  var path = "E:\\zk-agent\\app\\api\\v1\\agents\\[id]\\route.ts";
  var hash = "4bbdee33b66d667084f096f526e7d7ef632abdcb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\v1\\agents\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "5": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 63
        }
      },
      "9": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "11": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 155
        }
      },
      "12": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "13": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "14": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 171
        }
      },
      "15": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 94
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "18": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "21": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "22": {
        start: {
          line: 40,
          column: 30
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "23": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "24": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 155
        }
      },
      "25": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "27": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 171
        }
      },
      "28": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 99
        }
      },
      "29": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 54
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "31": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "32": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "33": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 64,
          column: 63
        }
      },
      "34": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "35": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "36": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 155
        }
      },
      "37": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 63
        }
      },
      "38": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "39": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 171
        }
      },
      "40": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 91
        }
      },
      "41": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 54
        }
      },
      "42": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 103
          },
          end: {
            line: 14,
            column: 104
          }
        },
        loc: {
          start: {
            line: 14,
            column: 130
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 103
          },
          end: {
            line: 36,
            column: 104
          }
        },
        loc: {
          start: {
            line: 36,
            column: 145
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 109
          },
          end: {
            line: 62,
            column: 110
          }
        },
        loc: {
          start: {
            line: 62,
            column: 136
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 46
          },
          end: {
            line: 32,
            column: 59
          }
        }, {
          start: {
            line: 32,
            column: 62
          },
          end: {
            line: 32,
            column: 77
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 46
          },
          end: {
            line: 58,
            column: 59
          }
        }, {
          start: {
            line: 58,
            column: 62
          },
          end: {
            line: 58,
            column: 77
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 46
          },
          end: {
            line: 80,
            column: 59
          }
        }, {
          start: {
            line: 80,
            column: 62
          },
          end: {
            line: 80,
            column: 77
          }
        }],
        line: 80
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\v1\\agents\\[id]\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\v1\\agents\\[id]\\route.ts"],
      sourcesContent: ["/**\n * @file v1\\agents\\[id]\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { AgentService } from '@/lib/services/agent-service';\nimport { UpdateAgentRequest } from '@/lib/types';\nimport { UnifiedErrorCode } from '@/types/core/unified-error-codes';\n\nexport const GET = createApiRoute(\n  RouteConfigs.protectedGet(),\n  async (req: NextRequest, { params }) => {\n    try {\n      const agentService = new AgentService();\n      const agentId = params.id as string;\n      \n      if (!agentId) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', { status: 400 });\n      }\n      \n      // \u83B7\u53D6Agent\u4FE1\u606F\n      const agent = await agentService.getAgentById(agentId);\n      \n      if (!agent) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.RESOURCE_NOT_FOUND, `No agent found with ID: ${agentId}`, { status: 404 });\n      }\n      \n      return ApiResponseWrapper.success(agent, 'Agent retrieved successfully');\n    } catch (error) {\n      console.error('Error retrieving agent:', error);\n      return ApiResponseWrapper.error(UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to retrieve agent', { \n        status: 500,\n        details: error instanceof Error ? error.message : 'Unknown error'\n      });\n    }\n  }\n);\n\nexport const PUT = createApiRoute(\n  RouteConfigs.protectedPut(),\n  async (req: NextRequest, { params, validatedBody }) => {\n    try {\n      const agentService = new AgentService();\n      const agentId = params.id as string;\n      const updateRequest = validatedBody as UpdateAgentRequest;\n      \n      if (!agentId) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', { status: 400 });\n      }\n      \n      // \u66F4\u65B0Agent\n      const updatedAgent = await agentService.updateAgent(agentId, {\n        ...updateRequest,\n        updatedAt: new Date()\n      });\n      \n      if (!updatedAgent) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.RESOURCE_NOT_FOUND, `No agent found with ID: ${agentId}`, { status: 404 });\n      }\n      \n      return ApiResponseWrapper.success(updatedAgent, 'Agent updated successfully');\n    } catch (error) {\n      console.error('Error updating agent:', error);\n      return ApiResponseWrapper.error(UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to update agent', { \n        status: 500,\n        details: error instanceof Error ? error.message : 'Unknown error'\n      });\n    }\n  }\n);\n\nexport const DELETE = createApiRoute(\n  RouteConfigs.protectedDelete(),\n  async (req: NextRequest, { params }) => {\n    try {\n      const agentService = new AgentService();\n      const agentId = params.id as string;\n      \n      if (!agentId) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', { status: 400 });\n      }\n      \n      // \u5220\u9664Agent\n      const deleted = await agentService.deleteAgent(agentId);\n      \n      if (!deleted) {\n        return ApiResponseWrapper.error(UnifiedErrorCode.RESOURCE_NOT_FOUND, `No agent found with ID: ${agentId}`, { status: 404 });\n      }\n      \n      return ApiResponseWrapper.success(null, 'Agent deleted successfully');\n    } catch (error) {\n      console.error('Error deleting agent:', error);\n      return ApiResponseWrapper.error(UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to delete agent', { \n        status: 500,\n        details: error instanceof Error ? error.message : 'Unknown error'\n      });\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4bbdee33b66d667084f096f526e7d7ef632abdcb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_168fci3vuj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_168fci3vuj();
cov_168fci3vuj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_168fci3vuj().s[1]++;
exports.DELETE = exports.PUT = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_168fci3vuj().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_168fci3vuj().s[3]++, require("@/lib/utils/api-helper"));
const agent_service_1 =
/* istanbul ignore next */
(cov_168fci3vuj().s[4]++, require("@/lib/services/agent-service"));
const unified_error_codes_1 =
/* istanbul ignore next */
(cov_168fci3vuj().s[5]++, require("@/types/core/unified-error-codes"));
/* istanbul ignore next */
cov_168fci3vuj().s[6]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedGet(), async (req, {
  params
}) => {
  /* istanbul ignore next */
  cov_168fci3vuj().f[0]++;
  cov_168fci3vuj().s[7]++;
  try {
    const agentService =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[8]++, new agent_service_1.AgentService());
    const agentId =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[9]++, params.id);
    /* istanbul ignore next */
    cov_168fci3vuj().s[10]++;
    if (!agentId) {
      /* istanbul ignore next */
      cov_168fci3vuj().b[0][0]++;
      cov_168fci3vuj().s[11]++;
      return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_168fci3vuj().b[0][1]++;
    }
    // 获取Agent信息
    const agent =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[12]++, await agentService.getAgentById(agentId));
    /* istanbul ignore next */
    cov_168fci3vuj().s[13]++;
    if (!agent) {
      /* istanbul ignore next */
      cov_168fci3vuj().b[1][0]++;
      cov_168fci3vuj().s[14]++;
      return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.RESOURCE_NOT_FOUND, `No agent found with ID: ${agentId}`, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_168fci3vuj().b[1][1]++;
    }
    cov_168fci3vuj().s[15]++;
    return api_helper_1.ApiResponseWrapper.success(agent, 'Agent retrieved successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_168fci3vuj().s[16]++;
    console.error('Error retrieving agent:', error);
    /* istanbul ignore next */
    cov_168fci3vuj().s[17]++;
    return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to retrieve agent', {
      status: 500,
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_168fci3vuj().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_168fci3vuj().b[2][1]++, 'Unknown error')
    });
  }
});
/* istanbul ignore next */
cov_168fci3vuj().s[18]++;
exports.PUT = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPut(), async (req, {
  params,
  validatedBody
}) => {
  /* istanbul ignore next */
  cov_168fci3vuj().f[1]++;
  cov_168fci3vuj().s[19]++;
  try {
    const agentService =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[20]++, new agent_service_1.AgentService());
    const agentId =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[21]++, params.id);
    const updateRequest =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[22]++, validatedBody);
    /* istanbul ignore next */
    cov_168fci3vuj().s[23]++;
    if (!agentId) {
      /* istanbul ignore next */
      cov_168fci3vuj().b[3][0]++;
      cov_168fci3vuj().s[24]++;
      return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_168fci3vuj().b[3][1]++;
    }
    // 更新Agent
    const updatedAgent =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[25]++, await agentService.updateAgent(agentId, {
      ...updateRequest,
      updatedAt: new Date()
    }));
    /* istanbul ignore next */
    cov_168fci3vuj().s[26]++;
    if (!updatedAgent) {
      /* istanbul ignore next */
      cov_168fci3vuj().b[4][0]++;
      cov_168fci3vuj().s[27]++;
      return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.RESOURCE_NOT_FOUND, `No agent found with ID: ${agentId}`, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_168fci3vuj().b[4][1]++;
    }
    cov_168fci3vuj().s[28]++;
    return api_helper_1.ApiResponseWrapper.success(updatedAgent, 'Agent updated successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_168fci3vuj().s[29]++;
    console.error('Error updating agent:', error);
    /* istanbul ignore next */
    cov_168fci3vuj().s[30]++;
    return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to update agent', {
      status: 500,
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_168fci3vuj().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_168fci3vuj().b[5][1]++, 'Unknown error')
    });
  }
});
/* istanbul ignore next */
cov_168fci3vuj().s[31]++;
exports.DELETE = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedDelete(), async (req, {
  params
}) => {
  /* istanbul ignore next */
  cov_168fci3vuj().f[2]++;
  cov_168fci3vuj().s[32]++;
  try {
    const agentService =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[33]++, new agent_service_1.AgentService());
    const agentId =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[34]++, params.id);
    /* istanbul ignore next */
    cov_168fci3vuj().s[35]++;
    if (!agentId) {
      /* istanbul ignore next */
      cov_168fci3vuj().b[6][0]++;
      cov_168fci3vuj().s[36]++;
      return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.VALIDATION_ERROR, 'Agent ID is required', {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_168fci3vuj().b[6][1]++;
    }
    // 删除Agent
    const deleted =
    /* istanbul ignore next */
    (cov_168fci3vuj().s[37]++, await agentService.deleteAgent(agentId));
    /* istanbul ignore next */
    cov_168fci3vuj().s[38]++;
    if (!deleted) {
      /* istanbul ignore next */
      cov_168fci3vuj().b[7][0]++;
      cov_168fci3vuj().s[39]++;
      return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.RESOURCE_NOT_FOUND, `No agent found with ID: ${agentId}`, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_168fci3vuj().b[7][1]++;
    }
    cov_168fci3vuj().s[40]++;
    return api_helper_1.ApiResponseWrapper.success(null, 'Agent deleted successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_168fci3vuj().s[41]++;
    console.error('Error deleting agent:', error);
    /* istanbul ignore next */
    cov_168fci3vuj().s[42]++;
    return api_helper_1.ApiResponseWrapper.error(unified_error_codes_1.UnifiedErrorCode.INTERNAL_SERVER_ERROR, 'Failed to delete agent', {
      status: 500,
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_168fci3vuj().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_168fci3vuj().b[8][1]++, 'Unknown error')
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,