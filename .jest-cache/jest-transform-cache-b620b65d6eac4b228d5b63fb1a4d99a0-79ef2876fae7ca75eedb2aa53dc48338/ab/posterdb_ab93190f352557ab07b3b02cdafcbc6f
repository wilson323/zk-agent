bbd20cad63c09bc5d74cbe7e8ed56cb2
"use strict";

// @ts-nocheck
/**
 * 海报数据库操作层
 * 严格按照设计文档的数据结构要求
 */
/* istanbul ignore next */
function cov_c29tcq3x4() {
  var path = "E:\\zk-agent\\lib\\database\\poster-db.ts";
  var hash = "c45cd6ffdfc24b84eda3ec44cef8c987c2008de2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\lib\\database\\poster-db.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "2": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "3": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "5": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 20,
          column: 14
        }
      },
      "6": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 27,
          column: 16
        }
      },
      "7": {
        start: {
          line: 21,
          column: 42
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "8": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 65
        }
      },
      "9": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "10": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "11": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "12": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 50,
          column: 16
        }
      },
      "13": {
        start: {
          line: 43,
          column: 40
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "14": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 64
        }
      },
      "15": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 40
        }
      },
      "16": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "17": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 65,
          column: 14
        }
      },
      "18": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 71,
          column: 16
        }
      },
      "19": {
        start: {
          line: 66,
          column: 46
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "20": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 66
        }
      },
      "21": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 40
        }
      },
      "22": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "23": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "24": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 106,
          column: 14
        }
      },
      "25": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 66
        }
      },
      "26": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 40
        }
      },
      "27": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "28": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "29": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 73
        }
      },
      "30": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 42
        }
      },
      "31": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "32": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 150,
          column: 14
        }
      },
      "33": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "34": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "35": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 40
        }
      },
      "36": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "37": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 184,
          column: 14
        }
      },
      "38": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 199,
          column: 16
        }
      },
      "39": {
        start: {
          line: 185,
          column: 42
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "40": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 75
        }
      },
      "41": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 42
        }
      },
      "42": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "43": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 211,
          column: 44
        }
      },
      "44": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "45": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 50
        }
      },
      "46": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "47": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 50
        }
      },
      "48": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 220,
          column: 13
        }
      },
      "49": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "50": {
        start: {
          line: 221,
          column: 30
        },
        end: {
          line: 227,
          column: 14
        }
      },
      "51": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 242,
          column: 16
        }
      },
      "52": {
        start: {
          line: 228,
          column: 48
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "53": {
        start: {
          line: 237,
          column: 49
        },
        end: {
          line: 237,
          column: 57
        }
      },
      "54": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 61
        }
      },
      "55": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 40
        }
      },
      "56": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "57": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 261,
          column: 15
        }
      },
      "58": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 69
        }
      },
      "59": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "60": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "61": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 66
        }
      },
      "62": {
        start: {
          line: 288,
          column: 0
        },
        end: {
          line: 288,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 21,
            column: 31
          }
        },
        loc: {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 27,
            column: 13
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 30
          }
        },
        loc: {
          start: {
            line: 43,
            column: 40
          },
          end: {
            line: 50,
            column: 13
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 36
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 60
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 33
          }
        },
        loc: {
          start: {
            line: 66,
            column: 46
          },
          end: {
            line: 71,
            column: 13
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 40
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 64
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 116
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 135
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 62
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 172
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 185,
            column: 31
          },
          end: {
            line: 185,
            column: 32
          }
        },
        loc: {
          start: {
            line: 185,
            column: 42
          },
          end: {
            line: 199,
            column: 13
          }
        },
        line: 185
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 39
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 209
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 34
          }
        },
        loc: {
          start: {
            line: 228,
            column: 48
          },
          end: {
            line: 242,
            column: 13
          }
        },
        line: 228
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 237,
            column: 41
          }
        },
        loc: {
          start: {
            line: 237,
            column: 49
          },
          end: {
            line: 237,
            column: 57
          }
        },
        line: 237
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 49
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 252
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 40
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 271
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 156,
            column: 36
          },
          end: {
            line: 156,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 36
          },
          end: {
            line: 156,
            column: 65
          }
        }, {
          start: {
            line: 156,
            column: 69
          },
          end: {
            line: 156,
            column: 70
          }
        }],
        line: 156
      },
      "1": {
        loc: {
          start: {
            line: 172,
            column: 50
          },
          end: {
            line: 172,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 172,
            column: 58
          },
          end: {
            line: 172,
            column: 60
          }
        }],
        line: 172
      },
      "2": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "3": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "4": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 220,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 220,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\lib\\database\\poster-db.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\lib\\database\\poster-db.ts"],
      sourcesContent: ["// @ts-nocheck\n/**\n * \u6D77\u62A5\u6570\u636E\u5E93\u64CD\u4F5C\u5C42\n * \u4E25\u683C\u6309\u7167\u8BBE\u8BA1\u6587\u6863\u7684\u6570\u636E\u7ED3\u6784\u8981\u6C42\n */\n\nimport { PrismaClient } from \"@prisma/client\"\nimport type { PosterStyle, PosterSize, ColorPalette, PosterTask, PosterGenerationResult } from \"@/types/poster\"\n\nconst prisma = new PrismaClient()\n\nexport class PosterDatabase {\n  /**\n   * \u83B7\u53D6\u6240\u6709\u6D77\u62A5\u98CE\u683C\n   */\n  static async getStyles(): Promise<PosterStyle[]> {\n    try {\n      const styles = await prisma.posterStyle.findMany({\n        where: { isActive: true },\n        orderBy: { order: \"asc\" },\n      })\n\n      return styles.map((style) => ({\n        id: style.id,\n        name: style.name,\n        description: style.description,\n        category: style.category,\n        previewUrl: style.previewUrl,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get poster styles:\", error)\n      throw new Error(\"\u83B7\u53D6\u6D77\u62A5\u98CE\u683C\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u6D77\u62A5\u5C3A\u5BF8\n   */\n  static async getSizes(): Promise<PosterSize[]> {\n    try {\n      const sizes = await prisma.posterSize.findMany({\n        where: { isActive: true },\n        orderBy: { order: \"asc\" },\n      })\n\n      return sizes.map((size) => ({\n        id: size.id,\n        name: size.name,\n        dimensions: size.dimensions,\n        ratio: size.ratio,\n        width: size.width,\n        height: size.height,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get poster sizes:\", error)\n      throw new Error(\"\u83B7\u53D6\u6D77\u62A5\u5C3A\u5BF8\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u914D\u8272\u65B9\u6848\n   */\n  static async getColorPalettes(): Promise<ColorPalette[]> {\n    try {\n      const palettes = await prisma.colorPalette.findMany({\n        where: { isActive: true },\n        orderBy: { order: \"asc\" },\n      })\n\n      return palettes.map((palette) => ({\n        id: palette.id,\n        name: palette.name,\n        colors: palette.colors,\n        description: palette.description,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get color palettes:\", error)\n      throw new Error(\"\u83B7\u53D6\u914D\u8272\u65B9\u6848\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u521B\u5EFA\u6D77\u62A5\u4EFB\u52A1\n   */\n  static async createPosterTask(data: {\n    userId: string\n    description: string\n    style: string\n    size: string\n    palette: string\n    referenceImageUrl?: string\n    templateId?: string\n  }): Promise<PosterTask> {\n    try {\n      const task = await prisma.posterTask.create({\n        data: {\n          userId: data.userId,\n          description: data.description,\n          style: data.style,\n          size: data.size,\n          palette: data.palette,\n          referenceImageUrl: data.referenceImageUrl,\n          templateId: data.templateId,\n          resultImageUrl: \"\", // \u521D\u59CB\u4E3A\u7A7A\uFF0C\u751F\u6210\u540E\u66F4\u65B0\n          status: \"pending\",\n        },\n      })\n\n      return {\n        id: task.id,\n        userId: task.userId,\n        description: task.description,\n        style: task.style,\n        size: task.size,\n        palette: task.palette,\n        referenceImageUrl: task.referenceImageUrl,\n        resultImageUrl: task.resultImageUrl,\n        createdAt: task.createdAt,\n      }\n    } catch (error) {\n      console.error(\"Failed to create poster task:\", error)\n      throw new Error(\"\u521B\u5EFA\u6D77\u62A5\u4EFB\u52A1\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u6D77\u62A5\u4EFB\u52A1\u7ED3\u679C\n   */\n  static async updatePosterTaskResult(taskId: string, resultImageUrl: string): Promise<void> {\n    try {\n      await prisma.posterTask.update({\n        where: { id: taskId },\n        data: {\n          resultImageUrl,\n          status: \"completed\",\n          updatedAt: new Date(),\n        },\n      })\n    } catch (error) {\n      console.error(\"Failed to update poster task result:\", error)\n      throw new Error(\"\u66F4\u65B0\u6D77\u62A5\u4EFB\u52A1\u7ED3\u679C\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u4FDD\u5B58\u751F\u6210\u5386\u53F2\n   */\n  static async saveGenerationHistory(data: {\n    userId: string\n    prompt: string\n    style: string\n    size: string\n    palette: string\n    templateId?: string\n    imageUrl: string\n    thumbnailUrl?: string\n    settings: any\n    metadata?: any\n  }): Promise<PosterGenerationResult> {\n    try {\n      const generation = await prisma.posterGeneration.create({\n        data: {\n          userId: data.userId,\n          prompt: data.prompt,\n          style: data.style,\n          size: data.size,\n          palette: data.palette,\n          templateId: data.templateId,\n          imageUrl: data.imageUrl,\n          thumbnailUrl: data.thumbnailUrl,\n          settings: data.settings,\n          metadata: data.metadata,\n        },\n      })\n\n      return {\n        id: generation.id,\n        imageUrl: generation.imageUrl,\n        thumbnailUrl: generation.thumbnailUrl,\n        metadata: {\n          generationTime: data.metadata?.generationTime || 0,\n          style: data.style,\n          size: data.size,\n          palette: data.palette,\n        },\n        createdAt: generation.createdAt,\n      }\n    } catch (error) {\n      console.error(\"Failed to save generation history:\", error)\n      throw new Error(\"\u4FDD\u5B58\u751F\u6210\u5386\u53F2\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u751F\u6210\u5386\u53F2\n   */\n  static async getUserGenerationHistory(userId: string, limit = 20) {\n    try {\n      const history = await prisma.posterGeneration.findMany({\n        where: { userId },\n        include: {\n          styleRef: true,\n          sizeRef: true,\n          paletteRef: true,\n          templateRef: true,\n        },\n        orderBy: { createdAt: \"desc\" },\n        take: limit,\n      })\n\n      return history.map((item) => ({\n        id: item.id,\n        prompt: item.prompt,\n        style: item.styleRef.name,\n        size: item.sizeRef.name,\n        palette: item.paletteRef.name,\n        template: item.templateRef?.name,\n        imageUrl: item.imageUrl,\n        thumbnailUrl: item.thumbnailUrl,\n        settings: item.settings,\n        metadata: item.metadata,\n        rating: item.rating,\n        feedback: item.feedback,\n        createdAt: item.createdAt,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get user generation history:\", error)\n      throw new Error(\"\u83B7\u53D6\u7528\u6237\u751F\u6210\u5386\u53F2\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6A21\u677F\u5217\u8868\n   */\n  static async getTemplates(filters?: {\n    category?: string\n    industry?: string\n    productType?: string\n  }) {\n    try {\n      const where: any = { isActive: true }\n\n      if (filters?.category) {where.category = filters.category}\n      if (filters?.industry) {where.industry = filters.industry}\n      if (filters?.productType) {where.productType = filters.productType}\n\n      const templates = await prisma.posterTemplate.findMany({\n        where,\n        include: {\n          tags: true,\n        },\n        orderBy: { popularity: \"desc\" },\n      })\n\n      return templates.map((template) => ({\n        id: template.id,\n        name: template.name,\n        description: template.description,\n        thumbnailUrl: template.thumbnailUrl,\n        category: template.category,\n        industry: template.industry,\n        productType: template.productType,\n        useCase: template.useCase,\n        tags: template.tags.map((tag) => tag.name),\n        popularity: template.popularity,\n        usageCount: template.usageCount,\n        isNew: template.isNew,\n        isPremium: template.isPremium,\n      }))\n    } catch (error) {\n      console.error(\"Failed to get templates:\", error)\n      throw new Error(\"\u83B7\u53D6\u6A21\u677F\u5217\u8868\u5931\u8D25\")\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u6A21\u677F\u4F7F\u7528\u7EDF\u8BA1\n   */\n  static async updateTemplateUsage(templateId: string): Promise<void> {\n    try {\n      await prisma.posterTemplate.update({\n        where: { id: templateId },\n        data: {\n          usageCount: { increment: 1 },\n          popularity: { increment: 1 },\n          lastUsed: new Date(),\n        },\n      })\n    } catch (error) {\n      console.error(\"Failed to update template usage:\", error)\n      // \u4E0D\u629B\u51FA\u9519\u8BEF\uFF0C\u7EDF\u8BA1\u5931\u8D25\u4E0D\u5F71\u54CD\u4E3B\u6D41\u7A0B\n    }\n  }\n\n  /**\n   * \u8BB0\u5F55\u4F7F\u7528\u7EDF\u8BA1\n   */\n  static async recordUsageStats(data: {\n    userId?: string\n    agentType: string\n    action: string\n    metadata?: any\n  }): Promise<void> {\n    try {\n      await prisma.usageStats.create({\n        data: {\n          userId: data.userId,\n          agentType: data.agentType,\n          action: data.action,\n          metadata: data.metadata,\n        },\n      })\n    } catch (error) {\n      console.error(\"Failed to record usage stats:\", error)\n      // \u4E0D\u629B\u51FA\u9519\u8BEF\uFF0C\u7EDF\u8BA1\u5931\u8D25\u4E0D\u5F71\u54CD\u4E3B\u6D41\u7A0B\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c45cd6ffdfc24b84eda3ec44cef8c987c2008de2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c29tcq3x4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c29tcq3x4();
cov_c29tcq3x4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_c29tcq3x4().s[1]++;
exports.PosterDatabase = void 0;
const client_1 =
/* istanbul ignore next */
(cov_c29tcq3x4().s[2]++, require("@prisma/client"));
const prisma =
/* istanbul ignore next */
(cov_c29tcq3x4().s[3]++, new client_1.PrismaClient());
class PosterDatabase {
  /**
   * 获取所有海报风格
   */
  static async getStyles() {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[0]++;
    cov_c29tcq3x4().s[4]++;
    try {
      const styles =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[5]++, await prisma.posterStyle.findMany({
        where: {
          isActive: true
        },
        orderBy: {
          order: "asc"
        }
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[6]++;
      return styles.map(style => {
        /* istanbul ignore next */
        cov_c29tcq3x4().f[1]++;
        cov_c29tcq3x4().s[7]++;
        return {
          id: style.id,
          name: style.name,
          description: style.description,
          category: style.category,
          previewUrl: style.previewUrl
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[8]++;
      console.error("Failed to get poster styles:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[9]++;
      throw new Error("获取海报风格失败");
    }
  }
  /**
   * 获取所有海报尺寸
   */
  static async getSizes() {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[2]++;
    cov_c29tcq3x4().s[10]++;
    try {
      const sizes =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[11]++, await prisma.posterSize.findMany({
        where: {
          isActive: true
        },
        orderBy: {
          order: "asc"
        }
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[12]++;
      return sizes.map(size => {
        /* istanbul ignore next */
        cov_c29tcq3x4().f[3]++;
        cov_c29tcq3x4().s[13]++;
        return {
          id: size.id,
          name: size.name,
          dimensions: size.dimensions,
          ratio: size.ratio,
          width: size.width,
          height: size.height
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[14]++;
      console.error("Failed to get poster sizes:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[15]++;
      throw new Error("获取海报尺寸失败");
    }
  }
  /**
   * 获取所有配色方案
   */
  static async getColorPalettes() {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[4]++;
    cov_c29tcq3x4().s[16]++;
    try {
      const palettes =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[17]++, await prisma.colorPalette.findMany({
        where: {
          isActive: true
        },
        orderBy: {
          order: "asc"
        }
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[18]++;
      return palettes.map(palette => {
        /* istanbul ignore next */
        cov_c29tcq3x4().f[5]++;
        cov_c29tcq3x4().s[19]++;
        return {
          id: palette.id,
          name: palette.name,
          colors: palette.colors,
          description: palette.description
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[20]++;
      console.error("Failed to get color palettes:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[21]++;
      throw new Error("获取配色方案失败");
    }
  }
  /**
   * 创建海报任务
   */
  static async createPosterTask(data) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[6]++;
    cov_c29tcq3x4().s[22]++;
    try {
      const task =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[23]++, await prisma.posterTask.create({
        data: {
          userId: data.userId,
          description: data.description,
          style: data.style,
          size: data.size,
          palette: data.palette,
          referenceImageUrl: data.referenceImageUrl,
          templateId: data.templateId,
          resultImageUrl: "",
          // 初始为空，生成后更新
          status: "pending"
        }
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[24]++;
      return {
        id: task.id,
        userId: task.userId,
        description: task.description,
        style: task.style,
        size: task.size,
        palette: task.palette,
        referenceImageUrl: task.referenceImageUrl,
        resultImageUrl: task.resultImageUrl,
        createdAt: task.createdAt
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[25]++;
      console.error("Failed to create poster task:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[26]++;
      throw new Error("创建海报任务失败");
    }
  }
  /**
   * 更新海报任务结果
   */
  static async updatePosterTaskResult(taskId, resultImageUrl) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[7]++;
    cov_c29tcq3x4().s[27]++;
    try {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[28]++;
      await prisma.posterTask.update({
        where: {
          id: taskId
        },
        data: {
          resultImageUrl,
          status: "completed",
          updatedAt: new Date()
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[29]++;
      console.error("Failed to update poster task result:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[30]++;
      throw new Error("更新海报任务结果失败");
    }
  }
  /**
   * 保存生成历史
   */
  static async saveGenerationHistory(data) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[8]++;
    cov_c29tcq3x4().s[31]++;
    try {
      const generation =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[32]++, await prisma.posterGeneration.create({
        data: {
          userId: data.userId,
          prompt: data.prompt,
          style: data.style,
          size: data.size,
          palette: data.palette,
          templateId: data.templateId,
          imageUrl: data.imageUrl,
          thumbnailUrl: data.thumbnailUrl,
          settings: data.settings,
          metadata: data.metadata
        }
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[33]++;
      return {
        id: generation.id,
        imageUrl: generation.imageUrl,
        thumbnailUrl: generation.thumbnailUrl,
        metadata: {
          generationTime:
          /* istanbul ignore next */
          (cov_c29tcq3x4().b[0][0]++, data.metadata?.generationTime) ||
          /* istanbul ignore next */
          (cov_c29tcq3x4().b[0][1]++, 0),
          style: data.style,
          size: data.size,
          palette: data.palette
        },
        createdAt: generation.createdAt
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[34]++;
      console.error("Failed to save generation history:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[35]++;
      throw new Error("保存生成历史失败");
    }
  }
  /**
   * 获取用户生成历史
   */
  static async getUserGenerationHistory(userId, limit =
  /* istanbul ignore next */
  (cov_c29tcq3x4().b[1][0]++, 20)) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[9]++;
    cov_c29tcq3x4().s[36]++;
    try {
      const history =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[37]++, await prisma.posterGeneration.findMany({
        where: {
          userId
        },
        include: {
          styleRef: true,
          sizeRef: true,
          paletteRef: true,
          templateRef: true
        },
        orderBy: {
          createdAt: "desc"
        },
        take: limit
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[38]++;
      return history.map(item => {
        /* istanbul ignore next */
        cov_c29tcq3x4().f[10]++;
        cov_c29tcq3x4().s[39]++;
        return {
          id: item.id,
          prompt: item.prompt,
          style: item.styleRef.name,
          size: item.sizeRef.name,
          palette: item.paletteRef.name,
          template: item.templateRef?.name,
          imageUrl: item.imageUrl,
          thumbnailUrl: item.thumbnailUrl,
          settings: item.settings,
          metadata: item.metadata,
          rating: item.rating,
          feedback: item.feedback,
          createdAt: item.createdAt
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[40]++;
      console.error("Failed to get user generation history:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[41]++;
      throw new Error("获取用户生成历史失败");
    }
  }
  /**
   * 获取模板列表
   */
  static async getTemplates(filters) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[11]++;
    cov_c29tcq3x4().s[42]++;
    try {
      const where =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[43]++, {
        isActive: true
      });
      /* istanbul ignore next */
      cov_c29tcq3x4().s[44]++;
      if (filters?.category) {
        /* istanbul ignore next */
        cov_c29tcq3x4().b[2][0]++;
        cov_c29tcq3x4().s[45]++;
        where.category = filters.category;
      } else
      /* istanbul ignore next */
      {
        cov_c29tcq3x4().b[2][1]++;
      }
      cov_c29tcq3x4().s[46]++;
      if (filters?.industry) {
        /* istanbul ignore next */
        cov_c29tcq3x4().b[3][0]++;
        cov_c29tcq3x4().s[47]++;
        where.industry = filters.industry;
      } else
      /* istanbul ignore next */
      {
        cov_c29tcq3x4().b[3][1]++;
      }
      cov_c29tcq3x4().s[48]++;
      if (filters?.productType) {
        /* istanbul ignore next */
        cov_c29tcq3x4().b[4][0]++;
        cov_c29tcq3x4().s[49]++;
        where.productType = filters.productType;
      } else
      /* istanbul ignore next */
      {
        cov_c29tcq3x4().b[4][1]++;
      }
      const templates =
      /* istanbul ignore next */
      (cov_c29tcq3x4().s[50]++, await prisma.posterTemplate.findMany({
        where,
        include: {
          tags: true
        },
        orderBy: {
          popularity: "desc"
        }
      }));
      /* istanbul ignore next */
      cov_c29tcq3x4().s[51]++;
      return templates.map(template => {
        /* istanbul ignore next */
        cov_c29tcq3x4().f[12]++;
        cov_c29tcq3x4().s[52]++;
        return {
          id: template.id,
          name: template.name,
          description: template.description,
          thumbnailUrl: template.thumbnailUrl,
          category: template.category,
          industry: template.industry,
          productType: template.productType,
          useCase: template.useCase,
          tags: template.tags.map(tag => {
            /* istanbul ignore next */
            cov_c29tcq3x4().f[13]++;
            cov_c29tcq3x4().s[53]++;
            return tag.name;
          }),
          popularity: template.popularity,
          usageCount: template.usageCount,
          isNew: template.isNew,
          isPremium: template.isPremium
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[54]++;
      console.error("Failed to get templates:", error);
      /* istanbul ignore next */
      cov_c29tcq3x4().s[55]++;
      throw new Error("获取模板列表失败");
    }
  }
  /**
   * 更新模板使用统计
   */
  static async updateTemplateUsage(templateId) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[14]++;
    cov_c29tcq3x4().s[56]++;
    try {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[57]++;
      await prisma.posterTemplate.update({
        where: {
          id: templateId
        },
        data: {
          usageCount: {
            increment: 1
          },
          popularity: {
            increment: 1
          },
          lastUsed: new Date()
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[58]++;
      console.error("Failed to update template usage:", error);
      // 不抛出错误，统计失败不影响主流程
    }
  }
  /**
   * 记录使用统计
   */
  static async recordUsageStats(data) {
    /* istanbul ignore next */
    cov_c29tcq3x4().f[15]++;
    cov_c29tcq3x4().s[59]++;
    try {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[60]++;
      await prisma.usageStats.create({
        data: {
          userId: data.userId,
          agentType: data.agentType,
          action: data.action,
          metadata: data.metadata
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c29tcq3x4().s[61]++;
      console.error("Failed to record usage stats:", error);
      // 不抛出错误，统计失败不影响主流程
    }
  }
}
/* istanbul ignore next */
cov_c29tcq3x4().s[62]++;
exports.PosterDatabase = PosterDatabase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,