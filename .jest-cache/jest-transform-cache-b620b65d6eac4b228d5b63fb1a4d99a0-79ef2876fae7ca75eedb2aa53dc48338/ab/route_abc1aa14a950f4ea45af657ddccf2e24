107a2ed8bd5b9c85d114a981e7e209cd
"use strict";

/**
 * @file health\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_6hhktm7mv() {
  var path = "E:\\zk-agent\\app\\api\\health\\route.ts";
  var hash = "8838222a449f04f5efb6763d5cb60e1d6d6caac1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\health\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 68
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 68
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 68
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "11": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "12": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 106
        }
      },
      "13": {
        start: {
          line: 41,
          column: 77
        },
        end: {
          line: 41,
          column: 105
        }
      },
      "14": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "15": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "checkDatabase",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 28
          }
        },
        loc: {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "checkRedis",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "checkFastGPT",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "checkFileSystem",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 30
          }
        },
        loc: {
          start: {
            line: 23,
            column: 33
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 88
          },
          end: {
            line: 26,
            column: 89
          }
        },
        loc: {
          start: {
            line: 26,
            column: 113
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 64
          },
          end: {
            line: 41,
            column: 65
          }
        },
        loc: {
          start: {
            line: 41,
            column: 77
          },
          end: {
            line: 41,
            column: 105
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 52
          }
        }, {
          start: {
            line: 37,
            column: 56
          },
          end: {
            line: 37,
            column: 65
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 45
          }
        }, {
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 38,
            column: 58
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 46
          }
        }, {
          start: {
            line: 42,
            column: 49
          },
          end: {
            line: 42,
            column: 60
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\health\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAEH,0DAA4D;AAC5D,uDAA4D;AAC5D,kEAA8D;AAE9D,8BAA8B;AAC9B,KAAK,UAAU,aAAa;IAC1B,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;AAClE,CAAC;AAED,KAAK,UAAU,UAAU;IACvB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC;AAC/D,CAAC;AAED,KAAK,UAAU,YAAY;IACzB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;AAClE,CAAC;AAED,KAAK,UAAU,eAAe;IAC5B,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;AAClE,CAAC;AAEY,QAAA,GAAG,GAAG,IAAA,0BAAc,EAC/B,4BAAY,CAAC,SAAS,EAAE,EACxB,KAAK,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;IACtB,IAAI,CAAC;QACH,MAAM,MAAM,GAAG;YACb,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,QAAQ,EAAE;gBACR,QAAQ,EAAE,MAAM,aAAa,EAAE;gBAC/B,KAAK,EAAE,MAAM,UAAU,EAAE;gBACzB,OAAO,EAAE,MAAM,YAAY,EAAE;gBAC7B,UAAU,EAAE,MAAM,eAAe,EAAE;aACpC;YACD,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,SAAS;YACrD,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,SAAS;YAC9C,SAAS,EAAE,UAAU;SACtB,CAAC;QAEF,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CACrD,CAAC,OAAY,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,CAC/C,CAAC;QAEF,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC;QAErD,OAAO,+BAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,+BAAkB,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;IAChE,CAAC;AACH,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\health\\route.ts"],
      sourcesContent: ["/**\n * @file health\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute } from '@/lib/middleware/api-route';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { RouteConfigs } from '@/lib/middleware/route-configs';\n\n// Mock health check functions\nasync function checkDatabase() {\n  return { status: \"healthy\", message: \"Database connection OK\" };\n}\n\nasync function checkRedis() {\n  return { status: \"healthy\", message: \"Redis connection OK\" };\n}\n\nasync function checkFastGPT() {\n  return { status: \"healthy\", message: \"FastGPT API accessible\" };\n}\n\nasync function checkFileSystem() {\n  return { status: \"healthy\", message: \"File system accessible\" };\n}\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async ({ requestId }) => {\n    try {\n      const health = {\n        status: \"healthy\",\n        timestamp: new Date().toISOString(),\n        services: {\n          database: await checkDatabase(),\n          redis: await checkRedis(),\n          fastgpt: await checkFastGPT(),\n          fileSystem: await checkFileSystem(),\n        },\n        version: process.env.npm_package_version || \"unknown\",\n        environment: process.env.NODE_ENV || \"unknown\",\n        requestId: _requestId\n      };\n      \n      const allHealthy = Object.values(health.services).every(\n        (service: any) => service.status === \"healthy\"\n      );\n      \n      health.status = allHealthy ? \"healthy\" : \"unhealthy\";\n      \n      return ApiResponseWrapper.success(health);\n    } catch (error) {\n      return ApiResponseWrapper.error('Internal server error', 500);\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8838222a449f04f5efb6763d5cb60e1d6d6caac1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6hhktm7mv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6hhktm7mv();
cov_6hhktm7mv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6hhktm7mv().s[1]++;
exports.GET = void 0;
const api_route_1 =
/* istanbul ignore next */
(cov_6hhktm7mv().s[2]++, require("@/lib/middleware/api-route"));
const api_helper_1 =
/* istanbul ignore next */
(cov_6hhktm7mv().s[3]++, require("@/lib/utils/api-helper"));
const route_configs_1 =
/* istanbul ignore next */
(cov_6hhktm7mv().s[4]++, require("@/lib/middleware/route-configs"));
// Mock health check functions
async function checkDatabase() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[0]++;
  cov_6hhktm7mv().s[5]++;
  return {
    status: "healthy",
    message: "Database connection OK"
  };
}
async function checkRedis() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[1]++;
  cov_6hhktm7mv().s[6]++;
  return {
    status: "healthy",
    message: "Redis connection OK"
  };
}
async function checkFastGPT() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[2]++;
  cov_6hhktm7mv().s[7]++;
  return {
    status: "healthy",
    message: "FastGPT API accessible"
  };
}
async function checkFileSystem() {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[3]++;
  cov_6hhktm7mv().s[8]++;
  return {
    status: "healthy",
    message: "File system accessible"
  };
}
/* istanbul ignore next */
cov_6hhktm7mv().s[9]++;
exports.GET = (0, api_route_1.createApiRoute)(route_configs_1.RouteConfigs.publicGet(), async ({
  requestId
}) => {
  /* istanbul ignore next */
  cov_6hhktm7mv().f[4]++;
  cov_6hhktm7mv().s[10]++;
  try {
    const health =
    /* istanbul ignore next */
    (cov_6hhktm7mv().s[11]++, {
      status: "healthy",
      timestamp: new Date().toISOString(),
      services: {
        database: await checkDatabase(),
        redis: await checkRedis(),
        fastgpt: await checkFastGPT(),
        fileSystem: await checkFileSystem()
      },
      version:
      /* istanbul ignore next */
      (cov_6hhktm7mv().b[0][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_6hhktm7mv().b[0][1]++, "unknown"),
      environment:
      /* istanbul ignore next */
      (cov_6hhktm7mv().b[1][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_6hhktm7mv().b[1][1]++, "unknown"),
      requestId: _requestId
    });
    const allHealthy =
    /* istanbul ignore next */
    (cov_6hhktm7mv().s[12]++, Object.values(health.services).every(service => {
      /* istanbul ignore next */
      cov_6hhktm7mv().f[5]++;
      cov_6hhktm7mv().s[13]++;
      return service.status === "healthy";
    }));
    /* istanbul ignore next */
    cov_6hhktm7mv().s[14]++;
    health.status = allHealthy ?
    /* istanbul ignore next */
    (cov_6hhktm7mv().b[2][0]++, "healthy") :
    /* istanbul ignore next */
    (cov_6hhktm7mv().b[2][1]++, "unhealthy");
    /* istanbul ignore next */
    cov_6hhktm7mv().s[15]++;
    return api_helper_1.ApiResponseWrapper.success(health);
  } catch (error) {
    /* istanbul ignore next */
    cov_6hhktm7mv().s[16]++;
    return api_helper_1.ApiResponseWrapper.error('Internal server error', 500);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,