ae2d39cbb89cb1731cd3027249ea7d32
"use strict";

/**
 * @file auth\change-password\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_rqnhx8405() {
  var path = "E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts";
  var hash = "8dc94cb4e49df94e9b64fa6077ee59d12883b9dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "5": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 61
        }
      },
      "6": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "7": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 18,
          column: 2
        }
      },
      "8": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "9": {
        start: {
          line: 20,
          column: 41
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 88
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 135
          },
          end: {
            line: 19,
            column: 136
          }
        },
        loc: {
          start: {
            line: 19,
            column: 175
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts",
      mappings: ";AAAA;;;;;GAKG;;;AAGH,0EAAkF;AAClF,uDAA4D;AAC5D,6BAAuB;AACvB,8DAAsF;AACtF,gEAAgE;AAEhE,MAAM,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;IAC1C,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC;CAC1C,CAAC,CAAC;AAEU,QAAA,IAAI,GAAG,IAAA,kCAAc,EAChC,gCAAY,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC,EAC1D,KAAK,EAAE,GAAgB,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE,EAAE;IAClD,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,aAAa,CAAC;IACnD,MAAM,IAAA,6BAAqB,EAAC,IAAI,CAAC,MAAM,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;IAEvE,MAAM,IAAA,gCAAgB,EAAC;QACrB,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,SAAS,EAAE,MAAM;QACjB,MAAM,EAAE,iBAAiB;QACzB,GAAG;KACJ,CAAC,CAAC;IAEH,OAAO,+BAAkB,CAAC,OAAO,CAAC;QAChC,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,QAAQ;KAClB,CAAC,CAAC;AACL,CAAC,CACF,CAAC",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts"],
      sourcesContent: ["/**\n * @file auth\\change-password\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport { changePassword as changePasswordService } from '@/lib/services/auth-service';\nimport { createUsageStats } from '@/lib/services/stats-service';\n\nconst changePasswordSchema = z.object({\n  oldPassword: z.string().min(1, \"\u5F53\u524D\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A\"),\n  newPassword: z.string().min(6, \"\u65B0\u5BC6\u7801\u81F3\u5C116\u4F4D\"),\n});\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost({ body: changePasswordSchema }),\n  async (req: NextRequest, { validatedBody, user }) => {\n    const { oldPassword, newPassword } = validatedBody;\n    await changePasswordService(user.userId, { oldPassword, newPassword });\n\n    await createUsageStats({\n      userId: user.userId,\n      agentType: 'auth',\n      action: 'change_password',\n      req,\n    });\n\n    return ApiResponseWrapper.success({\n      success: true,\n      message: \"\u5BC6\u7801\u4FEE\u6539\u6210\u529F\",\n    });\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8dc94cb4e49df94e9b64fa6077ee59d12883b9dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rqnhx8405 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rqnhx8405();
cov_rqnhx8405().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rqnhx8405().s[1]++;
exports.POST = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[3]++, require("@/lib/utils/api-helper"));
const zod_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[4]++, require("zod"));
const auth_service_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[5]++, require("@/lib/services/auth-service"));
const stats_service_1 =
/* istanbul ignore next */
(cov_rqnhx8405().s[6]++, require("@/lib/services/stats-service"));
const changePasswordSchema =
/* istanbul ignore next */
(cov_rqnhx8405().s[7]++, zod_1.z.object({
  oldPassword: zod_1.z.string().min(1, "当前密码不能为空"),
  newPassword: zod_1.z.string().min(6, "新密码至少6位")
}));
/* istanbul ignore next */
cov_rqnhx8405().s[8]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost({
  body: changePasswordSchema
}), async (req, {
  validatedBody,
  user
}) => {
  /* istanbul ignore next */
  cov_rqnhx8405().f[0]++;
  const {
    oldPassword,
    newPassword
  } =
  /* istanbul ignore next */
  (cov_rqnhx8405().s[9]++, validatedBody);
  /* istanbul ignore next */
  cov_rqnhx8405().s[10]++;
  await (0, auth_service_1.changePassword)(user.userId, {
    oldPassword,
    newPassword
  });
  /* istanbul ignore next */
  cov_rqnhx8405().s[11]++;
  await (0, stats_service_1.createUsageStats)({
    userId: user.userId,
    agentType: 'auth',
    action: 'change_password',
    req
  });
  /* istanbul ignore next */
  cov_rqnhx8405().s[12]++;
  return api_helper_1.ApiResponseWrapper.success({
    success: true,
    message: "密码修改成功"
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcnFuaHg4NDA1IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJpbnB1dFNvdXJjZU1hcCIsImZpbGUiLCJtYXBwaW5ncyIsIm5hbWVzIiwic291cmNlcyIsInNvdXJjZXNDb250ZW50IiwidmVyc2lvbiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJhcGlfcm91dGVfd3JhcHBlcl8xIiwicmVxdWlyZSIsImFwaV9oZWxwZXJfMSIsInpvZF8xIiwiYXV0aF9zZXJ2aWNlXzEiLCJzdGF0c19zZXJ2aWNlXzEiLCJjaGFuZ2VQYXNzd29yZFNjaGVtYSIsInoiLCJvYmplY3QiLCJvbGRQYXNzd29yZCIsInN0cmluZyIsIm1pbiIsIm5ld1Bhc3N3b3JkIiwiZXhwb3J0cyIsIlBPU1QiLCJjcmVhdGVBcGlSb3V0ZSIsIlJvdXRlQ29uZmlncyIsInByb3RlY3RlZFBvc3QiLCJib2R5IiwicmVxIiwidmFsaWRhdGVkQm9keSIsInVzZXIiLCJjaGFuZ2VQYXNzd29yZCIsInVzZXJJZCIsImNyZWF0ZVVzYWdlU3RhdHMiLCJhZ2VudFR5cGUiLCJhY3Rpb24iLCJBcGlSZXNwb25zZVdyYXBwZXIiLCJzdWNjZXNzIiwibWVzc2FnZSJdLCJzb3VyY2VzIjpbIkU6XFx6ay1hZ2VudFxcYXBwXFxhcGlcXGF1dGhcXGNoYW5nZS1wYXNzd29yZFxccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBhdXRoXFxjaGFuZ2UtcGFzc3dvcmRcXHJvdXRlLnRzXG4gKiBAZGVzY3JpcHRpb24gTWlncmF0ZWQgQVBJIHJvdXRlIHdpdGggZ2xvYmFsIGVycm9yIGhhbmRsaW5nXG4gKiBAYXV0aG9yIFpLLUFnZW50IFRlYW1cbiAqIEBkYXRlIDIwMjUtMDYtMjVcbiAqL1xuXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGNyZWF0ZUFwaVJvdXRlLCBSb3V0ZUNvbmZpZ3MgfSBmcm9tICdAL2xpYi9taWRkbGV3YXJlL2FwaS1yb3V0ZS13cmFwcGVyJztcbmltcG9ydCB7IEFwaVJlc3BvbnNlV3JhcHBlciB9IGZyb20gJ0AvbGliL3V0aWxzL2FwaS1oZWxwZXInO1xuaW1wb3J0IHsgeiB9IGZyb20gXCJ6b2RcIlxuaW1wb3J0IHsgY2hhbmdlUGFzc3dvcmQgYXMgY2hhbmdlUGFzc3dvcmRTZXJ2aWNlIH0gZnJvbSAnQC9saWIvc2VydmljZXMvYXV0aC1zZXJ2aWNlJztcbmltcG9ydCB7IGNyZWF0ZVVzYWdlU3RhdHMgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9zdGF0cy1zZXJ2aWNlJztcblxuY29uc3QgY2hhbmdlUGFzc3dvcmRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG9sZFBhc3N3b3JkOiB6LnN0cmluZygpLm1pbigxLCBcIuW9k+WJjeWvhueggeS4jeiDveS4uuepulwiKSxcbiAgbmV3UGFzc3dvcmQ6IHouc3RyaW5nKCkubWluKDYsIFwi5paw5a+G56CB6Iez5bCRNuS9jVwiKSxcbn0pO1xuXG5leHBvcnQgY29uc3QgUE9TVCA9IGNyZWF0ZUFwaVJvdXRlKFxuICBSb3V0ZUNvbmZpZ3MucHJvdGVjdGVkUG9zdCh7IGJvZHk6IGNoYW5nZVBhc3N3b3JkU2NoZW1hIH0pLFxuICBhc3luYyAocmVxOiBOZXh0UmVxdWVzdCwgeyB2YWxpZGF0ZWRCb2R5LCB1c2VyIH0pID0+IHtcbiAgICBjb25zdCB7IG9sZFBhc3N3b3JkLCBuZXdQYXNzd29yZCB9ID0gdmFsaWRhdGVkQm9keTtcbiAgICBhd2FpdCBjaGFuZ2VQYXNzd29yZFNlcnZpY2UodXNlci51c2VySWQsIHsgb2xkUGFzc3dvcmQsIG5ld1Bhc3N3b3JkIH0pO1xuXG4gICAgYXdhaXQgY3JlYXRlVXNhZ2VTdGF0cyh7XG4gICAgICB1c2VySWQ6IHVzZXIudXNlcklkLFxuICAgICAgYWdlbnRUeXBlOiAnYXV0aCcsXG4gICAgICBhY3Rpb246ICdjaGFuZ2VfcGFzc3dvcmQnLFxuICAgICAgcmVxLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIEFwaVJlc3BvbnNlV3JhcHBlci5zdWNjZXNzKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiBcIuWvhueggeS/ruaUueaIkOWKn1wiLFxuICAgIH0pO1xuICB9XG4pO1xuXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtN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