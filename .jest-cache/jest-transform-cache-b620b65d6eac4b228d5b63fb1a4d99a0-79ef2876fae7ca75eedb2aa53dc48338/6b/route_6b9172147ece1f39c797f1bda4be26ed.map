{"version":3,"names":["cov_rqnhx8405","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","api_route_wrapper_1","require","api_helper_1","zod_1","auth_service_1","stats_service_1","changePasswordSchema","z","object","oldPassword","string","min","newPassword","exports","POST","createApiRoute","RouteConfigs","protectedPost","body","req","validatedBody","user","changePassword","userId","createUsageStats","agentType","action","ApiResponseWrapper","success","message"],"sources":["E:\\zk-agent\\app\\api\\auth\\change-password\\route.ts"],"sourcesContent":["/**\n * @file auth\\change-password\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest } from 'next/server';\nimport { createApiRoute, RouteConfigs } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { z } from \"zod\"\nimport { changePassword as changePasswordService } from '@/lib/services/auth-service';\nimport { createUsageStats } from '@/lib/services/stats-service';\n\nconst changePasswordSchema = z.object({\n  oldPassword: z.string().min(1, \"当前密码不能为空\"),\n  newPassword: z.string().min(6, \"新密码至少6位\"),\n});\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost({ body: changePasswordSchema }),\n  async (req: NextRequest, { validatedBody, user }) => {\n    const { oldPassword, newPassword } = validatedBody;\n    await changePasswordService(user.userId, { oldPassword, newPassword });\n\n    await createUsageStats({\n      userId: user.userId,\n      agentType: 'auth',\n      action: 'change_password',\n      req,\n    });\n\n    return ApiResponseWrapper.success({\n      success: true,\n      message: \"密码修改成功\",\n    });\n  }\n);\n\n"],"mappings":"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","ignoreList":[]}