{"version":3,"names":["cov_239wfhjguk","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","events_1","require","monitoring_1","logger_1","ConnectionPoolAnalyzer","EventEmitter","constructor","maxHistorySize","analysisIntervalMs","usageHistory","isAnalyzing","analysisInterval","logger","Logger","setupMonitoringListeners","databaseMonitor","on","metrics","recordUsageStats","activeConnections","idleConnections","waitingRequests","connectionCreations","connectionDestructions","stats","timestamp","Date","totalConnections","avgAcquireTime","avgLatency","utilizationRate","calculateUtilizationRate","peakConnections","calculatePeakConnections","push","length","shift","emit","active","idle","total","Math","max","map","startAnalysis","console","log","setInterval","performAnalysis","stopAnalysis","clearInterval","analysis","analyzeUsagePattern","recommendations","generateRecommendations","patternType","avgUtilization","toFixed","recommendationsCount","error","timeRangeMs","now","startTime","getTime","relevantStats","filter","Error","utilizations","reduce","sum","val","peakUtilization","minUtilization","min","variance","pow","utilizationStdDev","sqrt","acquireTimes","sort","a","acquireTimeStats","avg","p95","floor","p99","determinePatternType","recommendedConfig","generateRecommendedConfig","timeRange","stdDev","trend","calculateTrend","values","firstHalf","slice","secondHalf","firstAvg","secondAvg","maxConnections","avgConnections","minConnections","ceil","recommendedMax","acquireTimeout","idleTimeout","description","expectedImpact","priority","getUsageHistory","limit","getCurrentStats","clearHistory","generateReport","summary","toISOString","trim","exports","connectionPoolAnalyzer"],"sources":["E:\\zk-agent\\lib\\database\\connection-pool-analyzer.ts"],"sourcesContent":["/**\r\n * 连接池使用模式分析器\r\n * 用于分析数据库连接池的实际使用情况，为优化提供数据支持\r\n * \r\n * 功能:\r\n * - 实时监控连接池使用情况\r\n * - 分析连接使用模式和趋势\r\n * - 识别性能瓶颈和优化机会\r\n * - 生成优化建议报告\r\n * \r\n * @author ZK-Agent Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport { EventEmitter } from 'events'\r\nimport { DatabaseMetrics } from './monitoring'\r\nimport { databaseMonitor } from './monitoring'\r\nimport { Logger } from '@/lib/utils/logger'\r\n\r\n/**\r\n * 连接池使用统计接口\r\n */\r\ninterface PoolUsageStats {\r\n  /** 时间戳 */\r\n  timestamp: Date\r\n  /** 活跃连接数 */\r\n  activeConnections: number\r\n  /** 空闲连接数 */\r\n  idleConnections: number\r\n  /** 总连接数 */\r\n  totalConnections: number\r\n  /** 等待连接的请求数 */\r\n  waitingRequests: number\r\n  /** 连接获取平均时间(ms) */\r\n  avgAcquireTime: number\r\n  /** 连接使用率(%) */\r\n  utilizationRate: number\r\n  /** 峰值连接数 */\r\n  peakConnections: number\r\n  /** 连接创建次数 */\r\n  connectionCreations: number\r\n  /** 连接销毁次数 */\r\n  connectionDestructions: number\r\n}\r\n\r\n/**\r\n * 使用模式分析结果接口\r\n */\r\ninterface UsagePatternAnalysis {\r\n  /** 分析时间段 */\r\n  timeRange: {\r\n    start: Date\r\n    end: Date\r\n  }\r\n  /** 平均使用率 */\r\n  avgUtilization: number\r\n  /** 峰值使用率 */\r\n  peakUtilization: number\r\n  /** 低谷使用率 */\r\n  minUtilization: number\r\n  /** 使用率标准差 */\r\n  utilizationStdDev: number\r\n  /** 连接获取延迟统计 */\r\n  acquireTimeStats: {\r\n    avg: number\r\n    min: number\r\n    max: number\r\n    p95: number\r\n    p99: number\r\n  }\r\n  /** 使用模式类型 */\r\n  patternType: 'stable' | 'bursty' | 'growing' | 'declining' | 'irregular'\r\n  /** 建议的连接池配置 */\r\n  recommendedConfig: {\r\n    minConnections: number\r\n    maxConnections: number\r\n    acquireTimeout: number\r\n    idleTimeout: number\r\n  }\r\n}\r\n\r\n/**\r\n * 优化建议接口\r\n */\r\ninterface OptimizationRecommendation {\r\n  /** 建议类型 */\r\n  type: 'increase_pool' | 'decrease_pool' | 'adjust_timeout' | 'optimize_queries' | 'no_action'\r\n  /** 建议描述 */\r\n  description: string\r\n  /** 预期效果 */\r\n  expectedImpact: string\r\n  /** 优先级 */\r\n  priority: 'high' | 'medium' | 'low'\r\n  /** 具体配置建议 */\r\n  configChanges?: Partial<PoolUsageStats>\r\n}\r\n\r\n/**\r\n * 连接池使用模式分析器类\r\n */\r\nexport class ConnectionPoolAnalyzer extends EventEmitter {\r\n  private usageHistory: PoolUsageStats[] = []\r\n  private isAnalyzing: boolean = false\r\n  private analysisInterval: NodeJS.Timeout | null = null\r\n  private maxHistorySize: number\r\n  private analysisIntervalMs: number\r\n  private logger = new Logger('ConnectionPoolAnalyzer')\r\n\r\n  constructor(\r\n    maxHistorySize: number = 1000,\r\n    analysisIntervalMs: number = 30000 // 30秒分析一次\r\n  ) {\r\n    super()\r\n    this.maxHistorySize = maxHistorySize\r\n    this.analysisIntervalMs = analysisIntervalMs\r\n\r\n    // 监听数据库监控事件\r\n    this.setupMonitoringListeners()\r\n  }\r\n\r\n  /**\r\n   * 设置监控事件监听器\r\n   */\r\n  private setupMonitoringListeners(): void {\r\n    databaseMonitor.on('metrics', (metrics: DatabaseMetrics) => {\r\n      this.recordUsageStats(metrics)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 记录连接池使用统计\r\n   * \r\n   * @param metrics - 数据库监控指标\r\n   */\r\n  /**\r\n   * 记录连接池使用统计\r\n   * \r\n   * @param metrics - 数据库监控指标\r\n   */\r\n  private recordUsageStats(metrics: DatabaseMetrics): void {\r\n    // 安全地获取连接池指标，提供默认值\r\n    const activeConnections = metrics.activeConnections ?? 0\r\n    const idleConnections = metrics.idleConnections ?? 0\r\n    const waitingRequests = metrics.waitingRequests ?? 0\r\n    const connectionCreations = metrics.connectionCreations ?? 0\r\n    const connectionDestructions = metrics.connectionDestructions ?? 0\r\n    \r\n    const stats: PoolUsageStats = {\r\n      timestamp: new Date(),\r\n      activeConnections,\r\n      idleConnections,\r\n      totalConnections: activeConnections + idleConnections,\r\n      waitingRequests,\r\n      avgAcquireTime: metrics.avgLatency || 0,\r\n      utilizationRate: this.calculateUtilizationRate(metrics),\r\n      peakConnections: this.calculatePeakConnections(),\r\n      connectionCreations,\r\n      connectionDestructions\r\n    }\r\n\r\n    this.usageHistory.push(stats)\r\n\r\n    // 限制历史记录大小\r\n    if (this.usageHistory.length > this.maxHistorySize) {\r\n      this.usageHistory.shift()\r\n    }\r\n\r\n    this.emit('usage-stats', stats)\r\n  }\r\n\r\n  /**\r\n   * 计算连接池使用率\r\n   * \r\n   * @param metrics - 数据库监控指标\r\n   * @returns 使用率百分比\r\n   */\r\n  /**\r\n   * 计算连接池使用率\r\n   * \r\n   * @param metrics - 数据库监控指标\r\n   * @returns 使用率百分比\r\n   */\r\n  private calculateUtilizationRate(metrics: DatabaseMetrics): number {\r\n    const active = metrics.activeConnections ?? 0\r\n    const idle = metrics.idleConnections ?? 0\r\n    const total = active + idle\r\n    \r\n    if (total === 0) return 0\r\n    return (active / total) * 100\r\n  }\r\n\r\n  /**\r\n   * 计算峰值连接数\r\n   * \r\n   * @returns 峰值连接数\r\n   */\r\n  private calculatePeakConnections(): number {\r\n    if (this.usageHistory.length === 0) return 0\r\n    \r\n    return Math.max(...this.usageHistory.map(stats => stats.totalConnections))\r\n  }\r\n\r\n  /**\r\n   * 开始分析\r\n   */\r\n  startAnalysis(): void {\r\n    if (this.isAnalyzing) {\r\n      console.log('Connection pool analysis is already running')\r\n      return\r\n    }\r\n\r\n    console.log(`Starting connection pool usage analysis (interval: ${this.analysisIntervalMs}ms)`)\r\n    this.isAnalyzing = true\r\n\r\n    this.analysisInterval = setInterval(() => {\r\n      this.performAnalysis()\r\n    }, this.analysisIntervalMs)\r\n\r\n    // 立即执行一次分析\r\n    this.performAnalysis()\r\n  }\r\n\r\n  /**\r\n   * 停止分析\r\n   */\r\n  stopAnalysis(): void {\r\n    if (!this.isAnalyzing) {\r\n      return\r\n    }\r\n\r\n    console.log('Stopping connection pool usage analysis')\r\n    this.isAnalyzing = false\r\n\r\n    if (this.analysisInterval) {\r\n      clearInterval(this.analysisInterval)\r\n      this.analysisInterval = null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行使用模式分析\r\n   */\r\n  private performAnalysis(): void {\r\n    if (this.usageHistory.length < 10) {\r\n      // 数据不足，无法进行有效分析\r\n      return\r\n    }\r\n\r\n    try {\r\n      const analysis = this.analyzeUsagePattern()\r\n      const recommendations = this.generateRecommendations(analysis)\r\n      \r\n      this.emit('analysis-complete', {\r\n        analysis,\r\n        recommendations,\r\n        timestamp: new Date()\r\n      })\r\n\r\n      console.log('Connection pool usage analysis completed', {\r\n        patternType: analysis.patternType,\r\n        avgUtilization: analysis.avgUtilization.toFixed(2) + '%',\r\n        recommendationsCount: recommendations.length\r\n      })\r\n\r\n    } catch (error) {\r\n      console.error('Error during connection pool analysis:', error)\r\n      this.emit('analysis-error', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 分析使用模式\r\n   * \r\n   * @param timeRangeMs - 分析时间范围(毫秒)\r\n   * @returns 使用模式分析结果\r\n   */\r\n  analyzeUsagePattern(timeRangeMs: number = 3600000): UsagePatternAnalysis {\r\n    const now = new Date()\r\n    const startTime = new Date(now.getTime() - timeRangeMs)\r\n    \r\n    const relevantStats = this.usageHistory.filter(\r\n      stats => stats.timestamp >= startTime\r\n    )\r\n\r\n    if (relevantStats.length === 0) {\r\n      throw new Error('Insufficient data for analysis')\r\n    }\r\n\r\n    // 计算使用率统计\r\n    const utilizations = relevantStats.map(stats => stats.utilizationRate)\r\n    const avgUtilization = utilizations.reduce((sum, val) => sum + val, 0) / utilizations.length\r\n    const peakUtilization = Math.max(...utilizations)\r\n    const minUtilization = Math.min(...utilizations)\r\n    \r\n    // 计算标准差\r\n    const variance = utilizations.reduce((sum, val) => sum + Math.pow(val - avgUtilization, 2), 0) / utilizations.length\r\n    const utilizationStdDev = Math.sqrt(variance)\r\n\r\n    // 计算连接获取时间统计\r\n    const acquireTimes = relevantStats.map(stats => stats.avgAcquireTime).sort((a, b) => a - b)\r\n    const acquireTimeStats = {\r\n      avg: acquireTimes.reduce((sum, val) => sum + val, 0) / acquireTimes.length,\r\n      min: acquireTimes[0],\r\n      max: acquireTimes[acquireTimes.length - 1],\r\n      p95: acquireTimes[Math.floor(acquireTimes.length * 0.95)],\r\n      p99: acquireTimes[Math.floor(acquireTimes.length * 0.99)]\r\n    }\r\n\r\n    // 确定使用模式类型\r\n    const patternType = this.determinePatternType(relevantStats, utilizationStdDev)\r\n\r\n    // 生成推荐配置\r\n    const recommendedConfig = this.generateRecommendedConfig(relevantStats, avgUtilization, peakUtilization)\r\n\r\n    return {\r\n      timeRange: {\r\n        start: startTime,\r\n        end: now\r\n      },\r\n      avgUtilization,\r\n      peakUtilization,\r\n      minUtilization,\r\n      utilizationStdDev,\r\n      acquireTimeStats,\r\n      patternType,\r\n      recommendedConfig\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 确定使用模式类型\r\n   * \r\n   * @param stats - 使用统计数据\r\n   * @param stdDev - 使用率标准差\r\n   * @returns 模式类型\r\n   */\r\n  private determinePatternType(stats: PoolUsageStats[], stdDev: number): UsagePatternAnalysis['patternType'] {\r\n    const utilizations = stats.map(s => s.utilizationRate)\r\n    const trend = this.calculateTrend(utilizations)\r\n    \r\n    if (stdDev < 10) {\r\n      return 'stable'\r\n    } else if (stdDev > 30) {\r\n      return 'irregular'\r\n    } else if (trend > 5) {\r\n      return 'growing'\r\n    } else if (trend < -5) {\r\n      return 'declining'\r\n    } else {\r\n      return 'bursty'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算趋势\r\n   * \r\n   * @param values - 数值数组\r\n   * @returns 趋势值\r\n   */\r\n  private calculateTrend(values: number[]): number {\r\n    if (values.length < 2) return 0\r\n    \r\n    const firstHalf = values.slice(0, Math.floor(values.length / 2))\r\n    const secondHalf = values.slice(Math.floor(values.length / 2))\r\n    \r\n    const firstAvg = firstHalf.reduce((sum, val) => sum + val, 0) / firstHalf.length\r\n    const secondAvg = secondHalf.reduce((sum, val) => sum + val, 0) / secondHalf.length\r\n    \r\n    return secondAvg - firstAvg\r\n  }\r\n\r\n  /**\r\n   * 生成推荐配置\r\n   * \r\n   * @param stats - 使用统计数据\r\n   * @param avgUtilization - 平均使用率\r\n   * @param peakUtilization - 峰值使用率\r\n   * @returns 推荐配置\r\n   */\r\n  private generateRecommendedConfig(\r\n    stats: PoolUsageStats[],\r\n    avgUtilization: number,\r\n    peakUtilization: number\r\n  ): UsagePatternAnalysis['recommendedConfig'] {\r\n    const maxConnections = Math.max(...stats.map(s => s.totalConnections))\r\n    const avgConnections = stats.reduce((sum, s) => sum + s.totalConnections, 0) / stats.length\r\n    \r\n    // 基于使用模式调整配置\r\n    let minConnections = Math.max(2, Math.ceil(avgConnections * 0.3))\r\n    let recommendedMax = Math.max(minConnections + 2, Math.ceil(maxConnections * 1.2))\r\n    \r\n    // 根据使用率调整\r\n    if (avgUtilization > 80) {\r\n      recommendedMax = Math.ceil(recommendedMax * 1.5)\r\n    } else if (avgUtilization < 30) {\r\n      recommendedMax = Math.max(minConnections + 1, Math.ceil(recommendedMax * 0.8))\r\n    }\r\n    \r\n    // 计算超时时间\r\n    const avgAcquireTime = stats.reduce((sum, s) => sum + s.avgAcquireTime, 0) / stats.length\r\n    const acquireTimeout = Math.max(30000, avgAcquireTime * 3)\r\n    const idleTimeout = avgUtilization > 60 ? 300000 : 600000 // 5-10分钟\r\n    \r\n    return {\r\n      minConnections,\r\n      maxConnections: recommendedMax,\r\n      acquireTimeout,\r\n      idleTimeout\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 生成优化建议\r\n   * \r\n   * @param analysis - 使用模式分析结果\r\n   * @returns 优化建议数组\r\n   */\r\n  private generateRecommendations(analysis: UsagePatternAnalysis): OptimizationRecommendation[] {\r\n    const recommendations: OptimizationRecommendation[] = []\r\n    \r\n    // 基于平均使用率的建议\r\n    if (analysis.avgUtilization > 85) {\r\n      recommendations.push({\r\n        type: 'increase_pool',\r\n        description: '连接池使用率过高，建议增加最大连接数',\r\n        expectedImpact: '减少连接等待时间，提升并发处理能力',\r\n        priority: 'high'\r\n      })\r\n    } else if (analysis.avgUtilization < 20) {\r\n      recommendations.push({\r\n        type: 'decrease_pool',\r\n        description: '连接池使用率较低，建议减少连接数以节省资源',\r\n        expectedImpact: '降低内存使用，减少维护开销',\r\n        priority: 'medium'\r\n      })\r\n    }\r\n    \r\n    // 基于连接获取时间的建议\r\n    if (analysis.acquireTimeStats.p95 > 5000) {\r\n      recommendations.push({\r\n        type: 'adjust_timeout',\r\n        description: '连接获取时间较长，建议调整超时配置或增加连接数',\r\n        expectedImpact: '减少连接获取延迟，提升响应速度',\r\n        priority: 'high'\r\n      })\r\n    }\r\n    \r\n    // 基于使用模式的建议\r\n    if (analysis.patternType === 'bursty') {\r\n      recommendations.push({\r\n        type: 'optimize_queries',\r\n        description: '检测到突发性使用模式，建议优化查询性能或实现连接预热',\r\n        expectedImpact: '平滑负载峰值，提升系统稳定性',\r\n        priority: 'medium'\r\n      })\r\n    }\r\n    \r\n    // 如果没有明显问题\r\n    if (recommendations.length === 0) {\r\n      recommendations.push({\r\n        type: 'no_action',\r\n        description: '连接池配置良好，暂无需要优化的项目',\r\n        expectedImpact: '保持当前性能水平',\r\n        priority: 'low'\r\n      })\r\n    }\r\n    \r\n    return recommendations\r\n  }\r\n\r\n  /**\r\n   * 获取使用历史\r\n   * \r\n   * @param limit - 限制返回数量\r\n   * @returns 使用统计历史\r\n   */\r\n  getUsageHistory(limit?: number): PoolUsageStats[] {\r\n    if (limit) {\r\n      return this.usageHistory.slice(-limit)\r\n    }\r\n    return [...this.usageHistory]\r\n  }\r\n\r\n  /**\r\n   * 获取当前使用统计\r\n   * \r\n   * @returns 当前使用统计\r\n   */\r\n  getCurrentStats(): PoolUsageStats | null {\r\n    return this.usageHistory.length > 0 ? this.usageHistory[this.usageHistory.length - 1] : null\r\n  }\r\n\r\n  /**\r\n   * 清除历史数据\r\n   */\r\n  clearHistory(): void {\r\n    this.usageHistory = []\r\n    console.log('Connection pool usage history cleared')\r\n  }\r\n\r\n  /**\r\n   * 生成分析报告\r\n   * \r\n   * @param timeRangeMs - 分析时间范围\r\n   * @returns 分析报告\r\n   */\r\n  generateReport(timeRangeMs: number = 3600000): {\r\n    analysis: UsagePatternAnalysis\r\n    recommendations: OptimizationRecommendation[]\r\n    summary: string\r\n  } {\r\n    const analysis = this.analyzeUsagePattern(timeRangeMs)\r\n    const recommendations = this.generateRecommendations(analysis)\r\n    \r\n    const summary = `\r\n连接池使用分析报告\r\n==================\r\n时间范围: ${analysis.timeRange.start.toISOString()} - ${analysis.timeRange.end.toISOString()}\r\n使用模式: ${analysis.patternType}\r\n平均使用率: ${analysis.avgUtilization.toFixed(2)}%\r\n峰值使用率: ${analysis.peakUtilization.toFixed(2)}%\r\n平均获取时间: ${analysis.acquireTimeStats.avg.toFixed(2)}ms\r\n建议数量: ${recommendations.length}\r\n\r\n推荐配置:\r\n- 最小连接数: ${analysis.recommendedConfig.minConnections}\r\n- 最大连接数: ${analysis.recommendedConfig.maxConnections}\r\n- 获取超时: ${analysis.recommendedConfig.acquireTimeout}ms\r\n- 空闲超时: ${analysis.recommendedConfig.idleTimeout}ms\r\n    `.trim()\r\n    \r\n    return {\r\n      analysis,\r\n      recommendations,\r\n      summary\r\n    }\r\n  }\r\n}\r\n\r\n// 创建全局实例\r\nexport const connectionPoolAnalyzer = new ConnectionPoolAnalyzer()\r\n\r\n// 导出类型\r\nexport type {\r\n  PoolUsageStats,\r\n  UsagePatternAnalysis,\r\n  OptimizationRecommendation\r\n}\r\n"],"mappings":"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","ignoreList":[]}