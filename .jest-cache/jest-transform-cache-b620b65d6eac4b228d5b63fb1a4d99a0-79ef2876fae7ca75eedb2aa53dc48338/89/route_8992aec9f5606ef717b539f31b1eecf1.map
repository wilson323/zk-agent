{"version":3,"names":["cov_25iinvtzcy","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","route_factory_1","require","performance_monitor_1","unified_ai_adapter_1","enhanced_database_manager_1","core_1","exports","GET","createApiRoute","handler","searchParams","ApiResponseWrapper","success","getSystemOverview","getPerformanceMetrics","getHealthStatus","getDatabaseMetrics","getAIServiceMetrics","getResourceUsage","error","ErrorCode","VALIDATION_ERROR","INTERNAL_SERVER_ERROR","status","uptime","process","timestamp","Date","toISOString","performanceMonitor","getPerformanceStats","database","enhancedDatabaseManager","healthCheck","ai","unifiedAIAdapter","system","getQueryAnalytics","memory","memoryUsage","cpu","cpuUsage"],"sources":["E:\\zk-agent\\app\\api\\admin\\system-monitor\\route.ts"],"sourcesContent":["/**\n * @file admin\\system-monitor\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { createApiRoute, ApiResponseWrapper } from '@/lib/api/route-factory';\nimport { performanceMonitor } from '@/lib/middleware/performance-monitor';\nimport { unifiedAIAdapter } from '@/lib/ai/unified-ai-adapter';\nimport { enhancedDatabaseManager } from '@/lib/database/enhanced-database-manager';\nimport { ErrorCode } from '@/types/core';\n\nexport const GET = createApiRoute({\n  handler: async ({ searchParams }) => {\n    try {\n      const type = searchParams?.type || 'overview';\n    \n      switch (type) {\n        case 'overview':\n          return ApiResponseWrapper.success(await getSystemOverview());\n        \n        case 'performance':\n          return ApiResponseWrapper.success(await getPerformanceMetrics());\n        \n        case 'health':\n          return ApiResponseWrapper.success(await getHealthStatus());\n        \n        case 'database':\n          return ApiResponseWrapper.success(await getDatabaseMetrics());\n        \n        case 'ai':\n          return ApiResponseWrapper.success(await getAIServiceMetrics());\n        \n        case 'resources':\n          return ApiResponseWrapper.success(await getResourceUsage());\n        \n        default:\n          return ApiResponseWrapper.error(ErrorCode.VALIDATION_ERROR, 'Invalid monitor type', null);\n      }\n    } catch (error) {\n      return ApiResponseWrapper.error(ErrorCode.INTERNAL_SERVER_ERROR, 'Failed to get system monitor data', null);\n    }\n  }\n});\n\n// Helper functions for system monitoring\nasync function getSystemOverview() {\n  return {\n    status: 'operational',\n    uptime: process.uptime(),\n    timestamp: new Date().toISOString()\n  };\n}\n\nasync function getPerformanceMetrics() {\n  return performanceMonitor.getPerformanceStats();\n}\n\nasync function getHealthStatus() {\n  return {\n    database: await enhancedDatabaseManager.healthCheck(),\n    ai: await unifiedAIAdapter.getHealthStatus(),\n    system: 'healthy'\n  };\n}\n\nasync function getDatabaseMetrics() {\n  return enhancedDatabaseManager.getQueryAnalytics();\n}\n\nasync function getAIServiceMetrics() {\n  return unifiedAIAdapter.getHealthStatus();\n}\n\nasync function getResourceUsage() {\n  return {\n    memory: process.memoryUsage(),\n    cpu: process.cpuUsage(),\n    timestamp: new Date().toISOString()\n  };\n}\n\n"],"mappings":"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","ignoreList":[]}