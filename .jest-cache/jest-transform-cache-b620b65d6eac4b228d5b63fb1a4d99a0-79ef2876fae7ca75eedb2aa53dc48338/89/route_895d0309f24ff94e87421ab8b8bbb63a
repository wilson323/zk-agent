dad35831d636d2a73e0abc7a5ed85c63
"use strict";

/**
 * @file cad\analyze\route.ts
 * @description Migrated API route with global error handling
 * @author ZK-Agent Team
 * @date 2025-06-25
 */
/* istanbul ignore next */
function cov_22eukd3mh3() {
  var path = "E:\\zk-agent\\app\\api\\cad\\analyze\\route.ts";
  var hash = "3eb24ceb63d3a9259cb229657b51f89387991ae7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\zk-agent\\app\\api\\cad\\analyze\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "2": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "3": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "5": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 13,
          column: 92
        }
      },
      "6": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "7": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 74
        }
      },
      "8": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 81
        }
      },
      "9": {
        start: {
          line: 17,
          column: 33
        },
        end: {
          line: 17,
          column: 88
        }
      },
      "10": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "11": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 78
        }
      },
      "12": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "14": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 64
        }
      },
      "15": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 139
        }
      },
      "16": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 84
        }
      },
      "18": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "19": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "20": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 93
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "23": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "24": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "25": {
        start: {
          line: 53,
          column: 33
        },
        end: {
          line: 53,
          column: 49
        }
      },
      "26": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 45
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "28": {
        start: {
          line: 58,
          column: 35
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "29": {
        start: {
          line: 59,
          column: 35
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "30": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "31": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 96
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "33": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 82
        }
      },
      "34": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 273,
          column: 3
        }
      },
      "35": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "36": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 91
        }
      },
      "37": {
        start: {
          line: 76,
          column: 15
        },
        end: {
          line: 76,
          column: 19
        }
      },
      "38": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "39": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 55
        }
      },
      "40": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 45
        }
      },
      "41": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 36
        }
      },
      "42": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 81,
          column: 48
        }
      },
      "43": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "44": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 82
        }
      },
      "45": {
        start: {
          line: 86,
          column: 23
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "46": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 91
        }
      },
      "47": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 61
        }
      },
      "48": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "49": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 37
        }
      },
      "50": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 73
        }
      },
      "51": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "52": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 112,
          column: 50
        }
      },
      "53": {
        start: {
          line: 113,
          column: 32
        },
        end: {
          line: 113,
          column: 79
        }
      },
      "54": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 49
        }
      },
      "55": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 37
        }
      },
      "56": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 122,
          column: 14
        }
      },
      "57": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 178,
          column: 14
        }
      },
      "58": {
        start: {
          line: 125,
          column: 41
        },
        end: {
          line: 168,
          column: 21
        }
      },
      "59": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 160,
          column: 25
        }
      },
      "60": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "61": {
        start: {
          line: 127,
          column: 41
        },
        end: {
          line: 127,
          column: 49
        }
      },
      "62": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 159,
          column: 29
        }
      },
      "63": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 137,
          column: 42
        }
      },
      "64": {
        start: {
          line: 139,
          column: 51
        },
        end: {
          line: 139,
          column: 88
        }
      },
      "65": {
        start: {
          line: 140,
          column: 32
        },
        end: {
          line: 140,
          column: 67
        }
      },
      "66": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 148,
          column: 42
        }
      },
      "67": {
        start: {
          line: 152,
          column: 32
        },
        end: {
          line: 158,
          column: 42
        }
      },
      "68": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 166,
          column: 34
        }
      },
      "69": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 167,
          column: 43
        }
      },
      "70": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 176,
          column: 23
        }
      },
      "71": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 174,
          column: 34
        }
      },
      "72": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 43
        }
      },
      "73": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 53
        }
      },
      "74": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 243,
          column: 10
        }
      },
      "75": {
        start: {
          line: 184,
          column: 31
        },
        end: {
          line: 184,
          column: 69
        }
      },
      "76": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "77": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 50
        }
      },
      "78": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 189,
          column: 72
        }
      },
      "79": {
        start: {
          line: 191,
          column: 28
        },
        end: {
          line: 191,
          column: 73
        }
      },
      "80": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 193,
          column: 67
        }
      },
      "81": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "82": {
        start: {
          line: 201,
          column: 35
        },
        end: {
          line: 204,
          column: 14
        }
      },
      "83": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 101
        }
      },
      "84": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "85": {
        start: {
          line: 207,
          column: 40
        },
        end: {
          line: 211,
          column: 18
        }
      },
      "86": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 218,
          column: 19
        }
      },
      "87": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 228,
          column: 14
        }
      },
      "88": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 68
        }
      },
      "89": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 75
        }
      },
      "90": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "91": {
        start: {
          line: 249,
          column: 31
        },
        end: {
          line: 249,
          column: 53
        }
      },
      "92": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 77
        }
      },
      "93": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "94": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 63
        }
      },
      "95": {
        start: {
          line: 261,
          column: 31
        },
        end: {
          line: 261,
          column: 53
        }
      },
      "96": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 86
        }
      },
      "97": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      },
      "98": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 126
        }
      }
    },
    fnMap: {
      "0": {
        name: "recordPerformanceMetrics",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 39
          }
        },
        loc: {
          start: {
            line: 25,
            column: 49
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "processSingleFile",
        decl: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 32
          }
        },
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 73
          },
          end: {
            line: 41,
            column: 74
          }
        },
        loc: {
          start: {
            line: 41,
            column: 87
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 100
          },
          end: {
            line: 51,
            column: 101
          }
        },
        loc: {
          start: {
            line: 51,
            column: 175
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 105
          },
          end: {
            line: 73,
            column: 106
          }
        },
        loc: {
          start: {
            line: 73,
            column: 180
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 17
          }
        },
        loc: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 177,
            column: 17
          }
        },
        line: 124
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 125,
            column: 41
          },
          end: {
            line: 125,
            column: 42
          }
        },
        loc: {
          start: {
            line: 125,
            column: 53
          },
          end: {
            line: 168,
            column: 21
          }
        },
        line: 125
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 169,
            column: 41
          },
          end: {
            line: 169,
            column: 42
          }
        },
        loc: {
          start: {
            line: 169,
            column: 52
          },
          end: {
            line: 176,
            column: 21
          }
        },
        line: 169
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 182,
            column: 59
          },
          end: {
            line: 182,
            column: 60
          }
        },
        loc: {
          start: {
            line: 182,
            column: 71
          },
          end: {
            line: 229,
            column: 9
          }
        },
        line: 182
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 201,
            column: 81
          },
          end: {
            line: 201,
            column: 82
          }
        },
        loc: {
          start: {
            line: 201,
            column: 95
          },
          end: {
            line: 204,
            column: 13
          }
        },
        line: 201
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 237,
            column: 21
          },
          end: {
            line: 237,
            column: 22
          }
        },
        loc: {
          start: {
            line: 237,
            column: 41
          },
          end: {
            line: 239,
            column: 13
          }
        },
        line: 237
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 240,
            column: 23
          },
          end: {
            line: 240,
            column: 24
          }
        },
        loc: {
          start: {
            line: 240,
            column: 44
          },
          end: {
            line: 242,
            column: 13
          }
        },
        line: 240
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 55
          }
        }, {
          start: {
            line: 38,
            column: 59
          },
          end: {
            line: 38,
            column: 68
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 63,
            column: 19
          }
        }, {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 65,
            column: 96
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 23
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 14
          },
          end: {
            line: 87,
            column: 35
          }
        }, {
          start: {
            line: 88,
            column: 14
          },
          end: {
            line: 100,
            column: 13
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 43
          },
          end: {
            line: 113,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 43
          },
          end: {
            line: 113,
            column: 70
          }
        }, {
          start: {
            line: 113,
            column: 74
          },
          end: {
            line: 113,
            column: 78
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "9": {
        loc: {
          start: {
            line: 198,
            column: 22
          },
          end: {
            line: 198,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 22
          },
          end: {
            line: 198,
            column: 63
          }
        }, {
          start: {
            line: 198,
            column: 67
          },
          end: {
            line: 198,
            column: 76
          }
        }],
        line: 198
      },
      "10": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "11": {
        loc: {
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 32
          }
        }, {
          start: {
            line: 267,
            column: 36
          },
          end: {
            line: 267,
            column: 37
          }
        }],
        line: 267
      },
      "12": {
        loc: {
          start: {
            line: 271,
            column: 53
          },
          end: {
            line: 271,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 78
          },
          end: {
            line: 271,
            column: 91
          }
        }, {
          start: {
            line: 271,
            column: 94
          },
          end: {
            line: 271,
            column: 107
          }
        }],
        line: 271
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\zk-agent\\app\\api\\cad\\analyze\\route.ts",
      mappings: "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",
      names: [],
      sources: ["E:\\zk-agent\\app\\api\\cad\\analyze\\route.ts"],
      sourcesContent: ["/**\n * @file cad\\analyze\\route.ts\n * @description Migrated API route with global error handling\n * @author ZK-Agent Team\n * @date 2025-06-25\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { createApiRoute, RouteConfigs, CommonValidations } from '@/lib/middleware/api-route-wrapper';\nimport { ApiResponseWrapper } from '@/lib/utils/api-helper';\nimport { CADFileProcessor } from \"../../../../lib/cad/cad-file-processor\"\nimport { DeviceRecognitionEngine } from \"../../../../lib/cad/device-recognition-engine\"\nimport { CADAnalyzer } from \"../../../../lib/cad/cad-analyzer\"\nimport { ReportGenerator } from \"../../../../lib/cad/report-generator\"\nimport { ErrorRetryManager } from \"../../../../lib/chat/error-retry-manager\"\nimport { AdvancedCacheManager } from \"../../../../lib/cache/advanced-cache-manager\"\n\n// \u521D\u59CB\u5316\u5B9E\u4F8B\nconst fileProcessor = new CADFileProcessor()\nconst deviceEngine = new DeviceRecognitionEngine()\nconst retryManager = new ErrorRetryManager()\nconst cacheManager = new AdvancedCacheManager()\nconst reportGenerator = new ReportGenerator()\n\n// \u6027\u80FD\u6307\u6807\u8BB0\u5F55\u51FD\u6570\nasync function recordPerformanceMetrics(metrics: {\n  requestId: string\n  processingTime: number\n  fileSize: number\n  success: boolean\n  error?: string\n}) {\n  console.log(`[Performance] ${metrics.requestId}: ${metrics.processingTime}ms, ${metrics.fileSize} bytes, success: ${metrics.success}`)\n  if (metrics.error) {\n    console.error(`[Performance Error] ${metrics.requestId}: ${metrics.error}`)\n  }\n}\n\n// \u5355\u6587\u4EF6\u5904\u7406\u51FD\u6570\nasync function processSingleFile(file: File, config: any) {\n  const analyzer = new CADAnalyzer(config)\n  \n  const fileInfo = {\n    id: `file_${Date.now()}`,\n    name: file.name,\n    size: file.size,\n    type: file.name.split(\".\").pop()?.toLowerCase() || \"unknown\",\n    userId: \"current_user\",\n  }\n  \n  const analysisResult = await analyzer.analyze(fileBuffer, file.name, (progress) => {\n      // \u8FDB\u5EA6\u56DE\u8C03\u5904\u7406\n      console.log(`\u5206\u6790\u8FDB\u5EA6: ${progress.stage} - ${progress.progress}% - ${progress.message}`)\n    })\n  \n  return {\n    fileInfo,\n    analysis: analysisResult,\n    timestamp: new Date().toISOString(),\n  }\n}\n\nexport const GET = createApiRoute(\n  RouteConfigs.publicGet(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    try {\n      const { searchParams } = new URL(req.url)\n      const action = validatedQuery?.action\n    \n      switch (action) {\n        case \"stats\":\n          // \u8FD4\u56DE\u5206\u6790\u7EDF\u8BA1\u4FE1\u606F\n          const retryStats = retryManager.getStats()\n          const cacheStats = cacheManager.getMetrics()\n          \n          return ApiResponseWrapper.success({\n            retryStats,\n            cacheStats\n          })\n        default:\n          return ApiResponseWrapper.error(\"Invalid action\", { status: 400 })\n      }\n    } catch (error) {\n      console.error(\"CAD analyze GET error:\", error)\n      return ApiResponseWrapper.error(\n        \"\u83B7\u53D6\u5206\u6790\u4FE1\u606F\u5931\u8D25\",\n        { status: 500 }\n      )\n    }\n  }\n);\n\nexport const POST = createApiRoute(\n  RouteConfigs.protectedPost(),\n  async (req: NextRequest, { params, validatedBody, validatedQuery, user, requestId }) => {\n    const startTime = Date.now()\n    const currentRequestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    let file: File | null = null\n    \n    try {\n      console.log(`[${currentRequestId}] CAD\u5206\u6790\u8BF7\u6C42\u5F00\u59CB`)\n  \n      const formData = await req.formData()\n      file = formData.get(\"file\") as File\n      const configStr = formData.get(\"config\") as string\n  \n      if (!file) {\n        return ApiResponseWrapper.error(\"\u7F3A\u5C11\u6587\u4EF6\", { status: 400 })\n      }\n    \n        // \u89E3\u6790\u914D\u7F6E\n        const config = configStr\n          ? JSON.parse(configStr)\n          : {\n              enableStructureAnalysis: true,\n              enableDeviceDetection: true,\n              enableRiskAssessment: true,\n              enableComplianceCheck: true,\n              detectionSensitivity: \"medium\",\n              riskThreshold: \"balanced\",\n              complianceStandards: [\"GB50348-2018\", \"GA/T75-1994\"],\n              generateReport: true,\n              reportFormat: \"pdf\",\n              includeImages: true,\n              includeRecommendations: true,\n            }\n    \n        // \u751F\u6210\u7F13\u5B58\u952E\n        const cacheKey = `cad_analysis_${file.name}_${file.size}_${JSON.stringify(config)}`\n    \n        // \u68C0\u67E5\u7F13\u5B58\n        const cachedResult = await cacheManager.get(cacheKey)\n        if (cachedResult) {\n          console.log(\"\u8FD4\u56DE\u7F13\u5B58\u7684\u5206\u6790\u7ED3\u679C\")\n          return ApiResponseWrapper.success(cachedResult)\n        }\n    \n        // \u5728POST\u65B9\u6CD5\u4E2D\u6DFB\u52A0\u6279\u91CF\u5904\u7406\u652F\u6301\n        if (formData.has(\"files\")) {\n          // \u6279\u91CF\u6587\u4EF6\u5904\u7406\n          const files = formData.getAll(\"files\") as File[]\n          const batchConfig = JSON.parse((formData.get(\"batchConfig\") as string) || \"{}\")\n    \n          // \u521B\u5EFA\u6279\u91CF\u5206\u6790\u4EFB\u52A1\n          const batchId = `batch_${Date.now()}`\n          const results = new Map<string, any>()\n    \n          // \u8BBE\u7F6EServer-Sent Events for real-time progress\n          const headers = new Headers({\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            Connection: \"keep-alive\",\n          })\n    \n          const stream = new ReadableStream({\n            start(controller) {\n              const processFiles = async () => {\n                for (let i = 0; i < files.length; i++) {\n                  const file = files[i]\n                  try {\n                    // \u53D1\u9001\u8FDB\u5EA6\u66F4\u65B0\n                    controller.enqueue(\n                      `data: ${JSON.stringify({\n                        type: \"progress\",\n                        batchId,\n                        fileIndex: i,\n                        fileName: file.name,\n                        progress: (i / files.length) * 100,\n                        stage: \"processing\",\n                      })}\\n\\n`,\n                    )\n    \n                    // \u5904\u7406\u5355\u4E2A\u6587\u4EF6\n                    const fileResult = await processSingleFile(file, config)\n                    results.set(file.name, fileResult)\n    \n                    // \u53D1\u9001\u6587\u4EF6\u5B8C\u6210\u901A\u77E5\n                    controller.enqueue(\n                      `data: ${JSON.stringify({\n                        type: \"file_complete\",\n                        batchId,\n                        fileIndex: i,\n                        fileName: file.name,\n                        result: fileResult,\n                      })}\\n\\n`,\n                    )\n                  } catch (error) {\n                    // \u53D1\u9001\u6587\u4EF6\u9519\u8BEF\u901A\u77E5\n                    controller.enqueue(\n                      `data: ${JSON.stringify({\n                        type: \"file_error\",\n                        batchId,\n                        fileIndex: i,\n                        fileName: file.name,\n                        error: error.message,\n                      })}\\n\\n`,\n                    )\n                  }\n                }\n    \n                // \u53D1\u9001\u6279\u91CF\u5B8C\u6210\u901A\u77E5\n                controller.enqueue(\n                  `data: ${JSON.stringify({\n                    type: \"batch_complete\",\n                    batchId,\n                    results: Object.fromEntries(results),\n                  })}\\n\\n`,\n                )\n    \n                controller.close()\n              }\n    \n              processFiles().catch((error) => {\n                controller.enqueue(\n                  `data: ${JSON.stringify({\n                    type: \"batch_error\",\n                    batchId,\n                    error: error.message,\n                  })}\\n\\n`,\n                )\n                controller.close()\n              })\n            },\n          })\n    \n          return new Response(stream, { headers })\n        }\n    \n        // \u4F7F\u7528\u91CD\u8BD5\u673A\u5236\u6267\u884C\u5206\u6790\n        const result = await retryManager.executeWithRetry(async () => {\n          // 1. \u9A8C\u8BC1\u6587\u4EF6\n          const validation = await fileProcessor.validateFile(file)\n          if (!validation.valid) {\n            throw new Error(validation.error)\n          }\n    \n          // 2. \u89E3\u6790\u6587\u4EF6\n          const metadata = await fileProcessor.parseFile(file, config)\n    \n          // 3. \u8BBE\u5907\u8BC6\u522B\n          const devices = await deviceEngine.recognizeDevices(metadata)\n    \n          // 4. \u521B\u5EFA\u5206\u6790\u5668\u5E76\u6267\u884C\u5206\u6790\n          const analyzer = new CADAnalyzer(config)\n    \n          const fileInfo = {\n            id: `file_${Date.now()}`,\n            name: file.name,\n            size: file.size,\n            type: file.name.split(\".\").pop()?.toLowerCase() || \"unknown\",\n            userId: \"current_user\", // \u5B9E\u9645\u5E94\u7528\u4E2D\u4ECE\u8BA4\u8BC1\u4FE1\u606F\u83B7\u53D6\n          }\n    \n          const analysisResult = await analyzer.analyze(fileBuffer, file.name, (progress) => {\n      // \u8FDB\u5EA6\u56DE\u8C03\u5904\u7406\n      console.log(`\u5206\u6790\u8FDB\u5EA6: ${progress.stage} - ${progress.progress}% - ${progress.message}`)\n    })\n    \n          // 5. \u751F\u6210\u62A5\u544A\n          if (config.generateReport) {\n            const reportGenerator = new ReportGenerator({\n              format: config.reportFormat,\n              includeImages: config.includeImages,\n              includeRecommendations: config.includeRecommendations,\n            })\n    \n            analysisResult.reportUrl = await reportGenerator.generateReport(analysisResult, {\n              format: config.reportFormat,\n              includeImages: config.includeImages,\n              includeRecommendations: config.includeRecommendations,\n              includeAppendix: true,\n              language: \"zh-CN\"\n            })\n          }\n    \n          return {\n            success: true,\n            data: analysisResult,\n            metadata: {\n              processingTime: Date.now() - Date.now(),\n              cacheKey,\n              version: \"2.1.0\",\n            },\n          }\n        }, {\n          strategy: {\n            maxRetries: 3,\n            baseDelay: 1000,\n            maxDelay: 10000,\n            backoffMultiplier: 2,\n            jitter: true\n          },\n          onRetry: (error, attempt) => {\n            console.log(`CAD\u5206\u6790\u91CD\u8BD5 ${attempt}: ${error.message}`)\n          },\n          onFailure: (error, attempts) => {\n            console.error(`CAD\u5206\u6790\u5931\u8D25\uFF0C\u5DF2\u91CD\u8BD5${attempts}\u6B21: ${error.message}`)\n          }\n        })\n    \n        // \u7F13\u5B58\u7ED3\u679C\n        await cacheManager.set(cacheKey, result, {\n          ttl: 3600000, // 1\u5C0F\u65F6\n          tags: [\"cad_analysis\", \"user_data\"],\n        })\n    \n        const processingTime = Date.now() - startTime\n        console.log(`[${currentRequestId}] CAD\u5206\u6790\u5B8C\u6210\uFF0C\u8017\u65F6: ${processingTime}ms`)\n    \n        // \u8BB0\u5F55\u6027\u80FD\u6307\u6807\n        await recordPerformanceMetrics({\n          requestId: currentRequestId,\n          processingTime,\n          fileSize: file.size,\n          success: true,\n        })\n    \n        return ApiResponseWrapper.success(result)\n    } catch (error) {\n      const processingTime = Date.now() - startTime\n      console.error(`[${currentRequestId}] CAD\u5206\u6790\u5931\u8D25\uFF0C\u8017\u65F6: ${processingTime}ms`, error)\n    \n      // \u8BB0\u5F55\u9519\u8BEF\u6307\u6807\n      await recordPerformanceMetrics({\n        requestId: currentRequestId,\n        processingTime,\n        fileSize: file?.size || 0,\n        success: false,\n        error: error.message,\n      })\n    \n      return ApiResponseWrapper.error(\n        error instanceof Error ? error.message : \"\u5206\u6790\u8FC7\u7A0B\u4E2D\u53D1\u751F\u672A\u77E5\u9519\u8BEF\",\n        { status: 500 }\n      )\n    }\n  }\n);\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3eb24ceb63d3a9259cb229657b51f89387991ae7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22eukd3mh3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22eukd3mh3();
cov_22eukd3mh3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22eukd3mh3().s[1]++;
exports.POST = exports.GET = void 0;
const api_route_wrapper_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[2]++, require("@/lib/middleware/api-route-wrapper"));
const api_helper_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[3]++, require("@/lib/utils/api-helper"));
const cad_file_processor_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[4]++, require("../../../../lib/cad/cad-file-processor"));
const device_recognition_engine_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[5]++, require("../../../../lib/cad/device-recognition-engine"));
const cad_analyzer_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[6]++, require("../../../../lib/cad/cad-analyzer"));
const report_generator_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[7]++, require("../../../../lib/cad/report-generator"));
const error_retry_manager_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[8]++, require("../../../../lib/chat/error-retry-manager"));
const advanced_cache_manager_1 =
/* istanbul ignore next */
(cov_22eukd3mh3().s[9]++, require("../../../../lib/cache/advanced-cache-manager"));
// 初始化实例
const fileProcessor =
/* istanbul ignore next */
(cov_22eukd3mh3().s[10]++, new cad_file_processor_1.CADFileProcessor());
const deviceEngine =
/* istanbul ignore next */
(cov_22eukd3mh3().s[11]++, new device_recognition_engine_1.DeviceRecognitionEngine());
const retryManager =
/* istanbul ignore next */
(cov_22eukd3mh3().s[12]++, new error_retry_manager_1.ErrorRetryManager());
const cacheManager =
/* istanbul ignore next */
(cov_22eukd3mh3().s[13]++, new advanced_cache_manager_1.AdvancedCacheManager());
const reportGenerator =
/* istanbul ignore next */
(cov_22eukd3mh3().s[14]++, new report_generator_1.ReportGenerator());
// 性能指标记录函数
async function recordPerformanceMetrics(metrics) {
  /* istanbul ignore next */
  cov_22eukd3mh3().f[0]++;
  cov_22eukd3mh3().s[15]++;
  console.log(`[Performance] ${metrics.requestId}: ${metrics.processingTime}ms, ${metrics.fileSize} bytes, success: ${metrics.success}`);
  /* istanbul ignore next */
  cov_22eukd3mh3().s[16]++;
  if (metrics.error) {
    /* istanbul ignore next */
    cov_22eukd3mh3().b[0][0]++;
    cov_22eukd3mh3().s[17]++;
    console.error(`[Performance Error] ${metrics.requestId}: ${metrics.error}`);
  } else
  /* istanbul ignore next */
  {
    cov_22eukd3mh3().b[0][1]++;
  }
}
// 单文件处理函数
async function processSingleFile(file, config) {
  /* istanbul ignore next */
  cov_22eukd3mh3().f[1]++;
  const analyzer =
  /* istanbul ignore next */
  (cov_22eukd3mh3().s[18]++, new cad_analyzer_1.CADAnalyzer(config));
  const fileInfo =
  /* istanbul ignore next */
  (cov_22eukd3mh3().s[19]++, {
    id: `file_${Date.now()}`,
    name: file.name,
    size: file.size,
    type:
    /* istanbul ignore next */
    (cov_22eukd3mh3().b[1][0]++, file.name.split(".").pop()?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_22eukd3mh3().b[1][1]++, "unknown"),
    userId: "current_user"
  });
  const analysisResult =
  /* istanbul ignore next */
  (cov_22eukd3mh3().s[20]++, await analyzer.analyze(fileBuffer, file.name, progress => {
    /* istanbul ignore next */
    cov_22eukd3mh3().f[2]++;
    cov_22eukd3mh3().s[21]++;
    // 进度回调处理
    console.log(`分析进度: ${progress.stage} - ${progress.progress}% - ${progress.message}`);
  }));
  /* istanbul ignore next */
  cov_22eukd3mh3().s[22]++;
  return {
    fileInfo,
    analysis: analysisResult,
    timestamp: new Date().toISOString()
  };
}
/* istanbul ignore next */
cov_22eukd3mh3().s[23]++;
exports.GET = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.publicGet(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_22eukd3mh3().f[3]++;
  cov_22eukd3mh3().s[24]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[25]++, new URL(req.url));
    const action =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[26]++, validatedQuery?.action);
    /* istanbul ignore next */
    cov_22eukd3mh3().s[27]++;
    switch (action) {
      case "stats":
        /* istanbul ignore next */
        cov_22eukd3mh3().b[2][0]++;
        // 返回分析统计信息
        const retryStats =
        /* istanbul ignore next */
        (cov_22eukd3mh3().s[28]++, retryManager.getStats());
        const cacheStats =
        /* istanbul ignore next */
        (cov_22eukd3mh3().s[29]++, cacheManager.getMetrics());
        /* istanbul ignore next */
        cov_22eukd3mh3().s[30]++;
        return api_helper_1.ApiResponseWrapper.success({
          retryStats,
          cacheStats
        });
      default:
        /* istanbul ignore next */
        cov_22eukd3mh3().b[2][1]++;
        cov_22eukd3mh3().s[31]++;
        return api_helper_1.ApiResponseWrapper.error("Invalid action", {
          status: 400
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_22eukd3mh3().s[32]++;
    console.error("CAD analyze GET error:", error);
    /* istanbul ignore next */
    cov_22eukd3mh3().s[33]++;
    return api_helper_1.ApiResponseWrapper.error("获取分析信息失败", {
      status: 500
    });
  }
});
/* istanbul ignore next */
cov_22eukd3mh3().s[34]++;
exports.POST = (0, api_route_wrapper_1.createApiRoute)(api_route_wrapper_1.RouteConfigs.protectedPost(), async (req, {
  params,
  validatedBody,
  validatedQuery,
  user,
  requestId
}) => {
  /* istanbul ignore next */
  cov_22eukd3mh3().f[4]++;
  const startTime =
  /* istanbul ignore next */
  (cov_22eukd3mh3().s[35]++, Date.now());
  const currentRequestId =
  /* istanbul ignore next */
  (cov_22eukd3mh3().s[36]++, `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
  let file =
  /* istanbul ignore next */
  (cov_22eukd3mh3().s[37]++, null);
  /* istanbul ignore next */
  cov_22eukd3mh3().s[38]++;
  try {
    /* istanbul ignore next */
    cov_22eukd3mh3().s[39]++;
    console.log(`[${currentRequestId}] CAD分析请求开始`);
    const formData =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[40]++, await req.formData());
    /* istanbul ignore next */
    cov_22eukd3mh3().s[41]++;
    file = formData.get("file");
    const configStr =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[42]++, formData.get("config"));
    /* istanbul ignore next */
    cov_22eukd3mh3().s[43]++;
    if (!file) {
      /* istanbul ignore next */
      cov_22eukd3mh3().b[3][0]++;
      cov_22eukd3mh3().s[44]++;
      return api_helper_1.ApiResponseWrapper.error("缺少文件", {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_22eukd3mh3().b[3][1]++;
    }
    // 解析配置
    const config =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[45]++, configStr ?
    /* istanbul ignore next */
    (cov_22eukd3mh3().b[4][0]++, JSON.parse(configStr)) :
    /* istanbul ignore next */
    (cov_22eukd3mh3().b[4][1]++, {
      enableStructureAnalysis: true,
      enableDeviceDetection: true,
      enableRiskAssessment: true,
      enableComplianceCheck: true,
      detectionSensitivity: "medium",
      riskThreshold: "balanced",
      complianceStandards: ["GB50348-2018", "GA/T75-1994"],
      generateReport: true,
      reportFormat: "pdf",
      includeImages: true,
      includeRecommendations: true
    }));
    // 生成缓存键
    const cacheKey =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[46]++, `cad_analysis_${file.name}_${file.size}_${JSON.stringify(config)}`);
    // 检查缓存
    const cachedResult =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[47]++, await cacheManager.get(cacheKey));
    /* istanbul ignore next */
    cov_22eukd3mh3().s[48]++;
    if (cachedResult) {
      /* istanbul ignore next */
      cov_22eukd3mh3().b[5][0]++;
      cov_22eukd3mh3().s[49]++;
      console.log("返回缓存的分析结果");
      /* istanbul ignore next */
      cov_22eukd3mh3().s[50]++;
      return api_helper_1.ApiResponseWrapper.success(cachedResult);
    } else
    /* istanbul ignore next */
    {
      cov_22eukd3mh3().b[5][1]++;
    }
    // 在POST方法中添加批量处理支持
    cov_22eukd3mh3().s[51]++;
    if (formData.has("files")) {
      /* istanbul ignore next */
      cov_22eukd3mh3().b[6][0]++;
      // 批量文件处理
      const files =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[52]++, formData.getAll("files"));
      const batchConfig =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[53]++, JSON.parse(
      /* istanbul ignore next */
      (cov_22eukd3mh3().b[7][0]++, formData.get("batchConfig")) ||
      /* istanbul ignore next */
      (cov_22eukd3mh3().b[7][1]++, "{}")));
      // 创建批量分析任务
      const batchId =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[54]++, `batch_${Date.now()}`);
      const results =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[55]++, new Map());
      // 设置Server-Sent Events for real-time progress
      const headers =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[56]++, new Headers({
        "Content-Type": "text/event-stream",
        "Cache-Control": "no-cache",
        Connection: "keep-alive"
      }));
      const stream =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[57]++, new ReadableStream({
        start(controller) {
          /* istanbul ignore next */
          cov_22eukd3mh3().f[5]++;
          cov_22eukd3mh3().s[58]++;
          const processFiles = async () => {
            /* istanbul ignore next */
            cov_22eukd3mh3().f[6]++;
            cov_22eukd3mh3().s[59]++;
            for (let i =
            /* istanbul ignore next */
            (cov_22eukd3mh3().s[60]++, 0); i < files.length; i++) {
              const file =
              /* istanbul ignore next */
              (cov_22eukd3mh3().s[61]++, files[i]);
              /* istanbul ignore next */
              cov_22eukd3mh3().s[62]++;
              try {
                /* istanbul ignore next */
                cov_22eukd3mh3().s[63]++;
                // 发送进度更新
                controller.enqueue(`data: ${JSON.stringify({
                  type: "progress",
                  batchId,
                  fileIndex: i,
                  fileName: file.name,
                  progress: i / files.length * 100,
                  stage: "processing"
                })}\n\n`);
                // 处理单个文件
                const fileResult =
                /* istanbul ignore next */
                (cov_22eukd3mh3().s[64]++, await processSingleFile(file, config));
                /* istanbul ignore next */
                cov_22eukd3mh3().s[65]++;
                results.set(file.name, fileResult);
                // 发送文件完成通知
                /* istanbul ignore next */
                cov_22eukd3mh3().s[66]++;
                controller.enqueue(`data: ${JSON.stringify({
                  type: "file_complete",
                  batchId,
                  fileIndex: i,
                  fileName: file.name,
                  result: fileResult
                })}\n\n`);
              } catch (error) {
                /* istanbul ignore next */
                cov_22eukd3mh3().s[67]++;
                // 发送文件错误通知
                controller.enqueue(`data: ${JSON.stringify({
                  type: "file_error",
                  batchId,
                  fileIndex: i,
                  fileName: file.name,
                  error: error.message
                })}\n\n`);
              }
            }
            // 发送批量完成通知
            /* istanbul ignore next */
            cov_22eukd3mh3().s[68]++;
            controller.enqueue(`data: ${JSON.stringify({
              type: "batch_complete",
              batchId,
              results: Object.fromEntries(results)
            })}\n\n`);
            /* istanbul ignore next */
            cov_22eukd3mh3().s[69]++;
            controller.close();
          };
          /* istanbul ignore next */
          cov_22eukd3mh3().s[70]++;
          processFiles().catch(error => {
            /* istanbul ignore next */
            cov_22eukd3mh3().f[7]++;
            cov_22eukd3mh3().s[71]++;
            controller.enqueue(`data: ${JSON.stringify({
              type: "batch_error",
              batchId,
              error: error.message
            })}\n\n`);
            /* istanbul ignore next */
            cov_22eukd3mh3().s[72]++;
            controller.close();
          });
        }
      }));
      /* istanbul ignore next */
      cov_22eukd3mh3().s[73]++;
      return new Response(stream, {
        headers
      });
    } else
    /* istanbul ignore next */
    {
      cov_22eukd3mh3().b[6][1]++;
    }
    // 使用重试机制执行分析
    const result =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[74]++, await retryManager.executeWithRetry(async () => {
      /* istanbul ignore next */
      cov_22eukd3mh3().f[8]++;
      // 1. 验证文件
      const validation =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[75]++, await fileProcessor.validateFile(file));
      /* istanbul ignore next */
      cov_22eukd3mh3().s[76]++;
      if (!validation.valid) {
        /* istanbul ignore next */
        cov_22eukd3mh3().b[8][0]++;
        cov_22eukd3mh3().s[77]++;
        throw new Error(validation.error);
      } else
      /* istanbul ignore next */
      {
        cov_22eukd3mh3().b[8][1]++;
      }
      // 2. 解析文件
      const metadata =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[78]++, await fileProcessor.parseFile(file, config));
      // 3. 设备识别
      const devices =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[79]++, await deviceEngine.recognizeDevices(metadata));
      // 4. 创建分析器并执行分析
      const analyzer =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[80]++, new cad_analyzer_1.CADAnalyzer(config));
      const fileInfo =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[81]++, {
        id: `file_${Date.now()}`,
        name: file.name,
        size: file.size,
        type:
        /* istanbul ignore next */
        (cov_22eukd3mh3().b[9][0]++, file.name.split(".").pop()?.toLowerCase()) ||
        /* istanbul ignore next */
        (cov_22eukd3mh3().b[9][1]++, "unknown"),
        userId: "current_user" // 实际应用中从认证信息获取
      });
      const analysisResult =
      /* istanbul ignore next */
      (cov_22eukd3mh3().s[82]++, await analyzer.analyze(fileBuffer, file.name, progress => {
        /* istanbul ignore next */
        cov_22eukd3mh3().f[9]++;
        cov_22eukd3mh3().s[83]++;
        // 进度回调处理
        console.log(`分析进度: ${progress.stage} - ${progress.progress}% - ${progress.message}`);
      }));
      // 5. 生成报告
      /* istanbul ignore next */
      cov_22eukd3mh3().s[84]++;
      if (config.generateReport) {
        /* istanbul ignore next */
        cov_22eukd3mh3().b[10][0]++;
        const reportGenerator =
        /* istanbul ignore next */
        (cov_22eukd3mh3().s[85]++, new report_generator_1.ReportGenerator({
          format: config.reportFormat,
          includeImages: config.includeImages,
          includeRecommendations: config.includeRecommendations
        }));
        /* istanbul ignore next */
        cov_22eukd3mh3().s[86]++;
        analysisResult.reportUrl = await reportGenerator.generateReport(analysisResult, {
          format: config.reportFormat,
          includeImages: config.includeImages,
          includeRecommendations: config.includeRecommendations,
          includeAppendix: true,
          language: "zh-CN"
        });
      } else
      /* istanbul ignore next */
      {
        cov_22eukd3mh3().b[10][1]++;
      }
      cov_22eukd3mh3().s[87]++;
      return {
        success: true,
        data: analysisResult,
        metadata: {
          processingTime: Date.now() - Date.now(),
          cacheKey,
          version: "2.1.0"
        }
      };
    }, {
      strategy: {
        maxRetries: 3,
        baseDelay: 1000,
        maxDelay: 10000,
        backoffMultiplier: 2,
        jitter: true
      },
      onRetry: (error, attempt) => {
        /* istanbul ignore next */
        cov_22eukd3mh3().f[10]++;
        cov_22eukd3mh3().s[88]++;
        console.log(`CAD分析重试 ${attempt}: ${error.message}`);
      },
      onFailure: (error, attempts) => {
        /* istanbul ignore next */
        cov_22eukd3mh3().f[11]++;
        cov_22eukd3mh3().s[89]++;
        console.error(`CAD分析失败，已重试${attempts}次: ${error.message}`);
      }
    }));
    // 缓存结果
    /* istanbul ignore next */
    cov_22eukd3mh3().s[90]++;
    await cacheManager.set(cacheKey, result, {
      ttl: 3600000,
      // 1小时
      tags: ["cad_analysis", "user_data"]
    });
    const processingTime =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[91]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_22eukd3mh3().s[92]++;
    console.log(`[${currentRequestId}] CAD分析完成，耗时: ${processingTime}ms`);
    // 记录性能指标
    /* istanbul ignore next */
    cov_22eukd3mh3().s[93]++;
    await recordPerformanceMetrics({
      requestId: currentRequestId,
      processingTime,
      fileSize: file.size,
      success: true
    });
    /* istanbul ignore next */
    cov_22eukd3mh3().s[94]++;
    return api_helper_1.ApiResponseWrapper.success(result);
  } catch (error) {
    const processingTime =
    /* istanbul ignore next */
    (cov_22eukd3mh3().s[95]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_22eukd3mh3().s[96]++;
    console.error(`[${currentRequestId}] CAD分析失败，耗时: ${processingTime}ms`, error);
    // 记录错误指标
    /* istanbul ignore next */
    cov_22eukd3mh3().s[97]++;
    await recordPerformanceMetrics({
      requestId: currentRequestId,
      processingTime,
      fileSize:
      /* istanbul ignore next */
      (cov_22eukd3mh3().b[11][0]++, file?.size) ||
      /* istanbul ignore next */
      (cov_22eukd3mh3().b[11][1]++, 0),
      success: false,
      error: error.message
    });
    /* istanbul ignore next */
    cov_22eukd3mh3().s[98]++;
    return api_helper_1.ApiResponseWrapper.error(error instanceof Error ?
    /* istanbul ignore next */
    (cov_22eukd3mh3().b[12][0]++, error.message) :
    /* istanbul ignore next */
    (cov_22eukd3mh3().b[12][1]++, "分析过程中发生未知错误"), {
      status: 500
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,