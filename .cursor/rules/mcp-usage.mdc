---
description:
globs:
alwaysApply: false
---
# MCP（Multi-Component Plugin）使用指南

本项目已集成并开启多种 MCP（Multi-Component Plugin），包括但不限于 Playwright、21st.dev 组件库、Logo 搜索、Figma 设计稿集成等。请所有开发者在开发、调试、测试、UI 设计、API 自动化等环节，充分利用这些 MCP 工具，以提升开发效率、代码一致性和交付质量。

## 已集成 MCP 及其用途说明

- **Playwright**  
  用于端到端自动化测试、页面交互录制、截图、PDF 导出等。请在 UI 自动化、接口测试、回归测试等场景主动使用。

- **21st.dev 组件库**  
  用于快速生成、优化、重构高质量 React UI 组件，支持组件灵感检索、UI 片段生成、组件美化等。请在页面开发、UI 设计、组件重构时主动调用。

- **Logo 搜索**  
  支持一键获取主流品牌 Logo（SVG/JSX/TSX），用于页面、组件、品牌展示等场景。请在涉及品牌 Logo 时优先使用。

- **Figma 设计稿集成**  
  支持自动拉取 Figma 设计稿、导出图片、同步 UI 资源。请在 UI 还原、设计稿对齐、图片导出等场景主动使用。

## 开发规范要求

- 开发过程中如遇到相关场景，务必优先考虑并主动调用上述 MCP 工具，避免重复造轮子和低效手工操作。
- 如需参考或调用 MCP 相关代码，可查阅对应的 [lib/](mdc:lib/) 目录实现或相关文档。
- 鼓励在 PR、Code Review、需求实现说明中，明确标注 MCP 的使用情况和收益。

> 充分利用 MCP，是保障本项目高效、规范、可靠交付的关键措施之一。
