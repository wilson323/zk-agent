---
description:
globs:
alwaysApply: false
---
# zk-agent 项目 mcp 能力高效利用与提示词规范

> 本规则专为 zk-agent 项目开发者梳理如何充分、高质量地利用 mcp（Magic Component Platform）能力，包括 UI 组件生成、API 测试、logo 搜索等。所有相关开发、集成、测试环节均应参考本规则，确保一致性、规范性与高效性。

---

## 1. mcp 能力调用场景
- **UI 组件生成**：如需快速生成高质量、规范一致的 React 组件、表单、对话框、Banner、Logo 等，优先通过 mcp 相关指令（如 `/ui`、`/logo`、`/21st`）调用。
- **API 测试与自动化**：涉及 API 路由、端点测试、自动化用例生成时，优先利用 mcp 的 Playwright 相关能力。
- **灵感与设计参考**：需要 UI 设计灵感、组件预览、交互参考时，优先通过 mcp 获取。

## 2. 提示词编写与调用规范
- **精准描述需求**：提示词需明确组件类型、功能、风格、交互细节（如"生成一个带搜索框和分页的用户列表表格"）。
- **结合业务上下文**：如涉及业务逻辑、数据结构，需在提示词中补充说明（如"适配 zk-agent 用户模型"）。
- **多语言支持**：如需国际化，提示词中应注明（如"支持中英文切换"）。
- **API 测试**：需明确接口路径、参数、预期响应、异常场景。
- **Logo/品牌元素**：需指明品牌名、风格（如"深色背景适配"）。

## 3. 代码集成与维护要求
- **目录归属**：生成的 UI 组件应归入 `components/` 下对应子目录，API 测试脚本归入 `app/api/` 或 `tests/`。
- **注释与文档**：集成代码需补充结构化注释，说明 mcp 生成、后续维护要点。
- **避免冗余**：如已有类似组件/脚本，优先复用或优化，避免重复生成。
- **一致性校验**：集成后需确保风格、类型、接口与全局规范一致。

## 4. 质量与安全保障
- **代码审查**：所有 mcp 生成内容需经人工审查，确保无安全隐患、无业务逻辑遗漏。
- **测试覆盖**：自动化生成的测试脚本需补充边界、异常场景。
- **依赖管理**：如 mcp 生成内容涉及新依赖，需同步更新 `package.json` 并说明用途。

## 5. 典型提示词示例
- UI 组件：`/ui 生成一个带筛选和导出功能的 CAD 文件列表表格，适配 ag-ui 风格`
- API 测试：`/api 测试 /app/api/cad/analyze/ 路由，覆盖正常与异常参数`
- Logo 搜索：`/logo GitHub 深色背景`
- 灵感获取：`/21st 获取多智能体协作面板设计灵感`

---

> **本规则为 zk-agent 项目 mcp 能力调用与集成的唯一标准，所有相关开发、测试、设计环节均应严格遵循。规范需随 mcp 能力和项目演进及时更新。**
