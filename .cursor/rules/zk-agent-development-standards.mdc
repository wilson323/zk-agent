---
description:
globs:
alwaysApply: false
---
# zk-agent Development Standards

## 1. Project Structure
- **App Router**: All pages and API routes must follow the Next.js App Router structure under `app/`.
- **Components**: Components must be placed in `components/` with clear categorization (e.g., `ag-ui/`, `cad/`).
- **Business Logic**: Services and utilities must reside in `lib/` with subdirectories for each module (e.g., `services/`, `utils/`).
- **Types**: Type definitions must be organized under `types/` with subdirectories for each module.

## 2. Naming Conventions
- **Files**: Use `PascalCase` for components (e.g., `AgentContainer.tsx`) and `kebab-case` for utilities (e.g., `file-parser.ts`).
- **Methods**: Follow `verb+object` naming (e.g., `parseDWGFile`, `fetchAgentList`).

## 3. Code Documentation
- **File Headers**: Every file must include a header comment with `@file`, `@description`, `@author`, `@lastUpdate`, and `@updateLog`.
- **Module Overview**: Each module must have a detailed overview in its `README.md` or main entry file.

## 4. Component Development
- **Container Components**: Each agent must have a dedicated container component (e.g., `CADAnalyzerContainer.tsx`).
- **State Management**: Use Hooks/Context for state; avoid global variables.

## 5. API Development
- **Routes**: Place API routes under `app/api/` with clear subdirectories (e.g., `cad/`, `chat/`).
- **Validation**: All APIs must include input validation, permission checks, and error handling.

## 6. Testing & Quality
- **Coverage**: Achieve 80%+ test coverage; include unit and integration tests.
- **CI Checks**: Enforce linting, testing, and security scans in CI.

## 7. Security & Performance
- **File Handling**: Use async queues for large files; validate file formats.
- **Data Encryption**: Encrypt sensitive data; avoid storing it unnecessarily.

## 8. Documentation
- **Module Docs**: Each module must have a `README.md` or equivalent documentation.
- **Updates**: Keep documentation synchronized with code changes.

## 9. UI/UX Consistency
- **Design System**: Follow a unified design system for colors, fonts, and animations.
- **Responsiveness**: Ensure compatibility across devices.

## 10. Versioning & Review
- **SemVer**: Use semantic versioning for releases.
- **Code Review**: All PRs must be reviewed by at least one core developer.

---

> **Note**: This rule is mandatory for all zk-agent development. Violations will block PR merges.
